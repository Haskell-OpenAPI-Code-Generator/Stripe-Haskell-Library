{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Checkout_Session
module StripeAPI.Types.Checkout_Session where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Address
import {-# SOURCE #-} StripeAPI.Types.CheckoutAcssDebitPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutSessionPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.Customer
import {-# SOURCE #-} StripeAPI.Types.DeletedCustomer
import {-# SOURCE #-} StripeAPI.Types.Item
import {-# SOURCE #-} StripeAPI.Types.PaymentIntent
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionAutomaticTax
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionCustomerDetails
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTaxId
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTaxIdCollection
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTotalDetails
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesPaymentPageResourcesShippingAddressCollection
import {-# SOURCE #-} StripeAPI.Types.SetupIntent
import {-# SOURCE #-} StripeAPI.Types.Shipping
import {-# SOURCE #-} StripeAPI.Types.Subscription
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.checkout.session@ in the specification.
--
-- A Checkout Session represents your customer\'s session as they pay for
-- one-time purchases or subscriptions through [Checkout](https:\/\/stripe.com\/docs\/payments\/checkout).
-- We recommend creating a new Session each time your customer attempts to pay.
--
-- Once payment is successful, the Checkout Session will contain a reference
-- to the [Customer](https:\/\/stripe.com\/docs\/api\/customers), and either the successful
-- [PaymentIntent](https:\/\/stripe.com\/docs\/api\/payment_intents) or an active
-- [Subscription](https:\/\/stripe.com\/docs\/api\/subscriptions).
--
-- You can create a Checkout Session on your server and pass its ID to the
-- client to begin Checkout.
--
-- Related guide: [Checkout Server Quickstart](https:\/\/stripe.com\/docs\/payments\/checkout\/api).
data Checkout'session = Checkout'session
  { -- | allow_promotion_codes: Enables user redeemable promotion codes.
    checkout'sessionAllowPromotionCodes :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | amount_subtotal: Total of all items before discounts or taxes are applied.
    checkout'sessionAmountSubtotal :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_total: Total of all items after discounts and taxes are applied.
    checkout'sessionAmountTotal :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | automatic_tax:
    checkout'sessionAutomaticTax :: PaymentPagesCheckoutSessionAutomaticTax,
    -- | billing_address_collection: Describes whether Checkout should collect the customer\'s billing address.
    checkout'sessionBillingAddressCollection :: (GHC.Maybe.Maybe Checkout'sessionBillingAddressCollection'),
    -- | cancel_url: The URL the customer will be directed to if they decide to cancel payment and return to your website.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCancelUrl :: Data.Text.Internal.Text,
    -- | client_reference_id: A unique string to reference the Checkout Session. This can be a
    -- customer ID, a cart ID, or similar, and can be used to reconcile the
    -- Session with your internal systems.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionClientReferenceId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    checkout'sessionCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer: The ID of the customer for this Session.
    -- For Checkout Sessions in \`payment\` or \`subscription\` mode, Checkout
    -- will create a new customer object based on information provided
    -- during the payment flow unless an existing customer was provided when
    -- the Session was created.
    checkout'sessionCustomer :: (GHC.Maybe.Maybe Checkout'sessionCustomer'Variants),
    -- | customer_details: The customer details including the customer\'s tax exempt status and the customer\'s tax IDs. Only present on Sessions in \`payment\` or \`subscription\` mode.
    checkout'sessionCustomerDetails :: (GHC.Maybe.Maybe Checkout'sessionCustomerDetails'),
    -- | customer_email: If provided, this value will be used when the Customer object is created.
    -- If not provided, customers will be asked to enter their email address.
    -- Use this parameter to prefill customer data if you already have an email
    -- on file. To access information about the customer once the payment flow is
    -- complete, use the \`customer\` attribute.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | id: Unique identifier for the object. Used to pass to \`redirectToCheckout\`
    -- in Stripe.js.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionId :: Data.Text.Internal.Text,
    -- | line_items: The line items purchased by the customer.
    checkout'sessionLineItems :: (GHC.Maybe.Maybe Checkout'sessionLineItems'),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    checkout'sessionLivemode :: GHC.Types.Bool,
    -- | locale: The IETF language tag of the locale Checkout is displayed in. If blank or \`auto\`, the browser\'s locale is used.
    checkout'sessionLocale :: (GHC.Maybe.Maybe Checkout'sessionLocale'),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    checkout'sessionMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | mode: The mode of the Checkout Session.
    checkout'sessionMode :: Checkout'sessionMode',
    -- | payment_intent: The ID of the PaymentIntent for Checkout Sessions in \`payment\` mode.
    checkout'sessionPaymentIntent :: (GHC.Maybe.Maybe Checkout'sessionPaymentIntent'Variants),
    -- | payment_method_options: Payment-method-specific configuration for the PaymentIntent or SetupIntent of this CheckoutSession.
    checkout'sessionPaymentMethodOptions :: (GHC.Maybe.Maybe Checkout'sessionPaymentMethodOptions'),
    -- | payment_method_types: A list of the types of payment methods (e.g. card) this Checkout
    -- Session is allowed to accept.
    checkout'sessionPaymentMethodTypes :: ([Data.Text.Internal.Text]),
    -- | payment_status: The payment status of the Checkout Session, one of \`paid\`, \`unpaid\`, or \`no_payment_required\`.
    -- You can use this value to decide when to fulfill your customer\'s order.
    checkout'sessionPaymentStatus :: Checkout'sessionPaymentStatus',
    -- | setup_intent: The ID of the SetupIntent for Checkout Sessions in \`setup\` mode.
    checkout'sessionSetupIntent :: (GHC.Maybe.Maybe Checkout'sessionSetupIntent'Variants),
    -- | shipping: Shipping information for this Checkout Session.
    checkout'sessionShipping :: (GHC.Maybe.Maybe Checkout'sessionShipping'),
    -- | shipping_address_collection: When set, provides configuration for Checkout to collect a shipping address from a customer.
    checkout'sessionShippingAddressCollection :: (GHC.Maybe.Maybe Checkout'sessionShippingAddressCollection'),
    -- | submit_type: Describes the type of transaction being performed by Checkout in order to customize
    -- relevant text on the page, such as the submit button. \`submit_type\` can only be
    -- specified on Checkout Sessions in \`payment\` mode, but not Checkout Sessions
    -- in \`subscription\` or \`setup\` mode.
    checkout'sessionSubmitType :: (GHC.Maybe.Maybe Checkout'sessionSubmitType'),
    -- | subscription: The ID of the subscription for Checkout Sessions in \`subscription\` mode.
    checkout'sessionSubscription :: (GHC.Maybe.Maybe Checkout'sessionSubscription'Variants),
    -- | success_url: The URL the customer will be directed to after the payment or
    -- subscription creation is successful.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionSuccessUrl :: Data.Text.Internal.Text,
    -- | tax_id_collection:
    checkout'sessionTaxIdCollection :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionTaxIdCollection),
    -- | total_details: Tax and discount details for the computed total amount.
    checkout'sessionTotalDetails :: (GHC.Maybe.Maybe Checkout'sessionTotalDetails'),
    -- | url: The URL to the Checkout Session.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'session where
  toJSON obj = Data.Aeson.Types.Internal.object ("allow_promotion_codes" Data.Aeson.Types.ToJSON..= checkout'sessionAllowPromotionCodes obj : "amount_subtotal" Data.Aeson.Types.ToJSON..= checkout'sessionAmountSubtotal obj : "amount_total" Data.Aeson.Types.ToJSON..= checkout'sessionAmountTotal obj : "automatic_tax" Data.Aeson.Types.ToJSON..= checkout'sessionAutomaticTax obj : "billing_address_collection" Data.Aeson.Types.ToJSON..= checkout'sessionBillingAddressCollection obj : "cancel_url" Data.Aeson.Types.ToJSON..= checkout'sessionCancelUrl obj : "client_reference_id" Data.Aeson.Types.ToJSON..= checkout'sessionClientReferenceId obj : "currency" Data.Aeson.Types.ToJSON..= checkout'sessionCurrency obj : "customer" Data.Aeson.Types.ToJSON..= checkout'sessionCustomer obj : "customer_details" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails obj : "customer_email" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerEmail obj : "id" Data.Aeson.Types.ToJSON..= checkout'sessionId obj : "line_items" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems obj : "livemode" Data.Aeson.Types.ToJSON..= checkout'sessionLivemode obj : "locale" Data.Aeson.Types.ToJSON..= checkout'sessionLocale obj : "metadata" Data.Aeson.Types.ToJSON..= checkout'sessionMetadata obj : "mode" Data.Aeson.Types.ToJSON..= checkout'sessionMode obj : "payment_intent" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentIntent obj : "payment_method_options" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodOptions obj : "payment_method_types" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodTypes obj : "payment_status" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentStatus obj : "setup_intent" Data.Aeson.Types.ToJSON..= checkout'sessionSetupIntent obj : "shipping" Data.Aeson.Types.ToJSON..= checkout'sessionShipping obj : "shipping_address_collection" Data.Aeson.Types.ToJSON..= checkout'sessionShippingAddressCollection obj : "submit_type" Data.Aeson.Types.ToJSON..= checkout'sessionSubmitType obj : "subscription" Data.Aeson.Types.ToJSON..= checkout'sessionSubscription obj : "success_url" Data.Aeson.Types.ToJSON..= checkout'sessionSuccessUrl obj : "tax_id_collection" Data.Aeson.Types.ToJSON..= checkout'sessionTaxIdCollection obj : "total_details" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails obj : "url" Data.Aeson.Types.ToJSON..= checkout'sessionUrl obj : "object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "checkout.session" : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("allow_promotion_codes" Data.Aeson.Types.ToJSON..= checkout'sessionAllowPromotionCodes obj) GHC.Base.<> (("amount_subtotal" Data.Aeson.Types.ToJSON..= checkout'sessionAmountSubtotal obj) GHC.Base.<> (("amount_total" Data.Aeson.Types.ToJSON..= checkout'sessionAmountTotal obj) GHC.Base.<> (("automatic_tax" Data.Aeson.Types.ToJSON..= checkout'sessionAutomaticTax obj) GHC.Base.<> (("billing_address_collection" Data.Aeson.Types.ToJSON..= checkout'sessionBillingAddressCollection obj) GHC.Base.<> (("cancel_url" Data.Aeson.Types.ToJSON..= checkout'sessionCancelUrl obj) GHC.Base.<> (("client_reference_id" Data.Aeson.Types.ToJSON..= checkout'sessionClientReferenceId obj) GHC.Base.<> (("currency" Data.Aeson.Types.ToJSON..= checkout'sessionCurrency obj) GHC.Base.<> (("customer" Data.Aeson.Types.ToJSON..= checkout'sessionCustomer obj) GHC.Base.<> (("customer_details" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails obj) GHC.Base.<> (("customer_email" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerEmail obj) GHC.Base.<> (("id" Data.Aeson.Types.ToJSON..= checkout'sessionId obj) GHC.Base.<> (("line_items" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems obj) GHC.Base.<> (("livemode" Data.Aeson.Types.ToJSON..= checkout'sessionLivemode obj) GHC.Base.<> (("locale" Data.Aeson.Types.ToJSON..= checkout'sessionLocale obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= checkout'sessionMetadata obj) GHC.Base.<> (("mode" Data.Aeson.Types.ToJSON..= checkout'sessionMode obj) GHC.Base.<> (("payment_intent" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentIntent obj) GHC.Base.<> (("payment_method_options" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodOptions obj) GHC.Base.<> (("payment_method_types" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodTypes obj) GHC.Base.<> (("payment_status" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentStatus obj) GHC.Base.<> (("setup_intent" Data.Aeson.Types.ToJSON..= checkout'sessionSetupIntent obj) GHC.Base.<> (("shipping" Data.Aeson.Types.ToJSON..= checkout'sessionShipping obj) GHC.Base.<> (("shipping_address_collection" Data.Aeson.Types.ToJSON..= checkout'sessionShippingAddressCollection obj) GHC.Base.<> (("submit_type" Data.Aeson.Types.ToJSON..= checkout'sessionSubmitType obj) GHC.Base.<> (("subscription" Data.Aeson.Types.ToJSON..= checkout'sessionSubscription obj) GHC.Base.<> (("success_url" Data.Aeson.Types.ToJSON..= checkout'sessionSuccessUrl obj) GHC.Base.<> (("tax_id_collection" Data.Aeson.Types.ToJSON..= checkout'sessionTaxIdCollection obj) GHC.Base.<> (("total_details" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails obj) GHC.Base.<> (("url" Data.Aeson.Types.ToJSON..= checkout'sessionUrl obj) GHC.Base.<> ("object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "checkout.session")))))))))))))))))))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'session where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'session" (\obj -> (((((((((((((((((((((((((((((GHC.Base.pure Checkout'session GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "allow_promotion_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "automatic_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_address_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cancel_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "client_reference_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_method_types")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "setup_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping_address_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "submit_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "success_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_id_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "total_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "url"))

-- | Create a new 'Checkout'session' with all required fields.
mkCheckout'session ::
  -- | 'checkout'sessionAutomaticTax'
  PaymentPagesCheckoutSessionAutomaticTax ->
  -- | 'checkout'sessionCancelUrl'
  Data.Text.Internal.Text ->
  -- | 'checkout'sessionId'
  Data.Text.Internal.Text ->
  -- | 'checkout'sessionLivemode'
  GHC.Types.Bool ->
  -- | 'checkout'sessionMode'
  Checkout'sessionMode' ->
  -- | 'checkout'sessionPaymentMethodTypes'
  [Data.Text.Internal.Text] ->
  -- | 'checkout'sessionPaymentStatus'
  Checkout'sessionPaymentStatus' ->
  -- | 'checkout'sessionSuccessUrl'
  Data.Text.Internal.Text ->
  Checkout'session
mkCheckout'session checkout'sessionAutomaticTax checkout'sessionCancelUrl checkout'sessionId checkout'sessionLivemode checkout'sessionMode checkout'sessionPaymentMethodTypes checkout'sessionPaymentStatus checkout'sessionSuccessUrl =
  Checkout'session
    { checkout'sessionAllowPromotionCodes = GHC.Maybe.Nothing,
      checkout'sessionAmountSubtotal = GHC.Maybe.Nothing,
      checkout'sessionAmountTotal = GHC.Maybe.Nothing,
      checkout'sessionAutomaticTax = checkout'sessionAutomaticTax,
      checkout'sessionBillingAddressCollection = GHC.Maybe.Nothing,
      checkout'sessionCancelUrl = checkout'sessionCancelUrl,
      checkout'sessionClientReferenceId = GHC.Maybe.Nothing,
      checkout'sessionCurrency = GHC.Maybe.Nothing,
      checkout'sessionCustomer = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails = GHC.Maybe.Nothing,
      checkout'sessionCustomerEmail = GHC.Maybe.Nothing,
      checkout'sessionId = checkout'sessionId,
      checkout'sessionLineItems = GHC.Maybe.Nothing,
      checkout'sessionLivemode = checkout'sessionLivemode,
      checkout'sessionLocale = GHC.Maybe.Nothing,
      checkout'sessionMetadata = GHC.Maybe.Nothing,
      checkout'sessionMode = checkout'sessionMode,
      checkout'sessionPaymentIntent = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodTypes = checkout'sessionPaymentMethodTypes,
      checkout'sessionPaymentStatus = checkout'sessionPaymentStatus,
      checkout'sessionSetupIntent = GHC.Maybe.Nothing,
      checkout'sessionShipping = GHC.Maybe.Nothing,
      checkout'sessionShippingAddressCollection = GHC.Maybe.Nothing,
      checkout'sessionSubmitType = GHC.Maybe.Nothing,
      checkout'sessionSubscription = GHC.Maybe.Nothing,
      checkout'sessionSuccessUrl = checkout'sessionSuccessUrl,
      checkout'sessionTaxIdCollection = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails = GHC.Maybe.Nothing,
      checkout'sessionUrl = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.billing_address_collection@ in the specification.
--
-- Describes whether Checkout should collect the customer\'s billing address.
data Checkout'sessionBillingAddressCollection'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionBillingAddressCollection'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionBillingAddressCollection'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionBillingAddressCollection'EnumAuto
  | -- | Represents the JSON value @"required"@
    Checkout'sessionBillingAddressCollection'EnumRequired
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionBillingAddressCollection' where
  toJSON (Checkout'sessionBillingAddressCollection'Other val) = val
  toJSON (Checkout'sessionBillingAddressCollection'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionBillingAddressCollection'EnumAuto) = "auto"
  toJSON (Checkout'sessionBillingAddressCollection'EnumRequired) = "required"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionBillingAddressCollection' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionBillingAddressCollection'EnumAuto
            | val GHC.Classes.== "required" -> Checkout'sessionBillingAddressCollection'EnumRequired
            | GHC.Base.otherwise -> Checkout'sessionBillingAddressCollection'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.customer.anyOf@ in the specification.
--
-- The ID of the customer for this Session.
-- For Checkout Sessions in \`payment\` or \`subscription\` mode, Checkout
-- will create a new customer object based on information provided
-- during the payment flow unless an existing customer was provided when
-- the Session was created.
data Checkout'sessionCustomer'Variants
  = Checkout'sessionCustomer'Text Data.Text.Internal.Text
  | Checkout'sessionCustomer'Customer Customer
  | Checkout'sessionCustomer'DeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomer'Variants where
  toJSON (Checkout'sessionCustomer'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionCustomer'Customer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionCustomer'DeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomer'Variants where
  parseJSON val = case (Checkout'sessionCustomer'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionCustomer'Customer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionCustomer'DeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.customer_details.anyOf@ in the specification.
--
-- The customer details including the customer\\\'s tax exempt status and the customer\\\'s tax IDs. Only present on Sessions in \\\`payment\\\` or \\\`subscription\\\` mode.
data Checkout'sessionCustomerDetails' = Checkout'sessionCustomerDetails'
  { -- | email: The customer’s email at time of checkout.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'Email :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | tax_exempt: The customer’s tax exempt status at time of checkout.
    checkout'sessionCustomerDetails'TaxExempt :: (GHC.Maybe.Maybe Checkout'sessionCustomerDetails'TaxExempt'),
    -- | tax_ids: The customer’s tax IDs at time of checkout.
    checkout'sessionCustomerDetails'TaxIds :: (GHC.Maybe.Maybe ([PaymentPagesCheckoutSessionTaxId]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomerDetails' where
  toJSON obj = Data.Aeson.Types.Internal.object ("email" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails'Email obj : "tax_exempt" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails'TaxExempt obj : "tax_ids" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails'TaxIds obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("email" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails'Email obj) GHC.Base.<> (("tax_exempt" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails'TaxExempt obj) GHC.Base.<> ("tax_ids" Data.Aeson.Types.ToJSON..= checkout'sessionCustomerDetails'TaxIds obj)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomerDetails' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionCustomerDetails'" (\obj -> ((GHC.Base.pure Checkout'sessionCustomerDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_ids"))

-- | Create a new 'Checkout'sessionCustomerDetails'' with all required fields.
mkCheckout'sessionCustomerDetails' :: Checkout'sessionCustomerDetails'
mkCheckout'sessionCustomerDetails' =
  Checkout'sessionCustomerDetails'
    { checkout'sessionCustomerDetails'Email = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'TaxExempt = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'TaxIds = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.customer_details.anyOf.properties.tax_exempt@ in the specification.
--
-- The customer’s tax exempt status at time of checkout.
data Checkout'sessionCustomerDetails'TaxExempt'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionCustomerDetails'TaxExempt'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionCustomerDetails'TaxExempt'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"exempt"@
    Checkout'sessionCustomerDetails'TaxExempt'EnumExempt
  | -- | Represents the JSON value @"none"@
    Checkout'sessionCustomerDetails'TaxExempt'EnumNone
  | -- | Represents the JSON value @"reverse"@
    Checkout'sessionCustomerDetails'TaxExempt'EnumReverse
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomerDetails'TaxExempt' where
  toJSON (Checkout'sessionCustomerDetails'TaxExempt'Other val) = val
  toJSON (Checkout'sessionCustomerDetails'TaxExempt'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionCustomerDetails'TaxExempt'EnumExempt) = "exempt"
  toJSON (Checkout'sessionCustomerDetails'TaxExempt'EnumNone) = "none"
  toJSON (Checkout'sessionCustomerDetails'TaxExempt'EnumReverse) = "reverse"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomerDetails'TaxExempt' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "exempt" -> Checkout'sessionCustomerDetails'TaxExempt'EnumExempt
            | val GHC.Classes.== "none" -> Checkout'sessionCustomerDetails'TaxExempt'EnumNone
            | val GHC.Classes.== "reverse" -> Checkout'sessionCustomerDetails'TaxExempt'EnumReverse
            | GHC.Base.otherwise -> Checkout'sessionCustomerDetails'TaxExempt'Other val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.line_items@ in the specification.
--
-- The line items purchased by the customer.
data Checkout'sessionLineItems' = Checkout'sessionLineItems'
  { -- | data: Details about each object.
    checkout'sessionLineItems'Data :: ([Item]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    checkout'sessionLineItems'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionLineItems'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionLineItems' where
  toJSON obj = Data.Aeson.Types.Internal.object ("data" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Data obj : "has_more" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'HasMore obj : "url" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Url obj : "object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list" : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("data" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Data obj) GHC.Base.<> (("has_more" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'HasMore obj) GHC.Base.<> (("url" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Url obj) GHC.Base.<> ("object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"))))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionLineItems' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionLineItems'" (\obj -> ((GHC.Base.pure Checkout'sessionLineItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'Checkout'sessionLineItems'' with all required fields.
mkCheckout'sessionLineItems' ::
  -- | 'checkout'sessionLineItems'Data'
  [Item] ->
  -- | 'checkout'sessionLineItems'HasMore'
  GHC.Types.Bool ->
  -- | 'checkout'sessionLineItems'Url'
  Data.Text.Internal.Text ->
  Checkout'sessionLineItems'
mkCheckout'sessionLineItems' checkout'sessionLineItems'Data checkout'sessionLineItems'HasMore checkout'sessionLineItems'Url =
  Checkout'sessionLineItems'
    { checkout'sessionLineItems'Data = checkout'sessionLineItems'Data,
      checkout'sessionLineItems'HasMore = checkout'sessionLineItems'HasMore,
      checkout'sessionLineItems'Url = checkout'sessionLineItems'Url
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.locale@ in the specification.
--
-- The IETF language tag of the locale Checkout is displayed in. If blank or \`auto\`, the browser\'s locale is used.
data Checkout'sessionLocale'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionLocale'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionLocale'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionLocale'EnumAuto
  | -- | Represents the JSON value @"bg"@
    Checkout'sessionLocale'EnumBg
  | -- | Represents the JSON value @"cs"@
    Checkout'sessionLocale'EnumCs
  | -- | Represents the JSON value @"da"@
    Checkout'sessionLocale'EnumDa
  | -- | Represents the JSON value @"de"@
    Checkout'sessionLocale'EnumDe
  | -- | Represents the JSON value @"el"@
    Checkout'sessionLocale'EnumEl
  | -- | Represents the JSON value @"en"@
    Checkout'sessionLocale'EnumEn
  | -- | Represents the JSON value @"en-GB"@
    Checkout'sessionLocale'EnumEnGB
  | -- | Represents the JSON value @"es"@
    Checkout'sessionLocale'EnumEs
  | -- | Represents the JSON value @"es-419"@
    Checkout'sessionLocale'EnumEs_419
  | -- | Represents the JSON value @"et"@
    Checkout'sessionLocale'EnumEt
  | -- | Represents the JSON value @"fi"@
    Checkout'sessionLocale'EnumFi
  | -- | Represents the JSON value @"fr"@
    Checkout'sessionLocale'EnumFr
  | -- | Represents the JSON value @"fr-CA"@
    Checkout'sessionLocale'EnumFrCA
  | -- | Represents the JSON value @"hu"@
    Checkout'sessionLocale'EnumHu
  | -- | Represents the JSON value @"id"@
    Checkout'sessionLocale'EnumId
  | -- | Represents the JSON value @"it"@
    Checkout'sessionLocale'EnumIt
  | -- | Represents the JSON value @"ja"@
    Checkout'sessionLocale'EnumJa
  | -- | Represents the JSON value @"lt"@
    Checkout'sessionLocale'EnumLt
  | -- | Represents the JSON value @"lv"@
    Checkout'sessionLocale'EnumLv
  | -- | Represents the JSON value @"ms"@
    Checkout'sessionLocale'EnumMs
  | -- | Represents the JSON value @"mt"@
    Checkout'sessionLocale'EnumMt
  | -- | Represents the JSON value @"nb"@
    Checkout'sessionLocale'EnumNb
  | -- | Represents the JSON value @"nl"@
    Checkout'sessionLocale'EnumNl
  | -- | Represents the JSON value @"pl"@
    Checkout'sessionLocale'EnumPl
  | -- | Represents the JSON value @"pt"@
    Checkout'sessionLocale'EnumPt
  | -- | Represents the JSON value @"pt-BR"@
    Checkout'sessionLocale'EnumPtBR
  | -- | Represents the JSON value @"ro"@
    Checkout'sessionLocale'EnumRo
  | -- | Represents the JSON value @"ru"@
    Checkout'sessionLocale'EnumRu
  | -- | Represents the JSON value @"sk"@
    Checkout'sessionLocale'EnumSk
  | -- | Represents the JSON value @"sl"@
    Checkout'sessionLocale'EnumSl
  | -- | Represents the JSON value @"sv"@
    Checkout'sessionLocale'EnumSv
  | -- | Represents the JSON value @"th"@
    Checkout'sessionLocale'EnumTh
  | -- | Represents the JSON value @"tr"@
    Checkout'sessionLocale'EnumTr
  | -- | Represents the JSON value @"zh"@
    Checkout'sessionLocale'EnumZh
  | -- | Represents the JSON value @"zh-HK"@
    Checkout'sessionLocale'EnumZhHK
  | -- | Represents the JSON value @"zh-TW"@
    Checkout'sessionLocale'EnumZhTW
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionLocale' where
  toJSON (Checkout'sessionLocale'Other val) = val
  toJSON (Checkout'sessionLocale'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionLocale'EnumAuto) = "auto"
  toJSON (Checkout'sessionLocale'EnumBg) = "bg"
  toJSON (Checkout'sessionLocale'EnumCs) = "cs"
  toJSON (Checkout'sessionLocale'EnumDa) = "da"
  toJSON (Checkout'sessionLocale'EnumDe) = "de"
  toJSON (Checkout'sessionLocale'EnumEl) = "el"
  toJSON (Checkout'sessionLocale'EnumEn) = "en"
  toJSON (Checkout'sessionLocale'EnumEnGB) = "en-GB"
  toJSON (Checkout'sessionLocale'EnumEs) = "es"
  toJSON (Checkout'sessionLocale'EnumEs_419) = "es-419"
  toJSON (Checkout'sessionLocale'EnumEt) = "et"
  toJSON (Checkout'sessionLocale'EnumFi) = "fi"
  toJSON (Checkout'sessionLocale'EnumFr) = "fr"
  toJSON (Checkout'sessionLocale'EnumFrCA) = "fr-CA"
  toJSON (Checkout'sessionLocale'EnumHu) = "hu"
  toJSON (Checkout'sessionLocale'EnumId) = "id"
  toJSON (Checkout'sessionLocale'EnumIt) = "it"
  toJSON (Checkout'sessionLocale'EnumJa) = "ja"
  toJSON (Checkout'sessionLocale'EnumLt) = "lt"
  toJSON (Checkout'sessionLocale'EnumLv) = "lv"
  toJSON (Checkout'sessionLocale'EnumMs) = "ms"
  toJSON (Checkout'sessionLocale'EnumMt) = "mt"
  toJSON (Checkout'sessionLocale'EnumNb) = "nb"
  toJSON (Checkout'sessionLocale'EnumNl) = "nl"
  toJSON (Checkout'sessionLocale'EnumPl) = "pl"
  toJSON (Checkout'sessionLocale'EnumPt) = "pt"
  toJSON (Checkout'sessionLocale'EnumPtBR) = "pt-BR"
  toJSON (Checkout'sessionLocale'EnumRo) = "ro"
  toJSON (Checkout'sessionLocale'EnumRu) = "ru"
  toJSON (Checkout'sessionLocale'EnumSk) = "sk"
  toJSON (Checkout'sessionLocale'EnumSl) = "sl"
  toJSON (Checkout'sessionLocale'EnumSv) = "sv"
  toJSON (Checkout'sessionLocale'EnumTh) = "th"
  toJSON (Checkout'sessionLocale'EnumTr) = "tr"
  toJSON (Checkout'sessionLocale'EnumZh) = "zh"
  toJSON (Checkout'sessionLocale'EnumZhHK) = "zh-HK"
  toJSON (Checkout'sessionLocale'EnumZhTW) = "zh-TW"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionLocale' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionLocale'EnumAuto
            | val GHC.Classes.== "bg" -> Checkout'sessionLocale'EnumBg
            | val GHC.Classes.== "cs" -> Checkout'sessionLocale'EnumCs
            | val GHC.Classes.== "da" -> Checkout'sessionLocale'EnumDa
            | val GHC.Classes.== "de" -> Checkout'sessionLocale'EnumDe
            | val GHC.Classes.== "el" -> Checkout'sessionLocale'EnumEl
            | val GHC.Classes.== "en" -> Checkout'sessionLocale'EnumEn
            | val GHC.Classes.== "en-GB" -> Checkout'sessionLocale'EnumEnGB
            | val GHC.Classes.== "es" -> Checkout'sessionLocale'EnumEs
            | val GHC.Classes.== "es-419" -> Checkout'sessionLocale'EnumEs_419
            | val GHC.Classes.== "et" -> Checkout'sessionLocale'EnumEt
            | val GHC.Classes.== "fi" -> Checkout'sessionLocale'EnumFi
            | val GHC.Classes.== "fr" -> Checkout'sessionLocale'EnumFr
            | val GHC.Classes.== "fr-CA" -> Checkout'sessionLocale'EnumFrCA
            | val GHC.Classes.== "hu" -> Checkout'sessionLocale'EnumHu
            | val GHC.Classes.== "id" -> Checkout'sessionLocale'EnumId
            | val GHC.Classes.== "it" -> Checkout'sessionLocale'EnumIt
            | val GHC.Classes.== "ja" -> Checkout'sessionLocale'EnumJa
            | val GHC.Classes.== "lt" -> Checkout'sessionLocale'EnumLt
            | val GHC.Classes.== "lv" -> Checkout'sessionLocale'EnumLv
            | val GHC.Classes.== "ms" -> Checkout'sessionLocale'EnumMs
            | val GHC.Classes.== "mt" -> Checkout'sessionLocale'EnumMt
            | val GHC.Classes.== "nb" -> Checkout'sessionLocale'EnumNb
            | val GHC.Classes.== "nl" -> Checkout'sessionLocale'EnumNl
            | val GHC.Classes.== "pl" -> Checkout'sessionLocale'EnumPl
            | val GHC.Classes.== "pt" -> Checkout'sessionLocale'EnumPt
            | val GHC.Classes.== "pt-BR" -> Checkout'sessionLocale'EnumPtBR
            | val GHC.Classes.== "ro" -> Checkout'sessionLocale'EnumRo
            | val GHC.Classes.== "ru" -> Checkout'sessionLocale'EnumRu
            | val GHC.Classes.== "sk" -> Checkout'sessionLocale'EnumSk
            | val GHC.Classes.== "sl" -> Checkout'sessionLocale'EnumSl
            | val GHC.Classes.== "sv" -> Checkout'sessionLocale'EnumSv
            | val GHC.Classes.== "th" -> Checkout'sessionLocale'EnumTh
            | val GHC.Classes.== "tr" -> Checkout'sessionLocale'EnumTr
            | val GHC.Classes.== "zh" -> Checkout'sessionLocale'EnumZh
            | val GHC.Classes.== "zh-HK" -> Checkout'sessionLocale'EnumZhHK
            | val GHC.Classes.== "zh-TW" -> Checkout'sessionLocale'EnumZhTW
            | GHC.Base.otherwise -> Checkout'sessionLocale'Other val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.mode@ in the specification.
--
-- The mode of the Checkout Session.
data Checkout'sessionMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"payment"@
    Checkout'sessionMode'EnumPayment
  | -- | Represents the JSON value @"setup"@
    Checkout'sessionMode'EnumSetup
  | -- | Represents the JSON value @"subscription"@
    Checkout'sessionMode'EnumSubscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionMode' where
  toJSON (Checkout'sessionMode'Other val) = val
  toJSON (Checkout'sessionMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionMode'EnumPayment) = "payment"
  toJSON (Checkout'sessionMode'EnumSetup) = "setup"
  toJSON (Checkout'sessionMode'EnumSubscription) = "subscription"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionMode' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "payment" -> Checkout'sessionMode'EnumPayment
            | val GHC.Classes.== "setup" -> Checkout'sessionMode'EnumSetup
            | val GHC.Classes.== "subscription" -> Checkout'sessionMode'EnumSubscription
            | GHC.Base.otherwise -> Checkout'sessionMode'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.payment_intent.anyOf@ in the specification.
--
-- The ID of the PaymentIntent for Checkout Sessions in \`payment\` mode.
data Checkout'sessionPaymentIntent'Variants
  = Checkout'sessionPaymentIntent'Text Data.Text.Internal.Text
  | Checkout'sessionPaymentIntent'PaymentIntent PaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentIntent'Variants where
  toJSON (Checkout'sessionPaymentIntent'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionPaymentIntent'PaymentIntent a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentIntent'Variants where
  parseJSON val = case (Checkout'sessionPaymentIntent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionPaymentIntent'PaymentIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.payment_method_options.anyOf@ in the specification.
--
-- Payment-method-specific configuration for the PaymentIntent or SetupIntent of this CheckoutSession.
data Checkout'sessionPaymentMethodOptions' = Checkout'sessionPaymentMethodOptions'
  { -- | acss_debit:
    checkout'sessionPaymentMethodOptions'AcssDebit :: (GHC.Maybe.Maybe CheckoutAcssDebitPaymentMethodOptions)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentMethodOptions' where
  toJSON obj = Data.Aeson.Types.Internal.object ("acss_debit" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodOptions'AcssDebit obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("acss_debit" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodOptions'AcssDebit obj)

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentMethodOptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionPaymentMethodOptions'" (\obj -> GHC.Base.pure Checkout'sessionPaymentMethodOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "acss_debit"))

-- | Create a new 'Checkout'sessionPaymentMethodOptions'' with all required fields.
mkCheckout'sessionPaymentMethodOptions' :: Checkout'sessionPaymentMethodOptions'
mkCheckout'sessionPaymentMethodOptions' = Checkout'sessionPaymentMethodOptions' {checkout'sessionPaymentMethodOptions'AcssDebit = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.payment_status@ in the specification.
--
-- The payment status of the Checkout Session, one of \`paid\`, \`unpaid\`, or \`no_payment_required\`.
-- You can use this value to decide when to fulfill your customer\'s order.
data Checkout'sessionPaymentStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionPaymentStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionPaymentStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"no_payment_required"@
    Checkout'sessionPaymentStatus'EnumNoPaymentRequired
  | -- | Represents the JSON value @"paid"@
    Checkout'sessionPaymentStatus'EnumPaid
  | -- | Represents the JSON value @"unpaid"@
    Checkout'sessionPaymentStatus'EnumUnpaid
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentStatus' where
  toJSON (Checkout'sessionPaymentStatus'Other val) = val
  toJSON (Checkout'sessionPaymentStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionPaymentStatus'EnumNoPaymentRequired) = "no_payment_required"
  toJSON (Checkout'sessionPaymentStatus'EnumPaid) = "paid"
  toJSON (Checkout'sessionPaymentStatus'EnumUnpaid) = "unpaid"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "no_payment_required" -> Checkout'sessionPaymentStatus'EnumNoPaymentRequired
            | val GHC.Classes.== "paid" -> Checkout'sessionPaymentStatus'EnumPaid
            | val GHC.Classes.== "unpaid" -> Checkout'sessionPaymentStatus'EnumUnpaid
            | GHC.Base.otherwise -> Checkout'sessionPaymentStatus'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.setup_intent.anyOf@ in the specification.
--
-- The ID of the SetupIntent for Checkout Sessions in \`setup\` mode.
data Checkout'sessionSetupIntent'Variants
  = Checkout'sessionSetupIntent'Text Data.Text.Internal.Text
  | Checkout'sessionSetupIntent'SetupIntent SetupIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionSetupIntent'Variants where
  toJSON (Checkout'sessionSetupIntent'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionSetupIntent'SetupIntent a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionSetupIntent'Variants where
  parseJSON val = case (Checkout'sessionSetupIntent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionSetupIntent'SetupIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.shipping.anyOf@ in the specification.
--
-- Shipping information for this Checkout Session.
data Checkout'sessionShipping' = Checkout'sessionShipping'
  { -- | address:
    checkout'sessionShipping'Address :: (GHC.Maybe.Maybe Address),
    -- | carrier: The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShipping'Carrier :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name: Recipient name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShipping'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | phone: Recipient phone (including extension).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShipping'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | tracking_number: The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShipping'TrackingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShipping' where
  toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Address obj : "carrier" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Carrier obj : "name" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Name obj : "phone" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Phone obj : "tracking_number" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'TrackingNumber obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Address obj) GHC.Base.<> (("carrier" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Carrier obj) GHC.Base.<> (("name" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Name obj) GHC.Base.<> (("phone" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'Phone obj) GHC.Base.<> ("tracking_number" Data.Aeson.Types.ToJSON..= checkout'sessionShipping'TrackingNumber obj)))))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShipping' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionShipping'" (\obj -> ((((GHC.Base.pure Checkout'sessionShipping' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tracking_number"))

-- | Create a new 'Checkout'sessionShipping'' with all required fields.
mkCheckout'sessionShipping' :: Checkout'sessionShipping'
mkCheckout'sessionShipping' =
  Checkout'sessionShipping'
    { checkout'sessionShipping'Address = GHC.Maybe.Nothing,
      checkout'sessionShipping'Carrier = GHC.Maybe.Nothing,
      checkout'sessionShipping'Name = GHC.Maybe.Nothing,
      checkout'sessionShipping'Phone = GHC.Maybe.Nothing,
      checkout'sessionShipping'TrackingNumber = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.checkout.session.properties.shipping_address_collection.anyOf@ in the specification.
--
-- When set, provides configuration for Checkout to collect a shipping address from a customer.
data Checkout'sessionShippingAddressCollection' = Checkout'sessionShippingAddressCollection'
  { -- | allowed_countries: An array of two-letter ISO country codes representing which countries Checkout should provide as options for
    -- shipping locations. Unsupported country codes: \`AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI\`.
    checkout'sessionShippingAddressCollection'AllowedCountries :: (GHC.Maybe.Maybe ([Checkout'sessionShippingAddressCollection'AllowedCountries']))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingAddressCollection' where
  toJSON obj = Data.Aeson.Types.Internal.object ("allowed_countries" Data.Aeson.Types.ToJSON..= checkout'sessionShippingAddressCollection'AllowedCountries obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("allowed_countries" Data.Aeson.Types.ToJSON..= checkout'sessionShippingAddressCollection'AllowedCountries obj)

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingAddressCollection' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionShippingAddressCollection'" (\obj -> GHC.Base.pure Checkout'sessionShippingAddressCollection' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "allowed_countries"))

-- | Create a new 'Checkout'sessionShippingAddressCollection'' with all required fields.
mkCheckout'sessionShippingAddressCollection' :: Checkout'sessionShippingAddressCollection'
mkCheckout'sessionShippingAddressCollection' = Checkout'sessionShippingAddressCollection' {checkout'sessionShippingAddressCollection'AllowedCountries = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.shipping_address_collection.anyOf.properties.allowed_countries.items@ in the specification.
data Checkout'sessionShippingAddressCollection'AllowedCountries'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionShippingAddressCollection'AllowedCountries'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionShippingAddressCollection'AllowedCountries'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"AC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAC
  | -- | Represents the JSON value @"AD"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAD
  | -- | Represents the JSON value @"AE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAE
  | -- | Represents the JSON value @"AF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAF
  | -- | Represents the JSON value @"AG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAG
  | -- | Represents the JSON value @"AI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAI
  | -- | Represents the JSON value @"AL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAL
  | -- | Represents the JSON value @"AM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAM
  | -- | Represents the JSON value @"AO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAO
  | -- | Represents the JSON value @"AQ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAQ
  | -- | Represents the JSON value @"AR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAR
  | -- | Represents the JSON value @"AT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAT
  | -- | Represents the JSON value @"AU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAU
  | -- | Represents the JSON value @"AW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAW
  | -- | Represents the JSON value @"AX"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAX
  | -- | Represents the JSON value @"AZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAZ
  | -- | Represents the JSON value @"BA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBA
  | -- | Represents the JSON value @"BB"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBB
  | -- | Represents the JSON value @"BD"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBD
  | -- | Represents the JSON value @"BE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBE
  | -- | Represents the JSON value @"BF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBF
  | -- | Represents the JSON value @"BG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBG
  | -- | Represents the JSON value @"BH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBH
  | -- | Represents the JSON value @"BI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBI
  | -- | Represents the JSON value @"BJ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBJ
  | -- | Represents the JSON value @"BL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBL
  | -- | Represents the JSON value @"BM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBM
  | -- | Represents the JSON value @"BN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBN
  | -- | Represents the JSON value @"BO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBO
  | -- | Represents the JSON value @"BQ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBQ
  | -- | Represents the JSON value @"BR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBR
  | -- | Represents the JSON value @"BS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBS
  | -- | Represents the JSON value @"BT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBT
  | -- | Represents the JSON value @"BV"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBV
  | -- | Represents the JSON value @"BW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBW
  | -- | Represents the JSON value @"BY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBY
  | -- | Represents the JSON value @"BZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBZ
  | -- | Represents the JSON value @"CA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCA
  | -- | Represents the JSON value @"CD"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCD
  | -- | Represents the JSON value @"CF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCF
  | -- | Represents the JSON value @"CG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCG
  | -- | Represents the JSON value @"CH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCH
  | -- | Represents the JSON value @"CI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCI
  | -- | Represents the JSON value @"CK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCK
  | -- | Represents the JSON value @"CL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCL
  | -- | Represents the JSON value @"CM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCM
  | -- | Represents the JSON value @"CN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCN
  | -- | Represents the JSON value @"CO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCO
  | -- | Represents the JSON value @"CR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCR
  | -- | Represents the JSON value @"CV"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCV
  | -- | Represents the JSON value @"CW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCW
  | -- | Represents the JSON value @"CY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCY
  | -- | Represents the JSON value @"CZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCZ
  | -- | Represents the JSON value @"DE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDE
  | -- | Represents the JSON value @"DJ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDJ
  | -- | Represents the JSON value @"DK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDK
  | -- | Represents the JSON value @"DM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDM
  | -- | Represents the JSON value @"DO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDO
  | -- | Represents the JSON value @"DZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDZ
  | -- | Represents the JSON value @"EC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEC
  | -- | Represents the JSON value @"EE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEE
  | -- | Represents the JSON value @"EG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEG
  | -- | Represents the JSON value @"EH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEH
  | -- | Represents the JSON value @"ER"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumER
  | -- | Represents the JSON value @"ES"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumES
  | -- | Represents the JSON value @"ET"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumET
  | -- | Represents the JSON value @"FI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFI
  | -- | Represents the JSON value @"FJ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFJ
  | -- | Represents the JSON value @"FK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFK
  | -- | Represents the JSON value @"FO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFO
  | -- | Represents the JSON value @"FR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFR
  | -- | Represents the JSON value @"GA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGA
  | -- | Represents the JSON value @"GB"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGB
  | -- | Represents the JSON value @"GD"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGD
  | -- | Represents the JSON value @"GE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGE
  | -- | Represents the JSON value @"GF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGF
  | -- | Represents the JSON value @"GG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGG
  | -- | Represents the JSON value @"GH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGH
  | -- | Represents the JSON value @"GI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGI
  | -- | Represents the JSON value @"GL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGL
  | -- | Represents the JSON value @"GM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGM
  | -- | Represents the JSON value @"GN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGN
  | -- | Represents the JSON value @"GP"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGP
  | -- | Represents the JSON value @"GQ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGQ
  | -- | Represents the JSON value @"GR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGR
  | -- | Represents the JSON value @"GS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGS
  | -- | Represents the JSON value @"GT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGT
  | -- | Represents the JSON value @"GU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGU
  | -- | Represents the JSON value @"GW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGW
  | -- | Represents the JSON value @"GY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGY
  | -- | Represents the JSON value @"HK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHK
  | -- | Represents the JSON value @"HN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHN
  | -- | Represents the JSON value @"HR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHR
  | -- | Represents the JSON value @"HT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHT
  | -- | Represents the JSON value @"HU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHU
  | -- | Represents the JSON value @"ID"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumID
  | -- | Represents the JSON value @"IE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIE
  | -- | Represents the JSON value @"IL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIL
  | -- | Represents the JSON value @"IM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIM
  | -- | Represents the JSON value @"IN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIN
  | -- | Represents the JSON value @"IO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIO
  | -- | Represents the JSON value @"IQ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIQ
  | -- | Represents the JSON value @"IS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIS
  | -- | Represents the JSON value @"IT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIT
  | -- | Represents the JSON value @"JE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJE
  | -- | Represents the JSON value @"JM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJM
  | -- | Represents the JSON value @"JO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJO
  | -- | Represents the JSON value @"JP"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJP
  | -- | Represents the JSON value @"KE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKE
  | -- | Represents the JSON value @"KG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKG
  | -- | Represents the JSON value @"KH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKH
  | -- | Represents the JSON value @"KI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKI
  | -- | Represents the JSON value @"KM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKM
  | -- | Represents the JSON value @"KN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKN
  | -- | Represents the JSON value @"KR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKR
  | -- | Represents the JSON value @"KW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKW
  | -- | Represents the JSON value @"KY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKY
  | -- | Represents the JSON value @"KZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKZ
  | -- | Represents the JSON value @"LA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLA
  | -- | Represents the JSON value @"LB"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLB
  | -- | Represents the JSON value @"LC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLC
  | -- | Represents the JSON value @"LI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLI
  | -- | Represents the JSON value @"LK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLK
  | -- | Represents the JSON value @"LR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLR
  | -- | Represents the JSON value @"LS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLS
  | -- | Represents the JSON value @"LT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLT
  | -- | Represents the JSON value @"LU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLU
  | -- | Represents the JSON value @"LV"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLV
  | -- | Represents the JSON value @"LY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLY
  | -- | Represents the JSON value @"MA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMA
  | -- | Represents the JSON value @"MC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMC
  | -- | Represents the JSON value @"MD"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMD
  | -- | Represents the JSON value @"ME"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumME
  | -- | Represents the JSON value @"MF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMF
  | -- | Represents the JSON value @"MG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMG
  | -- | Represents the JSON value @"MK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMK
  | -- | Represents the JSON value @"ML"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumML
  | -- | Represents the JSON value @"MM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMM
  | -- | Represents the JSON value @"MN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMN
  | -- | Represents the JSON value @"MO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMO
  | -- | Represents the JSON value @"MQ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMQ
  | -- | Represents the JSON value @"MR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMR
  | -- | Represents the JSON value @"MS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMS
  | -- | Represents the JSON value @"MT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMT
  | -- | Represents the JSON value @"MU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMU
  | -- | Represents the JSON value @"MV"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMV
  | -- | Represents the JSON value @"MW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMW
  | -- | Represents the JSON value @"MX"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMX
  | -- | Represents the JSON value @"MY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMY
  | -- | Represents the JSON value @"MZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMZ
  | -- | Represents the JSON value @"NA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNA
  | -- | Represents the JSON value @"NC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNC
  | -- | Represents the JSON value @"NE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNE
  | -- | Represents the JSON value @"NG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNG
  | -- | Represents the JSON value @"NI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNI
  | -- | Represents the JSON value @"NL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNL
  | -- | Represents the JSON value @"NO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNO
  | -- | Represents the JSON value @"NP"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNP
  | -- | Represents the JSON value @"NR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNR
  | -- | Represents the JSON value @"NU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNU
  | -- | Represents the JSON value @"NZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNZ
  | -- | Represents the JSON value @"OM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumOM
  | -- | Represents the JSON value @"PA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPA
  | -- | Represents the JSON value @"PE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPE
  | -- | Represents the JSON value @"PF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPF
  | -- | Represents the JSON value @"PG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPG
  | -- | Represents the JSON value @"PH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPH
  | -- | Represents the JSON value @"PK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPK
  | -- | Represents the JSON value @"PL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPL
  | -- | Represents the JSON value @"PM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPM
  | -- | Represents the JSON value @"PN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPN
  | -- | Represents the JSON value @"PR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPR
  | -- | Represents the JSON value @"PS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPS
  | -- | Represents the JSON value @"PT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPT
  | -- | Represents the JSON value @"PY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPY
  | -- | Represents the JSON value @"QA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumQA
  | -- | Represents the JSON value @"RE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRE
  | -- | Represents the JSON value @"RO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRO
  | -- | Represents the JSON value @"RS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRS
  | -- | Represents the JSON value @"RU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRU
  | -- | Represents the JSON value @"RW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRW
  | -- | Represents the JSON value @"SA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSA
  | -- | Represents the JSON value @"SB"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSB
  | -- | Represents the JSON value @"SC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSC
  | -- | Represents the JSON value @"SE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSE
  | -- | Represents the JSON value @"SG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSG
  | -- | Represents the JSON value @"SH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSH
  | -- | Represents the JSON value @"SI"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSI
  | -- | Represents the JSON value @"SJ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSJ
  | -- | Represents the JSON value @"SK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSK
  | -- | Represents the JSON value @"SL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSL
  | -- | Represents the JSON value @"SM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSM
  | -- | Represents the JSON value @"SN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSN
  | -- | Represents the JSON value @"SO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSO
  | -- | Represents the JSON value @"SR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSR
  | -- | Represents the JSON value @"SS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSS
  | -- | Represents the JSON value @"ST"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumST
  | -- | Represents the JSON value @"SV"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSV
  | -- | Represents the JSON value @"SX"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSX
  | -- | Represents the JSON value @"SZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSZ
  | -- | Represents the JSON value @"TA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTA
  | -- | Represents the JSON value @"TC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTC
  | -- | Represents the JSON value @"TD"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTD
  | -- | Represents the JSON value @"TF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTF
  | -- | Represents the JSON value @"TG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTG
  | -- | Represents the JSON value @"TH"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTH
  | -- | Represents the JSON value @"TJ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTJ
  | -- | Represents the JSON value @"TK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTK
  | -- | Represents the JSON value @"TL"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTL
  | -- | Represents the JSON value @"TM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTM
  | -- | Represents the JSON value @"TN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTN
  | -- | Represents the JSON value @"TO"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTO
  | -- | Represents the JSON value @"TR"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTR
  | -- | Represents the JSON value @"TT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTT
  | -- | Represents the JSON value @"TV"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTV
  | -- | Represents the JSON value @"TW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTW
  | -- | Represents the JSON value @"TZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTZ
  | -- | Represents the JSON value @"UA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUA
  | -- | Represents the JSON value @"UG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUG
  | -- | Represents the JSON value @"US"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUS
  | -- | Represents the JSON value @"UY"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUY
  | -- | Represents the JSON value @"UZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUZ
  | -- | Represents the JSON value @"VA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVA
  | -- | Represents the JSON value @"VC"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVC
  | -- | Represents the JSON value @"VE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVE
  | -- | Represents the JSON value @"VG"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVG
  | -- | Represents the JSON value @"VN"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVN
  | -- | Represents the JSON value @"VU"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVU
  | -- | Represents the JSON value @"WF"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumWF
  | -- | Represents the JSON value @"WS"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumWS
  | -- | Represents the JSON value @"XK"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumXK
  | -- | Represents the JSON value @"YE"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumYE
  | -- | Represents the JSON value @"YT"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumYT
  | -- | Represents the JSON value @"ZA"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZA
  | -- | Represents the JSON value @"ZM"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZM
  | -- | Represents the JSON value @"ZW"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZW
  | -- | Represents the JSON value @"ZZ"@
    Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZZ
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingAddressCollection'AllowedCountries' where
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'Other val) = val
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAC) = "AC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAD) = "AD"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAE) = "AE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAF) = "AF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAG) = "AG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAI) = "AI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAL) = "AL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAM) = "AM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAO) = "AO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAQ) = "AQ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAR) = "AR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAT) = "AT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAU) = "AU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAW) = "AW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAX) = "AX"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAZ) = "AZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBA) = "BA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBB) = "BB"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBD) = "BD"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBE) = "BE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBF) = "BF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBG) = "BG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBH) = "BH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBI) = "BI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBJ) = "BJ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBL) = "BL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBM) = "BM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBN) = "BN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBO) = "BO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBQ) = "BQ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBR) = "BR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBS) = "BS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBT) = "BT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBV) = "BV"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBW) = "BW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBY) = "BY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBZ) = "BZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCA) = "CA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCD) = "CD"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCF) = "CF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCG) = "CG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCH) = "CH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCI) = "CI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCK) = "CK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCL) = "CL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCM) = "CM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCN) = "CN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCO) = "CO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCR) = "CR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCV) = "CV"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCW) = "CW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCY) = "CY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCZ) = "CZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDE) = "DE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDJ) = "DJ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDK) = "DK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDM) = "DM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDO) = "DO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDZ) = "DZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEC) = "EC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEE) = "EE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEG) = "EG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEH) = "EH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumER) = "ER"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumES) = "ES"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumET) = "ET"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFI) = "FI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFJ) = "FJ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFK) = "FK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFO) = "FO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFR) = "FR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGA) = "GA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGB) = "GB"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGD) = "GD"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGE) = "GE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGF) = "GF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGG) = "GG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGH) = "GH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGI) = "GI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGL) = "GL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGM) = "GM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGN) = "GN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGP) = "GP"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGQ) = "GQ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGR) = "GR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGS) = "GS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGT) = "GT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGU) = "GU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGW) = "GW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGY) = "GY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHK) = "HK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHN) = "HN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHR) = "HR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHT) = "HT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHU) = "HU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumID) = "ID"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIE) = "IE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIL) = "IL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIM) = "IM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIN) = "IN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIO) = "IO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIQ) = "IQ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIS) = "IS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIT) = "IT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJE) = "JE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJM) = "JM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJO) = "JO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJP) = "JP"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKE) = "KE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKG) = "KG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKH) = "KH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKI) = "KI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKM) = "KM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKN) = "KN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKR) = "KR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKW) = "KW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKY) = "KY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKZ) = "KZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLA) = "LA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLB) = "LB"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLC) = "LC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLI) = "LI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLK) = "LK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLR) = "LR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLS) = "LS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLT) = "LT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLU) = "LU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLV) = "LV"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLY) = "LY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMA) = "MA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMC) = "MC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMD) = "MD"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumME) = "ME"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMF) = "MF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMG) = "MG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMK) = "MK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumML) = "ML"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMM) = "MM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMN) = "MN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMO) = "MO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMQ) = "MQ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMR) = "MR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMS) = "MS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMT) = "MT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMU) = "MU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMV) = "MV"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMW) = "MW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMX) = "MX"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMY) = "MY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMZ) = "MZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNA) = "NA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNC) = "NC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNE) = "NE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNG) = "NG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNI) = "NI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNL) = "NL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNO) = "NO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNP) = "NP"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNR) = "NR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNU) = "NU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNZ) = "NZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumOM) = "OM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPA) = "PA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPE) = "PE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPF) = "PF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPG) = "PG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPH) = "PH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPK) = "PK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPL) = "PL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPM) = "PM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPN) = "PN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPR) = "PR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPS) = "PS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPT) = "PT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPY) = "PY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumQA) = "QA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRE) = "RE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRO) = "RO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRS) = "RS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRU) = "RU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRW) = "RW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSA) = "SA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSB) = "SB"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSC) = "SC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSE) = "SE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSG) = "SG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSH) = "SH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSI) = "SI"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSJ) = "SJ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSK) = "SK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSL) = "SL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSM) = "SM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSN) = "SN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSO) = "SO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSR) = "SR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSS) = "SS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumST) = "ST"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSV) = "SV"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSX) = "SX"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSZ) = "SZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTA) = "TA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTC) = "TC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTD) = "TD"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTF) = "TF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTG) = "TG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTH) = "TH"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTJ) = "TJ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTK) = "TK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTL) = "TL"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTM) = "TM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTN) = "TN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTO) = "TO"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTR) = "TR"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTT) = "TT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTV) = "TV"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTW) = "TW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTZ) = "TZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUA) = "UA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUG) = "UG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUS) = "US"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUY) = "UY"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUZ) = "UZ"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVA) = "VA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVC) = "VC"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVE) = "VE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVG) = "VG"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVN) = "VN"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVU) = "VU"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumWF) = "WF"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumWS) = "WS"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumXK) = "XK"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumYE) = "YE"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumYT) = "YT"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZA) = "ZA"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZM) = "ZM"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZW) = "ZW"
  toJSON (Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZZ) = "ZZ"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingAddressCollection'AllowedCountries' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "AC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAC
            | val GHC.Classes.== "AD" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAD
            | val GHC.Classes.== "AE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAE
            | val GHC.Classes.== "AF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAF
            | val GHC.Classes.== "AG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAG
            | val GHC.Classes.== "AI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAI
            | val GHC.Classes.== "AL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAL
            | val GHC.Classes.== "AM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAM
            | val GHC.Classes.== "AO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAO
            | val GHC.Classes.== "AQ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAQ
            | val GHC.Classes.== "AR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAR
            | val GHC.Classes.== "AT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAT
            | val GHC.Classes.== "AU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAU
            | val GHC.Classes.== "AW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAW
            | val GHC.Classes.== "AX" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAX
            | val GHC.Classes.== "AZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumAZ
            | val GHC.Classes.== "BA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBA
            | val GHC.Classes.== "BB" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBB
            | val GHC.Classes.== "BD" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBD
            | val GHC.Classes.== "BE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBE
            | val GHC.Classes.== "BF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBF
            | val GHC.Classes.== "BG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBG
            | val GHC.Classes.== "BH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBH
            | val GHC.Classes.== "BI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBI
            | val GHC.Classes.== "BJ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBJ
            | val GHC.Classes.== "BL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBL
            | val GHC.Classes.== "BM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBM
            | val GHC.Classes.== "BN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBN
            | val GHC.Classes.== "BO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBO
            | val GHC.Classes.== "BQ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBQ
            | val GHC.Classes.== "BR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBR
            | val GHC.Classes.== "BS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBS
            | val GHC.Classes.== "BT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBT
            | val GHC.Classes.== "BV" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBV
            | val GHC.Classes.== "BW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBW
            | val GHC.Classes.== "BY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBY
            | val GHC.Classes.== "BZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumBZ
            | val GHC.Classes.== "CA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCA
            | val GHC.Classes.== "CD" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCD
            | val GHC.Classes.== "CF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCF
            | val GHC.Classes.== "CG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCG
            | val GHC.Classes.== "CH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCH
            | val GHC.Classes.== "CI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCI
            | val GHC.Classes.== "CK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCK
            | val GHC.Classes.== "CL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCL
            | val GHC.Classes.== "CM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCM
            | val GHC.Classes.== "CN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCN
            | val GHC.Classes.== "CO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCO
            | val GHC.Classes.== "CR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCR
            | val GHC.Classes.== "CV" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCV
            | val GHC.Classes.== "CW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCW
            | val GHC.Classes.== "CY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCY
            | val GHC.Classes.== "CZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumCZ
            | val GHC.Classes.== "DE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDE
            | val GHC.Classes.== "DJ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDJ
            | val GHC.Classes.== "DK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDK
            | val GHC.Classes.== "DM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDM
            | val GHC.Classes.== "DO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDO
            | val GHC.Classes.== "DZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumDZ
            | val GHC.Classes.== "EC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEC
            | val GHC.Classes.== "EE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEE
            | val GHC.Classes.== "EG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEG
            | val GHC.Classes.== "EH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumEH
            | val GHC.Classes.== "ER" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumER
            | val GHC.Classes.== "ES" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumES
            | val GHC.Classes.== "ET" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumET
            | val GHC.Classes.== "FI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFI
            | val GHC.Classes.== "FJ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFJ
            | val GHC.Classes.== "FK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFK
            | val GHC.Classes.== "FO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFO
            | val GHC.Classes.== "FR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumFR
            | val GHC.Classes.== "GA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGA
            | val GHC.Classes.== "GB" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGB
            | val GHC.Classes.== "GD" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGD
            | val GHC.Classes.== "GE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGE
            | val GHC.Classes.== "GF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGF
            | val GHC.Classes.== "GG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGG
            | val GHC.Classes.== "GH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGH
            | val GHC.Classes.== "GI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGI
            | val GHC.Classes.== "GL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGL
            | val GHC.Classes.== "GM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGM
            | val GHC.Classes.== "GN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGN
            | val GHC.Classes.== "GP" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGP
            | val GHC.Classes.== "GQ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGQ
            | val GHC.Classes.== "GR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGR
            | val GHC.Classes.== "GS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGS
            | val GHC.Classes.== "GT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGT
            | val GHC.Classes.== "GU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGU
            | val GHC.Classes.== "GW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGW
            | val GHC.Classes.== "GY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumGY
            | val GHC.Classes.== "HK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHK
            | val GHC.Classes.== "HN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHN
            | val GHC.Classes.== "HR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHR
            | val GHC.Classes.== "HT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHT
            | val GHC.Classes.== "HU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumHU
            | val GHC.Classes.== "ID" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumID
            | val GHC.Classes.== "IE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIE
            | val GHC.Classes.== "IL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIL
            | val GHC.Classes.== "IM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIM
            | val GHC.Classes.== "IN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIN
            | val GHC.Classes.== "IO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIO
            | val GHC.Classes.== "IQ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIQ
            | val GHC.Classes.== "IS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIS
            | val GHC.Classes.== "IT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumIT
            | val GHC.Classes.== "JE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJE
            | val GHC.Classes.== "JM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJM
            | val GHC.Classes.== "JO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJO
            | val GHC.Classes.== "JP" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumJP
            | val GHC.Classes.== "KE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKE
            | val GHC.Classes.== "KG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKG
            | val GHC.Classes.== "KH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKH
            | val GHC.Classes.== "KI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKI
            | val GHC.Classes.== "KM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKM
            | val GHC.Classes.== "KN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKN
            | val GHC.Classes.== "KR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKR
            | val GHC.Classes.== "KW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKW
            | val GHC.Classes.== "KY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKY
            | val GHC.Classes.== "KZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumKZ
            | val GHC.Classes.== "LA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLA
            | val GHC.Classes.== "LB" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLB
            | val GHC.Classes.== "LC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLC
            | val GHC.Classes.== "LI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLI
            | val GHC.Classes.== "LK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLK
            | val GHC.Classes.== "LR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLR
            | val GHC.Classes.== "LS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLS
            | val GHC.Classes.== "LT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLT
            | val GHC.Classes.== "LU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLU
            | val GHC.Classes.== "LV" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLV
            | val GHC.Classes.== "LY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumLY
            | val GHC.Classes.== "MA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMA
            | val GHC.Classes.== "MC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMC
            | val GHC.Classes.== "MD" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMD
            | val GHC.Classes.== "ME" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumME
            | val GHC.Classes.== "MF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMF
            | val GHC.Classes.== "MG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMG
            | val GHC.Classes.== "MK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMK
            | val GHC.Classes.== "ML" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumML
            | val GHC.Classes.== "MM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMM
            | val GHC.Classes.== "MN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMN
            | val GHC.Classes.== "MO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMO
            | val GHC.Classes.== "MQ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMQ
            | val GHC.Classes.== "MR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMR
            | val GHC.Classes.== "MS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMS
            | val GHC.Classes.== "MT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMT
            | val GHC.Classes.== "MU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMU
            | val GHC.Classes.== "MV" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMV
            | val GHC.Classes.== "MW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMW
            | val GHC.Classes.== "MX" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMX
            | val GHC.Classes.== "MY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMY
            | val GHC.Classes.== "MZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumMZ
            | val GHC.Classes.== "NA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNA
            | val GHC.Classes.== "NC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNC
            | val GHC.Classes.== "NE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNE
            | val GHC.Classes.== "NG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNG
            | val GHC.Classes.== "NI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNI
            | val GHC.Classes.== "NL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNL
            | val GHC.Classes.== "NO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNO
            | val GHC.Classes.== "NP" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNP
            | val GHC.Classes.== "NR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNR
            | val GHC.Classes.== "NU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNU
            | val GHC.Classes.== "NZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumNZ
            | val GHC.Classes.== "OM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumOM
            | val GHC.Classes.== "PA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPA
            | val GHC.Classes.== "PE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPE
            | val GHC.Classes.== "PF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPF
            | val GHC.Classes.== "PG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPG
            | val GHC.Classes.== "PH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPH
            | val GHC.Classes.== "PK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPK
            | val GHC.Classes.== "PL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPL
            | val GHC.Classes.== "PM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPM
            | val GHC.Classes.== "PN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPN
            | val GHC.Classes.== "PR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPR
            | val GHC.Classes.== "PS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPS
            | val GHC.Classes.== "PT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPT
            | val GHC.Classes.== "PY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumPY
            | val GHC.Classes.== "QA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumQA
            | val GHC.Classes.== "RE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRE
            | val GHC.Classes.== "RO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRO
            | val GHC.Classes.== "RS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRS
            | val GHC.Classes.== "RU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRU
            | val GHC.Classes.== "RW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumRW
            | val GHC.Classes.== "SA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSA
            | val GHC.Classes.== "SB" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSB
            | val GHC.Classes.== "SC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSC
            | val GHC.Classes.== "SE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSE
            | val GHC.Classes.== "SG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSG
            | val GHC.Classes.== "SH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSH
            | val GHC.Classes.== "SI" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSI
            | val GHC.Classes.== "SJ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSJ
            | val GHC.Classes.== "SK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSK
            | val GHC.Classes.== "SL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSL
            | val GHC.Classes.== "SM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSM
            | val GHC.Classes.== "SN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSN
            | val GHC.Classes.== "SO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSO
            | val GHC.Classes.== "SR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSR
            | val GHC.Classes.== "SS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSS
            | val GHC.Classes.== "ST" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumST
            | val GHC.Classes.== "SV" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSV
            | val GHC.Classes.== "SX" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSX
            | val GHC.Classes.== "SZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumSZ
            | val GHC.Classes.== "TA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTA
            | val GHC.Classes.== "TC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTC
            | val GHC.Classes.== "TD" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTD
            | val GHC.Classes.== "TF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTF
            | val GHC.Classes.== "TG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTG
            | val GHC.Classes.== "TH" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTH
            | val GHC.Classes.== "TJ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTJ
            | val GHC.Classes.== "TK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTK
            | val GHC.Classes.== "TL" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTL
            | val GHC.Classes.== "TM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTM
            | val GHC.Classes.== "TN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTN
            | val GHC.Classes.== "TO" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTO
            | val GHC.Classes.== "TR" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTR
            | val GHC.Classes.== "TT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTT
            | val GHC.Classes.== "TV" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTV
            | val GHC.Classes.== "TW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTW
            | val GHC.Classes.== "TZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumTZ
            | val GHC.Classes.== "UA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUA
            | val GHC.Classes.== "UG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUG
            | val GHC.Classes.== "US" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUS
            | val GHC.Classes.== "UY" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUY
            | val GHC.Classes.== "UZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumUZ
            | val GHC.Classes.== "VA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVA
            | val GHC.Classes.== "VC" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVC
            | val GHC.Classes.== "VE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVE
            | val GHC.Classes.== "VG" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVG
            | val GHC.Classes.== "VN" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVN
            | val GHC.Classes.== "VU" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumVU
            | val GHC.Classes.== "WF" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumWF
            | val GHC.Classes.== "WS" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumWS
            | val GHC.Classes.== "XK" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumXK
            | val GHC.Classes.== "YE" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumYE
            | val GHC.Classes.== "YT" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumYT
            | val GHC.Classes.== "ZA" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZA
            | val GHC.Classes.== "ZM" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZM
            | val GHC.Classes.== "ZW" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZW
            | val GHC.Classes.== "ZZ" -> Checkout'sessionShippingAddressCollection'AllowedCountries'EnumZZ
            | GHC.Base.otherwise -> Checkout'sessionShippingAddressCollection'AllowedCountries'Other val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.submit_type@ in the specification.
--
-- Describes the type of transaction being performed by Checkout in order to customize
-- relevant text on the page, such as the submit button. \`submit_type\` can only be
-- specified on Checkout Sessions in \`payment\` mode, but not Checkout Sessions
-- in \`subscription\` or \`setup\` mode.
data Checkout'sessionSubmitType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionSubmitType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionSubmitType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionSubmitType'EnumAuto
  | -- | Represents the JSON value @"book"@
    Checkout'sessionSubmitType'EnumBook
  | -- | Represents the JSON value @"donate"@
    Checkout'sessionSubmitType'EnumDonate
  | -- | Represents the JSON value @"pay"@
    Checkout'sessionSubmitType'EnumPay
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionSubmitType' where
  toJSON (Checkout'sessionSubmitType'Other val) = val
  toJSON (Checkout'sessionSubmitType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionSubmitType'EnumAuto) = "auto"
  toJSON (Checkout'sessionSubmitType'EnumBook) = "book"
  toJSON (Checkout'sessionSubmitType'EnumDonate) = "donate"
  toJSON (Checkout'sessionSubmitType'EnumPay) = "pay"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionSubmitType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionSubmitType'EnumAuto
            | val GHC.Classes.== "book" -> Checkout'sessionSubmitType'EnumBook
            | val GHC.Classes.== "donate" -> Checkout'sessionSubmitType'EnumDonate
            | val GHC.Classes.== "pay" -> Checkout'sessionSubmitType'EnumPay
            | GHC.Base.otherwise -> Checkout'sessionSubmitType'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.subscription.anyOf@ in the specification.
--
-- The ID of the subscription for Checkout Sessions in \`subscription\` mode.
data Checkout'sessionSubscription'Variants
  = Checkout'sessionSubscription'Text Data.Text.Internal.Text
  | Checkout'sessionSubscription'Subscription Subscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionSubscription'Variants where
  toJSON (Checkout'sessionSubscription'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionSubscription'Subscription a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionSubscription'Variants where
  parseJSON val = case (Checkout'sessionSubscription'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionSubscription'Subscription Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.total_details.anyOf@ in the specification.
--
-- Tax and discount details for the computed total amount.
data Checkout'sessionTotalDetails' = Checkout'sessionTotalDetails'
  { -- | amount_discount: This is the sum of all the line item discounts.
    checkout'sessionTotalDetails'AmountDiscount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_shipping: This is the sum of all the line item shipping amounts.
    checkout'sessionTotalDetails'AmountShipping :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_tax: This is the sum of all the line item tax amounts.
    checkout'sessionTotalDetails'AmountTax :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | breakdown:
    checkout'sessionTotalDetails'Breakdown :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionTotalDetails' where
  toJSON obj = Data.Aeson.Types.Internal.object ("amount_discount" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'AmountDiscount obj : "amount_shipping" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'AmountShipping obj : "amount_tax" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'AmountTax obj : "breakdown" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'Breakdown obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amount_discount" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'AmountDiscount obj) GHC.Base.<> (("amount_shipping" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'AmountShipping obj) GHC.Base.<> (("amount_tax" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'AmountTax obj) GHC.Base.<> ("breakdown" Data.Aeson.Types.ToJSON..= checkout'sessionTotalDetails'Breakdown obj))))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionTotalDetails' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionTotalDetails'" (\obj -> (((GHC.Base.pure Checkout'sessionTotalDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount_discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount_shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "breakdown"))

-- | Create a new 'Checkout'sessionTotalDetails'' with all required fields.
mkCheckout'sessionTotalDetails' :: Checkout'sessionTotalDetails'
mkCheckout'sessionTotalDetails' =
  Checkout'sessionTotalDetails'
    { checkout'sessionTotalDetails'AmountDiscount = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails'AmountShipping = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails'AmountTax = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails'Breakdown = GHC.Maybe.Nothing
    }
