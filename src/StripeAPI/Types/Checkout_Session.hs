{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Checkout_Session
module StripeAPI.Types.Checkout_Session where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Address
import {-# SOURCE #-} StripeAPI.Types.CheckoutAcssDebitPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutAffirmPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutAfterpayClearpayPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutAlipayPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutAuBecsDebitPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutBacsDebitPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutBancontactPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutBoletoPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutCardPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutCashappPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutCustomerBalancePaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutEpsPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutFpxPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutGiropayPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutGrabPayPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutIdealPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutKlarnaPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutKonbiniPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutLinkPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutOxxoPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutP24PaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutPaynowPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutPaypalPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutPixPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutSepaDebitPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutSessionPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutSofortPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.CheckoutUsBankAccountPaymentMethodOptions
import {-# SOURCE #-} StripeAPI.Types.Customer
import {-# SOURCE #-} StripeAPI.Types.DeletedCustomer
import {-# SOURCE #-} StripeAPI.Types.Invoice
import {-# SOURCE #-} StripeAPI.Types.Item
import {-# SOURCE #-} StripeAPI.Types.LineItemsTaxAmount
import {-# SOURCE #-} StripeAPI.Types.PaymentIntent
import {-# SOURCE #-} StripeAPI.Types.PaymentLink
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodConfigBizPaymentMethodConfigurationDetails
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionAfterExpiration
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionAfterExpirationRecovery
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionAutomaticTax
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionConsent
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionConsentCollection
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionCurrencyConversion
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionCustomFields
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionCustomText
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionCustomerDetails
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionInvoiceCreation
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionInvoiceSettings
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionPaymentMethodReuseAgreement
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionPhoneNumberCollection
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionShippingAddressCollection
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionShippingCost
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionShippingOption
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTaxId
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTaxIdCollection
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTotalDetails
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown
import {-# SOURCE #-} StripeAPI.Types.SetupIntent
import {-# SOURCE #-} StripeAPI.Types.Shipping
import {-# SOURCE #-} StripeAPI.Types.ShippingRate
import {-# SOURCE #-} StripeAPI.Types.Subscription
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.checkout.session@ in the specification.
--
-- A Checkout Session represents your customer\'s session as they pay for
-- one-time purchases or subscriptions through [Checkout](https:\/\/stripe.com\/docs\/payments\/checkout)
-- or [Payment Links](https:\/\/stripe.com\/docs\/payments\/payment-links). We recommend creating a
-- new Session each time your customer attempts to pay.
--
-- Once payment is successful, the Checkout Session will contain a reference
-- to the [Customer](https:\/\/stripe.com\/docs\/api\/customers), and either the successful
-- [PaymentIntent](https:\/\/stripe.com\/docs\/api\/payment_intents) or an active
-- [Subscription](https:\/\/stripe.com\/docs\/api\/subscriptions).
--
-- You can create a Checkout Session on your server and redirect to its URL
-- to begin Checkout.
--
-- Related guide: [Checkout quickstart](https:\/\/stripe.com\/docs\/checkout\/quickstart)
data Checkout'session = Checkout'session
  { -- | after_expiration: When set, provides configuration for actions to take if this Checkout Session expires.
    checkout'sessionAfterExpiration :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionAfterExpiration'NonNullable)),
    -- | allow_promotion_codes: Enables user redeemable promotion codes.
    checkout'sessionAllowPromotionCodes :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | amount_subtotal: Total of all items before discounts or taxes are applied.
    checkout'sessionAmountSubtotal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | amount_total: Total of all items after discounts and taxes are applied.
    checkout'sessionAmountTotal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | automatic_tax:
    checkout'sessionAutomaticTax :: PaymentPagesCheckoutSessionAutomaticTax,
    -- | billing_address_collection: Describes whether Checkout should collect the customer\'s billing address.
    checkout'sessionBillingAddressCollection :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionBillingAddressCollection'NonNullable)),
    -- | cancel_url: If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCancelUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | client_reference_id: A unique string to reference the Checkout Session. This can be a
    -- customer ID, a cart ID, or similar, and can be used to reconcile the
    -- Session with your internal systems.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionClientReferenceId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | client_secret: Client secret to be used when initializing Stripe.js embedded checkout.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionClientSecret :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | consent: Results of \`consent_collection\` for this session.
    checkout'sessionConsent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsent'NonNullable)),
    -- | consent_collection: When set, provides configuration for the Checkout Session to gather active consent from customers.
    checkout'sessionConsentCollection :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsentCollection'NonNullable)),
    -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    checkout'sessionCreated :: GHC.Types.Int,
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    checkout'sessionCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | currency_conversion: Currency conversion details for automatic currency conversion sessions
    checkout'sessionCurrencyConversion :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionCurrencyConversion'NonNullable)),
    -- | custom_fields: Collect additional information from your customer using custom fields. Up to 2 fields are supported.
    checkout'sessionCustomFields :: ([PaymentPagesCheckoutSessionCustomFields]),
    -- | custom_text:
    checkout'sessionCustomText :: PaymentPagesCheckoutSessionCustomText,
    -- | customer: The ID of the customer for this Session.
    -- For Checkout Sessions in \`subscription\` mode or Checkout Sessions with \`customer_creation\` set as \`always\` in \`payment\` mode, Checkout
    -- will create a new customer object based on information provided
    -- during the payment flow unless an existing customer was provided when
    -- the Session was created.
    checkout'sessionCustomer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionCustomer'NonNullableVariants)),
    -- | customer_creation: Configure whether a Checkout Session creates a Customer when the Checkout Session completes.
    checkout'sessionCustomerCreation :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionCustomerCreation'NonNullable)),
    -- | customer_details: The customer details including the customer\'s tax exempt status and the customer\'s tax IDs. Only the customer\'s email is present on Sessions in \`setup\` mode.
    checkout'sessionCustomerDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionCustomerDetails'NonNullable)),
    -- | customer_email: If provided, this value will be used when the Customer object is created.
    -- If not provided, customers will be asked to enter their email address.
    -- Use this parameter to prefill customer data if you already have an email
    -- on file. To access information about the customer once the payment flow is
    -- complete, use the \`customer\` attribute.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | expires_at: The timestamp at which the Checkout Session will expire.
    checkout'sessionExpiresAt :: GHC.Types.Int,
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionId :: Data.Text.Internal.Text,
    -- | invoice: ID of the invoice created by the Checkout Session, if it exists.
    checkout'sessionInvoice :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionInvoice'NonNullableVariants)),
    -- | invoice_creation: Details on the state of invoice creation for the Checkout Session.
    checkout'sessionInvoiceCreation :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionInvoiceCreation'NonNullable)),
    -- | line_items: The line items purchased by the customer.
    checkout'sessionLineItems :: (GHC.Maybe.Maybe Checkout'sessionLineItems'),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    checkout'sessionLivemode :: GHC.Types.Bool,
    -- | locale: The IETF language tag of the locale Checkout is displayed in. If blank or \`auto\`, the browser\'s locale is used.
    checkout'sessionLocale :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionLocale'NonNullable)),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    checkout'sessionMetadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object)),
    -- | mode: The mode of the Checkout Session.
    checkout'sessionMode :: Checkout'sessionMode',
    -- | payment_intent: The ID of the PaymentIntent for Checkout Sessions in \`payment\` mode.
    checkout'sessionPaymentIntent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionPaymentIntent'NonNullableVariants)),
    -- | payment_link: The ID of the Payment Link that created this Session.
    checkout'sessionPaymentLink :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionPaymentLink'NonNullableVariants)),
    -- | payment_method_collection: Configure whether a Checkout Session should collect a payment method.
    checkout'sessionPaymentMethodCollection :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionPaymentMethodCollection'NonNullable)),
    -- | payment_method_configuration_details: Information about the payment method configuration used for this Checkout session if using dynamic payment methods.
    checkout'sessionPaymentMethodConfigurationDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionPaymentMethodConfigurationDetails'NonNullable)),
    -- | payment_method_options: Payment-method-specific configuration for the PaymentIntent or SetupIntent of this CheckoutSession.
    checkout'sessionPaymentMethodOptions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionPaymentMethodOptions'NonNullable)),
    -- | payment_method_types: A list of the types of payment methods (e.g. card) this Checkout
    -- Session is allowed to accept.
    checkout'sessionPaymentMethodTypes :: ([Data.Text.Internal.Text]),
    -- | payment_status: The payment status of the Checkout Session, one of \`paid\`, \`unpaid\`, or \`no_payment_required\`.
    -- You can use this value to decide when to fulfill your customer\'s order.
    checkout'sessionPaymentStatus :: Checkout'sessionPaymentStatus',
    -- | phone_number_collection:
    checkout'sessionPhoneNumberCollection :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionPhoneNumberCollection),
    -- | recovered_from: The ID of the original expired Checkout Session that triggered the recovery flow.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionRecoveredFrom :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | redirect_on_completion: Applies to Checkout Sessions with \`ui_mode: embedded\`. By default, Stripe will always redirect to your return_url after a successful confirmation. If you set \`redirect_on_completion: \'if_required\'\`, then we will only redirect if your user chooses a redirect-based payment method.
    checkout'sessionRedirectOnCompletion :: (GHC.Maybe.Maybe Checkout'sessionRedirectOnCompletion'),
    -- | return_url: Applies to Checkout Sessions with \`ui_mode: embedded\`. The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method\'s app or site.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionReturnUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | setup_intent: The ID of the SetupIntent for Checkout Sessions in \`setup\` mode.
    checkout'sessionSetupIntent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionSetupIntent'NonNullableVariants)),
    -- | shipping_address_collection: When set, provides configuration for Checkout to collect a shipping address from a customer.
    checkout'sessionShippingAddressCollection :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionShippingAddressCollection'NonNullable)),
    -- | shipping_cost: The details of the customer cost of shipping, including the customer chosen ShippingRate.
    checkout'sessionShippingCost :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionShippingCost'NonNullable)),
    -- | shipping_details: Shipping information for this Checkout Session.
    checkout'sessionShippingDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionShippingDetails'NonNullable)),
    -- | shipping_options: The shipping rate options applied to this Session.
    checkout'sessionShippingOptions :: ([PaymentPagesCheckoutSessionShippingOption]),
    -- | status: The status of the Checkout Session, one of \`open\`, \`complete\`, or \`expired\`.
    checkout'sessionStatus :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionStatus'NonNullable)),
    -- | submit_type: Describes the type of transaction being performed by Checkout in order to customize
    -- relevant text on the page, such as the submit button. \`submit_type\` can only be
    -- specified on Checkout Sessions in \`payment\` mode, but not Checkout Sessions
    -- in \`subscription\` or \`setup\` mode. Possible values are \`auto\`, \`pay\`, \`book\`, \`donate\`. If blank or \`auto\`, \`pay\` is used.
    checkout'sessionSubmitType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionSubmitType'NonNullable)),
    -- | subscription: The ID of the subscription for Checkout Sessions in \`subscription\` mode.
    checkout'sessionSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionSubscription'NonNullableVariants)),
    -- | success_url: The URL the customer will be directed to after the payment or
    -- subscription creation is successful.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionSuccessUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | tax_id_collection:
    checkout'sessionTaxIdCollection :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionTaxIdCollection),
    -- | total_details: Tax and discount details for the computed total amount.
    checkout'sessionTotalDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionTotalDetails'NonNullable)),
    -- | ui_mode: The UI mode of the Session. Can be \`hosted\` (default) or \`embedded\`.
    checkout'sessionUiMode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionUiMode'NonNullable)),
    -- | url: The URL to the Checkout Session. Redirect customers to this URL to take them to Checkout. If you’re using [Custom Domains](https:\/\/stripe.com\/docs\/payments\/checkout\/custom-domains), the URL will use your subdomain. Otherwise, it’ll use \`checkout.stripe.com.\`
    -- This value is only present when the session is active.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'session where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("after_expiration" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_promotion_codes" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAllowPromotionCodes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAmountTotal obj) : ["automatic_tax" Data.Aeson.Types.ToJSON..= checkout'sessionAutomaticTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_address_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionBillingAddressCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCancelUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_reference_id" Data.Aeson.Types.ToJSON..=)) (checkout'sessionClientReferenceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (checkout'sessionClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consent_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection obj) : ["created" Data.Aeson.Types.ToJSON..= checkout'sessionCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency_conversion" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion obj) : ["custom_fields" Data.Aeson.Types.ToJSON..= checkout'sessionCustomFields obj] : ["custom_text" Data.Aeson.Types.ToJSON..= checkout'sessionCustomText obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_creation" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerCreation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerEmail obj) : ["expires_at" Data.Aeson.Types.ToJSON..= checkout'sessionExpiresAt obj] : ["id" Data.Aeson.Types.ToJSON..= checkout'sessionId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_creation" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoiceCreation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (checkout'sessionLineItems obj) : ["livemode" Data.Aeson.Types.ToJSON..= checkout'sessionLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("locale" Data.Aeson.Types.ToJSON..=)) (checkout'sessionLocale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (checkout'sessionMetadata obj) : ["mode" Data.Aeson.Types.ToJSON..= checkout'sessionMode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_link" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_configuration_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodConfigurationDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions obj) : ["payment_method_types" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodTypes obj] : ["payment_status" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentStatus obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone_number_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPhoneNumberCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recovered_from" Data.Aeson.Types.ToJSON..=)) (checkout'sessionRecoveredFrom obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect_on_completion" Data.Aeson.Types.ToJSON..=)) (checkout'sessionRedirectOnCompletion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionReturnUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_intent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSetupIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingAddressCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails obj) : ["shipping_options" Data.Aeson.Types.ToJSON..= checkout'sessionShippingOptions obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (checkout'sessionStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit_type" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSubmitType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("success_url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSuccessUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTaxIdCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ui_mode" Data.Aeson.Types.ToJSON..=)) (checkout'sessionUiMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionUrl obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "checkout.session"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("after_expiration" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_promotion_codes" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAllowPromotionCodes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAmountTotal obj) : ["automatic_tax" Data.Aeson.Types.ToJSON..= checkout'sessionAutomaticTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_address_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionBillingAddressCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCancelUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_reference_id" Data.Aeson.Types.ToJSON..=)) (checkout'sessionClientReferenceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (checkout'sessionClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("consent_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection obj) : ["created" Data.Aeson.Types.ToJSON..= checkout'sessionCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency_conversion" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion obj) : ["custom_fields" Data.Aeson.Types.ToJSON..= checkout'sessionCustomFields obj] : ["custom_text" Data.Aeson.Types.ToJSON..= checkout'sessionCustomText obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_creation" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerCreation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerEmail obj) : ["expires_at" Data.Aeson.Types.ToJSON..= checkout'sessionExpiresAt obj] : ["id" Data.Aeson.Types.ToJSON..= checkout'sessionId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_creation" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoiceCreation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (checkout'sessionLineItems obj) : ["livemode" Data.Aeson.Types.ToJSON..= checkout'sessionLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("locale" Data.Aeson.Types.ToJSON..=)) (checkout'sessionLocale obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (checkout'sessionMetadata obj) : ["mode" Data.Aeson.Types.ToJSON..= checkout'sessionMode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_link" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_configuration_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodConfigurationDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions obj) : ["payment_method_types" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentMethodTypes obj] : ["payment_status" Data.Aeson.Types.ToJSON..= checkout'sessionPaymentStatus obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone_number_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPhoneNumberCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recovered_from" Data.Aeson.Types.ToJSON..=)) (checkout'sessionRecoveredFrom obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect_on_completion" Data.Aeson.Types.ToJSON..=)) (checkout'sessionRedirectOnCompletion obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionReturnUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_intent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSetupIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingAddressCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails obj) : ["shipping_options" Data.Aeson.Types.ToJSON..= checkout'sessionShippingOptions obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (checkout'sessionStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit_type" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSubmitType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("success_url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionSuccessUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id_collection" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTaxIdCollection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_details" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ui_mode" Data.Aeson.Types.ToJSON..=)) (checkout'sessionUiMode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionUrl obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "checkout.session"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'session where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'session" (\obj -> ((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure Checkout'session GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "after_expiration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_promotion_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "automatic_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_address_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancel_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_reference_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "consent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "consent_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency_conversion")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "custom_text")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_creation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_creation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_configuration_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_method_types")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone_number_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "recovered_from")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "redirect_on_completion")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "setup_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_address_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_cost")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "shipping_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "submit_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "success_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_id_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "total_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ui_mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))

-- | Create a new 'Checkout'session' with all required fields.
mkCheckout'session ::
  -- | 'checkout'sessionAutomaticTax'
  PaymentPagesCheckoutSessionAutomaticTax ->
  -- | 'checkout'sessionCreated'
  GHC.Types.Int ->
  -- | 'checkout'sessionCustomFields'
  [PaymentPagesCheckoutSessionCustomFields] ->
  -- | 'checkout'sessionCustomText'
  PaymentPagesCheckoutSessionCustomText ->
  -- | 'checkout'sessionExpiresAt'
  GHC.Types.Int ->
  -- | 'checkout'sessionId'
  Data.Text.Internal.Text ->
  -- | 'checkout'sessionLivemode'
  GHC.Types.Bool ->
  -- | 'checkout'sessionMode'
  Checkout'sessionMode' ->
  -- | 'checkout'sessionPaymentMethodTypes'
  [Data.Text.Internal.Text] ->
  -- | 'checkout'sessionPaymentStatus'
  Checkout'sessionPaymentStatus' ->
  -- | 'checkout'sessionShippingOptions'
  [PaymentPagesCheckoutSessionShippingOption] ->
  Checkout'session
mkCheckout'session checkout'sessionAutomaticTax checkout'sessionCreated checkout'sessionCustomFields checkout'sessionCustomText checkout'sessionExpiresAt checkout'sessionId checkout'sessionLivemode checkout'sessionMode checkout'sessionPaymentMethodTypes checkout'sessionPaymentStatus checkout'sessionShippingOptions =
  Checkout'session
    { checkout'sessionAfterExpiration = GHC.Maybe.Nothing,
      checkout'sessionAllowPromotionCodes = GHC.Maybe.Nothing,
      checkout'sessionAmountSubtotal = GHC.Maybe.Nothing,
      checkout'sessionAmountTotal = GHC.Maybe.Nothing,
      checkout'sessionAutomaticTax = checkout'sessionAutomaticTax,
      checkout'sessionBillingAddressCollection = GHC.Maybe.Nothing,
      checkout'sessionCancelUrl = GHC.Maybe.Nothing,
      checkout'sessionClientReferenceId = GHC.Maybe.Nothing,
      checkout'sessionClientSecret = GHC.Maybe.Nothing,
      checkout'sessionConsent = GHC.Maybe.Nothing,
      checkout'sessionConsentCollection = GHC.Maybe.Nothing,
      checkout'sessionCreated = checkout'sessionCreated,
      checkout'sessionCurrency = GHC.Maybe.Nothing,
      checkout'sessionCurrencyConversion = GHC.Maybe.Nothing,
      checkout'sessionCustomFields = checkout'sessionCustomFields,
      checkout'sessionCustomText = checkout'sessionCustomText,
      checkout'sessionCustomer = GHC.Maybe.Nothing,
      checkout'sessionCustomerCreation = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails = GHC.Maybe.Nothing,
      checkout'sessionCustomerEmail = GHC.Maybe.Nothing,
      checkout'sessionExpiresAt = checkout'sessionExpiresAt,
      checkout'sessionId = checkout'sessionId,
      checkout'sessionInvoice = GHC.Maybe.Nothing,
      checkout'sessionInvoiceCreation = GHC.Maybe.Nothing,
      checkout'sessionLineItems = GHC.Maybe.Nothing,
      checkout'sessionLivemode = checkout'sessionLivemode,
      checkout'sessionLocale = GHC.Maybe.Nothing,
      checkout'sessionMetadata = GHC.Maybe.Nothing,
      checkout'sessionMode = checkout'sessionMode,
      checkout'sessionPaymentIntent = GHC.Maybe.Nothing,
      checkout'sessionPaymentLink = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodCollection = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodConfigurationDetails = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodTypes = checkout'sessionPaymentMethodTypes,
      checkout'sessionPaymentStatus = checkout'sessionPaymentStatus,
      checkout'sessionPhoneNumberCollection = GHC.Maybe.Nothing,
      checkout'sessionRecoveredFrom = GHC.Maybe.Nothing,
      checkout'sessionRedirectOnCompletion = GHC.Maybe.Nothing,
      checkout'sessionReturnUrl = GHC.Maybe.Nothing,
      checkout'sessionSetupIntent = GHC.Maybe.Nothing,
      checkout'sessionShippingAddressCollection = GHC.Maybe.Nothing,
      checkout'sessionShippingCost = GHC.Maybe.Nothing,
      checkout'sessionShippingDetails = GHC.Maybe.Nothing,
      checkout'sessionShippingOptions = checkout'sessionShippingOptions,
      checkout'sessionStatus = GHC.Maybe.Nothing,
      checkout'sessionSubmitType = GHC.Maybe.Nothing,
      checkout'sessionSubscription = GHC.Maybe.Nothing,
      checkout'sessionSuccessUrl = GHC.Maybe.Nothing,
      checkout'sessionTaxIdCollection = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails = GHC.Maybe.Nothing,
      checkout'sessionUiMode = GHC.Maybe.Nothing,
      checkout'sessionUrl = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.checkout.session.properties.after_expiration.anyOf@ in the specification.
--
-- When set, provides configuration for actions to take if this Checkout Session expires.
data Checkout'sessionAfterExpiration'NonNullable = Checkout'sessionAfterExpiration'NonNullable
  { -- | recovery: When set, configuration used to recover the Checkout Session on expiry.
    checkout'sessionAfterExpiration'NonNullableRecovery :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionAfterExpiration'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recovery" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recovery" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionAfterExpiration'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionAfterExpiration'NonNullable" (\obj -> GHC.Base.pure Checkout'sessionAfterExpiration'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "recovery"))

-- | Create a new 'Checkout'sessionAfterExpiration'NonNullable' with all required fields.
mkCheckout'sessionAfterExpiration'NonNullable :: Checkout'sessionAfterExpiration'NonNullable
mkCheckout'sessionAfterExpiration'NonNullable = Checkout'sessionAfterExpiration'NonNullable {checkout'sessionAfterExpiration'NonNullableRecovery = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.checkout.session.properties.after_expiration.anyOf.properties.recovery.anyOf@ in the specification.
--
-- When set, configuration used to recover the Checkout Session on expiry.
data Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable = Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable
  { -- | allow_promotion_codes: Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to \`false\`
    checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableAllowPromotionCodes :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enabled: If \`true\`, a recovery url will be generated to recover this Checkout Session if it
    -- expires before a transaction is completed. It will be attached to the
    -- Checkout Session object upon expiration.
    checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | expires_at: The timestamp at which the recovery URL will expire.
    checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableExpiresAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | url: URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_promotion_codes" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableAllowPromotionCodes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableUrl obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allow_promotion_codes" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableAllowPromotionCodes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableUrl obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable" (\obj -> (((GHC.Base.pure Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allow_promotion_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))

-- | Create a new 'Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable' with all required fields.
mkCheckout'sessionAfterExpiration'NonNullableRecovery'NonNullable :: Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable
mkCheckout'sessionAfterExpiration'NonNullableRecovery'NonNullable =
  Checkout'sessionAfterExpiration'NonNullableRecovery'NonNullable
    { checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableAllowPromotionCodes = GHC.Maybe.Nothing,
      checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableEnabled = GHC.Maybe.Nothing,
      checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableExpiresAt = GHC.Maybe.Nothing,
      checkout'sessionAfterExpiration'NonNullableRecovery'NonNullableUrl = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.billing_address_collection@ in the specification.
--
-- Describes whether Checkout should collect the customer\'s billing address.
data Checkout'sessionBillingAddressCollection'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionBillingAddressCollection'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionBillingAddressCollection'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionBillingAddressCollection'NonNullableEnumAuto
  | -- | Represents the JSON value @"required"@
    Checkout'sessionBillingAddressCollection'NonNullableEnumRequired
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionBillingAddressCollection'NonNullable where
  toJSON (Checkout'sessionBillingAddressCollection'NonNullableOther val) = val
  toJSON (Checkout'sessionBillingAddressCollection'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionBillingAddressCollection'NonNullableEnumAuto) = "auto"
  toJSON (Checkout'sessionBillingAddressCollection'NonNullableEnumRequired) = "required"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionBillingAddressCollection'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionBillingAddressCollection'NonNullableEnumAuto
            | val GHC.Classes.== "required" -> Checkout'sessionBillingAddressCollection'NonNullableEnumRequired
            | GHC.Base.otherwise -> Checkout'sessionBillingAddressCollection'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.consent.anyOf@ in the specification.
--
-- Results of \\\`consent_collection\\\` for this session.
data Checkout'sessionConsent'NonNullable = Checkout'sessionConsent'NonNullable
  { -- | promotions: If \`opt_in\`, the customer consents to receiving promotional communications
    -- from the merchant about this Checkout Session.
    checkout'sessionConsent'NonNullablePromotions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsent'NonNullablePromotions'NonNullable)),
    -- | terms_of_service: If \`accepted\`, the customer in this Checkout Session has agreed to the merchant\'s terms of service.
    checkout'sessionConsent'NonNullableTermsOfService :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsent'NonNullableTermsOfService'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsent'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotions" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsent'NonNullablePromotions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_of_service" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsent'NonNullableTermsOfService obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotions" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsent'NonNullablePromotions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_of_service" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsent'NonNullableTermsOfService obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsent'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionConsent'NonNullable" (\obj -> (GHC.Base.pure Checkout'sessionConsent'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "terms_of_service"))

-- | Create a new 'Checkout'sessionConsent'NonNullable' with all required fields.
mkCheckout'sessionConsent'NonNullable :: Checkout'sessionConsent'NonNullable
mkCheckout'sessionConsent'NonNullable =
  Checkout'sessionConsent'NonNullable
    { checkout'sessionConsent'NonNullablePromotions = GHC.Maybe.Nothing,
      checkout'sessionConsent'NonNullableTermsOfService = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.consent.anyOf.properties.promotions@ in the specification.
--
-- If \`opt_in\`, the customer consents to receiving promotional communications
-- from the merchant about this Checkout Session.
data Checkout'sessionConsent'NonNullablePromotions'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionConsent'NonNullablePromotions'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionConsent'NonNullablePromotions'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"opt_in"@
    Checkout'sessionConsent'NonNullablePromotions'NonNullableEnumOptIn
  | -- | Represents the JSON value @"opt_out"@
    Checkout'sessionConsent'NonNullablePromotions'NonNullableEnumOptOut
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsent'NonNullablePromotions'NonNullable where
  toJSON (Checkout'sessionConsent'NonNullablePromotions'NonNullableOther val) = val
  toJSON (Checkout'sessionConsent'NonNullablePromotions'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionConsent'NonNullablePromotions'NonNullableEnumOptIn) = "opt_in"
  toJSON (Checkout'sessionConsent'NonNullablePromotions'NonNullableEnumOptOut) = "opt_out"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsent'NonNullablePromotions'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "opt_in" -> Checkout'sessionConsent'NonNullablePromotions'NonNullableEnumOptIn
            | val GHC.Classes.== "opt_out" -> Checkout'sessionConsent'NonNullablePromotions'NonNullableEnumOptOut
            | GHC.Base.otherwise -> Checkout'sessionConsent'NonNullablePromotions'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.consent.anyOf.properties.terms_of_service@ in the specification.
--
-- If \`accepted\`, the customer in this Checkout Session has agreed to the merchant\'s terms of service.
data Checkout'sessionConsent'NonNullableTermsOfService'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionConsent'NonNullableTermsOfService'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionConsent'NonNullableTermsOfService'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"accepted"@
    Checkout'sessionConsent'NonNullableTermsOfService'NonNullableEnumAccepted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsent'NonNullableTermsOfService'NonNullable where
  toJSON (Checkout'sessionConsent'NonNullableTermsOfService'NonNullableOther val) = val
  toJSON (Checkout'sessionConsent'NonNullableTermsOfService'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionConsent'NonNullableTermsOfService'NonNullableEnumAccepted) = "accepted"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsent'NonNullableTermsOfService'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "accepted" -> Checkout'sessionConsent'NonNullableTermsOfService'NonNullableEnumAccepted
            | GHC.Base.otherwise -> Checkout'sessionConsent'NonNullableTermsOfService'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.consent_collection.anyOf@ in the specification.
--
-- When set, provides configuration for the Checkout Session to gather active consent from customers.
data Checkout'sessionConsentCollection'NonNullable = Checkout'sessionConsentCollection'NonNullable
  { -- | payment_method_reuse_agreement: If set to \`hidden\`, it will hide legal text related to the reuse of a payment method.
    checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable)),
    -- | promotions: If set to \`auto\`, enables the collection of customer consent for promotional communications. The Checkout
    -- Session will determine whether to display an option to opt into promotional communication
    -- from the merchant depending on the customer\'s locale. Only available to US merchants.
    checkout'sessionConsentCollection'NonNullablePromotions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsentCollection'NonNullablePromotions'NonNullable)),
    -- | terms_of_service: If set to \`required\`, it requires customers to accept the terms of service before being able to pay.
    checkout'sessionConsentCollection'NonNullableTermsOfService :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsentCollection'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_reuse_agreement" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotions" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullablePromotions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_of_service" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullableTermsOfService obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_reuse_agreement" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotions" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullablePromotions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("terms_of_service" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullableTermsOfService obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsentCollection'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionConsentCollection'NonNullable" (\obj -> ((GHC.Base.pure Checkout'sessionConsentCollection'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_reuse_agreement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "terms_of_service"))

-- | Create a new 'Checkout'sessionConsentCollection'NonNullable' with all required fields.
mkCheckout'sessionConsentCollection'NonNullable :: Checkout'sessionConsentCollection'NonNullable
mkCheckout'sessionConsentCollection'NonNullable =
  Checkout'sessionConsentCollection'NonNullable
    { checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement = GHC.Maybe.Nothing,
      checkout'sessionConsentCollection'NonNullablePromotions = GHC.Maybe.Nothing,
      checkout'sessionConsentCollection'NonNullableTermsOfService = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.checkout.session.properties.consent_collection.anyOf.properties.payment_method_reuse_agreement.anyOf@ in the specification.
--
-- If set to \\\`hidden\\\`, it will hide legal text related to the reuse of a payment method.
data Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable = Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable
  { -- | position: Determines the position and visibility of the payment method reuse agreement in the UI. When set to \`auto\`, Stripe\'s defaults will be used.
    --
    -- When set to \`hidden\`, the payment method reuse agreement text will always be hidden in the UI.
    checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition :: (GHC.Maybe.Maybe Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("position" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("position" Data.Aeson.Types.ToJSON..=)) (checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable" (\obj -> GHC.Base.pure Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "position"))

-- | Create a new 'Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable' with all required fields.
mkCheckout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable :: Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable
mkCheckout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable = Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullable {checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.consent_collection.anyOf.properties.payment_method_reuse_agreement.anyOf.properties.position@ in the specification.
--
-- Determines the position and visibility of the payment method reuse agreement in the UI. When set to \`auto\`, Stripe\'s defaults will be used.
--
-- When set to \`hidden\`, the payment method reuse agreement text will always be hidden in the UI.
data Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'EnumAuto
  | -- | Represents the JSON value @"hidden"@
    Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'EnumHidden
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition' where
  toJSON (Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'Other val) = val
  toJSON (Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'EnumAuto) = "auto"
  toJSON (Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'EnumHidden) = "hidden"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'EnumAuto
            | val GHC.Classes.== "hidden" -> Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'EnumHidden
            | GHC.Base.otherwise -> Checkout'sessionConsentCollection'NonNullablePaymentMethodReuseAgreement'NonNullablePosition'Other val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.consent_collection.anyOf.properties.promotions@ in the specification.
--
-- If set to \`auto\`, enables the collection of customer consent for promotional communications. The Checkout
-- Session will determine whether to display an option to opt into promotional communication
-- from the merchant depending on the customer\'s locale. Only available to US merchants.
data Checkout'sessionConsentCollection'NonNullablePromotions'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableEnumAuto
  | -- | Represents the JSON value @"none"@
    Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableEnumNone
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsentCollection'NonNullablePromotions'NonNullable where
  toJSON (Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableOther val) = val
  toJSON (Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableEnumAuto) = "auto"
  toJSON (Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableEnumNone) = "none"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsentCollection'NonNullablePromotions'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableEnumAuto
            | val GHC.Classes.== "none" -> Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableEnumNone
            | GHC.Base.otherwise -> Checkout'sessionConsentCollection'NonNullablePromotions'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.consent_collection.anyOf.properties.terms_of_service@ in the specification.
--
-- If set to \`required\`, it requires customers to accept the terms of service before being able to pay.
data Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableEnumNone
  | -- | Represents the JSON value @"required"@
    Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableEnumRequired
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullable where
  toJSON (Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableOther val) = val
  toJSON (Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableEnumNone) = "none"
  toJSON (Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableEnumRequired) = "required"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableEnumNone
            | val GHC.Classes.== "required" -> Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableEnumRequired
            | GHC.Base.otherwise -> Checkout'sessionConsentCollection'NonNullableTermsOfService'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.currency_conversion.anyOf@ in the specification.
--
-- Currency conversion details for automatic currency conversion sessions
data Checkout'sessionCurrencyConversion'NonNullable = Checkout'sessionCurrencyConversion'NonNullable
  { -- | amount_subtotal: Total of all items in source currency before discounts or taxes are applied.
    checkout'sessionCurrencyConversion'NonNullableAmountSubtotal :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_total: Total of all items in source currency after discounts and taxes are applied.
    checkout'sessionCurrencyConversion'NonNullableAmountTotal :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | fx_rate: Exchange rate used to convert source currency amounts to customer currency amounts
    checkout'sessionCurrencyConversion'NonNullableFxRate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | source_currency: Creation currency of the CheckoutSession before localization
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCurrencyConversion'NonNullableSourceCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCurrencyConversion'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableAmountTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fx_rate" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableFxRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_currency" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableSourceCurrency obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableAmountTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fx_rate" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableFxRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_currency" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCurrencyConversion'NonNullableSourceCurrency obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCurrencyConversion'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionCurrencyConversion'NonNullable" (\obj -> (((GHC.Base.pure Checkout'sessionCurrencyConversion'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fx_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source_currency"))

-- | Create a new 'Checkout'sessionCurrencyConversion'NonNullable' with all required fields.
mkCheckout'sessionCurrencyConversion'NonNullable :: Checkout'sessionCurrencyConversion'NonNullable
mkCheckout'sessionCurrencyConversion'NonNullable =
  Checkout'sessionCurrencyConversion'NonNullable
    { checkout'sessionCurrencyConversion'NonNullableAmountSubtotal = GHC.Maybe.Nothing,
      checkout'sessionCurrencyConversion'NonNullableAmountTotal = GHC.Maybe.Nothing,
      checkout'sessionCurrencyConversion'NonNullableFxRate = GHC.Maybe.Nothing,
      checkout'sessionCurrencyConversion'NonNullableSourceCurrency = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.customer.anyOf@ in the specification.
--
-- The ID of the customer for this Session.
-- For Checkout Sessions in \`subscription\` mode or Checkout Sessions with \`customer_creation\` set as \`always\` in \`payment\` mode, Checkout
-- will create a new customer object based on information provided
-- during the payment flow unless an existing customer was provided when
-- the Session was created.
data Checkout'sessionCustomer'NonNullableVariants
  = Checkout'sessionCustomer'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionCustomer'NonNullableCustomer Customer
  | Checkout'sessionCustomer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomer'NonNullableVariants where
  toJSON (Checkout'sessionCustomer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionCustomer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionCustomer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomer'NonNullableVariants where
  parseJSON val = case (Checkout'sessionCustomer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionCustomer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionCustomer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.customer_creation@ in the specification.
--
-- Configure whether a Checkout Session creates a Customer when the Checkout Session completes.
data Checkout'sessionCustomerCreation'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionCustomerCreation'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionCustomerCreation'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"always"@
    Checkout'sessionCustomerCreation'NonNullableEnumAlways
  | -- | Represents the JSON value @"if_required"@
    Checkout'sessionCustomerCreation'NonNullableEnumIfRequired
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomerCreation'NonNullable where
  toJSON (Checkout'sessionCustomerCreation'NonNullableOther val) = val
  toJSON (Checkout'sessionCustomerCreation'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionCustomerCreation'NonNullableEnumAlways) = "always"
  toJSON (Checkout'sessionCustomerCreation'NonNullableEnumIfRequired) = "if_required"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomerCreation'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "always" -> Checkout'sessionCustomerCreation'NonNullableEnumAlways
            | val GHC.Classes.== "if_required" -> Checkout'sessionCustomerCreation'NonNullableEnumIfRequired
            | GHC.Base.otherwise -> Checkout'sessionCustomerCreation'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.customer_details.anyOf@ in the specification.
--
-- The customer details including the customer\\\'s tax exempt status and the customer\\\'s tax IDs. Only the customer\\\'s email is present on Sessions in \\\`setup\\\` mode.
data Checkout'sessionCustomerDetails'NonNullable = Checkout'sessionCustomerDetails'NonNullable
  { -- | address: The customer\'s address after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    checkout'sessionCustomerDetails'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable)),
    -- | email: The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry.
    -- Otherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name: The customer\'s name after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | phone: The customer\'s phone number after a completed Checkout Session.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | tax_exempt: The customer’s tax exempt status after a completed Checkout Session.
    checkout'sessionCustomerDetails'NonNullableTaxExempt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullable)),
    -- | tax_ids: The customer’s tax IDs after a completed Checkout Session.
    checkout'sessionCustomerDetails'NonNullableTaxIds :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([PaymentPagesCheckoutSessionTaxId])))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomerDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableTaxExempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_ids" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableTaxIds obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableTaxExempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_ids" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableTaxIds obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomerDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionCustomerDetails'NonNullable" (\obj -> (((((GHC.Base.pure Checkout'sessionCustomerDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_ids"))

-- | Create a new 'Checkout'sessionCustomerDetails'NonNullable' with all required fields.
mkCheckout'sessionCustomerDetails'NonNullable :: Checkout'sessionCustomerDetails'NonNullable
mkCheckout'sessionCustomerDetails'NonNullable =
  Checkout'sessionCustomerDetails'NonNullable
    { checkout'sessionCustomerDetails'NonNullableAddress = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableEmail = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableName = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullablePhone = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableTaxExempt = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableTaxIds = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.checkout.session.properties.customer_details.anyOf.properties.address.anyOf@ in the specification.
--
-- The customer\\\'s address after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.
data Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable = Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionCustomerDetails'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (checkout'sessionCustomerDetails'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable' with all required fields.
mkCheckout'sessionCustomerDetails'NonNullableAddress'NonNullable :: Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable
mkCheckout'sessionCustomerDetails'NonNullableAddress'NonNullable =
  Checkout'sessionCustomerDetails'NonNullableAddress'NonNullable
    { checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      checkout'sessionCustomerDetails'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.customer_details.anyOf.properties.tax_exempt@ in the specification.
--
-- The customer’s tax exempt status after a completed Checkout Session.
data Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"exempt"@
    Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumExempt
  | -- | Represents the JSON value @"none"@
    Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumNone
  | -- | Represents the JSON value @"reverse"@
    Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumReverse
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullable where
  toJSON (Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableOther val) = val
  toJSON (Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumExempt) = "exempt"
  toJSON (Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumNone) = "none"
  toJSON (Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumReverse) = "reverse"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "exempt" -> Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumExempt
            | val GHC.Classes.== "none" -> Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumNone
            | val GHC.Classes.== "reverse" -> Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableEnumReverse
            | GHC.Base.otherwise -> Checkout'sessionCustomerDetails'NonNullableTaxExempt'NonNullableOther val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.invoice.anyOf@ in the specification.
--
-- ID of the invoice created by the Checkout Session, if it exists.
data Checkout'sessionInvoice'NonNullableVariants
  = Checkout'sessionInvoice'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionInvoice'NonNullableInvoice Invoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionInvoice'NonNullableVariants where
  toJSON (Checkout'sessionInvoice'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionInvoice'NonNullableInvoice a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionInvoice'NonNullableVariants where
  parseJSON val = case (Checkout'sessionInvoice'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionInvoice'NonNullableInvoice Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.invoice_creation.anyOf@ in the specification.
--
-- Details on the state of invoice creation for the Checkout Session.
data Checkout'sessionInvoiceCreation'NonNullable = Checkout'sessionInvoiceCreation'NonNullable
  { -- | enabled: Indicates whether invoice creation is enabled for the Checkout Session.
    checkout'sessionInvoiceCreation'NonNullableEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | invoice_data:
    checkout'sessionInvoiceCreation'NonNullableInvoiceData :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionInvoiceSettings)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionInvoiceCreation'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoiceCreation'NonNullableEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_data" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoiceCreation'NonNullableInvoiceData obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("enabled" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoiceCreation'NonNullableEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_data" Data.Aeson.Types.ToJSON..=)) (checkout'sessionInvoiceCreation'NonNullableInvoiceData obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionInvoiceCreation'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionInvoiceCreation'NonNullable" (\obj -> (GHC.Base.pure Checkout'sessionInvoiceCreation'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_data"))

-- | Create a new 'Checkout'sessionInvoiceCreation'NonNullable' with all required fields.
mkCheckout'sessionInvoiceCreation'NonNullable :: Checkout'sessionInvoiceCreation'NonNullable
mkCheckout'sessionInvoiceCreation'NonNullable =
  Checkout'sessionInvoiceCreation'NonNullable
    { checkout'sessionInvoiceCreation'NonNullableEnabled = GHC.Maybe.Nothing,
      checkout'sessionInvoiceCreation'NonNullableInvoiceData = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.checkout.session.properties.line_items@ in the specification.
--
-- The line items purchased by the customer.
data Checkout'sessionLineItems' = Checkout'sessionLineItems'
  { -- | data: Details about each object.
    checkout'sessionLineItems'Data :: ([Item]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    checkout'sessionLineItems'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionLineItems'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionLineItems' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= checkout'sessionLineItems'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionLineItems' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionLineItems'" (\obj -> ((GHC.Base.pure Checkout'sessionLineItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'Checkout'sessionLineItems'' with all required fields.
mkCheckout'sessionLineItems' ::
  -- | 'checkout'sessionLineItems'Data'
  [Item] ->
  -- | 'checkout'sessionLineItems'HasMore'
  GHC.Types.Bool ->
  -- | 'checkout'sessionLineItems'Url'
  Data.Text.Internal.Text ->
  Checkout'sessionLineItems'
mkCheckout'sessionLineItems' checkout'sessionLineItems'Data checkout'sessionLineItems'HasMore checkout'sessionLineItems'Url =
  Checkout'sessionLineItems'
    { checkout'sessionLineItems'Data = checkout'sessionLineItems'Data,
      checkout'sessionLineItems'HasMore = checkout'sessionLineItems'HasMore,
      checkout'sessionLineItems'Url = checkout'sessionLineItems'Url
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.locale@ in the specification.
--
-- The IETF language tag of the locale Checkout is displayed in. If blank or \`auto\`, the browser\'s locale is used.
data Checkout'sessionLocale'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionLocale'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionLocale'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionLocale'NonNullableEnumAuto
  | -- | Represents the JSON value @"bg"@
    Checkout'sessionLocale'NonNullableEnumBg
  | -- | Represents the JSON value @"cs"@
    Checkout'sessionLocale'NonNullableEnumCs
  | -- | Represents the JSON value @"da"@
    Checkout'sessionLocale'NonNullableEnumDa
  | -- | Represents the JSON value @"de"@
    Checkout'sessionLocale'NonNullableEnumDe
  | -- | Represents the JSON value @"el"@
    Checkout'sessionLocale'NonNullableEnumEl
  | -- | Represents the JSON value @"en"@
    Checkout'sessionLocale'NonNullableEnumEn
  | -- | Represents the JSON value @"en-GB"@
    Checkout'sessionLocale'NonNullableEnumEnGB
  | -- | Represents the JSON value @"es"@
    Checkout'sessionLocale'NonNullableEnumEs
  | -- | Represents the JSON value @"es-419"@
    Checkout'sessionLocale'NonNullableEnumEs_419
  | -- | Represents the JSON value @"et"@
    Checkout'sessionLocale'NonNullableEnumEt
  | -- | Represents the JSON value @"fi"@
    Checkout'sessionLocale'NonNullableEnumFi
  | -- | Represents the JSON value @"fil"@
    Checkout'sessionLocale'NonNullableEnumFil
  | -- | Represents the JSON value @"fr"@
    Checkout'sessionLocale'NonNullableEnumFr
  | -- | Represents the JSON value @"fr-CA"@
    Checkout'sessionLocale'NonNullableEnumFrCA
  | -- | Represents the JSON value @"hr"@
    Checkout'sessionLocale'NonNullableEnumHr
  | -- | Represents the JSON value @"hu"@
    Checkout'sessionLocale'NonNullableEnumHu
  | -- | Represents the JSON value @"id"@
    Checkout'sessionLocale'NonNullableEnumId
  | -- | Represents the JSON value @"it"@
    Checkout'sessionLocale'NonNullableEnumIt
  | -- | Represents the JSON value @"ja"@
    Checkout'sessionLocale'NonNullableEnumJa
  | -- | Represents the JSON value @"ko"@
    Checkout'sessionLocale'NonNullableEnumKo
  | -- | Represents the JSON value @"lt"@
    Checkout'sessionLocale'NonNullableEnumLt
  | -- | Represents the JSON value @"lv"@
    Checkout'sessionLocale'NonNullableEnumLv
  | -- | Represents the JSON value @"ms"@
    Checkout'sessionLocale'NonNullableEnumMs
  | -- | Represents the JSON value @"mt"@
    Checkout'sessionLocale'NonNullableEnumMt
  | -- | Represents the JSON value @"nb"@
    Checkout'sessionLocale'NonNullableEnumNb
  | -- | Represents the JSON value @"nl"@
    Checkout'sessionLocale'NonNullableEnumNl
  | -- | Represents the JSON value @"pl"@
    Checkout'sessionLocale'NonNullableEnumPl
  | -- | Represents the JSON value @"pt"@
    Checkout'sessionLocale'NonNullableEnumPt
  | -- | Represents the JSON value @"pt-BR"@
    Checkout'sessionLocale'NonNullableEnumPtBR
  | -- | Represents the JSON value @"ro"@
    Checkout'sessionLocale'NonNullableEnumRo
  | -- | Represents the JSON value @"ru"@
    Checkout'sessionLocale'NonNullableEnumRu
  | -- | Represents the JSON value @"sk"@
    Checkout'sessionLocale'NonNullableEnumSk
  | -- | Represents the JSON value @"sl"@
    Checkout'sessionLocale'NonNullableEnumSl
  | -- | Represents the JSON value @"sv"@
    Checkout'sessionLocale'NonNullableEnumSv
  | -- | Represents the JSON value @"th"@
    Checkout'sessionLocale'NonNullableEnumTh
  | -- | Represents the JSON value @"tr"@
    Checkout'sessionLocale'NonNullableEnumTr
  | -- | Represents the JSON value @"vi"@
    Checkout'sessionLocale'NonNullableEnumVi
  | -- | Represents the JSON value @"zh"@
    Checkout'sessionLocale'NonNullableEnumZh
  | -- | Represents the JSON value @"zh-HK"@
    Checkout'sessionLocale'NonNullableEnumZhHK
  | -- | Represents the JSON value @"zh-TW"@
    Checkout'sessionLocale'NonNullableEnumZhTW
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionLocale'NonNullable where
  toJSON (Checkout'sessionLocale'NonNullableOther val) = val
  toJSON (Checkout'sessionLocale'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionLocale'NonNullableEnumAuto) = "auto"
  toJSON (Checkout'sessionLocale'NonNullableEnumBg) = "bg"
  toJSON (Checkout'sessionLocale'NonNullableEnumCs) = "cs"
  toJSON (Checkout'sessionLocale'NonNullableEnumDa) = "da"
  toJSON (Checkout'sessionLocale'NonNullableEnumDe) = "de"
  toJSON (Checkout'sessionLocale'NonNullableEnumEl) = "el"
  toJSON (Checkout'sessionLocale'NonNullableEnumEn) = "en"
  toJSON (Checkout'sessionLocale'NonNullableEnumEnGB) = "en-GB"
  toJSON (Checkout'sessionLocale'NonNullableEnumEs) = "es"
  toJSON (Checkout'sessionLocale'NonNullableEnumEs_419) = "es-419"
  toJSON (Checkout'sessionLocale'NonNullableEnumEt) = "et"
  toJSON (Checkout'sessionLocale'NonNullableEnumFi) = "fi"
  toJSON (Checkout'sessionLocale'NonNullableEnumFil) = "fil"
  toJSON (Checkout'sessionLocale'NonNullableEnumFr) = "fr"
  toJSON (Checkout'sessionLocale'NonNullableEnumFrCA) = "fr-CA"
  toJSON (Checkout'sessionLocale'NonNullableEnumHr) = "hr"
  toJSON (Checkout'sessionLocale'NonNullableEnumHu) = "hu"
  toJSON (Checkout'sessionLocale'NonNullableEnumId) = "id"
  toJSON (Checkout'sessionLocale'NonNullableEnumIt) = "it"
  toJSON (Checkout'sessionLocale'NonNullableEnumJa) = "ja"
  toJSON (Checkout'sessionLocale'NonNullableEnumKo) = "ko"
  toJSON (Checkout'sessionLocale'NonNullableEnumLt) = "lt"
  toJSON (Checkout'sessionLocale'NonNullableEnumLv) = "lv"
  toJSON (Checkout'sessionLocale'NonNullableEnumMs) = "ms"
  toJSON (Checkout'sessionLocale'NonNullableEnumMt) = "mt"
  toJSON (Checkout'sessionLocale'NonNullableEnumNb) = "nb"
  toJSON (Checkout'sessionLocale'NonNullableEnumNl) = "nl"
  toJSON (Checkout'sessionLocale'NonNullableEnumPl) = "pl"
  toJSON (Checkout'sessionLocale'NonNullableEnumPt) = "pt"
  toJSON (Checkout'sessionLocale'NonNullableEnumPtBR) = "pt-BR"
  toJSON (Checkout'sessionLocale'NonNullableEnumRo) = "ro"
  toJSON (Checkout'sessionLocale'NonNullableEnumRu) = "ru"
  toJSON (Checkout'sessionLocale'NonNullableEnumSk) = "sk"
  toJSON (Checkout'sessionLocale'NonNullableEnumSl) = "sl"
  toJSON (Checkout'sessionLocale'NonNullableEnumSv) = "sv"
  toJSON (Checkout'sessionLocale'NonNullableEnumTh) = "th"
  toJSON (Checkout'sessionLocale'NonNullableEnumTr) = "tr"
  toJSON (Checkout'sessionLocale'NonNullableEnumVi) = "vi"
  toJSON (Checkout'sessionLocale'NonNullableEnumZh) = "zh"
  toJSON (Checkout'sessionLocale'NonNullableEnumZhHK) = "zh-HK"
  toJSON (Checkout'sessionLocale'NonNullableEnumZhTW) = "zh-TW"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionLocale'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionLocale'NonNullableEnumAuto
            | val GHC.Classes.== "bg" -> Checkout'sessionLocale'NonNullableEnumBg
            | val GHC.Classes.== "cs" -> Checkout'sessionLocale'NonNullableEnumCs
            | val GHC.Classes.== "da" -> Checkout'sessionLocale'NonNullableEnumDa
            | val GHC.Classes.== "de" -> Checkout'sessionLocale'NonNullableEnumDe
            | val GHC.Classes.== "el" -> Checkout'sessionLocale'NonNullableEnumEl
            | val GHC.Classes.== "en" -> Checkout'sessionLocale'NonNullableEnumEn
            | val GHC.Classes.== "en-GB" -> Checkout'sessionLocale'NonNullableEnumEnGB
            | val GHC.Classes.== "es" -> Checkout'sessionLocale'NonNullableEnumEs
            | val GHC.Classes.== "es-419" -> Checkout'sessionLocale'NonNullableEnumEs_419
            | val GHC.Classes.== "et" -> Checkout'sessionLocale'NonNullableEnumEt
            | val GHC.Classes.== "fi" -> Checkout'sessionLocale'NonNullableEnumFi
            | val GHC.Classes.== "fil" -> Checkout'sessionLocale'NonNullableEnumFil
            | val GHC.Classes.== "fr" -> Checkout'sessionLocale'NonNullableEnumFr
            | val GHC.Classes.== "fr-CA" -> Checkout'sessionLocale'NonNullableEnumFrCA
            | val GHC.Classes.== "hr" -> Checkout'sessionLocale'NonNullableEnumHr
            | val GHC.Classes.== "hu" -> Checkout'sessionLocale'NonNullableEnumHu
            | val GHC.Classes.== "id" -> Checkout'sessionLocale'NonNullableEnumId
            | val GHC.Classes.== "it" -> Checkout'sessionLocale'NonNullableEnumIt
            | val GHC.Classes.== "ja" -> Checkout'sessionLocale'NonNullableEnumJa
            | val GHC.Classes.== "ko" -> Checkout'sessionLocale'NonNullableEnumKo
            | val GHC.Classes.== "lt" -> Checkout'sessionLocale'NonNullableEnumLt
            | val GHC.Classes.== "lv" -> Checkout'sessionLocale'NonNullableEnumLv
            | val GHC.Classes.== "ms" -> Checkout'sessionLocale'NonNullableEnumMs
            | val GHC.Classes.== "mt" -> Checkout'sessionLocale'NonNullableEnumMt
            | val GHC.Classes.== "nb" -> Checkout'sessionLocale'NonNullableEnumNb
            | val GHC.Classes.== "nl" -> Checkout'sessionLocale'NonNullableEnumNl
            | val GHC.Classes.== "pl" -> Checkout'sessionLocale'NonNullableEnumPl
            | val GHC.Classes.== "pt" -> Checkout'sessionLocale'NonNullableEnumPt
            | val GHC.Classes.== "pt-BR" -> Checkout'sessionLocale'NonNullableEnumPtBR
            | val GHC.Classes.== "ro" -> Checkout'sessionLocale'NonNullableEnumRo
            | val GHC.Classes.== "ru" -> Checkout'sessionLocale'NonNullableEnumRu
            | val GHC.Classes.== "sk" -> Checkout'sessionLocale'NonNullableEnumSk
            | val GHC.Classes.== "sl" -> Checkout'sessionLocale'NonNullableEnumSl
            | val GHC.Classes.== "sv" -> Checkout'sessionLocale'NonNullableEnumSv
            | val GHC.Classes.== "th" -> Checkout'sessionLocale'NonNullableEnumTh
            | val GHC.Classes.== "tr" -> Checkout'sessionLocale'NonNullableEnumTr
            | val GHC.Classes.== "vi" -> Checkout'sessionLocale'NonNullableEnumVi
            | val GHC.Classes.== "zh" -> Checkout'sessionLocale'NonNullableEnumZh
            | val GHC.Classes.== "zh-HK" -> Checkout'sessionLocale'NonNullableEnumZhHK
            | val GHC.Classes.== "zh-TW" -> Checkout'sessionLocale'NonNullableEnumZhTW
            | GHC.Base.otherwise -> Checkout'sessionLocale'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.mode@ in the specification.
--
-- The mode of the Checkout Session.
data Checkout'sessionMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"payment"@
    Checkout'sessionMode'EnumPayment
  | -- | Represents the JSON value @"setup"@
    Checkout'sessionMode'EnumSetup
  | -- | Represents the JSON value @"subscription"@
    Checkout'sessionMode'EnumSubscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionMode' where
  toJSON (Checkout'sessionMode'Other val) = val
  toJSON (Checkout'sessionMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionMode'EnumPayment) = "payment"
  toJSON (Checkout'sessionMode'EnumSetup) = "setup"
  toJSON (Checkout'sessionMode'EnumSubscription) = "subscription"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionMode' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "payment" -> Checkout'sessionMode'EnumPayment
            | val GHC.Classes.== "setup" -> Checkout'sessionMode'EnumSetup
            | val GHC.Classes.== "subscription" -> Checkout'sessionMode'EnumSubscription
            | GHC.Base.otherwise -> Checkout'sessionMode'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.payment_intent.anyOf@ in the specification.
--
-- The ID of the PaymentIntent for Checkout Sessions in \`payment\` mode.
data Checkout'sessionPaymentIntent'NonNullableVariants
  = Checkout'sessionPaymentIntent'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionPaymentIntent'NonNullablePaymentIntent PaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentIntent'NonNullableVariants where
  toJSON (Checkout'sessionPaymentIntent'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionPaymentIntent'NonNullablePaymentIntent a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentIntent'NonNullableVariants where
  parseJSON val = case (Checkout'sessionPaymentIntent'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionPaymentIntent'NonNullablePaymentIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.payment_link.anyOf@ in the specification.
--
-- The ID of the Payment Link that created this Session.
data Checkout'sessionPaymentLink'NonNullableVariants
  = Checkout'sessionPaymentLink'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionPaymentLink'NonNullablePaymentLink PaymentLink
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentLink'NonNullableVariants where
  toJSON (Checkout'sessionPaymentLink'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionPaymentLink'NonNullablePaymentLink a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentLink'NonNullableVariants where
  parseJSON val = case (Checkout'sessionPaymentLink'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionPaymentLink'NonNullablePaymentLink Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.payment_method_collection@ in the specification.
--
-- Configure whether a Checkout Session should collect a payment method.
data Checkout'sessionPaymentMethodCollection'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionPaymentMethodCollection'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionPaymentMethodCollection'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"always"@
    Checkout'sessionPaymentMethodCollection'NonNullableEnumAlways
  | -- | Represents the JSON value @"if_required"@
    Checkout'sessionPaymentMethodCollection'NonNullableEnumIfRequired
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentMethodCollection'NonNullable where
  toJSON (Checkout'sessionPaymentMethodCollection'NonNullableOther val) = val
  toJSON (Checkout'sessionPaymentMethodCollection'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionPaymentMethodCollection'NonNullableEnumAlways) = "always"
  toJSON (Checkout'sessionPaymentMethodCollection'NonNullableEnumIfRequired) = "if_required"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentMethodCollection'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "always" -> Checkout'sessionPaymentMethodCollection'NonNullableEnumAlways
            | val GHC.Classes.== "if_required" -> Checkout'sessionPaymentMethodCollection'NonNullableEnumIfRequired
            | GHC.Base.otherwise -> Checkout'sessionPaymentMethodCollection'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.payment_method_configuration_details.anyOf@ in the specification.
--
-- Information about the payment method configuration used for this Checkout session if using dynamic payment methods.
data Checkout'sessionPaymentMethodConfigurationDetails'NonNullable = Checkout'sessionPaymentMethodConfigurationDetails'NonNullable
  { -- | id: ID of the payment method configuration used.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionPaymentMethodConfigurationDetails'NonNullableId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | parent: ID of the parent payment method configuration used.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionPaymentMethodConfigurationDetails'NonNullableParent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentMethodConfigurationDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodConfigurationDetails'NonNullableId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodConfigurationDetails'NonNullableParent obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodConfigurationDetails'NonNullableId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodConfigurationDetails'NonNullableParent obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentMethodConfigurationDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionPaymentMethodConfigurationDetails'NonNullable" (\obj -> (GHC.Base.pure Checkout'sessionPaymentMethodConfigurationDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "parent"))

-- | Create a new 'Checkout'sessionPaymentMethodConfigurationDetails'NonNullable' with all required fields.
mkCheckout'sessionPaymentMethodConfigurationDetails'NonNullable :: Checkout'sessionPaymentMethodConfigurationDetails'NonNullable
mkCheckout'sessionPaymentMethodConfigurationDetails'NonNullable =
  Checkout'sessionPaymentMethodConfigurationDetails'NonNullable
    { checkout'sessionPaymentMethodConfigurationDetails'NonNullableId = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodConfigurationDetails'NonNullableParent = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.checkout.session.properties.payment_method_options.anyOf@ in the specification.
--
-- Payment-method-specific configuration for the PaymentIntent or SetupIntent of this CheckoutSession.
data Checkout'sessionPaymentMethodOptions'NonNullable = Checkout'sessionPaymentMethodOptions'NonNullable
  { -- | acss_debit:
    checkout'sessionPaymentMethodOptions'NonNullableAcssDebit :: (GHC.Maybe.Maybe CheckoutAcssDebitPaymentMethodOptions),
    -- | affirm:
    checkout'sessionPaymentMethodOptions'NonNullableAffirm :: (GHC.Maybe.Maybe CheckoutAffirmPaymentMethodOptions),
    -- | afterpay_clearpay:
    checkout'sessionPaymentMethodOptions'NonNullableAfterpayClearpay :: (GHC.Maybe.Maybe CheckoutAfterpayClearpayPaymentMethodOptions),
    -- | alipay:
    checkout'sessionPaymentMethodOptions'NonNullableAlipay :: (GHC.Maybe.Maybe CheckoutAlipayPaymentMethodOptions),
    -- | au_becs_debit:
    checkout'sessionPaymentMethodOptions'NonNullableAuBecsDebit :: (GHC.Maybe.Maybe CheckoutAuBecsDebitPaymentMethodOptions),
    -- | bacs_debit:
    checkout'sessionPaymentMethodOptions'NonNullableBacsDebit :: (GHC.Maybe.Maybe CheckoutBacsDebitPaymentMethodOptions),
    -- | bancontact:
    checkout'sessionPaymentMethodOptions'NonNullableBancontact :: (GHC.Maybe.Maybe CheckoutBancontactPaymentMethodOptions),
    -- | boleto:
    checkout'sessionPaymentMethodOptions'NonNullableBoleto :: (GHC.Maybe.Maybe CheckoutBoletoPaymentMethodOptions),
    -- | card:
    checkout'sessionPaymentMethodOptions'NonNullableCard :: (GHC.Maybe.Maybe CheckoutCardPaymentMethodOptions),
    -- | cashapp:
    checkout'sessionPaymentMethodOptions'NonNullableCashapp :: (GHC.Maybe.Maybe CheckoutCashappPaymentMethodOptions),
    -- | customer_balance:
    checkout'sessionPaymentMethodOptions'NonNullableCustomerBalance :: (GHC.Maybe.Maybe CheckoutCustomerBalancePaymentMethodOptions),
    -- | eps:
    checkout'sessionPaymentMethodOptions'NonNullableEps :: (GHC.Maybe.Maybe CheckoutEpsPaymentMethodOptions),
    -- | fpx:
    checkout'sessionPaymentMethodOptions'NonNullableFpx :: (GHC.Maybe.Maybe CheckoutFpxPaymentMethodOptions),
    -- | giropay:
    checkout'sessionPaymentMethodOptions'NonNullableGiropay :: (GHC.Maybe.Maybe CheckoutGiropayPaymentMethodOptions),
    -- | grabpay:
    checkout'sessionPaymentMethodOptions'NonNullableGrabpay :: (GHC.Maybe.Maybe CheckoutGrabPayPaymentMethodOptions),
    -- | ideal:
    checkout'sessionPaymentMethodOptions'NonNullableIdeal :: (GHC.Maybe.Maybe CheckoutIdealPaymentMethodOptions),
    -- | klarna:
    checkout'sessionPaymentMethodOptions'NonNullableKlarna :: (GHC.Maybe.Maybe CheckoutKlarnaPaymentMethodOptions),
    -- | konbini:
    checkout'sessionPaymentMethodOptions'NonNullableKonbini :: (GHC.Maybe.Maybe CheckoutKonbiniPaymentMethodOptions),
    -- | link:
    checkout'sessionPaymentMethodOptions'NonNullableLink :: (GHC.Maybe.Maybe CheckoutLinkPaymentMethodOptions),
    -- | oxxo:
    checkout'sessionPaymentMethodOptions'NonNullableOxxo :: (GHC.Maybe.Maybe CheckoutOxxoPaymentMethodOptions),
    -- | p24:
    checkout'sessionPaymentMethodOptions'NonNullableP24 :: (GHC.Maybe.Maybe CheckoutP24PaymentMethodOptions),
    -- | paynow:
    checkout'sessionPaymentMethodOptions'NonNullablePaynow :: (GHC.Maybe.Maybe CheckoutPaynowPaymentMethodOptions),
    -- | paypal:
    checkout'sessionPaymentMethodOptions'NonNullablePaypal :: (GHC.Maybe.Maybe CheckoutPaypalPaymentMethodOptions),
    -- | pix:
    checkout'sessionPaymentMethodOptions'NonNullablePix :: (GHC.Maybe.Maybe CheckoutPixPaymentMethodOptions),
    -- | revolut_pay:
    checkout'sessionPaymentMethodOptions'NonNullableRevolutPay :: (GHC.Maybe.Maybe CheckoutRevolutPayPaymentMethodOptions),
    -- | sepa_debit:
    checkout'sessionPaymentMethodOptions'NonNullableSepaDebit :: (GHC.Maybe.Maybe CheckoutSepaDebitPaymentMethodOptions),
    -- | sofort:
    checkout'sessionPaymentMethodOptions'NonNullableSofort :: (GHC.Maybe.Maybe CheckoutSofortPaymentMethodOptions),
    -- | us_bank_account:
    checkout'sessionPaymentMethodOptions'NonNullableUsBankAccount :: (GHC.Maybe.Maybe CheckoutUsBankAccountPaymentMethodOptions)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentMethodOptions'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableCustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullablePaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullablePaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pix" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullablePix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableSofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableUsBankAccount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableCustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullablePaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullablePaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pix" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullablePix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableSofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (checkout'sessionPaymentMethodOptions'NonNullableUsBankAccount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentMethodOptions'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionPaymentMethodOptions'NonNullable" (\obj -> (((((((((((((((((((((((((((GHC.Base.pure Checkout'sessionPaymentMethodOptions'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account"))

-- | Create a new 'Checkout'sessionPaymentMethodOptions'NonNullable' with all required fields.
mkCheckout'sessionPaymentMethodOptions'NonNullable :: Checkout'sessionPaymentMethodOptions'NonNullable
mkCheckout'sessionPaymentMethodOptions'NonNullable =
  Checkout'sessionPaymentMethodOptions'NonNullable
    { checkout'sessionPaymentMethodOptions'NonNullableAcssDebit = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableAffirm = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableAfterpayClearpay = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableAlipay = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableAuBecsDebit = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableBacsDebit = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableBancontact = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableBoleto = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableCard = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableCashapp = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableCustomerBalance = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableEps = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableFpx = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableGiropay = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableGrabpay = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableIdeal = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableKlarna = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableKonbini = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableLink = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableOxxo = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableP24 = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullablePaynow = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullablePaypal = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullablePix = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableRevolutPay = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableSepaDebit = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableSofort = GHC.Maybe.Nothing,
      checkout'sessionPaymentMethodOptions'NonNullableUsBankAccount = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.payment_status@ in the specification.
--
-- The payment status of the Checkout Session, one of \`paid\`, \`unpaid\`, or \`no_payment_required\`.
-- You can use this value to decide when to fulfill your customer\'s order.
data Checkout'sessionPaymentStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionPaymentStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionPaymentStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"no_payment_required"@
    Checkout'sessionPaymentStatus'EnumNoPaymentRequired
  | -- | Represents the JSON value @"paid"@
    Checkout'sessionPaymentStatus'EnumPaid
  | -- | Represents the JSON value @"unpaid"@
    Checkout'sessionPaymentStatus'EnumUnpaid
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionPaymentStatus' where
  toJSON (Checkout'sessionPaymentStatus'Other val) = val
  toJSON (Checkout'sessionPaymentStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionPaymentStatus'EnumNoPaymentRequired) = "no_payment_required"
  toJSON (Checkout'sessionPaymentStatus'EnumPaid) = "paid"
  toJSON (Checkout'sessionPaymentStatus'EnumUnpaid) = "unpaid"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionPaymentStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "no_payment_required" -> Checkout'sessionPaymentStatus'EnumNoPaymentRequired
            | val GHC.Classes.== "paid" -> Checkout'sessionPaymentStatus'EnumPaid
            | val GHC.Classes.== "unpaid" -> Checkout'sessionPaymentStatus'EnumUnpaid
            | GHC.Base.otherwise -> Checkout'sessionPaymentStatus'Other val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.redirect_on_completion@ in the specification.
--
-- Applies to Checkout Sessions with \`ui_mode: embedded\`. By default, Stripe will always redirect to your return_url after a successful confirmation. If you set \`redirect_on_completion: \'if_required\'\`, then we will only redirect if your user chooses a redirect-based payment method.
data Checkout'sessionRedirectOnCompletion'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionRedirectOnCompletion'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionRedirectOnCompletion'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"always"@
    Checkout'sessionRedirectOnCompletion'EnumAlways
  | -- | Represents the JSON value @"if_required"@
    Checkout'sessionRedirectOnCompletion'EnumIfRequired
  | -- | Represents the JSON value @"never"@
    Checkout'sessionRedirectOnCompletion'EnumNever
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionRedirectOnCompletion' where
  toJSON (Checkout'sessionRedirectOnCompletion'Other val) = val
  toJSON (Checkout'sessionRedirectOnCompletion'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionRedirectOnCompletion'EnumAlways) = "always"
  toJSON (Checkout'sessionRedirectOnCompletion'EnumIfRequired) = "if_required"
  toJSON (Checkout'sessionRedirectOnCompletion'EnumNever) = "never"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionRedirectOnCompletion' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "always" -> Checkout'sessionRedirectOnCompletion'EnumAlways
            | val GHC.Classes.== "if_required" -> Checkout'sessionRedirectOnCompletion'EnumIfRequired
            | val GHC.Classes.== "never" -> Checkout'sessionRedirectOnCompletion'EnumNever
            | GHC.Base.otherwise -> Checkout'sessionRedirectOnCompletion'Other val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.setup_intent.anyOf@ in the specification.
--
-- The ID of the SetupIntent for Checkout Sessions in \`setup\` mode.
data Checkout'sessionSetupIntent'NonNullableVariants
  = Checkout'sessionSetupIntent'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionSetupIntent'NonNullableSetupIntent SetupIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionSetupIntent'NonNullableVariants where
  toJSON (Checkout'sessionSetupIntent'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionSetupIntent'NonNullableSetupIntent a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionSetupIntent'NonNullableVariants where
  parseJSON val = case (Checkout'sessionSetupIntent'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionSetupIntent'NonNullableSetupIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.shipping_address_collection.anyOf@ in the specification.
--
-- When set, provides configuration for Checkout to collect a shipping address from a customer.
data Checkout'sessionShippingAddressCollection'NonNullable = Checkout'sessionShippingAddressCollection'NonNullable
  { -- | allowed_countries: An array of two-letter ISO country codes representing which countries Checkout should provide as options for
    -- shipping locations. Unsupported country codes: \`AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI\`.
    checkout'sessionShippingAddressCollection'NonNullableAllowedCountries :: (GHC.Maybe.Maybe ([Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries']))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingAddressCollection'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allowed_countries" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingAddressCollection'NonNullableAllowedCountries obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("allowed_countries" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingAddressCollection'NonNullableAllowedCountries obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingAddressCollection'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionShippingAddressCollection'NonNullable" (\obj -> GHC.Base.pure Checkout'sessionShippingAddressCollection'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "allowed_countries"))

-- | Create a new 'Checkout'sessionShippingAddressCollection'NonNullable' with all required fields.
mkCheckout'sessionShippingAddressCollection'NonNullable :: Checkout'sessionShippingAddressCollection'NonNullable
mkCheckout'sessionShippingAddressCollection'NonNullable = Checkout'sessionShippingAddressCollection'NonNullable {checkout'sessionShippingAddressCollection'NonNullableAllowedCountries = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.shipping_address_collection.anyOf.properties.allowed_countries.items@ in the specification.
data Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"AC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAC
  | -- | Represents the JSON value @"AD"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAD
  | -- | Represents the JSON value @"AE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAE
  | -- | Represents the JSON value @"AF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAF
  | -- | Represents the JSON value @"AG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAG
  | -- | Represents the JSON value @"AI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAI
  | -- | Represents the JSON value @"AL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAL
  | -- | Represents the JSON value @"AM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAM
  | -- | Represents the JSON value @"AO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAO
  | -- | Represents the JSON value @"AQ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAQ
  | -- | Represents the JSON value @"AR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAR
  | -- | Represents the JSON value @"AT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAT
  | -- | Represents the JSON value @"AU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAU
  | -- | Represents the JSON value @"AW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAW
  | -- | Represents the JSON value @"AX"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAX
  | -- | Represents the JSON value @"AZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAZ
  | -- | Represents the JSON value @"BA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBA
  | -- | Represents the JSON value @"BB"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBB
  | -- | Represents the JSON value @"BD"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBD
  | -- | Represents the JSON value @"BE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBE
  | -- | Represents the JSON value @"BF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBF
  | -- | Represents the JSON value @"BG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBG
  | -- | Represents the JSON value @"BH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBH
  | -- | Represents the JSON value @"BI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBI
  | -- | Represents the JSON value @"BJ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBJ
  | -- | Represents the JSON value @"BL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBL
  | -- | Represents the JSON value @"BM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBM
  | -- | Represents the JSON value @"BN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBN
  | -- | Represents the JSON value @"BO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBO
  | -- | Represents the JSON value @"BQ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBQ
  | -- | Represents the JSON value @"BR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBR
  | -- | Represents the JSON value @"BS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBS
  | -- | Represents the JSON value @"BT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBT
  | -- | Represents the JSON value @"BV"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBV
  | -- | Represents the JSON value @"BW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBW
  | -- | Represents the JSON value @"BY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBY
  | -- | Represents the JSON value @"BZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBZ
  | -- | Represents the JSON value @"CA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCA
  | -- | Represents the JSON value @"CD"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCD
  | -- | Represents the JSON value @"CF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCF
  | -- | Represents the JSON value @"CG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCG
  | -- | Represents the JSON value @"CH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCH
  | -- | Represents the JSON value @"CI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCI
  | -- | Represents the JSON value @"CK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCK
  | -- | Represents the JSON value @"CL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCL
  | -- | Represents the JSON value @"CM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCM
  | -- | Represents the JSON value @"CN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCN
  | -- | Represents the JSON value @"CO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCO
  | -- | Represents the JSON value @"CR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCR
  | -- | Represents the JSON value @"CV"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCV
  | -- | Represents the JSON value @"CW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCW
  | -- | Represents the JSON value @"CY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCY
  | -- | Represents the JSON value @"CZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCZ
  | -- | Represents the JSON value @"DE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDE
  | -- | Represents the JSON value @"DJ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDJ
  | -- | Represents the JSON value @"DK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDK
  | -- | Represents the JSON value @"DM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDM
  | -- | Represents the JSON value @"DO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDO
  | -- | Represents the JSON value @"DZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDZ
  | -- | Represents the JSON value @"EC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEC
  | -- | Represents the JSON value @"EE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEE
  | -- | Represents the JSON value @"EG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEG
  | -- | Represents the JSON value @"EH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEH
  | -- | Represents the JSON value @"ER"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumER
  | -- | Represents the JSON value @"ES"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumES
  | -- | Represents the JSON value @"ET"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumET
  | -- | Represents the JSON value @"FI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFI
  | -- | Represents the JSON value @"FJ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFJ
  | -- | Represents the JSON value @"FK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFK
  | -- | Represents the JSON value @"FO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFO
  | -- | Represents the JSON value @"FR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFR
  | -- | Represents the JSON value @"GA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGA
  | -- | Represents the JSON value @"GB"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGB
  | -- | Represents the JSON value @"GD"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGD
  | -- | Represents the JSON value @"GE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGE
  | -- | Represents the JSON value @"GF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGF
  | -- | Represents the JSON value @"GG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGG
  | -- | Represents the JSON value @"GH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGH
  | -- | Represents the JSON value @"GI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGI
  | -- | Represents the JSON value @"GL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGL
  | -- | Represents the JSON value @"GM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGM
  | -- | Represents the JSON value @"GN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGN
  | -- | Represents the JSON value @"GP"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGP
  | -- | Represents the JSON value @"GQ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGQ
  | -- | Represents the JSON value @"GR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGR
  | -- | Represents the JSON value @"GS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGS
  | -- | Represents the JSON value @"GT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGT
  | -- | Represents the JSON value @"GU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGU
  | -- | Represents the JSON value @"GW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGW
  | -- | Represents the JSON value @"GY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGY
  | -- | Represents the JSON value @"HK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHK
  | -- | Represents the JSON value @"HN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHN
  | -- | Represents the JSON value @"HR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHR
  | -- | Represents the JSON value @"HT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHT
  | -- | Represents the JSON value @"HU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHU
  | -- | Represents the JSON value @"ID"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumID
  | -- | Represents the JSON value @"IE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIE
  | -- | Represents the JSON value @"IL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIL
  | -- | Represents the JSON value @"IM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIM
  | -- | Represents the JSON value @"IN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIN
  | -- | Represents the JSON value @"IO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIO
  | -- | Represents the JSON value @"IQ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIQ
  | -- | Represents the JSON value @"IS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIS
  | -- | Represents the JSON value @"IT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIT
  | -- | Represents the JSON value @"JE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJE
  | -- | Represents the JSON value @"JM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJM
  | -- | Represents the JSON value @"JO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJO
  | -- | Represents the JSON value @"JP"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJP
  | -- | Represents the JSON value @"KE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKE
  | -- | Represents the JSON value @"KG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKG
  | -- | Represents the JSON value @"KH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKH
  | -- | Represents the JSON value @"KI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKI
  | -- | Represents the JSON value @"KM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKM
  | -- | Represents the JSON value @"KN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKN
  | -- | Represents the JSON value @"KR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKR
  | -- | Represents the JSON value @"KW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKW
  | -- | Represents the JSON value @"KY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKY
  | -- | Represents the JSON value @"KZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKZ
  | -- | Represents the JSON value @"LA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLA
  | -- | Represents the JSON value @"LB"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLB
  | -- | Represents the JSON value @"LC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLC
  | -- | Represents the JSON value @"LI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLI
  | -- | Represents the JSON value @"LK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLK
  | -- | Represents the JSON value @"LR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLR
  | -- | Represents the JSON value @"LS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLS
  | -- | Represents the JSON value @"LT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLT
  | -- | Represents the JSON value @"LU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLU
  | -- | Represents the JSON value @"LV"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLV
  | -- | Represents the JSON value @"LY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLY
  | -- | Represents the JSON value @"MA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMA
  | -- | Represents the JSON value @"MC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMC
  | -- | Represents the JSON value @"MD"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMD
  | -- | Represents the JSON value @"ME"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumME
  | -- | Represents the JSON value @"MF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMF
  | -- | Represents the JSON value @"MG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMG
  | -- | Represents the JSON value @"MK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMK
  | -- | Represents the JSON value @"ML"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumML
  | -- | Represents the JSON value @"MM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMM
  | -- | Represents the JSON value @"MN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMN
  | -- | Represents the JSON value @"MO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMO
  | -- | Represents the JSON value @"MQ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMQ
  | -- | Represents the JSON value @"MR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMR
  | -- | Represents the JSON value @"MS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMS
  | -- | Represents the JSON value @"MT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMT
  | -- | Represents the JSON value @"MU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMU
  | -- | Represents the JSON value @"MV"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMV
  | -- | Represents the JSON value @"MW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMW
  | -- | Represents the JSON value @"MX"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMX
  | -- | Represents the JSON value @"MY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMY
  | -- | Represents the JSON value @"MZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMZ
  | -- | Represents the JSON value @"NA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNA
  | -- | Represents the JSON value @"NC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNC
  | -- | Represents the JSON value @"NE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNE
  | -- | Represents the JSON value @"NG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNG
  | -- | Represents the JSON value @"NI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNI
  | -- | Represents the JSON value @"NL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNL
  | -- | Represents the JSON value @"NO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNO
  | -- | Represents the JSON value @"NP"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNP
  | -- | Represents the JSON value @"NR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNR
  | -- | Represents the JSON value @"NU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNU
  | -- | Represents the JSON value @"NZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNZ
  | -- | Represents the JSON value @"OM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumOM
  | -- | Represents the JSON value @"PA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPA
  | -- | Represents the JSON value @"PE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPE
  | -- | Represents the JSON value @"PF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPF
  | -- | Represents the JSON value @"PG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPG
  | -- | Represents the JSON value @"PH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPH
  | -- | Represents the JSON value @"PK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPK
  | -- | Represents the JSON value @"PL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPL
  | -- | Represents the JSON value @"PM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPM
  | -- | Represents the JSON value @"PN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPN
  | -- | Represents the JSON value @"PR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPR
  | -- | Represents the JSON value @"PS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPS
  | -- | Represents the JSON value @"PT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPT
  | -- | Represents the JSON value @"PY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPY
  | -- | Represents the JSON value @"QA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumQA
  | -- | Represents the JSON value @"RE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRE
  | -- | Represents the JSON value @"RO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRO
  | -- | Represents the JSON value @"RS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRS
  | -- | Represents the JSON value @"RU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRU
  | -- | Represents the JSON value @"RW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRW
  | -- | Represents the JSON value @"SA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSA
  | -- | Represents the JSON value @"SB"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSB
  | -- | Represents the JSON value @"SC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSC
  | -- | Represents the JSON value @"SE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSE
  | -- | Represents the JSON value @"SG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSG
  | -- | Represents the JSON value @"SH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSH
  | -- | Represents the JSON value @"SI"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSI
  | -- | Represents the JSON value @"SJ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSJ
  | -- | Represents the JSON value @"SK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSK
  | -- | Represents the JSON value @"SL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSL
  | -- | Represents the JSON value @"SM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSM
  | -- | Represents the JSON value @"SN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSN
  | -- | Represents the JSON value @"SO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSO
  | -- | Represents the JSON value @"SR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSR
  | -- | Represents the JSON value @"SS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSS
  | -- | Represents the JSON value @"ST"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumST
  | -- | Represents the JSON value @"SV"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSV
  | -- | Represents the JSON value @"SX"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSX
  | -- | Represents the JSON value @"SZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSZ
  | -- | Represents the JSON value @"TA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTA
  | -- | Represents the JSON value @"TC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTC
  | -- | Represents the JSON value @"TD"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTD
  | -- | Represents the JSON value @"TF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTF
  | -- | Represents the JSON value @"TG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTG
  | -- | Represents the JSON value @"TH"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTH
  | -- | Represents the JSON value @"TJ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTJ
  | -- | Represents the JSON value @"TK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTK
  | -- | Represents the JSON value @"TL"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTL
  | -- | Represents the JSON value @"TM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTM
  | -- | Represents the JSON value @"TN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTN
  | -- | Represents the JSON value @"TO"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTO
  | -- | Represents the JSON value @"TR"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTR
  | -- | Represents the JSON value @"TT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTT
  | -- | Represents the JSON value @"TV"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTV
  | -- | Represents the JSON value @"TW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTW
  | -- | Represents the JSON value @"TZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTZ
  | -- | Represents the JSON value @"UA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUA
  | -- | Represents the JSON value @"UG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUG
  | -- | Represents the JSON value @"US"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUS
  | -- | Represents the JSON value @"UY"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUY
  | -- | Represents the JSON value @"UZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUZ
  | -- | Represents the JSON value @"VA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVA
  | -- | Represents the JSON value @"VC"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVC
  | -- | Represents the JSON value @"VE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVE
  | -- | Represents the JSON value @"VG"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVG
  | -- | Represents the JSON value @"VN"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVN
  | -- | Represents the JSON value @"VU"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVU
  | -- | Represents the JSON value @"WF"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumWF
  | -- | Represents the JSON value @"WS"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumWS
  | -- | Represents the JSON value @"XK"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumXK
  | -- | Represents the JSON value @"YE"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumYE
  | -- | Represents the JSON value @"YT"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumYT
  | -- | Represents the JSON value @"ZA"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZA
  | -- | Represents the JSON value @"ZM"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZM
  | -- | Represents the JSON value @"ZW"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZW
  | -- | Represents the JSON value @"ZZ"@
    Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZZ
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries' where
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'Other val) = val
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAC) = "AC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAD) = "AD"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAE) = "AE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAF) = "AF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAG) = "AG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAI) = "AI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAL) = "AL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAM) = "AM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAO) = "AO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAQ) = "AQ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAR) = "AR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAT) = "AT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAU) = "AU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAW) = "AW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAX) = "AX"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAZ) = "AZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBA) = "BA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBB) = "BB"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBD) = "BD"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBE) = "BE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBF) = "BF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBG) = "BG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBH) = "BH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBI) = "BI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBJ) = "BJ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBL) = "BL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBM) = "BM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBN) = "BN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBO) = "BO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBQ) = "BQ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBR) = "BR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBS) = "BS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBT) = "BT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBV) = "BV"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBW) = "BW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBY) = "BY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBZ) = "BZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCA) = "CA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCD) = "CD"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCF) = "CF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCG) = "CG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCH) = "CH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCI) = "CI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCK) = "CK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCL) = "CL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCM) = "CM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCN) = "CN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCO) = "CO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCR) = "CR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCV) = "CV"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCW) = "CW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCY) = "CY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCZ) = "CZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDE) = "DE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDJ) = "DJ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDK) = "DK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDM) = "DM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDO) = "DO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDZ) = "DZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEC) = "EC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEE) = "EE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEG) = "EG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEH) = "EH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumER) = "ER"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumES) = "ES"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumET) = "ET"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFI) = "FI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFJ) = "FJ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFK) = "FK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFO) = "FO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFR) = "FR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGA) = "GA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGB) = "GB"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGD) = "GD"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGE) = "GE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGF) = "GF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGG) = "GG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGH) = "GH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGI) = "GI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGL) = "GL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGM) = "GM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGN) = "GN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGP) = "GP"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGQ) = "GQ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGR) = "GR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGS) = "GS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGT) = "GT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGU) = "GU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGW) = "GW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGY) = "GY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHK) = "HK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHN) = "HN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHR) = "HR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHT) = "HT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHU) = "HU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumID) = "ID"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIE) = "IE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIL) = "IL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIM) = "IM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIN) = "IN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIO) = "IO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIQ) = "IQ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIS) = "IS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIT) = "IT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJE) = "JE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJM) = "JM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJO) = "JO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJP) = "JP"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKE) = "KE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKG) = "KG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKH) = "KH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKI) = "KI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKM) = "KM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKN) = "KN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKR) = "KR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKW) = "KW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKY) = "KY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKZ) = "KZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLA) = "LA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLB) = "LB"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLC) = "LC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLI) = "LI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLK) = "LK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLR) = "LR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLS) = "LS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLT) = "LT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLU) = "LU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLV) = "LV"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLY) = "LY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMA) = "MA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMC) = "MC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMD) = "MD"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumME) = "ME"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMF) = "MF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMG) = "MG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMK) = "MK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumML) = "ML"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMM) = "MM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMN) = "MN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMO) = "MO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMQ) = "MQ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMR) = "MR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMS) = "MS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMT) = "MT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMU) = "MU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMV) = "MV"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMW) = "MW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMX) = "MX"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMY) = "MY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMZ) = "MZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNA) = "NA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNC) = "NC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNE) = "NE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNG) = "NG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNI) = "NI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNL) = "NL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNO) = "NO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNP) = "NP"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNR) = "NR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNU) = "NU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNZ) = "NZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumOM) = "OM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPA) = "PA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPE) = "PE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPF) = "PF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPG) = "PG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPH) = "PH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPK) = "PK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPL) = "PL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPM) = "PM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPN) = "PN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPR) = "PR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPS) = "PS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPT) = "PT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPY) = "PY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumQA) = "QA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRE) = "RE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRO) = "RO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRS) = "RS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRU) = "RU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRW) = "RW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSA) = "SA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSB) = "SB"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSC) = "SC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSE) = "SE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSG) = "SG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSH) = "SH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSI) = "SI"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSJ) = "SJ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSK) = "SK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSL) = "SL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSM) = "SM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSN) = "SN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSO) = "SO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSR) = "SR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSS) = "SS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumST) = "ST"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSV) = "SV"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSX) = "SX"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSZ) = "SZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTA) = "TA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTC) = "TC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTD) = "TD"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTF) = "TF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTG) = "TG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTH) = "TH"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTJ) = "TJ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTK) = "TK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTL) = "TL"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTM) = "TM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTN) = "TN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTO) = "TO"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTR) = "TR"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTT) = "TT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTV) = "TV"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTW) = "TW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTZ) = "TZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUA) = "UA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUG) = "UG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUS) = "US"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUY) = "UY"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUZ) = "UZ"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVA) = "VA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVC) = "VC"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVE) = "VE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVG) = "VG"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVN) = "VN"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVU) = "VU"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumWF) = "WF"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumWS) = "WS"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumXK) = "XK"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumYE) = "YE"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumYT) = "YT"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZA) = "ZA"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZM) = "ZM"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZW) = "ZW"
  toJSON (Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZZ) = "ZZ"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "AC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAC
            | val GHC.Classes.== "AD" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAD
            | val GHC.Classes.== "AE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAE
            | val GHC.Classes.== "AF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAF
            | val GHC.Classes.== "AG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAG
            | val GHC.Classes.== "AI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAI
            | val GHC.Classes.== "AL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAL
            | val GHC.Classes.== "AM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAM
            | val GHC.Classes.== "AO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAO
            | val GHC.Classes.== "AQ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAQ
            | val GHC.Classes.== "AR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAR
            | val GHC.Classes.== "AT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAT
            | val GHC.Classes.== "AU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAU
            | val GHC.Classes.== "AW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAW
            | val GHC.Classes.== "AX" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAX
            | val GHC.Classes.== "AZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumAZ
            | val GHC.Classes.== "BA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBA
            | val GHC.Classes.== "BB" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBB
            | val GHC.Classes.== "BD" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBD
            | val GHC.Classes.== "BE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBE
            | val GHC.Classes.== "BF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBF
            | val GHC.Classes.== "BG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBG
            | val GHC.Classes.== "BH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBH
            | val GHC.Classes.== "BI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBI
            | val GHC.Classes.== "BJ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBJ
            | val GHC.Classes.== "BL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBL
            | val GHC.Classes.== "BM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBM
            | val GHC.Classes.== "BN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBN
            | val GHC.Classes.== "BO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBO
            | val GHC.Classes.== "BQ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBQ
            | val GHC.Classes.== "BR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBR
            | val GHC.Classes.== "BS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBS
            | val GHC.Classes.== "BT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBT
            | val GHC.Classes.== "BV" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBV
            | val GHC.Classes.== "BW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBW
            | val GHC.Classes.== "BY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBY
            | val GHC.Classes.== "BZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumBZ
            | val GHC.Classes.== "CA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCA
            | val GHC.Classes.== "CD" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCD
            | val GHC.Classes.== "CF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCF
            | val GHC.Classes.== "CG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCG
            | val GHC.Classes.== "CH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCH
            | val GHC.Classes.== "CI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCI
            | val GHC.Classes.== "CK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCK
            | val GHC.Classes.== "CL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCL
            | val GHC.Classes.== "CM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCM
            | val GHC.Classes.== "CN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCN
            | val GHC.Classes.== "CO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCO
            | val GHC.Classes.== "CR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCR
            | val GHC.Classes.== "CV" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCV
            | val GHC.Classes.== "CW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCW
            | val GHC.Classes.== "CY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCY
            | val GHC.Classes.== "CZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumCZ
            | val GHC.Classes.== "DE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDE
            | val GHC.Classes.== "DJ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDJ
            | val GHC.Classes.== "DK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDK
            | val GHC.Classes.== "DM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDM
            | val GHC.Classes.== "DO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDO
            | val GHC.Classes.== "DZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumDZ
            | val GHC.Classes.== "EC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEC
            | val GHC.Classes.== "EE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEE
            | val GHC.Classes.== "EG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEG
            | val GHC.Classes.== "EH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumEH
            | val GHC.Classes.== "ER" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumER
            | val GHC.Classes.== "ES" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumES
            | val GHC.Classes.== "ET" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumET
            | val GHC.Classes.== "FI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFI
            | val GHC.Classes.== "FJ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFJ
            | val GHC.Classes.== "FK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFK
            | val GHC.Classes.== "FO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFO
            | val GHC.Classes.== "FR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumFR
            | val GHC.Classes.== "GA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGA
            | val GHC.Classes.== "GB" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGB
            | val GHC.Classes.== "GD" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGD
            | val GHC.Classes.== "GE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGE
            | val GHC.Classes.== "GF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGF
            | val GHC.Classes.== "GG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGG
            | val GHC.Classes.== "GH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGH
            | val GHC.Classes.== "GI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGI
            | val GHC.Classes.== "GL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGL
            | val GHC.Classes.== "GM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGM
            | val GHC.Classes.== "GN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGN
            | val GHC.Classes.== "GP" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGP
            | val GHC.Classes.== "GQ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGQ
            | val GHC.Classes.== "GR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGR
            | val GHC.Classes.== "GS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGS
            | val GHC.Classes.== "GT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGT
            | val GHC.Classes.== "GU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGU
            | val GHC.Classes.== "GW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGW
            | val GHC.Classes.== "GY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumGY
            | val GHC.Classes.== "HK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHK
            | val GHC.Classes.== "HN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHN
            | val GHC.Classes.== "HR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHR
            | val GHC.Classes.== "HT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHT
            | val GHC.Classes.== "HU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumHU
            | val GHC.Classes.== "ID" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumID
            | val GHC.Classes.== "IE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIE
            | val GHC.Classes.== "IL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIL
            | val GHC.Classes.== "IM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIM
            | val GHC.Classes.== "IN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIN
            | val GHC.Classes.== "IO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIO
            | val GHC.Classes.== "IQ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIQ
            | val GHC.Classes.== "IS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIS
            | val GHC.Classes.== "IT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumIT
            | val GHC.Classes.== "JE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJE
            | val GHC.Classes.== "JM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJM
            | val GHC.Classes.== "JO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJO
            | val GHC.Classes.== "JP" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumJP
            | val GHC.Classes.== "KE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKE
            | val GHC.Classes.== "KG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKG
            | val GHC.Classes.== "KH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKH
            | val GHC.Classes.== "KI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKI
            | val GHC.Classes.== "KM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKM
            | val GHC.Classes.== "KN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKN
            | val GHC.Classes.== "KR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKR
            | val GHC.Classes.== "KW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKW
            | val GHC.Classes.== "KY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKY
            | val GHC.Classes.== "KZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumKZ
            | val GHC.Classes.== "LA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLA
            | val GHC.Classes.== "LB" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLB
            | val GHC.Classes.== "LC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLC
            | val GHC.Classes.== "LI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLI
            | val GHC.Classes.== "LK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLK
            | val GHC.Classes.== "LR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLR
            | val GHC.Classes.== "LS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLS
            | val GHC.Classes.== "LT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLT
            | val GHC.Classes.== "LU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLU
            | val GHC.Classes.== "LV" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLV
            | val GHC.Classes.== "LY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumLY
            | val GHC.Classes.== "MA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMA
            | val GHC.Classes.== "MC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMC
            | val GHC.Classes.== "MD" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMD
            | val GHC.Classes.== "ME" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumME
            | val GHC.Classes.== "MF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMF
            | val GHC.Classes.== "MG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMG
            | val GHC.Classes.== "MK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMK
            | val GHC.Classes.== "ML" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumML
            | val GHC.Classes.== "MM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMM
            | val GHC.Classes.== "MN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMN
            | val GHC.Classes.== "MO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMO
            | val GHC.Classes.== "MQ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMQ
            | val GHC.Classes.== "MR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMR
            | val GHC.Classes.== "MS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMS
            | val GHC.Classes.== "MT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMT
            | val GHC.Classes.== "MU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMU
            | val GHC.Classes.== "MV" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMV
            | val GHC.Classes.== "MW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMW
            | val GHC.Classes.== "MX" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMX
            | val GHC.Classes.== "MY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMY
            | val GHC.Classes.== "MZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumMZ
            | val GHC.Classes.== "NA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNA
            | val GHC.Classes.== "NC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNC
            | val GHC.Classes.== "NE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNE
            | val GHC.Classes.== "NG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNG
            | val GHC.Classes.== "NI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNI
            | val GHC.Classes.== "NL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNL
            | val GHC.Classes.== "NO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNO
            | val GHC.Classes.== "NP" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNP
            | val GHC.Classes.== "NR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNR
            | val GHC.Classes.== "NU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNU
            | val GHC.Classes.== "NZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumNZ
            | val GHC.Classes.== "OM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumOM
            | val GHC.Classes.== "PA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPA
            | val GHC.Classes.== "PE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPE
            | val GHC.Classes.== "PF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPF
            | val GHC.Classes.== "PG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPG
            | val GHC.Classes.== "PH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPH
            | val GHC.Classes.== "PK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPK
            | val GHC.Classes.== "PL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPL
            | val GHC.Classes.== "PM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPM
            | val GHC.Classes.== "PN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPN
            | val GHC.Classes.== "PR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPR
            | val GHC.Classes.== "PS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPS
            | val GHC.Classes.== "PT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPT
            | val GHC.Classes.== "PY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumPY
            | val GHC.Classes.== "QA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumQA
            | val GHC.Classes.== "RE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRE
            | val GHC.Classes.== "RO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRO
            | val GHC.Classes.== "RS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRS
            | val GHC.Classes.== "RU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRU
            | val GHC.Classes.== "RW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumRW
            | val GHC.Classes.== "SA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSA
            | val GHC.Classes.== "SB" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSB
            | val GHC.Classes.== "SC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSC
            | val GHC.Classes.== "SE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSE
            | val GHC.Classes.== "SG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSG
            | val GHC.Classes.== "SH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSH
            | val GHC.Classes.== "SI" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSI
            | val GHC.Classes.== "SJ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSJ
            | val GHC.Classes.== "SK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSK
            | val GHC.Classes.== "SL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSL
            | val GHC.Classes.== "SM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSM
            | val GHC.Classes.== "SN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSN
            | val GHC.Classes.== "SO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSO
            | val GHC.Classes.== "SR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSR
            | val GHC.Classes.== "SS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSS
            | val GHC.Classes.== "ST" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumST
            | val GHC.Classes.== "SV" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSV
            | val GHC.Classes.== "SX" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSX
            | val GHC.Classes.== "SZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumSZ
            | val GHC.Classes.== "TA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTA
            | val GHC.Classes.== "TC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTC
            | val GHC.Classes.== "TD" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTD
            | val GHC.Classes.== "TF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTF
            | val GHC.Classes.== "TG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTG
            | val GHC.Classes.== "TH" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTH
            | val GHC.Classes.== "TJ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTJ
            | val GHC.Classes.== "TK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTK
            | val GHC.Classes.== "TL" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTL
            | val GHC.Classes.== "TM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTM
            | val GHC.Classes.== "TN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTN
            | val GHC.Classes.== "TO" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTO
            | val GHC.Classes.== "TR" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTR
            | val GHC.Classes.== "TT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTT
            | val GHC.Classes.== "TV" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTV
            | val GHC.Classes.== "TW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTW
            | val GHC.Classes.== "TZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumTZ
            | val GHC.Classes.== "UA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUA
            | val GHC.Classes.== "UG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUG
            | val GHC.Classes.== "US" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUS
            | val GHC.Classes.== "UY" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUY
            | val GHC.Classes.== "UZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumUZ
            | val GHC.Classes.== "VA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVA
            | val GHC.Classes.== "VC" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVC
            | val GHC.Classes.== "VE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVE
            | val GHC.Classes.== "VG" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVG
            | val GHC.Classes.== "VN" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVN
            | val GHC.Classes.== "VU" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumVU
            | val GHC.Classes.== "WF" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumWF
            | val GHC.Classes.== "WS" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumWS
            | val GHC.Classes.== "XK" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumXK
            | val GHC.Classes.== "YE" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumYE
            | val GHC.Classes.== "YT" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumYT
            | val GHC.Classes.== "ZA" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZA
            | val GHC.Classes.== "ZM" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZM
            | val GHC.Classes.== "ZW" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZW
            | val GHC.Classes.== "ZZ" -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'EnumZZ
            | GHC.Base.otherwise -> Checkout'sessionShippingAddressCollection'NonNullableAllowedCountries'Other val
      )

-- | Defines the object schema located at @components.schemas.checkout.session.properties.shipping_cost.anyOf@ in the specification.
--
-- The details of the customer cost of shipping, including the customer chosen ShippingRate.
data Checkout'sessionShippingCost'NonNullable = Checkout'sessionShippingCost'NonNullable
  { -- | amount_subtotal: Total shipping cost before any discounts or taxes are applied.
    checkout'sessionShippingCost'NonNullableAmountSubtotal :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_tax: Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.
    checkout'sessionShippingCost'NonNullableAmountTax :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_total: Total shipping cost after discounts and taxes are applied.
    checkout'sessionShippingCost'NonNullableAmountTotal :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | shipping_rate: The ID of the ShippingRate for this order.
    checkout'sessionShippingCost'NonNullableShippingRate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableVariants)),
    -- | taxes: The taxes applied to the shipping rate.
    checkout'sessionShippingCost'NonNullableTaxes :: (GHC.Maybe.Maybe ([LineItemsTaxAmount]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingCost'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableAmountTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableAmountTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableTaxes obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableAmountTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableAmountTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingCost'NonNullableTaxes obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingCost'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionShippingCost'NonNullable" (\obj -> ((((GHC.Base.pure Checkout'sessionShippingCost'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "taxes"))

-- | Create a new 'Checkout'sessionShippingCost'NonNullable' with all required fields.
mkCheckout'sessionShippingCost'NonNullable :: Checkout'sessionShippingCost'NonNullable
mkCheckout'sessionShippingCost'NonNullable =
  Checkout'sessionShippingCost'NonNullable
    { checkout'sessionShippingCost'NonNullableAmountSubtotal = GHC.Maybe.Nothing,
      checkout'sessionShippingCost'NonNullableAmountTax = GHC.Maybe.Nothing,
      checkout'sessionShippingCost'NonNullableAmountTotal = GHC.Maybe.Nothing,
      checkout'sessionShippingCost'NonNullableShippingRate = GHC.Maybe.Nothing,
      checkout'sessionShippingCost'NonNullableTaxes = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.shipping_cost.anyOf.properties.shipping_rate.anyOf@ in the specification.
--
-- The ID of the ShippingRate for this order.
data Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableVariants
  = Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableShippingRate ShippingRate
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableVariants where
  toJSON (Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableShippingRate a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableVariants where
  parseJSON val = case (Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionShippingCost'NonNullableShippingRate'NonNullableShippingRate Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.shipping_details.anyOf@ in the specification.
--
-- Shipping information for this Checkout Session.
data Checkout'sessionShippingDetails'NonNullable = Checkout'sessionShippingDetails'NonNullable
  { -- | address:
    checkout'sessionShippingDetails'NonNullableAddress :: (GHC.Maybe.Maybe Address),
    -- | carrier: The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShippingDetails'NonNullableCarrier :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name: Recipient name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShippingDetails'NonNullableName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | phone: Recipient phone (including extension).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShippingDetails'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | tracking_number: The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    checkout'sessionShippingDetails'NonNullableTrackingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionShippingDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tracking_number" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableTrackingNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tracking_number" Data.Aeson.Types.ToJSON..=)) (checkout'sessionShippingDetails'NonNullableTrackingNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionShippingDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionShippingDetails'NonNullable" (\obj -> ((((GHC.Base.pure Checkout'sessionShippingDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tracking_number"))

-- | Create a new 'Checkout'sessionShippingDetails'NonNullable' with all required fields.
mkCheckout'sessionShippingDetails'NonNullable :: Checkout'sessionShippingDetails'NonNullable
mkCheckout'sessionShippingDetails'NonNullable =
  Checkout'sessionShippingDetails'NonNullable
    { checkout'sessionShippingDetails'NonNullableAddress = GHC.Maybe.Nothing,
      checkout'sessionShippingDetails'NonNullableCarrier = GHC.Maybe.Nothing,
      checkout'sessionShippingDetails'NonNullableName = GHC.Maybe.Nothing,
      checkout'sessionShippingDetails'NonNullablePhone = GHC.Maybe.Nothing,
      checkout'sessionShippingDetails'NonNullableTrackingNumber = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.status@ in the specification.
--
-- The status of the Checkout Session, one of \`open\`, \`complete\`, or \`expired\`.
data Checkout'sessionStatus'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionStatus'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionStatus'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"complete"@
    Checkout'sessionStatus'NonNullableEnumComplete
  | -- | Represents the JSON value @"expired"@
    Checkout'sessionStatus'NonNullableEnumExpired
  | -- | Represents the JSON value @"open"@
    Checkout'sessionStatus'NonNullableEnumOpen
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionStatus'NonNullable where
  toJSON (Checkout'sessionStatus'NonNullableOther val) = val
  toJSON (Checkout'sessionStatus'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionStatus'NonNullableEnumComplete) = "complete"
  toJSON (Checkout'sessionStatus'NonNullableEnumExpired) = "expired"
  toJSON (Checkout'sessionStatus'NonNullableEnumOpen) = "open"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionStatus'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "complete" -> Checkout'sessionStatus'NonNullableEnumComplete
            | val GHC.Classes.== "expired" -> Checkout'sessionStatus'NonNullableEnumExpired
            | val GHC.Classes.== "open" -> Checkout'sessionStatus'NonNullableEnumOpen
            | GHC.Base.otherwise -> Checkout'sessionStatus'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.submit_type@ in the specification.
--
-- Describes the type of transaction being performed by Checkout in order to customize
-- relevant text on the page, such as the submit button. \`submit_type\` can only be
-- specified on Checkout Sessions in \`payment\` mode, but not Checkout Sessions
-- in \`subscription\` or \`setup\` mode. Possible values are \`auto\`, \`pay\`, \`book\`, \`donate\`. If blank or \`auto\`, \`pay\` is used.
data Checkout'sessionSubmitType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionSubmitType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionSubmitType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    Checkout'sessionSubmitType'NonNullableEnumAuto
  | -- | Represents the JSON value @"book"@
    Checkout'sessionSubmitType'NonNullableEnumBook
  | -- | Represents the JSON value @"donate"@
    Checkout'sessionSubmitType'NonNullableEnumDonate
  | -- | Represents the JSON value @"pay"@
    Checkout'sessionSubmitType'NonNullableEnumPay
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionSubmitType'NonNullable where
  toJSON (Checkout'sessionSubmitType'NonNullableOther val) = val
  toJSON (Checkout'sessionSubmitType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionSubmitType'NonNullableEnumAuto) = "auto"
  toJSON (Checkout'sessionSubmitType'NonNullableEnumBook) = "book"
  toJSON (Checkout'sessionSubmitType'NonNullableEnumDonate) = "donate"
  toJSON (Checkout'sessionSubmitType'NonNullableEnumPay) = "pay"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionSubmitType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> Checkout'sessionSubmitType'NonNullableEnumAuto
            | val GHC.Classes.== "book" -> Checkout'sessionSubmitType'NonNullableEnumBook
            | val GHC.Classes.== "donate" -> Checkout'sessionSubmitType'NonNullableEnumDonate
            | val GHC.Classes.== "pay" -> Checkout'sessionSubmitType'NonNullableEnumPay
            | GHC.Base.otherwise -> Checkout'sessionSubmitType'NonNullableOther val
      )

-- | Defines the oneOf schema located at @components.schemas.checkout.session.properties.subscription.anyOf@ in the specification.
--
-- The ID of the subscription for Checkout Sessions in \`subscription\` mode.
data Checkout'sessionSubscription'NonNullableVariants
  = Checkout'sessionSubscription'NonNullableText Data.Text.Internal.Text
  | Checkout'sessionSubscription'NonNullableSubscription Subscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionSubscription'NonNullableVariants where
  toJSON (Checkout'sessionSubscription'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Checkout'sessionSubscription'NonNullableSubscription a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionSubscription'NonNullableVariants where
  parseJSON val = case (Checkout'sessionSubscription'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Checkout'sessionSubscription'NonNullableSubscription Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.checkout.session.properties.total_details.anyOf@ in the specification.
--
-- Tax and discount details for the computed total amount.
data Checkout'sessionTotalDetails'NonNullable = Checkout'sessionTotalDetails'NonNullable
  { -- | amount_discount: This is the sum of all the discounts.
    checkout'sessionTotalDetails'NonNullableAmountDiscount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_shipping: This is the sum of all the shipping amounts.
    checkout'sessionTotalDetails'NonNullableAmountShipping :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | amount_tax: This is the sum of all the tax amounts.
    checkout'sessionTotalDetails'NonNullableAmountTax :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | breakdown:
    checkout'sessionTotalDetails'NonNullableBreakdown :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionTotalDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_discount" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableAmountDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_shipping" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableAmountShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableAmountTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("breakdown" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableBreakdown obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_discount" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableAmountDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_shipping" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableAmountShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableAmountTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("breakdown" Data.Aeson.Types.ToJSON..=)) (checkout'sessionTotalDetails'NonNullableBreakdown obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionTotalDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Checkout'sessionTotalDetails'NonNullable" (\obj -> (((GHC.Base.pure Checkout'sessionTotalDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "breakdown"))

-- | Create a new 'Checkout'sessionTotalDetails'NonNullable' with all required fields.
mkCheckout'sessionTotalDetails'NonNullable :: Checkout'sessionTotalDetails'NonNullable
mkCheckout'sessionTotalDetails'NonNullable =
  Checkout'sessionTotalDetails'NonNullable
    { checkout'sessionTotalDetails'NonNullableAmountDiscount = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails'NonNullableAmountShipping = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails'NonNullableAmountTax = GHC.Maybe.Nothing,
      checkout'sessionTotalDetails'NonNullableBreakdown = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.checkout.session.properties.ui_mode@ in the specification.
--
-- The UI mode of the Session. Can be \`hosted\` (default) or \`embedded\`.
data Checkout'sessionUiMode'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Checkout'sessionUiMode'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Checkout'sessionUiMode'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"embedded"@
    Checkout'sessionUiMode'NonNullableEnumEmbedded
  | -- | Represents the JSON value @"hosted"@
    Checkout'sessionUiMode'NonNullableEnumHosted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Checkout'sessionUiMode'NonNullable where
  toJSON (Checkout'sessionUiMode'NonNullableOther val) = val
  toJSON (Checkout'sessionUiMode'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Checkout'sessionUiMode'NonNullableEnumEmbedded) = "embedded"
  toJSON (Checkout'sessionUiMode'NonNullableEnumHosted) = "hosted"

instance Data.Aeson.Types.FromJSON.FromJSON Checkout'sessionUiMode'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "embedded" -> Checkout'sessionUiMode'NonNullableEnumEmbedded
            | val GHC.Classes.== "hosted" -> Checkout'sessionUiMode'NonNullableEnumHosted
            | GHC.Base.otherwise -> Checkout'sessionUiMode'NonNullableOther val
      )
