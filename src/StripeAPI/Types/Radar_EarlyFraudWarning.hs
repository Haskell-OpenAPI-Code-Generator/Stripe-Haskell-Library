{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema Radar_EarlyFraudWarning
module StripeAPI.Types.Radar_EarlyFraudWarning where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Charge
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the data type for the schema radar.early_fraud_warning
--
-- An early fraud warning indicates that the card issuer has notified us that a
-- charge may be fraudulent.
--
-- Related guide: [Early Fraud Warnings](https:\/\/stripe.com\/docs\/disputes\/measuring\#early-fraud-warnings).
data Radar'earlyFraudWarning
  = Radar'earlyFraudWarning
      { -- | actionable: An EFW is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an EFW, in order to avoid receiving a dispute later.
        radar'earlyFraudWarningActionable :: GHC.Types.Bool,
        -- | charge: ID of the charge this early fraud warning is for, optionally expanded.
        radar'earlyFraudWarningCharge :: Radar'earlyFraudWarningCharge'Variants,
        -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
        radar'earlyFraudWarningCreated :: GHC.Types.Int,
        -- | fraud_type: The type of fraud labelled by the issuer. One of \`card_never_received\`, \`fraudulent_card_application\`, \`made_with_counterfeit_card\`, \`made_with_lost_card\`, \`made_with_stolen_card\`, \`misc\`, \`unauthorized_use_of_card\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        radar'earlyFraudWarningFraudType :: Data.Text.Internal.Text,
        -- | id: Unique identifier for the object.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        radar'earlyFraudWarningId :: Data.Text.Internal.Text,
        -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
        radar'earlyFraudWarningLivemode :: GHC.Types.Bool,
        -- | object: String representing the object\'s type. Objects of the same type share the same value.
        radar'earlyFraudWarningObject :: Radar'earlyFraudWarningObject'
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Radar'earlyFraudWarning where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "actionable" (radar'earlyFraudWarningActionable obj) : (Data.Aeson..=) "charge" (radar'earlyFraudWarningCharge obj) : (Data.Aeson..=) "created" (radar'earlyFraudWarningCreated obj) : (Data.Aeson..=) "fraud_type" (radar'earlyFraudWarningFraudType obj) : (Data.Aeson..=) "id" (radar'earlyFraudWarningId obj) : (Data.Aeson..=) "livemode" (radar'earlyFraudWarningLivemode obj) : (Data.Aeson..=) "object" (radar'earlyFraudWarningObject obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "actionable" (radar'earlyFraudWarningActionable obj) GHC.Base.<> ((Data.Aeson..=) "charge" (radar'earlyFraudWarningCharge obj) GHC.Base.<> ((Data.Aeson..=) "created" (radar'earlyFraudWarningCreated obj) GHC.Base.<> ((Data.Aeson..=) "fraud_type" (radar'earlyFraudWarningFraudType obj) GHC.Base.<> ((Data.Aeson..=) "id" (radar'earlyFraudWarningId obj) GHC.Base.<> ((Data.Aeson..=) "livemode" (radar'earlyFraudWarningLivemode obj) GHC.Base.<> (Data.Aeson..=) "object" (radar'earlyFraudWarningObject obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON Radar'earlyFraudWarning where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Radar'earlyFraudWarning" (\obj -> ((((((GHC.Base.pure Radar'earlyFraudWarning GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "actionable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "charge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "fraud_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object"))

-- | Define the one-of schema radar.early_fraud_warningCharge\'
--
-- ID of the charge this early fraud warning is for, optionally expanded.
data Radar'earlyFraudWarningCharge'Variants
  = Radar'earlyFraudWarningCharge'Charge Charge
  | Radar'earlyFraudWarningCharge'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Radar'earlyFraudWarningCharge'Variants where
  toJSON (Radar'earlyFraudWarningCharge'Charge a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Radar'earlyFraudWarningCharge'Text a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Radar'earlyFraudWarningCharge'Variants where
  parseJSON val = case Data.Aeson.Types.FromJSON.fromJSON val of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ Radar'earlyFraudWarningCharge'Charge a
    Data.Aeson.Types.Internal.Error _ -> case Data.Aeson.Types.FromJSON.fromJSON val of
      Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ Radar'earlyFraudWarningCharge'Text a
      Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema radar.early_fraud_warningObject\'
--
-- String representing the object\'s type. Objects of the same type share the same value.
data Radar'earlyFraudWarningObject'
  = Radar'earlyFraudWarningObject'EnumOther Data.Aeson.Types.Internal.Value
  | Radar'earlyFraudWarningObject'EnumTyped Data.Text.Internal.Text
  | Radar'earlyFraudWarningObject'EnumStringRadar'earlyFraudWarning
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Radar'earlyFraudWarningObject' where
  toJSON (Radar'earlyFraudWarningObject'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (Radar'earlyFraudWarningObject'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (Radar'earlyFraudWarningObject'EnumStringRadar'earlyFraudWarning) = "radar.early_fraud_warning"

instance Data.Aeson.Types.FromJSON.FromJSON Radar'earlyFraudWarningObject' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "radar.early_fraud_warning" -> Radar'earlyFraudWarningObject'EnumStringRadar'earlyFraudWarning
            | GHC.Base.otherwise -> Radar'earlyFraudWarningObject'EnumOther val
      )
