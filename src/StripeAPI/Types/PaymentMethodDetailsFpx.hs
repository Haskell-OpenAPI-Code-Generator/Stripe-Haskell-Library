{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodDetailsFpx
module StripeAPI.Types.PaymentMethodDetailsFpx where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the data type for the schema payment_method_details_fpx
data PaymentMethodDetailsFpx
  = PaymentMethodDetailsFpx
      { -- | bank: The customer\'s bank. Can be one of \`affin_bank\`, \`alliance_bank\`, \`ambank\`, \`bank_islam\`, \`bank_muamalat\`, \`bank_rakyat\`, \`bsn\`, \`cimb\`, \`hong_leong_bank\`, \`hsbc\`, \`kfh\`, \`maybank2u\`, \`ocbc\`, \`public_bank\`, \`rhb\`, \`standard_chartered\`, \`uob\`, \`deutsche_bank\`, \`maybank2e\`, or \`pb_enterprise\`.
        paymentMethodDetailsFpxBank :: PaymentMethodDetailsFpxBank',
        -- | transaction_id: Unique transaction id generated by FPX for every request from the merchant
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsFpxTransactionId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsFpx where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "bank" (paymentMethodDetailsFpxBank obj) : (Data.Aeson..=) "transaction_id" (paymentMethodDetailsFpxTransactionId obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "bank" (paymentMethodDetailsFpxBank obj) GHC.Base.<> (Data.Aeson..=) "transaction_id" (paymentMethodDetailsFpxTransactionId obj))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsFpx where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsFpx" (\obj -> (GHC.Base.pure PaymentMethodDetailsFpx GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bank")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transaction_id"))

-- | Defines the enum schema payment_method_details_fpxBank\'
--
-- The customer\'s bank. Can be one of \`affin_bank\`, \`alliance_bank\`, \`ambank\`, \`bank_islam\`, \`bank_muamalat\`, \`bank_rakyat\`, \`bsn\`, \`cimb\`, \`hong_leong_bank\`, \`hsbc\`, \`kfh\`, \`maybank2u\`, \`ocbc\`, \`public_bank\`, \`rhb\`, \`standard_chartered\`, \`uob\`, \`deutsche_bank\`, \`maybank2e\`, or \`pb_enterprise\`.
data PaymentMethodDetailsFpxBank'
  = PaymentMethodDetailsFpxBank'EnumOther Data.Aeson.Types.Internal.Value
  | PaymentMethodDetailsFpxBank'EnumTyped Data.Text.Internal.Text
  | PaymentMethodDetailsFpxBank'EnumStringAffinBank
  | PaymentMethodDetailsFpxBank'EnumStringAllianceBank
  | PaymentMethodDetailsFpxBank'EnumStringAmbank
  | PaymentMethodDetailsFpxBank'EnumStringBankIslam
  | PaymentMethodDetailsFpxBank'EnumStringBankMuamalat
  | PaymentMethodDetailsFpxBank'EnumStringBankRakyat
  | PaymentMethodDetailsFpxBank'EnumStringBsn
  | PaymentMethodDetailsFpxBank'EnumStringCimb
  | PaymentMethodDetailsFpxBank'EnumStringDeutscheBank
  | PaymentMethodDetailsFpxBank'EnumStringHongLeongBank
  | PaymentMethodDetailsFpxBank'EnumStringHsbc
  | PaymentMethodDetailsFpxBank'EnumStringKfh
  | PaymentMethodDetailsFpxBank'EnumStringMaybank2e
  | PaymentMethodDetailsFpxBank'EnumStringMaybank2u
  | PaymentMethodDetailsFpxBank'EnumStringOcbc
  | PaymentMethodDetailsFpxBank'EnumStringPbEnterprise
  | PaymentMethodDetailsFpxBank'EnumStringPublicBank
  | PaymentMethodDetailsFpxBank'EnumStringRhb
  | PaymentMethodDetailsFpxBank'EnumStringStandardChartered
  | PaymentMethodDetailsFpxBank'EnumStringUob
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsFpxBank' where
  toJSON (PaymentMethodDetailsFpxBank'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsFpxBank'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsFpxBank'EnumStringAffinBank) = "affin_bank"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringAllianceBank) = "alliance_bank"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringAmbank) = "ambank"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringBankIslam) = "bank_islam"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringBankMuamalat) = "bank_muamalat"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringBankRakyat) = "bank_rakyat"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringBsn) = "bsn"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringCimb) = "cimb"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringDeutscheBank) = "deutsche_bank"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringHongLeongBank) = "hong_leong_bank"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringHsbc) = "hsbc"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringKfh) = "kfh"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringMaybank2e) = "maybank2e"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringMaybank2u) = "maybank2u"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringOcbc) = "ocbc"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringPbEnterprise) = "pb_enterprise"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringPublicBank) = "public_bank"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringRhb) = "rhb"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringStandardChartered) = "standard_chartered"
  toJSON (PaymentMethodDetailsFpxBank'EnumStringUob) = "uob"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsFpxBank' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "affin_bank" -> PaymentMethodDetailsFpxBank'EnumStringAffinBank
            | val GHC.Classes.== "alliance_bank" -> PaymentMethodDetailsFpxBank'EnumStringAllianceBank
            | val GHC.Classes.== "ambank" -> PaymentMethodDetailsFpxBank'EnumStringAmbank
            | val GHC.Classes.== "bank_islam" -> PaymentMethodDetailsFpxBank'EnumStringBankIslam
            | val GHC.Classes.== "bank_muamalat" -> PaymentMethodDetailsFpxBank'EnumStringBankMuamalat
            | val GHC.Classes.== "bank_rakyat" -> PaymentMethodDetailsFpxBank'EnumStringBankRakyat
            | val GHC.Classes.== "bsn" -> PaymentMethodDetailsFpxBank'EnumStringBsn
            | val GHC.Classes.== "cimb" -> PaymentMethodDetailsFpxBank'EnumStringCimb
            | val GHC.Classes.== "deutsche_bank" -> PaymentMethodDetailsFpxBank'EnumStringDeutscheBank
            | val GHC.Classes.== "hong_leong_bank" -> PaymentMethodDetailsFpxBank'EnumStringHongLeongBank
            | val GHC.Classes.== "hsbc" -> PaymentMethodDetailsFpxBank'EnumStringHsbc
            | val GHC.Classes.== "kfh" -> PaymentMethodDetailsFpxBank'EnumStringKfh
            | val GHC.Classes.== "maybank2e" -> PaymentMethodDetailsFpxBank'EnumStringMaybank2e
            | val GHC.Classes.== "maybank2u" -> PaymentMethodDetailsFpxBank'EnumStringMaybank2u
            | val GHC.Classes.== "ocbc" -> PaymentMethodDetailsFpxBank'EnumStringOcbc
            | val GHC.Classes.== "pb_enterprise" -> PaymentMethodDetailsFpxBank'EnumStringPbEnterprise
            | val GHC.Classes.== "public_bank" -> PaymentMethodDetailsFpxBank'EnumStringPublicBank
            | val GHC.Classes.== "rhb" -> PaymentMethodDetailsFpxBank'EnumStringRhb
            | val GHC.Classes.== "standard_chartered" -> PaymentMethodDetailsFpxBank'EnumStringStandardChartered
            | val GHC.Classes.== "uob" -> PaymentMethodDetailsFpxBank'EnumStringUob
            | GHC.Base.otherwise -> PaymentMethodDetailsFpxBank'EnumOther val
      )
