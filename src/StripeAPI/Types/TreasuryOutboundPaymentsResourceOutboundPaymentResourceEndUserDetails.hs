{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails
module StripeAPI.Types.TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.treasury_outbound_payments_resource_outbound_payment_resource_end_user_details@ in the specification.
data TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails = TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails
  { -- | ip_address: IP address of the user initiating the OutboundPayment. Set if \`present\` is set to \`true\`. IP address collection is required for risk and compliance reasons. This will be used to help determine if the OutboundPayment is authorized or should be blocked.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsIpAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | present: \`true\` if the OutboundPayment creation request is being made on behalf of an end user by a platform. Otherwise, \`false\`.
    treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsIpAddress obj) : ["present" Data.Aeson.Types.ToJSON..= treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsIpAddress obj) : ["present" Data.Aeson.Types.ToJSON..= treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails" (\obj -> (GHC.Base.pure TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "present"))

-- | Create a new 'TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails' with all required fields.
mkTreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails ::
  -- | 'treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent'
  GHC.Types.Bool ->
  TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails
mkTreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent =
  TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails
    { treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsIpAddress = GHC.Maybe.Nothing,
      treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent = treasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetailsPresent
    }
