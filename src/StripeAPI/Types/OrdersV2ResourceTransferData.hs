{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema OrdersV2ResourceTransferData
module StripeAPI.Types.OrdersV2ResourceTransferData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Account
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.orders_v2_resource_transfer_data@ in the specification.
data OrdersV2ResourceTransferData = OrdersV2ResourceTransferData
  { -- | amount: The amount that will be transferred automatically when the order is paid. If no amount is set, the full amount is transferred. There cannot be any line items with recurring prices when using this field.
    ordersV2ResourceTransferDataAmount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | destination: ID of the Connected account receiving the transfer.
    ordersV2ResourceTransferDataDestination :: OrdersV2ResourceTransferDataDestination'Variants
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON OrdersV2ResourceTransferData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (ordersV2ResourceTransferDataAmount obj) : ["destination" Data.Aeson.Types.ToJSON..= ordersV2ResourceTransferDataDestination obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (ordersV2ResourceTransferDataAmount obj) : ["destination" Data.Aeson.Types.ToJSON..= ordersV2ResourceTransferDataDestination obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON OrdersV2ResourceTransferData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "OrdersV2ResourceTransferData" (\obj -> (GHC.Base.pure OrdersV2ResourceTransferData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination"))

-- | Create a new 'OrdersV2ResourceTransferData' with all required fields.
mkOrdersV2ResourceTransferData ::
  -- | 'ordersV2ResourceTransferDataDestination'
  OrdersV2ResourceTransferDataDestination'Variants ->
  OrdersV2ResourceTransferData
mkOrdersV2ResourceTransferData ordersV2ResourceTransferDataDestination =
  OrdersV2ResourceTransferData
    { ordersV2ResourceTransferDataAmount = GHC.Maybe.Nothing,
      ordersV2ResourceTransferDataDestination = ordersV2ResourceTransferDataDestination
    }

-- | Defines the oneOf schema located at @components.schemas.orders_v2_resource_transfer_data.properties.destination.anyOf@ in the specification.
--
-- ID of the Connected account receiving the transfer.
data OrdersV2ResourceTransferDataDestination'Variants
  = OrdersV2ResourceTransferDataDestination'Text Data.Text.Internal.Text
  | OrdersV2ResourceTransferDataDestination'Account Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON OrdersV2ResourceTransferDataDestination'Variants where
  toJSON (OrdersV2ResourceTransferDataDestination'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (OrdersV2ResourceTransferDataDestination'Account a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON OrdersV2ResourceTransferDataDestination'Variants where
  parseJSON val = case (OrdersV2ResourceTransferDataDestination'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((OrdersV2ResourceTransferDataDestination'Account Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
