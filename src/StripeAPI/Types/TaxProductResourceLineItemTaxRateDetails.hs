{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema TaxProductResourceLineItemTaxRateDetails
module StripeAPI.Types.TaxProductResourceLineItemTaxRateDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.tax_product_resource_line_item_tax_rate_details@ in the specification.
data TaxProductResourceLineItemTaxRateDetails = TaxProductResourceLineItemTaxRateDetails
  { -- | display_name: A localized display name for tax type, intended to be human-readable. For example, \"Local Sales and Use Tax\", \"Value-added tax (VAT)\", or \"Umsatzsteuer (USt.)\".
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    taxProductResourceLineItemTaxRateDetailsDisplayName :: Data.Text.Internal.Text,
    -- | percentage_decimal: The tax rate percentage as a string. For example, 8.5% is represented as \"8.5\".
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    taxProductResourceLineItemTaxRateDetailsPercentageDecimal :: Data.Text.Internal.Text,
    -- | tax_type: The tax type, such as \`vat\` or \`sales_tax\`.
    taxProductResourceLineItemTaxRateDetailsTaxType :: TaxProductResourceLineItemTaxRateDetailsTaxType'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON TaxProductResourceLineItemTaxRateDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["display_name" Data.Aeson.Types.ToJSON..= taxProductResourceLineItemTaxRateDetailsDisplayName obj] : ["percentage_decimal" Data.Aeson.Types.ToJSON..= taxProductResourceLineItemTaxRateDetailsPercentageDecimal obj] : ["tax_type" Data.Aeson.Types.ToJSON..= taxProductResourceLineItemTaxRateDetailsTaxType obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["display_name" Data.Aeson.Types.ToJSON..= taxProductResourceLineItemTaxRateDetailsDisplayName obj] : ["percentage_decimal" Data.Aeson.Types.ToJSON..= taxProductResourceLineItemTaxRateDetailsPercentageDecimal obj] : ["tax_type" Data.Aeson.Types.ToJSON..= taxProductResourceLineItemTaxRateDetailsTaxType obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON TaxProductResourceLineItemTaxRateDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "TaxProductResourceLineItemTaxRateDetails" (\obj -> ((GHC.Base.pure TaxProductResourceLineItemTaxRateDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "display_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "percentage_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tax_type"))

-- | Create a new 'TaxProductResourceLineItemTaxRateDetails' with all required fields.
mkTaxProductResourceLineItemTaxRateDetails ::
  -- | 'taxProductResourceLineItemTaxRateDetailsDisplayName'
  Data.Text.Internal.Text ->
  -- | 'taxProductResourceLineItemTaxRateDetailsPercentageDecimal'
  Data.Text.Internal.Text ->
  -- | 'taxProductResourceLineItemTaxRateDetailsTaxType'
  TaxProductResourceLineItemTaxRateDetailsTaxType' ->
  TaxProductResourceLineItemTaxRateDetails
mkTaxProductResourceLineItemTaxRateDetails taxProductResourceLineItemTaxRateDetailsDisplayName taxProductResourceLineItemTaxRateDetailsPercentageDecimal taxProductResourceLineItemTaxRateDetailsTaxType =
  TaxProductResourceLineItemTaxRateDetails
    { taxProductResourceLineItemTaxRateDetailsDisplayName = taxProductResourceLineItemTaxRateDetailsDisplayName,
      taxProductResourceLineItemTaxRateDetailsPercentageDecimal = taxProductResourceLineItemTaxRateDetailsPercentageDecimal,
      taxProductResourceLineItemTaxRateDetailsTaxType = taxProductResourceLineItemTaxRateDetailsTaxType
    }

-- | Defines the enum schema located at @components.schemas.tax_product_resource_line_item_tax_rate_details.properties.tax_type@ in the specification.
--
-- The tax type, such as \`vat\` or \`sales_tax\`.
data TaxProductResourceLineItemTaxRateDetailsTaxType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    TaxProductResourceLineItemTaxRateDetailsTaxType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    TaxProductResourceLineItemTaxRateDetailsTaxType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"amusement_tax"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumAmusementTax
  | -- | Represents the JSON value @"communications_tax"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumCommunicationsTax
  | -- | Represents the JSON value @"gst"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumGst
  | -- | Represents the JSON value @"hst"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumHst
  | -- | Represents the JSON value @"igst"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumIgst
  | -- | Represents the JSON value @"jct"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumJct
  | -- | Represents the JSON value @"lease_tax"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumLeaseTax
  | -- | Represents the JSON value @"pst"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumPst
  | -- | Represents the JSON value @"qst"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumQst
  | -- | Represents the JSON value @"rst"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumRst
  | -- | Represents the JSON value @"sales_tax"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumSalesTax
  | -- | Represents the JSON value @"vat"@
    TaxProductResourceLineItemTaxRateDetailsTaxType'EnumVat
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON TaxProductResourceLineItemTaxRateDetailsTaxType' where
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'Other val) = val
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumAmusementTax) = "amusement_tax"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumCommunicationsTax) = "communications_tax"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumGst) = "gst"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumHst) = "hst"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumIgst) = "igst"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumJct) = "jct"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumLeaseTax) = "lease_tax"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumPst) = "pst"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumQst) = "qst"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumRst) = "rst"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumSalesTax) = "sales_tax"
  toJSON (TaxProductResourceLineItemTaxRateDetailsTaxType'EnumVat) = "vat"

instance Data.Aeson.Types.FromJSON.FromJSON TaxProductResourceLineItemTaxRateDetailsTaxType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "amusement_tax" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumAmusementTax
            | val GHC.Classes.== "communications_tax" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumCommunicationsTax
            | val GHC.Classes.== "gst" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumGst
            | val GHC.Classes.== "hst" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumHst
            | val GHC.Classes.== "igst" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumIgst
            | val GHC.Classes.== "jct" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumJct
            | val GHC.Classes.== "lease_tax" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumLeaseTax
            | val GHC.Classes.== "pst" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumPst
            | val GHC.Classes.== "qst" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumQst
            | val GHC.Classes.== "rst" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumRst
            | val GHC.Classes.== "sales_tax" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumSalesTax
            | val GHC.Classes.== "vat" -> TaxProductResourceLineItemTaxRateDetailsTaxType'EnumVat
            | GHC.Base.otherwise -> TaxProductResourceLineItemTaxRateDetailsTaxType'Other val
      )
