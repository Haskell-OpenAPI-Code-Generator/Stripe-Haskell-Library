{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema CancellationDetails
module StripeAPI.Types.CancellationDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.cancellation_details@ in the specification.
data CancellationDetails = CancellationDetails
  { -- | comment: Additional comments about why the user canceled the subscription, if the subscription was canceled explicitly by the user.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    cancellationDetailsComment :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | feedback: The customer submitted reason for why they canceled, if the subscription was canceled explicitly by the user.
    cancellationDetailsFeedback :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable CancellationDetailsFeedback'NonNullable)),
    -- | reason: Why this subscription was canceled.
    cancellationDetailsReason :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable CancellationDetailsReason'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON CancellationDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("comment" Data.Aeson.Types.ToJSON..=)) (cancellationDetailsComment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("feedback" Data.Aeson.Types.ToJSON..=)) (cancellationDetailsFeedback obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reason" Data.Aeson.Types.ToJSON..=)) (cancellationDetailsReason obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("comment" Data.Aeson.Types.ToJSON..=)) (cancellationDetailsComment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("feedback" Data.Aeson.Types.ToJSON..=)) (cancellationDetailsFeedback obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reason" Data.Aeson.Types.ToJSON..=)) (cancellationDetailsReason obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON CancellationDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "CancellationDetails" (\obj -> ((GHC.Base.pure CancellationDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "comment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "feedback")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reason"))

-- | Create a new 'CancellationDetails' with all required fields.
mkCancellationDetails :: CancellationDetails
mkCancellationDetails =
  CancellationDetails
    { cancellationDetailsComment = GHC.Maybe.Nothing,
      cancellationDetailsFeedback = GHC.Maybe.Nothing,
      cancellationDetailsReason = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.cancellation_details.properties.feedback@ in the specification.
--
-- The customer submitted reason for why they canceled, if the subscription was canceled explicitly by the user.
data CancellationDetailsFeedback'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    CancellationDetailsFeedback'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    CancellationDetailsFeedback'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"customer_service"@
    CancellationDetailsFeedback'NonNullableEnumCustomerService
  | -- | Represents the JSON value @"low_quality"@
    CancellationDetailsFeedback'NonNullableEnumLowQuality
  | -- | Represents the JSON value @"missing_features"@
    CancellationDetailsFeedback'NonNullableEnumMissingFeatures
  | -- | Represents the JSON value @"other"@
    CancellationDetailsFeedback'NonNullableEnumOther
  | -- | Represents the JSON value @"switched_service"@
    CancellationDetailsFeedback'NonNullableEnumSwitchedService
  | -- | Represents the JSON value @"too_complex"@
    CancellationDetailsFeedback'NonNullableEnumTooComplex
  | -- | Represents the JSON value @"too_expensive"@
    CancellationDetailsFeedback'NonNullableEnumTooExpensive
  | -- | Represents the JSON value @"unused"@
    CancellationDetailsFeedback'NonNullableEnumUnused
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CancellationDetailsFeedback'NonNullable where
  toJSON (CancellationDetailsFeedback'NonNullableOther val) = val
  toJSON (CancellationDetailsFeedback'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (CancellationDetailsFeedback'NonNullableEnumCustomerService) = "customer_service"
  toJSON (CancellationDetailsFeedback'NonNullableEnumLowQuality) = "low_quality"
  toJSON (CancellationDetailsFeedback'NonNullableEnumMissingFeatures) = "missing_features"
  toJSON (CancellationDetailsFeedback'NonNullableEnumOther) = "other"
  toJSON (CancellationDetailsFeedback'NonNullableEnumSwitchedService) = "switched_service"
  toJSON (CancellationDetailsFeedback'NonNullableEnumTooComplex) = "too_complex"
  toJSON (CancellationDetailsFeedback'NonNullableEnumTooExpensive) = "too_expensive"
  toJSON (CancellationDetailsFeedback'NonNullableEnumUnused) = "unused"

instance Data.Aeson.Types.FromJSON.FromJSON CancellationDetailsFeedback'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "customer_service" -> CancellationDetailsFeedback'NonNullableEnumCustomerService
            | val GHC.Classes.== "low_quality" -> CancellationDetailsFeedback'NonNullableEnumLowQuality
            | val GHC.Classes.== "missing_features" -> CancellationDetailsFeedback'NonNullableEnumMissingFeatures
            | val GHC.Classes.== "other" -> CancellationDetailsFeedback'NonNullableEnumOther
            | val GHC.Classes.== "switched_service" -> CancellationDetailsFeedback'NonNullableEnumSwitchedService
            | val GHC.Classes.== "too_complex" -> CancellationDetailsFeedback'NonNullableEnumTooComplex
            | val GHC.Classes.== "too_expensive" -> CancellationDetailsFeedback'NonNullableEnumTooExpensive
            | val GHC.Classes.== "unused" -> CancellationDetailsFeedback'NonNullableEnumUnused
            | GHC.Base.otherwise -> CancellationDetailsFeedback'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.cancellation_details.properties.reason@ in the specification.
--
-- Why this subscription was canceled.
data CancellationDetailsReason'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    CancellationDetailsReason'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    CancellationDetailsReason'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"cancellation_requested"@
    CancellationDetailsReason'NonNullableEnumCancellationRequested
  | -- | Represents the JSON value @"payment_disputed"@
    CancellationDetailsReason'NonNullableEnumPaymentDisputed
  | -- | Represents the JSON value @"payment_failed"@
    CancellationDetailsReason'NonNullableEnumPaymentFailed
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON CancellationDetailsReason'NonNullable where
  toJSON (CancellationDetailsReason'NonNullableOther val) = val
  toJSON (CancellationDetailsReason'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (CancellationDetailsReason'NonNullableEnumCancellationRequested) = "cancellation_requested"
  toJSON (CancellationDetailsReason'NonNullableEnumPaymentDisputed) = "payment_disputed"
  toJSON (CancellationDetailsReason'NonNullableEnumPaymentFailed) = "payment_failed"

instance Data.Aeson.Types.FromJSON.FromJSON CancellationDetailsReason'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "cancellation_requested" -> CancellationDetailsReason'NonNullableEnumCancellationRequested
            | val GHC.Classes.== "payment_disputed" -> CancellationDetailsReason'NonNullableEnumPaymentDisputed
            | val GHC.Classes.== "payment_failed" -> CancellationDetailsReason'NonNullableEnumPaymentFailed
            | GHC.Base.otherwise -> CancellationDetailsReason'NonNullableOther val
      )
