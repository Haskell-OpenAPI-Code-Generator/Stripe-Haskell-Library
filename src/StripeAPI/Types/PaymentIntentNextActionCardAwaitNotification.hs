{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentIntentNextActionCardAwaitNotification
module StripeAPI.Types.PaymentIntentNextActionCardAwaitNotification where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_intent_next_action_card_await_notification@ in the specification.
data PaymentIntentNextActionCardAwaitNotification = PaymentIntentNextActionCardAwaitNotification
  { -- | charge_attempt_at: The time that payment will be attempted. If customer approval is required, they need to provide approval before this time.
    paymentIntentNextActionCardAwaitNotificationChargeAttemptAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | customer_approval_required: For payments greater than INR 5000, the customer must provide explicit approval of the payment with their bank. For payments of lower amount, no customer action is required.
    paymentIntentNextActionCardAwaitNotificationCustomerApprovalRequired :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentIntentNextActionCardAwaitNotification where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge_attempt_at" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionCardAwaitNotificationChargeAttemptAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_approval_required" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionCardAwaitNotificationCustomerApprovalRequired obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge_attempt_at" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionCardAwaitNotificationChargeAttemptAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_approval_required" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionCardAwaitNotificationCustomerApprovalRequired obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentIntentNextActionCardAwaitNotification where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentIntentNextActionCardAwaitNotification" (\obj -> (GHC.Base.pure PaymentIntentNextActionCardAwaitNotification GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charge_attempt_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_approval_required"))

-- | Create a new 'PaymentIntentNextActionCardAwaitNotification' with all required fields.
mkPaymentIntentNextActionCardAwaitNotification :: PaymentIntentNextActionCardAwaitNotification
mkPaymentIntentNextActionCardAwaitNotification =
  PaymentIntentNextActionCardAwaitNotification
    { paymentIntentNextActionCardAwaitNotificationChargeAttemptAt = GHC.Maybe.Nothing,
      paymentIntentNextActionCardAwaitNotificationCustomerApprovalRequired = GHC.Maybe.Nothing
    }
