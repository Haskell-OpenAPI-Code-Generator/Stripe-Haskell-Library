{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodDetailsCardChecks
module StripeAPI.Types.PaymentMethodDetailsCardChecks where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_card_checks@ in the specification.
data PaymentMethodDetailsCardChecks
  = PaymentMethodDetailsCardChecks
      { -- | address_line1_check: If a address line1 was provided, results of the check, one of \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsCardChecksAddressLine1Check :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | address_postal_code_check: If a address postal code was provided, results of the check, one of \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsCardChecksAddressPostalCodeCheck :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | cvc_check: If a CVC was provided, results of the check, one of \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsCardChecksCvcCheck :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsCardChecks where
  toJSON obj = Data.Aeson.Types.Internal.object ("address_line1_check" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardChecksAddressLine1Check obj : "address_postal_code_check" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardChecksAddressPostalCodeCheck obj : "cvc_check" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardChecksCvcCheck obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address_line1_check" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardChecksAddressLine1Check obj) GHC.Base.<> (("address_postal_code_check" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardChecksAddressPostalCodeCheck obj) GHC.Base.<> ("cvc_check" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardChecksCvcCheck obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsCardChecks where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsCardChecks" (\obj -> ((GHC.Base.pure PaymentMethodDetailsCardChecks GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address_postal_code_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cvc_check"))

-- | Create a new 'PaymentMethodDetailsCardChecks' with all required fields.
mkPaymentMethodDetailsCardChecks :: PaymentMethodDetailsCardChecks
mkPaymentMethodDetailsCardChecks =
  PaymentMethodDetailsCardChecks
    { paymentMethodDetailsCardChecksAddressLine1Check = GHC.Maybe.Nothing,
      paymentMethodDetailsCardChecksAddressPostalCodeCheck = GHC.Maybe.Nothing,
      paymentMethodDetailsCardChecksCvcCheck = GHC.Maybe.Nothing
    }
