{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PortalFlowsFlowSubscriptionCancel
module StripeAPI.Types.PortalFlowsFlowSubscriptionCancel where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PortalFlowsCouponOffer
import {-# SOURCE #-} StripeAPI.Types.PortalFlowsRetention
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.portal_flows_flow_subscription_cancel@ in the specification.
data PortalFlowsFlowSubscriptionCancel = PortalFlowsFlowSubscriptionCancel
  { -- | retention: Specify a retention strategy to be used in the cancellation flow.
    portalFlowsFlowSubscriptionCancelRetention :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PortalFlowsFlowSubscriptionCancelRetention'NonNullable)),
    -- | subscription: The ID of the subscription to be canceled.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    portalFlowsFlowSubscriptionCancelSubscription :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PortalFlowsFlowSubscriptionCancel where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("retention" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention obj) : ["subscription" Data.Aeson.Types.ToJSON..= portalFlowsFlowSubscriptionCancelSubscription obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("retention" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention obj) : ["subscription" Data.Aeson.Types.ToJSON..= portalFlowsFlowSubscriptionCancelSubscription obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PortalFlowsFlowSubscriptionCancel where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PortalFlowsFlowSubscriptionCancel" (\obj -> (GHC.Base.pure PortalFlowsFlowSubscriptionCancel GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "retention")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "subscription"))

-- | Create a new 'PortalFlowsFlowSubscriptionCancel' with all required fields.
mkPortalFlowsFlowSubscriptionCancel ::
  -- | 'portalFlowsFlowSubscriptionCancelSubscription'
  Data.Text.Internal.Text ->
  PortalFlowsFlowSubscriptionCancel
mkPortalFlowsFlowSubscriptionCancel portalFlowsFlowSubscriptionCancelSubscription =
  PortalFlowsFlowSubscriptionCancel
    { portalFlowsFlowSubscriptionCancelRetention = GHC.Maybe.Nothing,
      portalFlowsFlowSubscriptionCancelSubscription = portalFlowsFlowSubscriptionCancelSubscription
    }

-- | Defines the object schema located at @components.schemas.portal_flows_flow_subscription_cancel.properties.retention.anyOf@ in the specification.
--
-- Specify a retention strategy to be used in the cancellation flow.
data PortalFlowsFlowSubscriptionCancelRetention'NonNullable = PortalFlowsFlowSubscriptionCancelRetention'NonNullable
  { -- | coupon_offer: Configuration when \`retention.type=coupon_offer\`.
    portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable)),
    -- | type: Type of retention strategy that will be used.
    portalFlowsFlowSubscriptionCancelRetention'NonNullableType :: (GHC.Maybe.Maybe PortalFlowsFlowSubscriptionCancelRetention'NonNullableType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PortalFlowsFlowSubscriptionCancelRetention'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_offer" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention'NonNullableType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon_offer" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention'NonNullableType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PortalFlowsFlowSubscriptionCancelRetention'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PortalFlowsFlowSubscriptionCancelRetention'NonNullable" (\obj -> (GHC.Base.pure PortalFlowsFlowSubscriptionCancelRetention'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon_offer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'PortalFlowsFlowSubscriptionCancelRetention'NonNullable' with all required fields.
mkPortalFlowsFlowSubscriptionCancelRetention'NonNullable :: PortalFlowsFlowSubscriptionCancelRetention'NonNullable
mkPortalFlowsFlowSubscriptionCancelRetention'NonNullable =
  PortalFlowsFlowSubscriptionCancelRetention'NonNullable
    { portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer = GHC.Maybe.Nothing,
      portalFlowsFlowSubscriptionCancelRetention'NonNullableType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.portal_flows_flow_subscription_cancel.properties.retention.anyOf.properties.coupon_offer.anyOf@ in the specification.
--
-- Configuration when \\\`retention.type=coupon_offer\\\`.
data PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable = PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable
  { -- | coupon: The ID of the coupon to be offered.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullableCoupon :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullableCoupon obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullableCoupon obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable" (\obj -> GHC.Base.pure PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon"))

-- | Create a new 'PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable' with all required fields.
mkPortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable :: PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable
mkPortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable = PortalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullable {portalFlowsFlowSubscriptionCancelRetention'NonNullableCouponOffer'NonNullableCoupon = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.portal_flows_flow_subscription_cancel.properties.retention.anyOf.properties.type@ in the specification.
--
-- Type of retention strategy that will be used.
data PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"coupon_offer"@
    PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'EnumCouponOffer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PortalFlowsFlowSubscriptionCancelRetention'NonNullableType' where
  toJSON (PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'Other val) = val
  toJSON (PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'EnumCouponOffer) = "coupon_offer"

instance Data.Aeson.Types.FromJSON.FromJSON PortalFlowsFlowSubscriptionCancelRetention'NonNullableType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "coupon_offer" -> PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'EnumCouponOffer
            | GHC.Base.otherwise -> PortalFlowsFlowSubscriptionCancelRetention'NonNullableType'Other val
      )
