-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Order
module StripeAPI.Types.Order where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Address
import {-# SOURCE #-} StripeAPI.Types.Application
import {-# SOURCE #-} StripeAPI.Types.Customer
import {-# SOURCE #-} StripeAPI.Types.DeletedCustomer
import {-# SOURCE #-} StripeAPI.Types.Discount
import {-# SOURCE #-} StripeAPI.Types.Item
import {-# SOURCE #-} StripeAPI.Types.LineItemsTaxAmount
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceAutomaticTax
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceBillingDetails
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourcePayment
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceShippingCost
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceShippingDetails
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceTaxDetails
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceTotalDetails
import {-# SOURCE #-} StripeAPI.Types.ShippingRate

-- | Defines the object schema located at @components.schemas.order@ in the specification.
-- 
-- An Order describes a purchase being made by a customer, including the
-- products & quantities being purchased, the order status, the payment information,
-- and the billing\/shipping details.
-- 
-- Related guide: [Orders overview](https:\/\/stripe.com\/docs\/orders)
data Order = Order {
  -- | amount_subtotal: Order cost before any discounts or taxes are applied. A positive integer representing the subtotal of the order in the [smallest currency unit](https:\/\/stripe.com\/docs\/currencies\#zero-decimal) (e.g., 100 cents to charge \$1.00 or 100 to charge ¥100, a zero-decimal currency).
  orderAmountSubtotal :: GHC.Types.Int
  -- | amount_total: Total order cost after discounts and taxes are applied. A positive integer representing the cost of the order in the [smallest currency unit](https:\/\/stripe.com\/docs\/currencies\#zero-decimal) (e.g., 100 cents to charge \$1.00 or 100 to charge ¥100, a zero-decimal currency). To submit an order, the total must be either 0 or at least \$0.50 USD or [equivalent in charge currency](https:\/\/stripe.com\/docs\/currencies\#minimum-and-maximum-charge-amounts).
  , orderAmountTotal :: GHC.Types.Int
  -- | application: ID of the Connect application that created the Order, if any.
  , orderApplication :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderApplication'NonNullableVariants))
  -- | automatic_tax: 
  , orderAutomaticTax :: (GHC.Maybe.Maybe OrdersV2ResourceAutomaticTax)
  -- | billing_details: Customer billing details associated with the order.
  , orderBillingDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderBillingDetails'NonNullable))
  -- | client_secret: The client secret of this Order. Used for client-side retrieval using a publishable key. 
  -- 
  -- The client secret can be used to complete a payment for an Order from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret. 
  -- 
  -- Refer to our docs for [creating and processing an order](https:\/\/stripe.com\/docs\/orders-beta\/create-and-process) to learn about how client_secret should be handled.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderClientSecret :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
  , orderCreated :: GHC.Types.Int
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  , orderCurrency :: Data.Text.Internal.Text
  -- | customer: The customer which this orders belongs to.
  , orderCustomer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderCustomer'NonNullableVariants))
  -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | discounts: The discounts applied to the order. Use \`expand[]=discounts\` to expand each discount.
  , orderDiscounts :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([OrderDiscounts'NonNullableVariants])))
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderId :: Data.Text.Internal.Text
  -- | ip_address: A recent IP address of the purchaser used for tax reporting and tax location inference.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderIpAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line_items: A list of line items the customer is ordering. Each line item includes information about the product, the quantity, and the resulting cost. There is a maximum of 100 line items.
  , orderLineItems :: (GHC.Maybe.Maybe OrderLineItems')
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , orderLivemode :: GHC.Types.Bool
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , orderMetadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object))
  -- | payment: 
  , orderPayment :: OrdersV2ResourcePayment
  -- | shipping_cost: The details of the customer cost of shipping, including the customer chosen ShippingRate.
  , orderShippingCost :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderShippingCost'NonNullable))
  -- | shipping_details: Customer shipping information associated with the order.
  , orderShippingDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderShippingDetails'NonNullable))
  -- | status: The overall status of the order.
  , orderStatus :: OrderStatus'
  -- | tax_details: 
  , orderTaxDetails :: (GHC.Maybe.Maybe OrdersV2ResourceTaxDetails)
  -- | total_details: 
  , orderTotalDetails :: OrdersV2ResourceTotalDetails
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Order
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount_subtotal" Data.Aeson.Types.ToJSON..= orderAmountSubtotal obj] : ["amount_total" Data.Aeson.Types.ToJSON..= orderAmountTotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application" Data.Aeson.Types.ToJSON..=)) (orderApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("automatic_tax" Data.Aeson.Types.ToJSON..=)) (orderAutomaticTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (orderClientSecret obj) : ["created" Data.Aeson.Types.ToJSON..= orderCreated obj] : ["currency" Data.Aeson.Types.ToJSON..= orderCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (orderCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (orderDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (orderDiscounts obj) : ["id" Data.Aeson.Types.ToJSON..= orderId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (orderIpAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (orderLineItems obj) : ["livemode" Data.Aeson.Types.ToJSON..= orderLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (orderMetadata obj) : ["payment" Data.Aeson.Types.ToJSON..= orderPayment obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (orderShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_details" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails obj) : ["status" Data.Aeson.Types.ToJSON..= orderStatus obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_details" Data.Aeson.Types.ToJSON..=)) (orderTaxDetails obj) : ["total_details" Data.Aeson.Types.ToJSON..= orderTotalDetails obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "order"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount_subtotal" Data.Aeson.Types.ToJSON..= orderAmountSubtotal obj] : ["amount_total" Data.Aeson.Types.ToJSON..= orderAmountTotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application" Data.Aeson.Types.ToJSON..=)) (orderApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("automatic_tax" Data.Aeson.Types.ToJSON..=)) (orderAutomaticTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (orderClientSecret obj) : ["created" Data.Aeson.Types.ToJSON..= orderCreated obj] : ["currency" Data.Aeson.Types.ToJSON..= orderCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (orderCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (orderDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (orderDiscounts obj) : ["id" Data.Aeson.Types.ToJSON..= orderId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (orderIpAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (orderLineItems obj) : ["livemode" Data.Aeson.Types.ToJSON..= orderLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (orderMetadata obj) : ["payment" Data.Aeson.Types.ToJSON..= orderPayment obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (orderShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_details" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails obj) : ["status" Data.Aeson.Types.ToJSON..= orderStatus obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_details" Data.Aeson.Types.ToJSON..=)) (orderTaxDetails obj) : ["total_details" Data.Aeson.Types.ToJSON..= orderTotalDetails obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "order"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Order
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Order" (\obj -> (((((((((((((((((((((GHC.Base.pure Order GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "application")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "automatic_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_cost")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total_details"))
-- | Create a new 'Order' with all required fields.
mkOrder :: GHC.Types.Int -- ^ 'orderAmountSubtotal'
  -> GHC.Types.Int -- ^ 'orderAmountTotal'
  -> GHC.Types.Int -- ^ 'orderCreated'
  -> Data.Text.Internal.Text -- ^ 'orderCurrency'
  -> Data.Text.Internal.Text -- ^ 'orderId'
  -> GHC.Types.Bool -- ^ 'orderLivemode'
  -> OrdersV2ResourcePayment -- ^ 'orderPayment'
  -> OrderStatus' -- ^ 'orderStatus'
  -> OrdersV2ResourceTotalDetails -- ^ 'orderTotalDetails'
  -> Order
mkOrder orderAmountSubtotal orderAmountTotal orderCreated orderCurrency orderId orderLivemode orderPayment orderStatus orderTotalDetails = Order{orderAmountSubtotal = orderAmountSubtotal,
                                                                                                                                                 orderAmountTotal = orderAmountTotal,
                                                                                                                                                 orderApplication = GHC.Maybe.Nothing,
                                                                                                                                                 orderAutomaticTax = GHC.Maybe.Nothing,
                                                                                                                                                 orderBillingDetails = GHC.Maybe.Nothing,
                                                                                                                                                 orderClientSecret = GHC.Maybe.Nothing,
                                                                                                                                                 orderCreated = orderCreated,
                                                                                                                                                 orderCurrency = orderCurrency,
                                                                                                                                                 orderCustomer = GHC.Maybe.Nothing,
                                                                                                                                                 orderDescription = GHC.Maybe.Nothing,
                                                                                                                                                 orderDiscounts = GHC.Maybe.Nothing,
                                                                                                                                                 orderId = orderId,
                                                                                                                                                 orderIpAddress = GHC.Maybe.Nothing,
                                                                                                                                                 orderLineItems = GHC.Maybe.Nothing,
                                                                                                                                                 orderLivemode = orderLivemode,
                                                                                                                                                 orderMetadata = GHC.Maybe.Nothing,
                                                                                                                                                 orderPayment = orderPayment,
                                                                                                                                                 orderShippingCost = GHC.Maybe.Nothing,
                                                                                                                                                 orderShippingDetails = GHC.Maybe.Nothing,
                                                                                                                                                 orderStatus = orderStatus,
                                                                                                                                                 orderTaxDetails = GHC.Maybe.Nothing,
                                                                                                                                                 orderTotalDetails = orderTotalDetails}
-- | Defines the oneOf schema located at @components.schemas.order.properties.application.anyOf@ in the specification.
-- 
-- ID of the Connect application that created the Order, if any.
data OrderApplication'NonNullableVariants =
   OrderApplication'NonNullableText Data.Text.Internal.Text
  | OrderApplication'NonNullableApplication Application
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderApplication'NonNullableVariants
    where toJSON (OrderApplication'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (OrderApplication'NonNullableApplication a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON OrderApplication'NonNullableVariants
    where parseJSON val = case (OrderApplication'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((OrderApplication'NonNullableApplication Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.order.properties.billing_details.anyOf@ in the specification.
-- 
-- Customer billing details associated with the order.
data OrderBillingDetails'NonNullable = OrderBillingDetails'NonNullable {
  -- | address: Billing address for the order.
  orderBillingDetails'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderBillingDetails'NonNullableAddress'NonNullable))
  -- | email: Email address for the order.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | name: Full name for the order.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | phone: Billing phone number for the order (including extension).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderBillingDetails'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullablePhone obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullablePhone obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrderBillingDetails'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderBillingDetails'NonNullable" (\obj -> (((GHC.Base.pure OrderBillingDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone"))
-- | Create a new 'OrderBillingDetails'NonNullable' with all required fields.
mkOrderBillingDetails'NonNullable :: OrderBillingDetails'NonNullable
mkOrderBillingDetails'NonNullable = OrderBillingDetails'NonNullable{orderBillingDetails'NonNullableAddress = GHC.Maybe.Nothing,
                                                                    orderBillingDetails'NonNullableEmail = GHC.Maybe.Nothing,
                                                                    orderBillingDetails'NonNullableName = GHC.Maybe.Nothing,
                                                                    orderBillingDetails'NonNullablePhone = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.order.properties.billing_details.anyOf.properties.address.anyOf@ in the specification.
-- 
-- Billing address for the order.
data OrderBillingDetails'NonNullableAddress'NonNullable = OrderBillingDetails'NonNullableAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  orderBillingDetails'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderBillingDetails'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderBillingDetails'NonNullableAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (orderBillingDetails'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrderBillingDetails'NonNullableAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderBillingDetails'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure OrderBillingDetails'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'OrderBillingDetails'NonNullableAddress'NonNullable' with all required fields.
mkOrderBillingDetails'NonNullableAddress'NonNullable :: OrderBillingDetails'NonNullableAddress'NonNullable
mkOrderBillingDetails'NonNullableAddress'NonNullable = OrderBillingDetails'NonNullableAddress'NonNullable{orderBillingDetails'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                          orderBillingDetails'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                          orderBillingDetails'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                          orderBillingDetails'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                          orderBillingDetails'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                          orderBillingDetails'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.order.properties.customer.anyOf@ in the specification.
-- 
-- The customer which this orders belongs to.
data OrderCustomer'NonNullableVariants =
   OrderCustomer'NonNullableText Data.Text.Internal.Text
  | OrderCustomer'NonNullableCustomer Customer
  | OrderCustomer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderCustomer'NonNullableVariants
    where toJSON (OrderCustomer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (OrderCustomer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (OrderCustomer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON OrderCustomer'NonNullableVariants
    where parseJSON val = case (OrderCustomer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((OrderCustomer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((OrderCustomer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.order.properties.discounts.items.anyOf@ in the specification.
-- 
-- 
data OrderDiscounts'NonNullableVariants =
   OrderDiscounts'NonNullableText Data.Text.Internal.Text
  | OrderDiscounts'NonNullableDiscount Discount
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderDiscounts'NonNullableVariants
    where toJSON (OrderDiscounts'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (OrderDiscounts'NonNullableDiscount a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON OrderDiscounts'NonNullableVariants
    where parseJSON val = case (OrderDiscounts'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((OrderDiscounts'NonNullableDiscount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.order.properties.line_items@ in the specification.
-- 
-- A list of line items the customer is ordering. Each line item includes information about the product, the quantity, and the resulting cost. There is a maximum of 100 line items.
data OrderLineItems' = OrderLineItems' {
  -- | data: Details about each object.
  orderLineItems'Data :: ([Item])
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , orderLineItems'HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderLineItems'Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderLineItems'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= orderLineItems'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= orderLineItems'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= orderLineItems'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= orderLineItems'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= orderLineItems'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= orderLineItems'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrderLineItems'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderLineItems'" (\obj -> ((GHC.Base.pure OrderLineItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Create a new 'OrderLineItems'' with all required fields.
mkOrderLineItems' :: [Item] -- ^ 'orderLineItems'Data'
  -> GHC.Types.Bool -- ^ 'orderLineItems'HasMore'
  -> Data.Text.Internal.Text -- ^ 'orderLineItems'Url'
  -> OrderLineItems'
mkOrderLineItems' orderLineItems'Data orderLineItems'HasMore orderLineItems'Url = OrderLineItems'{orderLineItems'Data = orderLineItems'Data,
                                                                                                  orderLineItems'HasMore = orderLineItems'HasMore,
                                                                                                  orderLineItems'Url = orderLineItems'Url}
-- | Defines the object schema located at @components.schemas.order.properties.shipping_cost.anyOf@ in the specification.
-- 
-- The details of the customer cost of shipping, including the customer chosen ShippingRate.
data OrderShippingCost'NonNullable = OrderShippingCost'NonNullable {
  -- | amount_subtotal: Total shipping cost before any discounts or taxes are applied.
  orderShippingCost'NonNullableAmountSubtotal :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | amount_tax: Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.
  , orderShippingCost'NonNullableAmountTax :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | amount_total: Total shipping cost after discounts and taxes are applied.
  , orderShippingCost'NonNullableAmountTotal :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | shipping_rate: The ID of the ShippingRate for this order.
  , orderShippingCost'NonNullableShippingRate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderShippingCost'NonNullableShippingRate'NonNullableVariants))
  -- | taxes: The taxes applied to the shipping rate.
  , orderShippingCost'NonNullableTaxes :: (GHC.Maybe.Maybe ([LineItemsTaxAmount]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderShippingCost'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableAmountTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableAmountTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableTaxes obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_subtotal" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableAmountSubtotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableAmountTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_total" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableAmountTotal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableShippingRate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("taxes" Data.Aeson.Types.ToJSON..=)) (orderShippingCost'NonNullableTaxes obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrderShippingCost'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderShippingCost'NonNullable" (\obj -> ((((GHC.Base.pure OrderShippingCost'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "taxes"))
-- | Create a new 'OrderShippingCost'NonNullable' with all required fields.
mkOrderShippingCost'NonNullable :: OrderShippingCost'NonNullable
mkOrderShippingCost'NonNullable = OrderShippingCost'NonNullable{orderShippingCost'NonNullableAmountSubtotal = GHC.Maybe.Nothing,
                                                                orderShippingCost'NonNullableAmountTax = GHC.Maybe.Nothing,
                                                                orderShippingCost'NonNullableAmountTotal = GHC.Maybe.Nothing,
                                                                orderShippingCost'NonNullableShippingRate = GHC.Maybe.Nothing,
                                                                orderShippingCost'NonNullableTaxes = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.order.properties.shipping_cost.anyOf.properties.shipping_rate.anyOf@ in the specification.
-- 
-- The ID of the ShippingRate for this order.
data OrderShippingCost'NonNullableShippingRate'NonNullableVariants =
   OrderShippingCost'NonNullableShippingRate'NonNullableText Data.Text.Internal.Text
  | OrderShippingCost'NonNullableShippingRate'NonNullableShippingRate ShippingRate
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderShippingCost'NonNullableShippingRate'NonNullableVariants
    where toJSON (OrderShippingCost'NonNullableShippingRate'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (OrderShippingCost'NonNullableShippingRate'NonNullableShippingRate a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON OrderShippingCost'NonNullableShippingRate'NonNullableVariants
    where parseJSON val = case (OrderShippingCost'NonNullableShippingRate'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((OrderShippingCost'NonNullableShippingRate'NonNullableShippingRate Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.order.properties.shipping_details.anyOf@ in the specification.
-- 
-- Customer shipping information associated with the order.
data OrderShippingDetails'NonNullable = OrderShippingDetails'NonNullable {
  -- | address: Recipient shipping address. Required if the order includes products that are shippable.
  orderShippingDetails'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable OrderShippingDetails'NonNullableAddress'NonNullable))
  -- | name: Recipient name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | phone: Recipient phone (including extension).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderShippingDetails'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullablePhone obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullablePhone obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrderShippingDetails'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderShippingDetails'NonNullable" (\obj -> ((GHC.Base.pure OrderShippingDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone"))
-- | Create a new 'OrderShippingDetails'NonNullable' with all required fields.
mkOrderShippingDetails'NonNullable :: OrderShippingDetails'NonNullable
mkOrderShippingDetails'NonNullable = OrderShippingDetails'NonNullable{orderShippingDetails'NonNullableAddress = GHC.Maybe.Nothing,
                                                                      orderShippingDetails'NonNullableName = GHC.Maybe.Nothing,
                                                                      orderShippingDetails'NonNullablePhone = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.order.properties.shipping_details.anyOf.properties.address.anyOf@ in the specification.
-- 
-- Recipient shipping address. Required if the order includes products that are shippable.
data OrderShippingDetails'NonNullableAddress'NonNullable = OrderShippingDetails'NonNullableAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  orderShippingDetails'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , orderShippingDetails'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderShippingDetails'NonNullableAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (orderShippingDetails'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON OrderShippingDetails'NonNullableAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "OrderShippingDetails'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure OrderShippingDetails'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'OrderShippingDetails'NonNullableAddress'NonNullable' with all required fields.
mkOrderShippingDetails'NonNullableAddress'NonNullable :: OrderShippingDetails'NonNullableAddress'NonNullable
mkOrderShippingDetails'NonNullableAddress'NonNullable = OrderShippingDetails'NonNullableAddress'NonNullable{orderShippingDetails'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                            orderShippingDetails'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                            orderShippingDetails'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                            orderShippingDetails'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                            orderShippingDetails'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                            orderShippingDetails'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.order.properties.status@ in the specification.
-- 
-- The overall status of the order.
data OrderStatus' =
   OrderStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | OrderStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | OrderStatus'EnumCanceled -- ^ Represents the JSON value @"canceled"@
  | OrderStatus'EnumComplete -- ^ Represents the JSON value @"complete"@
  | OrderStatus'EnumOpen -- ^ Represents the JSON value @"open"@
  | OrderStatus'EnumProcessing -- ^ Represents the JSON value @"processing"@
  | OrderStatus'EnumSubmitted -- ^ Represents the JSON value @"submitted"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON OrderStatus'
    where toJSON (OrderStatus'Other val) = val
          toJSON (OrderStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (OrderStatus'EnumCanceled) = "canceled"
          toJSON (OrderStatus'EnumComplete) = "complete"
          toJSON (OrderStatus'EnumOpen) = "open"
          toJSON (OrderStatus'EnumProcessing) = "processing"
          toJSON (OrderStatus'EnumSubmitted) = "submitted"
instance Data.Aeson.Types.FromJSON.FromJSON OrderStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "canceled" -> OrderStatus'EnumCanceled
                                            | val GHC.Classes.== "complete" -> OrderStatus'EnumComplete
                                            | val GHC.Classes.== "open" -> OrderStatus'EnumOpen
                                            | val GHC.Classes.== "processing" -> OrderStatus'EnumProcessing
                                            | val GHC.Classes.== "submitted" -> OrderStatus'EnumSubmitted
                                            | GHC.Base.otherwise -> OrderStatus'Other val)
