{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema InvoiceSettingCustomerSetting
module StripeAPI.Types.InvoiceSettingCustomerSetting where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.InvoiceSettingCustomField
import {-# SOURCE #-} StripeAPI.Types.PaymentMethod
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.invoice_setting_customer_setting@ in the specification.
data InvoiceSettingCustomerSetting
  = InvoiceSettingCustomerSetting
      { -- | custom_fields: Default custom fields to be displayed on invoices for this customer.
        invoiceSettingCustomerSettingCustomFields :: (GHC.Maybe.Maybe ([InvoiceSettingCustomField])),
        -- | default_payment_method: ID of a payment method that\'s attached to the customer, to be used as the customer\'s default payment method for subscriptions and invoices.
        invoiceSettingCustomerSettingDefaultPaymentMethod :: (GHC.Maybe.Maybe InvoiceSettingCustomerSettingDefaultPaymentMethod'Variants),
        -- | footer: Default footer to be displayed on invoices for this customer.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        invoiceSettingCustomerSettingFooter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceSettingCustomerSetting where
  toJSON obj = Data.Aeson.Types.Internal.object ("custom_fields" Data.Aeson.Types.ToJSON..= invoiceSettingCustomerSettingCustomFields obj : "default_payment_method" Data.Aeson.Types.ToJSON..= invoiceSettingCustomerSettingDefaultPaymentMethod obj : "footer" Data.Aeson.Types.ToJSON..= invoiceSettingCustomerSettingFooter obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("custom_fields" Data.Aeson.Types.ToJSON..= invoiceSettingCustomerSettingCustomFields obj) GHC.Base.<> (("default_payment_method" Data.Aeson.Types.ToJSON..= invoiceSettingCustomerSettingDefaultPaymentMethod obj) GHC.Base.<> ("footer" Data.Aeson.Types.ToJSON..= invoiceSettingCustomerSettingFooter obj)))

instance Data.Aeson.Types.FromJSON.FromJSON InvoiceSettingCustomerSetting where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceSettingCustomerSetting" (\obj -> ((GHC.Base.pure InvoiceSettingCustomerSetting GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "footer"))

-- | Create a new 'InvoiceSettingCustomerSetting' with all required fields.
mkInvoiceSettingCustomerSetting :: InvoiceSettingCustomerSetting
mkInvoiceSettingCustomerSetting =
  InvoiceSettingCustomerSetting
    { invoiceSettingCustomerSettingCustomFields = GHC.Maybe.Nothing,
      invoiceSettingCustomerSettingDefaultPaymentMethod = GHC.Maybe.Nothing,
      invoiceSettingCustomerSettingFooter = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.invoice_setting_customer_setting.properties.default_payment_method.anyOf@ in the specification.
--
-- ID of a payment method that\'s attached to the customer, to be used as the customer\'s default payment method for subscriptions and invoices.
data InvoiceSettingCustomerSettingDefaultPaymentMethod'Variants
  = InvoiceSettingCustomerSettingDefaultPaymentMethod'PaymentMethod PaymentMethod
  | InvoiceSettingCustomerSettingDefaultPaymentMethod'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InvoiceSettingCustomerSettingDefaultPaymentMethod'Variants where
  toJSON (InvoiceSettingCustomerSettingDefaultPaymentMethod'PaymentMethod a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (InvoiceSettingCustomerSettingDefaultPaymentMethod'Text a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON InvoiceSettingCustomerSettingDefaultPaymentMethod'Variants where
  parseJSON val = case (InvoiceSettingCustomerSettingDefaultPaymentMethod'PaymentMethod Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceSettingCustomerSettingDefaultPaymentMethod'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
