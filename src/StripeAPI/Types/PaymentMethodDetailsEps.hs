{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodDetailsEps
module StripeAPI.Types.PaymentMethodDetailsEps where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_eps@ in the specification.
data PaymentMethodDetailsEps = PaymentMethodDetailsEps
  { -- | bank: The customer\'s bank. Should be one of \`arzte_und_apotheker_bank\`, \`austrian_anadi_bank_ag\`, \`bank_austria\`, \`bankhaus_carl_spangler\`, \`bankhaus_schelhammer_und_schattera_ag\`, \`bawag_psk_ag\`, \`bks_bank_ag\`, \`brull_kallmus_bank_ag\`, \`btv_vier_lander_bank\`, \`capital_bank_grawe_gruppe_ag\`, \`dolomitenbank\`, \`easybank_ag\`, \`erste_bank_und_sparkassen\`, \`hypo_alpeadriabank_international_ag\`, \`hypo_noe_lb_fur_niederosterreich_u_wien\`, \`hypo_oberosterreich_salzburg_steiermark\`, \`hypo_tirol_bank_ag\`, \`hypo_vorarlberg_bank_ag\`, \`hypo_bank_burgenland_aktiengesellschaft\`, \`marchfelder_bank\`, \`oberbank_ag\`, \`raiffeisen_bankengruppe_osterreich\`, \`schoellerbank_ag\`, \`sparda_bank_wien\`, \`volksbank_gruppe\`, \`volkskreditbank_ag\`, or \`vr_bank_braunau\`.
    paymentMethodDetailsEpsBank :: (GHC.Maybe.Maybe PaymentMethodDetailsEpsBank'),
    -- | verified_name: Owner\'s verified full name. Values are verified or provided by EPS directly
    -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    -- EPS rarely provides this information so the attribute is usually empty.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsEpsVerifiedName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsEps where
  toJSON obj = Data.Aeson.Types.Internal.object ("bank" Data.Aeson.Types.ToJSON..= paymentMethodDetailsEpsBank obj : "verified_name" Data.Aeson.Types.ToJSON..= paymentMethodDetailsEpsVerifiedName obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("bank" Data.Aeson.Types.ToJSON..= paymentMethodDetailsEpsBank obj) GHC.Base.<> ("verified_name" Data.Aeson.Types.ToJSON..= paymentMethodDetailsEpsVerifiedName obj))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsEps where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsEps" (\obj -> (GHC.Base.pure PaymentMethodDetailsEps GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bank")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "verified_name"))

-- | Create a new 'PaymentMethodDetailsEps' with all required fields.
mkPaymentMethodDetailsEps :: PaymentMethodDetailsEps
mkPaymentMethodDetailsEps =
  PaymentMethodDetailsEps
    { paymentMethodDetailsEpsBank = GHC.Maybe.Nothing,
      paymentMethodDetailsEpsVerifiedName = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.payment_method_details_eps.properties.bank@ in the specification.
--
-- The customer\'s bank. Should be one of \`arzte_und_apotheker_bank\`, \`austrian_anadi_bank_ag\`, \`bank_austria\`, \`bankhaus_carl_spangler\`, \`bankhaus_schelhammer_und_schattera_ag\`, \`bawag_psk_ag\`, \`bks_bank_ag\`, \`brull_kallmus_bank_ag\`, \`btv_vier_lander_bank\`, \`capital_bank_grawe_gruppe_ag\`, \`dolomitenbank\`, \`easybank_ag\`, \`erste_bank_und_sparkassen\`, \`hypo_alpeadriabank_international_ag\`, \`hypo_noe_lb_fur_niederosterreich_u_wien\`, \`hypo_oberosterreich_salzburg_steiermark\`, \`hypo_tirol_bank_ag\`, \`hypo_vorarlberg_bank_ag\`, \`hypo_bank_burgenland_aktiengesellschaft\`, \`marchfelder_bank\`, \`oberbank_ag\`, \`raiffeisen_bankengruppe_osterreich\`, \`schoellerbank_ag\`, \`sparda_bank_wien\`, \`volksbank_gruppe\`, \`volkskreditbank_ag\`, or \`vr_bank_braunau\`.
data PaymentMethodDetailsEpsBank'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentMethodDetailsEpsBank'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentMethodDetailsEpsBank'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"arzte_und_apotheker_bank"@
    PaymentMethodDetailsEpsBank'EnumArzteUndApothekerBank
  | -- | Represents the JSON value @"austrian_anadi_bank_ag"@
    PaymentMethodDetailsEpsBank'EnumAustrianAnadiBankAg
  | -- | Represents the JSON value @"bank_austria"@
    PaymentMethodDetailsEpsBank'EnumBankAustria
  | -- | Represents the JSON value @"bankhaus_carl_spangler"@
    PaymentMethodDetailsEpsBank'EnumBankhausCarlSpangler
  | -- | Represents the JSON value @"bankhaus_schelhammer_und_schattera_ag"@
    PaymentMethodDetailsEpsBank'EnumBankhausSchelhammerUndSchatteraAg
  | -- | Represents the JSON value @"bawag_psk_ag"@
    PaymentMethodDetailsEpsBank'EnumBawagPskAg
  | -- | Represents the JSON value @"bks_bank_ag"@
    PaymentMethodDetailsEpsBank'EnumBksBankAg
  | -- | Represents the JSON value @"brull_kallmus_bank_ag"@
    PaymentMethodDetailsEpsBank'EnumBrullKallmusBankAg
  | -- | Represents the JSON value @"btv_vier_lander_bank"@
    PaymentMethodDetailsEpsBank'EnumBtvVierLanderBank
  | -- | Represents the JSON value @"capital_bank_grawe_gruppe_ag"@
    PaymentMethodDetailsEpsBank'EnumCapitalBankGraweGruppeAg
  | -- | Represents the JSON value @"dolomitenbank"@
    PaymentMethodDetailsEpsBank'EnumDolomitenbank
  | -- | Represents the JSON value @"easybank_ag"@
    PaymentMethodDetailsEpsBank'EnumEasybankAg
  | -- | Represents the JSON value @"erste_bank_und_sparkassen"@
    PaymentMethodDetailsEpsBank'EnumErsteBankUndSparkassen
  | -- | Represents the JSON value @"hypo_alpeadriabank_international_ag"@
    PaymentMethodDetailsEpsBank'EnumHypoAlpeadriabankInternationalAg
  | -- | Represents the JSON value @"hypo_bank_burgenland_aktiengesellschaft"@
    PaymentMethodDetailsEpsBank'EnumHypoBankBurgenlandAktiengesellschaft
  | -- | Represents the JSON value @"hypo_noe_lb_fur_niederosterreich_u_wien"@
    PaymentMethodDetailsEpsBank'EnumHypoNoeLbFurNiederosterreichUWien
  | -- | Represents the JSON value @"hypo_oberosterreich_salzburg_steiermark"@
    PaymentMethodDetailsEpsBank'EnumHypoOberosterreichSalzburgSteiermark
  | -- | Represents the JSON value @"hypo_tirol_bank_ag"@
    PaymentMethodDetailsEpsBank'EnumHypoTirolBankAg
  | -- | Represents the JSON value @"hypo_vorarlberg_bank_ag"@
    PaymentMethodDetailsEpsBank'EnumHypoVorarlbergBankAg
  | -- | Represents the JSON value @"marchfelder_bank"@
    PaymentMethodDetailsEpsBank'EnumMarchfelderBank
  | -- | Represents the JSON value @"oberbank_ag"@
    PaymentMethodDetailsEpsBank'EnumOberbankAg
  | -- | Represents the JSON value @"raiffeisen_bankengruppe_osterreich"@
    PaymentMethodDetailsEpsBank'EnumRaiffeisenBankengruppeOsterreich
  | -- | Represents the JSON value @"schoellerbank_ag"@
    PaymentMethodDetailsEpsBank'EnumSchoellerbankAg
  | -- | Represents the JSON value @"sparda_bank_wien"@
    PaymentMethodDetailsEpsBank'EnumSpardaBankWien
  | -- | Represents the JSON value @"volksbank_gruppe"@
    PaymentMethodDetailsEpsBank'EnumVolksbankGruppe
  | -- | Represents the JSON value @"volkskreditbank_ag"@
    PaymentMethodDetailsEpsBank'EnumVolkskreditbankAg
  | -- | Represents the JSON value @"vr_bank_braunau"@
    PaymentMethodDetailsEpsBank'EnumVrBankBraunau
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsEpsBank' where
  toJSON (PaymentMethodDetailsEpsBank'Other val) = val
  toJSON (PaymentMethodDetailsEpsBank'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentMethodDetailsEpsBank'EnumArzteUndApothekerBank) = "arzte_und_apotheker_bank"
  toJSON (PaymentMethodDetailsEpsBank'EnumAustrianAnadiBankAg) = "austrian_anadi_bank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumBankAustria) = "bank_austria"
  toJSON (PaymentMethodDetailsEpsBank'EnumBankhausCarlSpangler) = "bankhaus_carl_spangler"
  toJSON (PaymentMethodDetailsEpsBank'EnumBankhausSchelhammerUndSchatteraAg) = "bankhaus_schelhammer_und_schattera_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumBawagPskAg) = "bawag_psk_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumBksBankAg) = "bks_bank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumBrullKallmusBankAg) = "brull_kallmus_bank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumBtvVierLanderBank) = "btv_vier_lander_bank"
  toJSON (PaymentMethodDetailsEpsBank'EnumCapitalBankGraweGruppeAg) = "capital_bank_grawe_gruppe_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumDolomitenbank) = "dolomitenbank"
  toJSON (PaymentMethodDetailsEpsBank'EnumEasybankAg) = "easybank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumErsteBankUndSparkassen) = "erste_bank_und_sparkassen"
  toJSON (PaymentMethodDetailsEpsBank'EnumHypoAlpeadriabankInternationalAg) = "hypo_alpeadriabank_international_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumHypoBankBurgenlandAktiengesellschaft) = "hypo_bank_burgenland_aktiengesellschaft"
  toJSON (PaymentMethodDetailsEpsBank'EnumHypoNoeLbFurNiederosterreichUWien) = "hypo_noe_lb_fur_niederosterreich_u_wien"
  toJSON (PaymentMethodDetailsEpsBank'EnumHypoOberosterreichSalzburgSteiermark) = "hypo_oberosterreich_salzburg_steiermark"
  toJSON (PaymentMethodDetailsEpsBank'EnumHypoTirolBankAg) = "hypo_tirol_bank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumHypoVorarlbergBankAg) = "hypo_vorarlberg_bank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumMarchfelderBank) = "marchfelder_bank"
  toJSON (PaymentMethodDetailsEpsBank'EnumOberbankAg) = "oberbank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumRaiffeisenBankengruppeOsterreich) = "raiffeisen_bankengruppe_osterreich"
  toJSON (PaymentMethodDetailsEpsBank'EnumSchoellerbankAg) = "schoellerbank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumSpardaBankWien) = "sparda_bank_wien"
  toJSON (PaymentMethodDetailsEpsBank'EnumVolksbankGruppe) = "volksbank_gruppe"
  toJSON (PaymentMethodDetailsEpsBank'EnumVolkskreditbankAg) = "volkskreditbank_ag"
  toJSON (PaymentMethodDetailsEpsBank'EnumVrBankBraunau) = "vr_bank_braunau"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsEpsBank' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "arzte_und_apotheker_bank" -> PaymentMethodDetailsEpsBank'EnumArzteUndApothekerBank
            | val GHC.Classes.== "austrian_anadi_bank_ag" -> PaymentMethodDetailsEpsBank'EnumAustrianAnadiBankAg
            | val GHC.Classes.== "bank_austria" -> PaymentMethodDetailsEpsBank'EnumBankAustria
            | val GHC.Classes.== "bankhaus_carl_spangler" -> PaymentMethodDetailsEpsBank'EnumBankhausCarlSpangler
            | val GHC.Classes.== "bankhaus_schelhammer_und_schattera_ag" -> PaymentMethodDetailsEpsBank'EnumBankhausSchelhammerUndSchatteraAg
            | val GHC.Classes.== "bawag_psk_ag" -> PaymentMethodDetailsEpsBank'EnumBawagPskAg
            | val GHC.Classes.== "bks_bank_ag" -> PaymentMethodDetailsEpsBank'EnumBksBankAg
            | val GHC.Classes.== "brull_kallmus_bank_ag" -> PaymentMethodDetailsEpsBank'EnumBrullKallmusBankAg
            | val GHC.Classes.== "btv_vier_lander_bank" -> PaymentMethodDetailsEpsBank'EnumBtvVierLanderBank
            | val GHC.Classes.== "capital_bank_grawe_gruppe_ag" -> PaymentMethodDetailsEpsBank'EnumCapitalBankGraweGruppeAg
            | val GHC.Classes.== "dolomitenbank" -> PaymentMethodDetailsEpsBank'EnumDolomitenbank
            | val GHC.Classes.== "easybank_ag" -> PaymentMethodDetailsEpsBank'EnumEasybankAg
            | val GHC.Classes.== "erste_bank_und_sparkassen" -> PaymentMethodDetailsEpsBank'EnumErsteBankUndSparkassen
            | val GHC.Classes.== "hypo_alpeadriabank_international_ag" -> PaymentMethodDetailsEpsBank'EnumHypoAlpeadriabankInternationalAg
            | val GHC.Classes.== "hypo_bank_burgenland_aktiengesellschaft" -> PaymentMethodDetailsEpsBank'EnumHypoBankBurgenlandAktiengesellschaft
            | val GHC.Classes.== "hypo_noe_lb_fur_niederosterreich_u_wien" -> PaymentMethodDetailsEpsBank'EnumHypoNoeLbFurNiederosterreichUWien
            | val GHC.Classes.== "hypo_oberosterreich_salzburg_steiermark" -> PaymentMethodDetailsEpsBank'EnumHypoOberosterreichSalzburgSteiermark
            | val GHC.Classes.== "hypo_tirol_bank_ag" -> PaymentMethodDetailsEpsBank'EnumHypoTirolBankAg
            | val GHC.Classes.== "hypo_vorarlberg_bank_ag" -> PaymentMethodDetailsEpsBank'EnumHypoVorarlbergBankAg
            | val GHC.Classes.== "marchfelder_bank" -> PaymentMethodDetailsEpsBank'EnumMarchfelderBank
            | val GHC.Classes.== "oberbank_ag" -> PaymentMethodDetailsEpsBank'EnumOberbankAg
            | val GHC.Classes.== "raiffeisen_bankengruppe_osterreich" -> PaymentMethodDetailsEpsBank'EnumRaiffeisenBankengruppeOsterreich
            | val GHC.Classes.== "schoellerbank_ag" -> PaymentMethodDetailsEpsBank'EnumSchoellerbankAg
            | val GHC.Classes.== "sparda_bank_wien" -> PaymentMethodDetailsEpsBank'EnumSpardaBankWien
            | val GHC.Classes.== "volksbank_gruppe" -> PaymentMethodDetailsEpsBank'EnumVolksbankGruppe
            | val GHC.Classes.== "volkskreditbank_ag" -> PaymentMethodDetailsEpsBank'EnumVolkskreditbankAg
            | val GHC.Classes.== "vr_bank_braunau" -> PaymentMethodDetailsEpsBank'EnumVrBankBraunau
            | GHC.Base.otherwise -> PaymentMethodDetailsEpsBank'Other val
      )
