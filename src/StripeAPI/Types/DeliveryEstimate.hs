{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema DeliveryEstimate
module StripeAPI.Types.DeliveryEstimate where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.delivery_estimate@ in the specification.
data DeliveryEstimate
  = DeliveryEstimate
      { -- | date: If \`type\` is \`\"exact\"\`, \`date\` will be the expected delivery date in the format YYYY-MM-DD.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        deliveryEstimateDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | earliest: If \`type\` is \`\"range\"\`, \`earliest\` will be be the earliest delivery date in the format YYYY-MM-DD.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        deliveryEstimateEarliest :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | latest: If \`type\` is \`\"range\"\`, \`latest\` will be the latest delivery date in the format YYYY-MM-DD.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        deliveryEstimateLatest :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | type: The type of estimate. Must be either \`\"range\"\` or \`\"exact\"\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        deliveryEstimateType :: Data.Text.Internal.Text
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeliveryEstimate where
  toJSON obj = Data.Aeson.Types.Internal.object ("date" Data.Aeson.Types.ToJSON..= deliveryEstimateDate obj : "earliest" Data.Aeson.Types.ToJSON..= deliveryEstimateEarliest obj : "latest" Data.Aeson.Types.ToJSON..= deliveryEstimateLatest obj : "type" Data.Aeson.Types.ToJSON..= deliveryEstimateType obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("date" Data.Aeson.Types.ToJSON..= deliveryEstimateDate obj) GHC.Base.<> (("earliest" Data.Aeson.Types.ToJSON..= deliveryEstimateEarliest obj) GHC.Base.<> (("latest" Data.Aeson.Types.ToJSON..= deliveryEstimateLatest obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= deliveryEstimateType obj))))

instance Data.Aeson.Types.FromJSON.FromJSON DeliveryEstimate where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeliveryEstimate" (\obj -> (((GHC.Base.pure DeliveryEstimate GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "earliest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "latest")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'DeliveryEstimate' with all required fields.
mkDeliveryEstimate ::
  -- | 'deliveryEstimateType'
  Data.Text.Internal.Text ->
  DeliveryEstimate
mkDeliveryEstimate deliveryEstimateType =
  DeliveryEstimate
    { deliveryEstimateDate = GHC.Maybe.Nothing,
      deliveryEstimateEarliest = GHC.Maybe.Nothing,
      deliveryEstimateLatest = GHC.Maybe.Nothing,
      deliveryEstimateType = deliveryEstimateType
    }
