{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema TreasuryReceivedDebitsResourceLinkedFlows
module StripeAPI.Types.TreasuryReceivedDebitsResourceLinkedFlows where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.treasury_received_debits_resource_linked_flows@ in the specification.
data TreasuryReceivedDebitsResourceLinkedFlows = TreasuryReceivedDebitsResourceLinkedFlows
  { -- | debit_reversal: The DebitReversal created as a result of this ReceivedDebit being reversed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasuryReceivedDebitsResourceLinkedFlowsDebitReversal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | inbound_transfer: Set if the ReceivedDebit is associated with an InboundTransfer\'s return of funds.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasuryReceivedDebitsResourceLinkedFlowsInboundTransfer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | issuing_authorization: Set if the ReceivedDebit was created due to an [Issuing Authorization](https:\/\/stripe.com\/docs\/api\#issuing_authorizations) object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasuryReceivedDebitsResourceLinkedFlowsIssuingAuthorization :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | issuing_transaction: Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https:\/\/stripe.com\/docs\/api\#issuing_disputes) object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasuryReceivedDebitsResourceLinkedFlowsIssuingTransaction :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON TreasuryReceivedDebitsResourceLinkedFlows where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit_reversal" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsDebitReversal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfer" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsInboundTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_authorization" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsIssuingAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_transaction" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsIssuingTransaction obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit_reversal" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsDebitReversal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfer" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsInboundTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_authorization" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsIssuingAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("issuing_transaction" Data.Aeson.Types.ToJSON..=)) (treasuryReceivedDebitsResourceLinkedFlowsIssuingTransaction obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON TreasuryReceivedDebitsResourceLinkedFlows where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "TreasuryReceivedDebitsResourceLinkedFlows" (\obj -> (((GHC.Base.pure TreasuryReceivedDebitsResourceLinkedFlows GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "debit_reversal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuing_authorization")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "issuing_transaction"))

-- | Create a new 'TreasuryReceivedDebitsResourceLinkedFlows' with all required fields.
mkTreasuryReceivedDebitsResourceLinkedFlows :: TreasuryReceivedDebitsResourceLinkedFlows
mkTreasuryReceivedDebitsResourceLinkedFlows =
  TreasuryReceivedDebitsResourceLinkedFlows
    { treasuryReceivedDebitsResourceLinkedFlowsDebitReversal = GHC.Maybe.Nothing,
      treasuryReceivedDebitsResourceLinkedFlowsInboundTransfer = GHC.Maybe.Nothing,
      treasuryReceivedDebitsResourceLinkedFlowsIssuingAuthorization = GHC.Maybe.Nothing,
      treasuryReceivedDebitsResourceLinkedFlowsIssuingTransaction = GHC.Maybe.Nothing
    }
