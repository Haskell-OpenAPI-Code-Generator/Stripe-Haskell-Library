{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Treasury_FinancialAccount
module StripeAPI.Types.Treasury_FinancialAccount where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.TreasuryFinancialAccountsResourceBalance
import {-# SOURCE #-} StripeAPI.Types.TreasuryFinancialAccountsResourceFinancialAddress
import {-# SOURCE #-} StripeAPI.Types.TreasuryFinancialAccountsResourcePlatformRestrictions
import {-# SOURCE #-} StripeAPI.Types.TreasuryFinancialAccountsResourceStatusDetails
import {-# SOURCE #-} StripeAPI.Types.Treasury_FinancialAccountFeatures
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.treasury.financial_account@ in the specification.
--
-- Stripe Treasury provides users with a container for money called a FinancialAccount that is separate from their Payments balance.
-- FinancialAccounts serve as the source and destination of Treasuryâ€™s money movement APIs.
data Treasury'financialAccount = Treasury'financialAccount
  { -- | active_features: The array of paths to active Features in the Features hash.
    treasury'financialAccountActiveFeatures :: (GHC.Maybe.Maybe ([Treasury'financialAccountActiveFeatures'])),
    -- | balance: Balance information for the FinancialAccount
    treasury'financialAccountBalance :: TreasuryFinancialAccountsResourceBalance,
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasury'financialAccountCountry :: Data.Text.Internal.Text,
    -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    treasury'financialAccountCreated :: GHC.Types.Int,
    -- | features: Encodes whether a FinancialAccount has access to a particular Feature, with a \`status\` enum and associated \`status_details\`.
    -- Stripe or the platform can control Features via the requested field.
    treasury'financialAccountFeatures :: (GHC.Maybe.Maybe Treasury'financialAccountFeatures),
    -- | financial_addresses: The set of credentials that resolve to a FinancialAccount.
    treasury'financialAccountFinancialAddresses :: ([TreasuryFinancialAccountsResourceFinancialAddress]),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    treasury'financialAccountId :: Data.Text.Internal.Text,
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    treasury'financialAccountLivemode :: GHC.Types.Bool,
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    treasury'financialAccountMetadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object)),
    -- | pending_features: The array of paths to pending Features in the Features hash.
    treasury'financialAccountPendingFeatures :: (GHC.Maybe.Maybe ([Treasury'financialAccountPendingFeatures'])),
    -- | platform_restrictions: The set of functionalities that the platform can restrict on the FinancialAccount.
    treasury'financialAccountPlatformRestrictions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Treasury'financialAccountPlatformRestrictions'NonNullable)),
    -- | restricted_features: The array of paths to restricted Features in the Features hash.
    treasury'financialAccountRestrictedFeatures :: (GHC.Maybe.Maybe ([Treasury'financialAccountRestrictedFeatures'])),
    -- | status: The enum specifying what state the account is in.
    treasury'financialAccountStatus :: Treasury'financialAccountStatus',
    -- | status_details:
    treasury'financialAccountStatusDetails :: TreasuryFinancialAccountsResourceStatusDetails,
    -- | supported_currencies: The currencies the FinancialAccount can hold a balance in. Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase.
    treasury'financialAccountSupportedCurrencies :: ([Data.Text.Internal.Text])
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccount where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active_features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountActiveFeatures obj) : ["balance" Data.Aeson.Types.ToJSON..= treasury'financialAccountBalance obj] : ["country" Data.Aeson.Types.ToJSON..= treasury'financialAccountCountry obj] : ["created" Data.Aeson.Types.ToJSON..= treasury'financialAccountCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountFeatures obj) : ["financial_addresses" Data.Aeson.Types.ToJSON..= treasury'financialAccountFinancialAddresses obj] : ["id" Data.Aeson.Types.ToJSON..= treasury'financialAccountId obj] : ["livemode" Data.Aeson.Types.ToJSON..= treasury'financialAccountLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPendingFeatures obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("platform_restrictions" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPlatformRestrictions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("restricted_features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountRestrictedFeatures obj) : ["status" Data.Aeson.Types.ToJSON..= treasury'financialAccountStatus obj] : ["status_details" Data.Aeson.Types.ToJSON..= treasury'financialAccountStatusDetails obj] : ["supported_currencies" Data.Aeson.Types.ToJSON..= treasury'financialAccountSupportedCurrencies obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "treasury.financial_account"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active_features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountActiveFeatures obj) : ["balance" Data.Aeson.Types.ToJSON..= treasury'financialAccountBalance obj] : ["country" Data.Aeson.Types.ToJSON..= treasury'financialAccountCountry obj] : ["created" Data.Aeson.Types.ToJSON..= treasury'financialAccountCreated obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountFeatures obj) : ["financial_addresses" Data.Aeson.Types.ToJSON..= treasury'financialAccountFinancialAddresses obj] : ["id" Data.Aeson.Types.ToJSON..= treasury'financialAccountId obj] : ["livemode" Data.Aeson.Types.ToJSON..= treasury'financialAccountLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPendingFeatures obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("platform_restrictions" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPlatformRestrictions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("restricted_features" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountRestrictedFeatures obj) : ["status" Data.Aeson.Types.ToJSON..= treasury'financialAccountStatus obj] : ["status_details" Data.Aeson.Types.ToJSON..= treasury'financialAccountStatusDetails obj] : ["supported_currencies" Data.Aeson.Types.ToJSON..= treasury'financialAccountSupportedCurrencies obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "treasury.financial_account"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccount where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Treasury'financialAccount" (\obj -> ((((((((((((((GHC.Base.pure Treasury'financialAccount GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "active_features")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "financial_addresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pending_features")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "platform_restrictions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "restricted_features")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "supported_currencies"))

-- | Create a new 'Treasury'financialAccount' with all required fields.
mkTreasury'financialAccount ::
  -- | 'treasury'financialAccountBalance'
  TreasuryFinancialAccountsResourceBalance ->
  -- | 'treasury'financialAccountCountry'
  Data.Text.Internal.Text ->
  -- | 'treasury'financialAccountCreated'
  GHC.Types.Int ->
  -- | 'treasury'financialAccountFinancialAddresses'
  [TreasuryFinancialAccountsResourceFinancialAddress] ->
  -- | 'treasury'financialAccountId'
  Data.Text.Internal.Text ->
  -- | 'treasury'financialAccountLivemode'
  GHC.Types.Bool ->
  -- | 'treasury'financialAccountStatus'
  Treasury'financialAccountStatus' ->
  -- | 'treasury'financialAccountStatusDetails'
  TreasuryFinancialAccountsResourceStatusDetails ->
  -- | 'treasury'financialAccountSupportedCurrencies'
  [Data.Text.Internal.Text] ->
  Treasury'financialAccount
mkTreasury'financialAccount treasury'financialAccountBalance treasury'financialAccountCountry treasury'financialAccountCreated treasury'financialAccountFinancialAddresses treasury'financialAccountId treasury'financialAccountLivemode treasury'financialAccountStatus treasury'financialAccountStatusDetails treasury'financialAccountSupportedCurrencies =
  Treasury'financialAccount
    { treasury'financialAccountActiveFeatures = GHC.Maybe.Nothing,
      treasury'financialAccountBalance = treasury'financialAccountBalance,
      treasury'financialAccountCountry = treasury'financialAccountCountry,
      treasury'financialAccountCreated = treasury'financialAccountCreated,
      treasury'financialAccountFeatures = GHC.Maybe.Nothing,
      treasury'financialAccountFinancialAddresses = treasury'financialAccountFinancialAddresses,
      treasury'financialAccountId = treasury'financialAccountId,
      treasury'financialAccountLivemode = treasury'financialAccountLivemode,
      treasury'financialAccountMetadata = GHC.Maybe.Nothing,
      treasury'financialAccountPendingFeatures = GHC.Maybe.Nothing,
      treasury'financialAccountPlatformRestrictions = GHC.Maybe.Nothing,
      treasury'financialAccountRestrictedFeatures = GHC.Maybe.Nothing,
      treasury'financialAccountStatus = treasury'financialAccountStatus,
      treasury'financialAccountStatusDetails = treasury'financialAccountStatusDetails,
      treasury'financialAccountSupportedCurrencies = treasury'financialAccountSupportedCurrencies
    }

-- | Defines the enum schema located at @components.schemas.treasury.financial_account.properties.active_features.items@ in the specification.
data Treasury'financialAccountActiveFeatures'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Treasury'financialAccountActiveFeatures'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Treasury'financialAccountActiveFeatures'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"card_issuing"@
    Treasury'financialAccountActiveFeatures'EnumCardIssuing
  | -- | Represents the JSON value @"deposit_insurance"@
    Treasury'financialAccountActiveFeatures'EnumDepositInsurance
  | -- | Represents the JSON value @"financial_addresses.aba"@
    Treasury'financialAccountActiveFeatures'EnumFinancialAddresses'aba
  | -- | Represents the JSON value @"inbound_transfers.ach"@
    Treasury'financialAccountActiveFeatures'EnumInboundTransfers'ach
  | -- | Represents the JSON value @"intra_stripe_flows"@
    Treasury'financialAccountActiveFeatures'EnumIntraStripeFlows
  | -- | Represents the JSON value @"outbound_payments.ach"@
    Treasury'financialAccountActiveFeatures'EnumOutboundPayments'ach
  | -- | Represents the JSON value @"outbound_payments.us_domestic_wire"@
    Treasury'financialAccountActiveFeatures'EnumOutboundPayments'usDomesticWire
  | -- | Represents the JSON value @"outbound_transfers.ach"@
    Treasury'financialAccountActiveFeatures'EnumOutboundTransfers'ach
  | -- | Represents the JSON value @"outbound_transfers.us_domestic_wire"@
    Treasury'financialAccountActiveFeatures'EnumOutboundTransfers'usDomesticWire
  | -- | Represents the JSON value @"remote_deposit_capture"@
    Treasury'financialAccountActiveFeatures'EnumRemoteDepositCapture
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountActiveFeatures' where
  toJSON (Treasury'financialAccountActiveFeatures'Other val) = val
  toJSON (Treasury'financialAccountActiveFeatures'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Treasury'financialAccountActiveFeatures'EnumCardIssuing) = "card_issuing"
  toJSON (Treasury'financialAccountActiveFeatures'EnumDepositInsurance) = "deposit_insurance"
  toJSON (Treasury'financialAccountActiveFeatures'EnumFinancialAddresses'aba) = "financial_addresses.aba"
  toJSON (Treasury'financialAccountActiveFeatures'EnumInboundTransfers'ach) = "inbound_transfers.ach"
  toJSON (Treasury'financialAccountActiveFeatures'EnumIntraStripeFlows) = "intra_stripe_flows"
  toJSON (Treasury'financialAccountActiveFeatures'EnumOutboundPayments'ach) = "outbound_payments.ach"
  toJSON (Treasury'financialAccountActiveFeatures'EnumOutboundPayments'usDomesticWire) = "outbound_payments.us_domestic_wire"
  toJSON (Treasury'financialAccountActiveFeatures'EnumOutboundTransfers'ach) = "outbound_transfers.ach"
  toJSON (Treasury'financialAccountActiveFeatures'EnumOutboundTransfers'usDomesticWire) = "outbound_transfers.us_domestic_wire"
  toJSON (Treasury'financialAccountActiveFeatures'EnumRemoteDepositCapture) = "remote_deposit_capture"

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountActiveFeatures' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "card_issuing" -> Treasury'financialAccountActiveFeatures'EnumCardIssuing
            | val GHC.Classes.== "deposit_insurance" -> Treasury'financialAccountActiveFeatures'EnumDepositInsurance
            | val GHC.Classes.== "financial_addresses.aba" -> Treasury'financialAccountActiveFeatures'EnumFinancialAddresses'aba
            | val GHC.Classes.== "inbound_transfers.ach" -> Treasury'financialAccountActiveFeatures'EnumInboundTransfers'ach
            | val GHC.Classes.== "intra_stripe_flows" -> Treasury'financialAccountActiveFeatures'EnumIntraStripeFlows
            | val GHC.Classes.== "outbound_payments.ach" -> Treasury'financialAccountActiveFeatures'EnumOutboundPayments'ach
            | val GHC.Classes.== "outbound_payments.us_domestic_wire" -> Treasury'financialAccountActiveFeatures'EnumOutboundPayments'usDomesticWire
            | val GHC.Classes.== "outbound_transfers.ach" -> Treasury'financialAccountActiveFeatures'EnumOutboundTransfers'ach
            | val GHC.Classes.== "outbound_transfers.us_domestic_wire" -> Treasury'financialAccountActiveFeatures'EnumOutboundTransfers'usDomesticWire
            | val GHC.Classes.== "remote_deposit_capture" -> Treasury'financialAccountActiveFeatures'EnumRemoteDepositCapture
            | GHC.Base.otherwise -> Treasury'financialAccountActiveFeatures'Other val
      )

-- | Defines the enum schema located at @components.schemas.treasury.financial_account.properties.pending_features.items@ in the specification.
data Treasury'financialAccountPendingFeatures'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Treasury'financialAccountPendingFeatures'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Treasury'financialAccountPendingFeatures'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"card_issuing"@
    Treasury'financialAccountPendingFeatures'EnumCardIssuing
  | -- | Represents the JSON value @"deposit_insurance"@
    Treasury'financialAccountPendingFeatures'EnumDepositInsurance
  | -- | Represents the JSON value @"financial_addresses.aba"@
    Treasury'financialAccountPendingFeatures'EnumFinancialAddresses'aba
  | -- | Represents the JSON value @"inbound_transfers.ach"@
    Treasury'financialAccountPendingFeatures'EnumInboundTransfers'ach
  | -- | Represents the JSON value @"intra_stripe_flows"@
    Treasury'financialAccountPendingFeatures'EnumIntraStripeFlows
  | -- | Represents the JSON value @"outbound_payments.ach"@
    Treasury'financialAccountPendingFeatures'EnumOutboundPayments'ach
  | -- | Represents the JSON value @"outbound_payments.us_domestic_wire"@
    Treasury'financialAccountPendingFeatures'EnumOutboundPayments'usDomesticWire
  | -- | Represents the JSON value @"outbound_transfers.ach"@
    Treasury'financialAccountPendingFeatures'EnumOutboundTransfers'ach
  | -- | Represents the JSON value @"outbound_transfers.us_domestic_wire"@
    Treasury'financialAccountPendingFeatures'EnumOutboundTransfers'usDomesticWire
  | -- | Represents the JSON value @"remote_deposit_capture"@
    Treasury'financialAccountPendingFeatures'EnumRemoteDepositCapture
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountPendingFeatures' where
  toJSON (Treasury'financialAccountPendingFeatures'Other val) = val
  toJSON (Treasury'financialAccountPendingFeatures'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Treasury'financialAccountPendingFeatures'EnumCardIssuing) = "card_issuing"
  toJSON (Treasury'financialAccountPendingFeatures'EnumDepositInsurance) = "deposit_insurance"
  toJSON (Treasury'financialAccountPendingFeatures'EnumFinancialAddresses'aba) = "financial_addresses.aba"
  toJSON (Treasury'financialAccountPendingFeatures'EnumInboundTransfers'ach) = "inbound_transfers.ach"
  toJSON (Treasury'financialAccountPendingFeatures'EnumIntraStripeFlows) = "intra_stripe_flows"
  toJSON (Treasury'financialAccountPendingFeatures'EnumOutboundPayments'ach) = "outbound_payments.ach"
  toJSON (Treasury'financialAccountPendingFeatures'EnumOutboundPayments'usDomesticWire) = "outbound_payments.us_domestic_wire"
  toJSON (Treasury'financialAccountPendingFeatures'EnumOutboundTransfers'ach) = "outbound_transfers.ach"
  toJSON (Treasury'financialAccountPendingFeatures'EnumOutboundTransfers'usDomesticWire) = "outbound_transfers.us_domestic_wire"
  toJSON (Treasury'financialAccountPendingFeatures'EnumRemoteDepositCapture) = "remote_deposit_capture"

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountPendingFeatures' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "card_issuing" -> Treasury'financialAccountPendingFeatures'EnumCardIssuing
            | val GHC.Classes.== "deposit_insurance" -> Treasury'financialAccountPendingFeatures'EnumDepositInsurance
            | val GHC.Classes.== "financial_addresses.aba" -> Treasury'financialAccountPendingFeatures'EnumFinancialAddresses'aba
            | val GHC.Classes.== "inbound_transfers.ach" -> Treasury'financialAccountPendingFeatures'EnumInboundTransfers'ach
            | val GHC.Classes.== "intra_stripe_flows" -> Treasury'financialAccountPendingFeatures'EnumIntraStripeFlows
            | val GHC.Classes.== "outbound_payments.ach" -> Treasury'financialAccountPendingFeatures'EnumOutboundPayments'ach
            | val GHC.Classes.== "outbound_payments.us_domestic_wire" -> Treasury'financialAccountPendingFeatures'EnumOutboundPayments'usDomesticWire
            | val GHC.Classes.== "outbound_transfers.ach" -> Treasury'financialAccountPendingFeatures'EnumOutboundTransfers'ach
            | val GHC.Classes.== "outbound_transfers.us_domestic_wire" -> Treasury'financialAccountPendingFeatures'EnumOutboundTransfers'usDomesticWire
            | val GHC.Classes.== "remote_deposit_capture" -> Treasury'financialAccountPendingFeatures'EnumRemoteDepositCapture
            | GHC.Base.otherwise -> Treasury'financialAccountPendingFeatures'Other val
      )

-- | Defines the object schema located at @components.schemas.treasury.financial_account.properties.platform_restrictions.anyOf@ in the specification.
--
-- The set of functionalities that the platform can restrict on the FinancialAccount.
data Treasury'financialAccountPlatformRestrictions'NonNullable = Treasury'financialAccountPlatformRestrictions'NonNullable
  { -- | inbound_flows: Restricts all inbound money movement.
    treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullable)),
    -- | outbound_flows: Restricts all outbound money movement.
    treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountPlatformRestrictions'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_flows" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_flows" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_flows" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_flows" Data.Aeson.Types.ToJSON..=)) (treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountPlatformRestrictions'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Treasury'financialAccountPlatformRestrictions'NonNullable" (\obj -> (GHC.Base.pure Treasury'financialAccountPlatformRestrictions'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_flows"))

-- | Create a new 'Treasury'financialAccountPlatformRestrictions'NonNullable' with all required fields.
mkTreasury'financialAccountPlatformRestrictions'NonNullable :: Treasury'financialAccountPlatformRestrictions'NonNullable
mkTreasury'financialAccountPlatformRestrictions'NonNullable =
  Treasury'financialAccountPlatformRestrictions'NonNullable
    { treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows = GHC.Maybe.Nothing,
      treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.treasury.financial_account.properties.platform_restrictions.anyOf.properties.inbound_flows@ in the specification.
--
-- Restricts all inbound money movement.
data Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"restricted"@
    Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableEnumRestricted
  | -- | Represents the JSON value @"unrestricted"@
    Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableEnumUnrestricted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullable where
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableOther val) = val
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableEnumRestricted) = "restricted"
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableEnumUnrestricted) = "unrestricted"

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "restricted" -> Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableEnumRestricted
            | val GHC.Classes.== "unrestricted" -> Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableEnumUnrestricted
            | GHC.Base.otherwise -> Treasury'financialAccountPlatformRestrictions'NonNullableInboundFlows'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.treasury.financial_account.properties.platform_restrictions.anyOf.properties.outbound_flows@ in the specification.
--
-- Restricts all outbound money movement.
data Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"restricted"@
    Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableEnumRestricted
  | -- | Represents the JSON value @"unrestricted"@
    Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableEnumUnrestricted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullable where
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableOther val) = val
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableEnumRestricted) = "restricted"
  toJSON (Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableEnumUnrestricted) = "unrestricted"

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "restricted" -> Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableEnumRestricted
            | val GHC.Classes.== "unrestricted" -> Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableEnumUnrestricted
            | GHC.Base.otherwise -> Treasury'financialAccountPlatformRestrictions'NonNullableOutboundFlows'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.treasury.financial_account.properties.restricted_features.items@ in the specification.
data Treasury'financialAccountRestrictedFeatures'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Treasury'financialAccountRestrictedFeatures'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Treasury'financialAccountRestrictedFeatures'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"card_issuing"@
    Treasury'financialAccountRestrictedFeatures'EnumCardIssuing
  | -- | Represents the JSON value @"deposit_insurance"@
    Treasury'financialAccountRestrictedFeatures'EnumDepositInsurance
  | -- | Represents the JSON value @"financial_addresses.aba"@
    Treasury'financialAccountRestrictedFeatures'EnumFinancialAddresses'aba
  | -- | Represents the JSON value @"inbound_transfers.ach"@
    Treasury'financialAccountRestrictedFeatures'EnumInboundTransfers'ach
  | -- | Represents the JSON value @"intra_stripe_flows"@
    Treasury'financialAccountRestrictedFeatures'EnumIntraStripeFlows
  | -- | Represents the JSON value @"outbound_payments.ach"@
    Treasury'financialAccountRestrictedFeatures'EnumOutboundPayments'ach
  | -- | Represents the JSON value @"outbound_payments.us_domestic_wire"@
    Treasury'financialAccountRestrictedFeatures'EnumOutboundPayments'usDomesticWire
  | -- | Represents the JSON value @"outbound_transfers.ach"@
    Treasury'financialAccountRestrictedFeatures'EnumOutboundTransfers'ach
  | -- | Represents the JSON value @"outbound_transfers.us_domestic_wire"@
    Treasury'financialAccountRestrictedFeatures'EnumOutboundTransfers'usDomesticWire
  | -- | Represents the JSON value @"remote_deposit_capture"@
    Treasury'financialAccountRestrictedFeatures'EnumRemoteDepositCapture
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountRestrictedFeatures' where
  toJSON (Treasury'financialAccountRestrictedFeatures'Other val) = val
  toJSON (Treasury'financialAccountRestrictedFeatures'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumCardIssuing) = "card_issuing"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumDepositInsurance) = "deposit_insurance"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumFinancialAddresses'aba) = "financial_addresses.aba"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumInboundTransfers'ach) = "inbound_transfers.ach"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumIntraStripeFlows) = "intra_stripe_flows"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumOutboundPayments'ach) = "outbound_payments.ach"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumOutboundPayments'usDomesticWire) = "outbound_payments.us_domestic_wire"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumOutboundTransfers'ach) = "outbound_transfers.ach"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumOutboundTransfers'usDomesticWire) = "outbound_transfers.us_domestic_wire"
  toJSON (Treasury'financialAccountRestrictedFeatures'EnumRemoteDepositCapture) = "remote_deposit_capture"

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountRestrictedFeatures' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "card_issuing" -> Treasury'financialAccountRestrictedFeatures'EnumCardIssuing
            | val GHC.Classes.== "deposit_insurance" -> Treasury'financialAccountRestrictedFeatures'EnumDepositInsurance
            | val GHC.Classes.== "financial_addresses.aba" -> Treasury'financialAccountRestrictedFeatures'EnumFinancialAddresses'aba
            | val GHC.Classes.== "inbound_transfers.ach" -> Treasury'financialAccountRestrictedFeatures'EnumInboundTransfers'ach
            | val GHC.Classes.== "intra_stripe_flows" -> Treasury'financialAccountRestrictedFeatures'EnumIntraStripeFlows
            | val GHC.Classes.== "outbound_payments.ach" -> Treasury'financialAccountRestrictedFeatures'EnumOutboundPayments'ach
            | val GHC.Classes.== "outbound_payments.us_domestic_wire" -> Treasury'financialAccountRestrictedFeatures'EnumOutboundPayments'usDomesticWire
            | val GHC.Classes.== "outbound_transfers.ach" -> Treasury'financialAccountRestrictedFeatures'EnumOutboundTransfers'ach
            | val GHC.Classes.== "outbound_transfers.us_domestic_wire" -> Treasury'financialAccountRestrictedFeatures'EnumOutboundTransfers'usDomesticWire
            | val GHC.Classes.== "remote_deposit_capture" -> Treasury'financialAccountRestrictedFeatures'EnumRemoteDepositCapture
            | GHC.Base.otherwise -> Treasury'financialAccountRestrictedFeatures'Other val
      )

-- | Defines the enum schema located at @components.schemas.treasury.financial_account.properties.status@ in the specification.
--
-- The enum specifying what state the account is in.
data Treasury'financialAccountStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Treasury'financialAccountStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Treasury'financialAccountStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"closed"@
    Treasury'financialAccountStatus'EnumClosed
  | -- | Represents the JSON value @"open"@
    Treasury'financialAccountStatus'EnumOpen
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Treasury'financialAccountStatus' where
  toJSON (Treasury'financialAccountStatus'Other val) = val
  toJSON (Treasury'financialAccountStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Treasury'financialAccountStatus'EnumClosed) = "closed"
  toJSON (Treasury'financialAccountStatus'EnumOpen) = "open"

instance Data.Aeson.Types.FromJSON.FromJSON Treasury'financialAccountStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "closed" -> Treasury'financialAccountStatus'EnumClosed
            | val GHC.Classes.== "open" -> Treasury'financialAccountStatus'EnumOpen
            | GHC.Base.otherwise -> Treasury'financialAccountStatus'Other val
      )
