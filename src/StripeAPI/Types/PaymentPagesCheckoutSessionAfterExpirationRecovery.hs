{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentPagesCheckoutSessionAfterExpirationRecovery
module StripeAPI.Types.PaymentPagesCheckoutSessionAfterExpirationRecovery where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_after_expiration_recovery@ in the specification.
data PaymentPagesCheckoutSessionAfterExpirationRecovery = PaymentPagesCheckoutSessionAfterExpirationRecovery
  { -- | allow_promotion_codes: Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to \`false\`
    paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes :: GHC.Types.Bool,
    -- | enabled: If \`true\`, a recovery url will be generated to recover this Checkout Session if it
    -- expires before a transaction is completed. It will be attached to the
    -- Checkout Session object upon expiration.
    paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled :: GHC.Types.Bool,
    -- | expires_at: The timestamp at which the recovery URL will expire.
    paymentPagesCheckoutSessionAfterExpirationRecoveryExpiresAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | url: URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentPagesCheckoutSessionAfterExpirationRecoveryUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionAfterExpirationRecovery where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["allow_promotion_codes" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes obj] : ["enabled" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionAfterExpirationRecoveryExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionAfterExpirationRecoveryUrl obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["allow_promotion_codes" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes obj] : ["enabled" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionAfterExpirationRecoveryExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (paymentPagesCheckoutSessionAfterExpirationRecoveryUrl obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionAfterExpirationRecovery where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionAfterExpirationRecovery" (\obj -> (((GHC.Base.pure PaymentPagesCheckoutSessionAfterExpirationRecovery GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "allow_promotion_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))

-- | Create a new 'PaymentPagesCheckoutSessionAfterExpirationRecovery' with all required fields.
mkPaymentPagesCheckoutSessionAfterExpirationRecovery ::
  -- | 'paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes'
  GHC.Types.Bool ->
  -- | 'paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled'
  GHC.Types.Bool ->
  PaymentPagesCheckoutSessionAfterExpirationRecovery
mkPaymentPagesCheckoutSessionAfterExpirationRecovery paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled =
  PaymentPagesCheckoutSessionAfterExpirationRecovery
    { paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes = paymentPagesCheckoutSessionAfterExpirationRecoveryAllowPromotionCodes,
      paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled = paymentPagesCheckoutSessionAfterExpirationRecoveryEnabled,
      paymentPagesCheckoutSessionAfterExpirationRecoveryExpiresAt = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionAfterExpirationRecoveryUrl = GHC.Maybe.Nothing
    }
