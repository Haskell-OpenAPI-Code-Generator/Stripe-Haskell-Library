{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema FundingInstructionsBankTransferSpeiRecord
module StripeAPI.Types.FundingInstructionsBankTransferSpeiRecord where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.funding_instructions_bank_transfer_spei_record@ in the specification.
--
-- SPEI Records contain Mexico bank account details per the SPEI format.
data FundingInstructionsBankTransferSpeiRecord = FundingInstructionsBankTransferSpeiRecord
  { -- | bank_code: The three-digit bank code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    fundingInstructionsBankTransferSpeiRecordBankCode :: Data.Text.Internal.Text,
    -- | bank_name: The short banking institution name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    fundingInstructionsBankTransferSpeiRecordBankName :: Data.Text.Internal.Text,
    -- | clabe: The CLABE number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    fundingInstructionsBankTransferSpeiRecordClabe :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON FundingInstructionsBankTransferSpeiRecord where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["bank_code" Data.Aeson.Types.ToJSON..= fundingInstructionsBankTransferSpeiRecordBankCode obj] : ["bank_name" Data.Aeson.Types.ToJSON..= fundingInstructionsBankTransferSpeiRecordBankName obj] : ["clabe" Data.Aeson.Types.ToJSON..= fundingInstructionsBankTransferSpeiRecordClabe obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["bank_code" Data.Aeson.Types.ToJSON..= fundingInstructionsBankTransferSpeiRecordBankCode obj] : ["bank_name" Data.Aeson.Types.ToJSON..= fundingInstructionsBankTransferSpeiRecordBankName obj] : ["clabe" Data.Aeson.Types.ToJSON..= fundingInstructionsBankTransferSpeiRecordClabe obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON FundingInstructionsBankTransferSpeiRecord where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "FundingInstructionsBankTransferSpeiRecord" (\obj -> ((GHC.Base.pure FundingInstructionsBankTransferSpeiRecord GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bank_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "clabe"))

-- | Create a new 'FundingInstructionsBankTransferSpeiRecord' with all required fields.
mkFundingInstructionsBankTransferSpeiRecord ::
  -- | 'fundingInstructionsBankTransferSpeiRecordBankCode'
  Data.Text.Internal.Text ->
  -- | 'fundingInstructionsBankTransferSpeiRecordBankName'
  Data.Text.Internal.Text ->
  -- | 'fundingInstructionsBankTransferSpeiRecordClabe'
  Data.Text.Internal.Text ->
  FundingInstructionsBankTransferSpeiRecord
mkFundingInstructionsBankTransferSpeiRecord fundingInstructionsBankTransferSpeiRecordBankCode fundingInstructionsBankTransferSpeiRecordBankName fundingInstructionsBankTransferSpeiRecordClabe =
  FundingInstructionsBankTransferSpeiRecord
    { fundingInstructionsBankTransferSpeiRecordBankCode = fundingInstructionsBankTransferSpeiRecordBankCode,
      fundingInstructionsBankTransferSpeiRecordBankName = fundingInstructionsBankTransferSpeiRecordBankName,
      fundingInstructionsBankTransferSpeiRecordClabe = fundingInstructionsBankTransferSpeiRecordClabe
    }
