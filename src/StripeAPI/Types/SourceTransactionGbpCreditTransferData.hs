{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SourceTransactionGbpCreditTransferData
module StripeAPI.Types.SourceTransactionGbpCreditTransferData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.source_transaction_gbp_credit_transfer_data@ in the specification.
data SourceTransactionGbpCreditTransferData = SourceTransactionGbpCreditTransferData
  { -- | fingerprint: Bank account fingerprint associated with the Stripe owned bank account receiving the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataFingerprint :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | funding_method: The credit transfer rails the sender used to push this transfer. The possible rails are: Faster Payments, BACS, CHAPS, and wire transfers. Currently only Faster Payments is supported.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataFundingMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last4: Last 4 digits of sender account number associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataLast4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | reference: Sender entered arbitrary information about the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataReference :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sender_account_number: Sender account number associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataSenderAccountNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sender_name: Sender name associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataSenderName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | sender_sort_code: Sender sort code associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionGbpCreditTransferDataSenderSortCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SourceTransactionGbpCreditTransferData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding_method" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataFundingMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataReference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sender_account_number" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataSenderAccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sender_name" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataSenderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sender_sort_code" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataSenderSortCode obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding_method" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataFundingMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataReference obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sender_account_number" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataSenderAccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sender_name" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataSenderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sender_sort_code" Data.Aeson.Types.ToJSON..=)) (sourceTransactionGbpCreditTransferDataSenderSortCode obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SourceTransactionGbpCreditTransferData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SourceTransactionGbpCreditTransferData" (\obj -> ((((((GHC.Base.pure SourceTransactionGbpCreditTransferData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sender_account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sender_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sender_sort_code"))

-- | Create a new 'SourceTransactionGbpCreditTransferData' with all required fields.
mkSourceTransactionGbpCreditTransferData :: SourceTransactionGbpCreditTransferData
mkSourceTransactionGbpCreditTransferData =
  SourceTransactionGbpCreditTransferData
    { sourceTransactionGbpCreditTransferDataFingerprint = GHC.Maybe.Nothing,
      sourceTransactionGbpCreditTransferDataFundingMethod = GHC.Maybe.Nothing,
      sourceTransactionGbpCreditTransferDataLast4 = GHC.Maybe.Nothing,
      sourceTransactionGbpCreditTransferDataReference = GHC.Maybe.Nothing,
      sourceTransactionGbpCreditTransferDataSenderAccountNumber = GHC.Maybe.Nothing,
      sourceTransactionGbpCreditTransferDataSenderName = GHC.Maybe.Nothing,
      sourceTransactionGbpCreditTransferDataSenderSortCode = GHC.Maybe.Nothing
    }
