{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InvoicesLineItemsProrationDetails
module StripeAPI.Types.InvoicesLineItemsProrationDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.InvoicesLineItemsCreditedItems
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.invoices_line_items_proration_details@ in the specification.
data InvoicesLineItemsProrationDetails = InvoicesLineItemsProrationDetails
  { -- | credited_items: For a credit proration \`line_item\`, the original debit line_items to which the credit proration applies.
    invoicesLineItemsProrationDetailsCreditedItems :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoicesLineItemsProrationDetailsCreditedItems'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesLineItemsProrationDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credited_items" Data.Aeson.Types.ToJSON..=)) (invoicesLineItemsProrationDetailsCreditedItems obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("credited_items" Data.Aeson.Types.ToJSON..=)) (invoicesLineItemsProrationDetailsCreditedItems obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesLineItemsProrationDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoicesLineItemsProrationDetails" (\obj -> GHC.Base.pure InvoicesLineItemsProrationDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "credited_items"))

-- | Create a new 'InvoicesLineItemsProrationDetails' with all required fields.
mkInvoicesLineItemsProrationDetails :: InvoicesLineItemsProrationDetails
mkInvoicesLineItemsProrationDetails = InvoicesLineItemsProrationDetails {invoicesLineItemsProrationDetailsCreditedItems = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.invoices_line_items_proration_details.properties.credited_items.anyOf@ in the specification.
--
-- For a credit proration \\\`line_item\\\`, the original debit line_items to which the credit proration applies.
data InvoicesLineItemsProrationDetailsCreditedItems'NonNullable = InvoicesLineItemsProrationDetailsCreditedItems'NonNullable
  { -- | invoice: Invoice containing the credited invoice line items
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoice :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | invoice_line_items: Credited invoice line items
    invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoiceLineItems :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InvoicesLineItemsProrationDetailsCreditedItems'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_items" Data.Aeson.Types.ToJSON..=)) (invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoiceLineItems obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_items" Data.Aeson.Types.ToJSON..=)) (invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoiceLineItems obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InvoicesLineItemsProrationDetailsCreditedItems'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoicesLineItemsProrationDetailsCreditedItems'NonNullable" (\obj -> (GHC.Base.pure InvoicesLineItemsProrationDetailsCreditedItems'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_items"))

-- | Create a new 'InvoicesLineItemsProrationDetailsCreditedItems'NonNullable' with all required fields.
mkInvoicesLineItemsProrationDetailsCreditedItems'NonNullable :: InvoicesLineItemsProrationDetailsCreditedItems'NonNullable
mkInvoicesLineItemsProrationDetailsCreditedItems'NonNullable =
  InvoicesLineItemsProrationDetailsCreditedItems'NonNullable
    { invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoice = GHC.Maybe.Nothing,
      invoicesLineItemsProrationDetailsCreditedItems'NonNullableInvoiceLineItems = GHC.Maybe.Nothing
    }
