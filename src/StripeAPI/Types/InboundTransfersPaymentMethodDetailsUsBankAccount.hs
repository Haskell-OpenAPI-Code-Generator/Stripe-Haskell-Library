{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema InboundTransfersPaymentMethodDetailsUsBankAccount
module StripeAPI.Types.InboundTransfersPaymentMethodDetailsUsBankAccount where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.inbound_transfers_payment_method_details_us_bank_account@ in the specification.
data InboundTransfersPaymentMethodDetailsUsBankAccount = InboundTransfersPaymentMethodDetailsUsBankAccount
  { -- | account_holder_type: Account holder type: individual or company.
    inboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullable)),
    -- | account_type: Account type: checkings or savings. Defaults to checking if omitted.
    inboundTransfersPaymentMethodDetailsUsBankAccountAccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullable)),
    -- | bank_name: Name of the bank associated with the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    inboundTransfersPaymentMethodDetailsUsBankAccountBankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | fingerprint: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    inboundTransfersPaymentMethodDetailsUsBankAccountFingerprint :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | last4: Last four digits of the bank account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    inboundTransfersPaymentMethodDetailsUsBankAccountLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | routing_number: Routing number of the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    inboundTransfersPaymentMethodDetailsUsBankAccountRoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON InboundTransfersPaymentMethodDetailsUsBankAccount where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountAccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountBankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountRoutingNumber obj) : ["network" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "ach"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountAccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountBankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (inboundTransfersPaymentMethodDetailsUsBankAccountRoutingNumber obj) : ["network" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "ach"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON InboundTransfersPaymentMethodDetailsUsBankAccount where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "InboundTransfersPaymentMethodDetailsUsBankAccount" (\obj -> (((((GHC.Base.pure InboundTransfersPaymentMethodDetailsUsBankAccount GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number"))

-- | Create a new 'InboundTransfersPaymentMethodDetailsUsBankAccount' with all required fields.
mkInboundTransfersPaymentMethodDetailsUsBankAccount :: InboundTransfersPaymentMethodDetailsUsBankAccount
mkInboundTransfersPaymentMethodDetailsUsBankAccount =
  InboundTransfersPaymentMethodDetailsUsBankAccount
    { inboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType = GHC.Maybe.Nothing,
      inboundTransfersPaymentMethodDetailsUsBankAccountAccountType = GHC.Maybe.Nothing,
      inboundTransfersPaymentMethodDetailsUsBankAccountBankName = GHC.Maybe.Nothing,
      inboundTransfersPaymentMethodDetailsUsBankAccountFingerprint = GHC.Maybe.Nothing,
      inboundTransfersPaymentMethodDetailsUsBankAccountLast4 = GHC.Maybe.Nothing,
      inboundTransfersPaymentMethodDetailsUsBankAccountRoutingNumber = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.inbound_transfers_payment_method_details_us_bank_account.properties.account_holder_type@ in the specification.
--
-- Account holder type: individual or company.
data InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"company"@
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableEnumCompany
  | -- | Represents the JSON value @"individual"@
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableEnumIndividual
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullable where
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableOther val) = val
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableEnumCompany) = "company"
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableEnumIndividual) = "individual"

instance Data.Aeson.Types.FromJSON.FromJSON InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "company" -> InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableEnumCompany
            | val GHC.Classes.== "individual" -> InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableEnumIndividual
            | GHC.Base.otherwise -> InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.inbound_transfers_payment_method_details_us_bank_account.properties.account_type@ in the specification.
--
-- Account type: checkings or savings. Defaults to checking if omitted.
data InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"checking"@
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableEnumChecking
  | -- | Represents the JSON value @"savings"@
    InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableEnumSavings
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullable where
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableOther val) = val
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableEnumChecking) = "checking"
  toJSON (InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableEnumSavings) = "savings"

instance Data.Aeson.Types.FromJSON.FromJSON InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "checking" -> InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableEnumChecking
            | val GHC.Classes.== "savings" -> InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableEnumSavings
            | GHC.Base.otherwise -> InboundTransfersPaymentMethodDetailsUsBankAccountAccountType'NonNullableOther val
      )
