{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentIntentPaymentMethodOptions
module StripeAPI.Types.PaymentIntentPaymentMethodOptions where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentIntentPaymentMethodOptionsAcssDebit
import {-# SOURCE #-} StripeAPI.Types.PaymentIntentPaymentMethodOptionsCard
import {-# SOURCE #-} StripeAPI.Types.PaymentIntentPaymentMethodOptionsSepaDebit
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodOptionsAfterpayClearpay
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodOptionsBancontact
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodOptionsBoleto
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodOptionsOxxo
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodOptionsSofort
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_intent_payment_method_options@ in the specification.
data PaymentIntentPaymentMethodOptions = PaymentIntentPaymentMethodOptions
  { -- | acss_debit:
    paymentIntentPaymentMethodOptionsAcssDebit :: (GHC.Maybe.Maybe PaymentIntentPaymentMethodOptionsAcssDebit),
    -- | afterpay_clearpay:
    paymentIntentPaymentMethodOptionsAfterpayClearpay :: (GHC.Maybe.Maybe PaymentMethodOptionsAfterpayClearpay),
    -- | alipay:
    paymentIntentPaymentMethodOptionsAlipay :: (GHC.Maybe.Maybe PaymentMethodOptionsAlipay),
    -- | bancontact:
    paymentIntentPaymentMethodOptionsBancontact :: (GHC.Maybe.Maybe PaymentMethodOptionsBancontact),
    -- | boleto:
    paymentIntentPaymentMethodOptionsBoleto :: (GHC.Maybe.Maybe PaymentMethodOptionsBoleto),
    -- | card:
    paymentIntentPaymentMethodOptionsCard :: (GHC.Maybe.Maybe PaymentIntentPaymentMethodOptionsCard),
    -- | card_present:
    paymentIntentPaymentMethodOptionsCardPresent :: (GHC.Maybe.Maybe PaymentMethodOptionsCardPresent),
    -- | oxxo:
    paymentIntentPaymentMethodOptionsOxxo :: (GHC.Maybe.Maybe PaymentMethodOptionsOxxo),
    -- | p24:
    paymentIntentPaymentMethodOptionsP24 :: (GHC.Maybe.Maybe PaymentMethodOptionsP24),
    -- | sepa_debit:
    paymentIntentPaymentMethodOptionsSepaDebit :: (GHC.Maybe.Maybe PaymentIntentPaymentMethodOptionsSepaDebit),
    -- | sofort:
    paymentIntentPaymentMethodOptionsSofort :: (GHC.Maybe.Maybe PaymentMethodOptionsSofort)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentIntentPaymentMethodOptions where
  toJSON obj = Data.Aeson.Types.Internal.object ("acss_debit" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsAcssDebit obj : "afterpay_clearpay" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsAfterpayClearpay obj : "alipay" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsAlipay obj : "bancontact" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsBancontact obj : "boleto" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsBoleto obj : "card" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsCard obj : "card_present" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsCardPresent obj : "oxxo" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsOxxo obj : "p24" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsP24 obj : "sepa_debit" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsSepaDebit obj : "sofort" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsSofort obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("acss_debit" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsAcssDebit obj) GHC.Base.<> (("afterpay_clearpay" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsAfterpayClearpay obj) GHC.Base.<> (("alipay" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsAlipay obj) GHC.Base.<> (("bancontact" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsBancontact obj) GHC.Base.<> (("boleto" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsBoleto obj) GHC.Base.<> (("card" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsCard obj) GHC.Base.<> (("card_present" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsCardPresent obj) GHC.Base.<> (("oxxo" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsOxxo obj) GHC.Base.<> (("p24" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsP24 obj) GHC.Base.<> (("sepa_debit" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsSepaDebit obj) GHC.Base.<> ("sofort" Data.Aeson.Types.ToJSON..= paymentIntentPaymentMethodOptionsSofort obj)))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentIntentPaymentMethodOptions where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentIntentPaymentMethodOptions" (\obj -> ((((((((((GHC.Base.pure PaymentIntentPaymentMethodOptions GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sofort"))

-- | Create a new 'PaymentIntentPaymentMethodOptions' with all required fields.
mkPaymentIntentPaymentMethodOptions :: PaymentIntentPaymentMethodOptions
mkPaymentIntentPaymentMethodOptions =
  PaymentIntentPaymentMethodOptions
    { paymentIntentPaymentMethodOptionsAcssDebit = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsAfterpayClearpay = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsAlipay = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsBancontact = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsBoleto = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsCard = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsCardPresent = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsOxxo = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsP24 = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsSepaDebit = GHC.Maybe.Nothing,
      paymentIntentPaymentMethodOptionsSofort = GHC.Maybe.Nothing
    }
