{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodCardGeneratedCard
module StripeAPI.Types.PaymentMethodCardGeneratedCard where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.CardGeneratedFromPaymentMethodDetails
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodDetailsCardPresent
import {-# SOURCE #-} StripeAPI.Types.SetupAttempt
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_card_generated_card@ in the specification.
data PaymentMethodCardGeneratedCard = PaymentMethodCardGeneratedCard
  { -- | charge: The charge that created this object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodCardGeneratedCardCharge :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | payment_method_details: Transaction-specific details of the payment method used in the payment.
    paymentMethodCardGeneratedCardPaymentMethodDetails :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable)),
    -- | setup_attempt: The ID of the SetupAttempt that generated this PaymentMethod, if any.
    paymentMethodCardGeneratedCardSetupAttempt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodCardGeneratedCardSetupAttempt'NonNullableVariants))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodCardGeneratedCard where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardCharge obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_details" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardPaymentMethodDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_attempt" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardSetupAttempt obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardCharge obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_details" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardPaymentMethodDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_attempt" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardSetupAttempt obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodCardGeneratedCard where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodCardGeneratedCard" (\obj -> ((GHC.Base.pure PaymentMethodCardGeneratedCard GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "setup_attempt"))

-- | Create a new 'PaymentMethodCardGeneratedCard' with all required fields.
mkPaymentMethodCardGeneratedCard :: PaymentMethodCardGeneratedCard
mkPaymentMethodCardGeneratedCard =
  PaymentMethodCardGeneratedCard
    { paymentMethodCardGeneratedCardCharge = GHC.Maybe.Nothing,
      paymentMethodCardGeneratedCardPaymentMethodDetails = GHC.Maybe.Nothing,
      paymentMethodCardGeneratedCardSetupAttempt = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.payment_method_card_generated_card.properties.payment_method_details.anyOf@ in the specification.
--
-- Transaction-specific details of the payment method used in the payment.
data PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable = PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable
  { -- | card_present:
    paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableCardPresent :: (GHC.Maybe.Maybe PaymentMethodDetailsCardPresent),
    -- | type: The type of payment method transaction-specific details from the transaction that generated this \`card\` payment method. Always \`card_present\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableCardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableCardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable" (\obj -> (GHC.Base.pure PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable' with all required fields.
mkPaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable :: PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable
mkPaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable =
  PaymentMethodCardGeneratedCardPaymentMethodDetails'NonNullable
    { paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableCardPresent = GHC.Maybe.Nothing,
      paymentMethodCardGeneratedCardPaymentMethodDetails'NonNullableType = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.payment_method_card_generated_card.properties.setup_attempt.anyOf@ in the specification.
--
-- The ID of the SetupAttempt that generated this PaymentMethod, if any.
data PaymentMethodCardGeneratedCardSetupAttempt'NonNullableVariants
  = PaymentMethodCardGeneratedCardSetupAttempt'NonNullableText Data.Text.Internal.Text
  | PaymentMethodCardGeneratedCardSetupAttempt'NonNullableSetupAttempt SetupAttempt
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodCardGeneratedCardSetupAttempt'NonNullableVariants where
  toJSON (PaymentMethodCardGeneratedCardSetupAttempt'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PaymentMethodCardGeneratedCardSetupAttempt'NonNullableSetupAttempt a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodCardGeneratedCardSetupAttempt'NonNullableVariants where
  parseJSON val = case (PaymentMethodCardGeneratedCardSetupAttempt'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PaymentMethodCardGeneratedCardSetupAttempt'NonNullableSetupAttempt Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
