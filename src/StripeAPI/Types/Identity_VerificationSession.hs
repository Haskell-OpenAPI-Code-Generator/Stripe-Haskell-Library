{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema Identity_VerificationSession
module StripeAPI.Types.Identity_VerificationSession where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Address
import {-# SOURCE #-} StripeAPI.Types.GelatoDataVerifiedOutputsDate
import {-# SOURCE #-} StripeAPI.Types.GelatoSessionDocumentOptions
import {-# SOURCE #-} StripeAPI.Types.GelatoSessionLastError
import {-# SOURCE #-} StripeAPI.Types.GelatoVerificationSessionOptions
import {-# SOURCE #-} StripeAPI.Types.GelatoVerifiedOutputs
import {-# SOURCE #-} StripeAPI.Types.Identity_VerificationReport
import {-# SOURCE #-} StripeAPI.Types.VerificationSessionRedaction
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.identity.verification_session@ in the specification.
--
-- A VerificationSession guides you through the process of collecting and verifying the identities
-- of your users. It contains details about the type of verification, such as what [verification
-- check](\/docs\/identity\/verification-checks) to perform. Only create one VerificationSession for
-- each verification in your system.
--
-- A VerificationSession transitions through [multiple
-- statuses](\/docs\/identity\/how-sessions-work) throughout its lifetime as it progresses through
-- the verification flow. The VerificationSession contains the user\'s verified data after
-- verification checks are complete.
--
-- Related guide: [The Verification Sessions API](https:\/\/stripe.com\/docs\/identity\/verification-sessions)
data Identity'verificationSession = Identity'verificationSession
  { -- | client_secret: The short-lived client secret used by Stripe.js to [show a verification modal](https:\/\/stripe.com\/docs\/js\/identity\/modal) inside your app. This client secret expires after 24 hours and can only be used once. Don’t store it, log it, embed it in a URL, or expose it to anyone other than the user. Make sure that you have TLS enabled on any page that includes the client secret. Refer to our docs on [passing the client secret to the frontend](https:\/\/stripe.com\/docs\/identity\/verification-sessions\#client-secret) to learn more.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionClientSecret :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    identity'verificationSessionCreated :: GHC.Types.Int,
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionId :: Data.Text.Internal.Text,
    -- | last_error: If present, this property tells you the last error encountered when processing the verification.
    identity'verificationSessionLastError :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionLastError'NonNullable)),
    -- | last_verification_report: ID of the most recent VerificationReport. [Learn more about accessing detailed verification results.](https:\/\/stripe.com\/docs\/identity\/verification-sessions\#results)
    identity'verificationSessionLastVerificationReport :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionLastVerificationReport'NonNullableVariants)),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    identity'verificationSessionLivemode :: GHC.Types.Bool,
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    identity'verificationSessionMetadata :: Data.Aeson.Types.Internal.Object,
    -- | options: A set of options for the session’s verification checks.
    identity'verificationSessionOptions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionOptions'NonNullable)),
    -- | redaction: Redaction status of this VerificationSession. If the VerificationSession is not redacted, this field will be null.
    identity'verificationSessionRedaction :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionRedaction'NonNullable)),
    -- | status: Status of this VerificationSession. [Learn more about the lifecycle of sessions](https:\/\/stripe.com\/docs\/identity\/how-sessions-work).
    identity'verificationSessionStatus :: Identity'verificationSessionStatus',
    -- | type: The type of [verification check](https:\/\/stripe.com\/docs\/identity\/verification-checks) to be performed.
    identity'verificationSessionType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionType'NonNullable)),
    -- | url: The short-lived URL that you use to redirect a user to Stripe to submit their identity information. This URL expires after 48 hours and can only be used once. Don’t store it, log it, send it in emails or expose it to anyone other than the user. Refer to our docs on [verifying identity documents](https:\/\/stripe.com\/docs\/identity\/verify-identity-documents?platform=web&type=redirect) to learn how to redirect users to Stripe.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_outputs: The user’s verified data.
    identity'verificationSessionVerifiedOutputs :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionVerifiedOutputs'NonNullable))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSession where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionClientSecret obj) : ["created" Data.Aeson.Types.ToJSON..= identity'verificationSessionCreated obj] : ["id" Data.Aeson.Types.ToJSON..= identity'verificationSessionId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_error" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastError obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_verification_report" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastVerificationReport obj) : ["livemode" Data.Aeson.Types.ToJSON..= identity'verificationSessionLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= identity'verificationSessionMetadata obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("options" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redaction" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionRedaction obj) : ["status" Data.Aeson.Types.ToJSON..= identity'verificationSessionStatus obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_outputs" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "identity.verification_session"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionClientSecret obj) : ["created" Data.Aeson.Types.ToJSON..= identity'verificationSessionCreated obj] : ["id" Data.Aeson.Types.ToJSON..= identity'verificationSessionId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_error" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastError obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_verification_report" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastVerificationReport obj) : ["livemode" Data.Aeson.Types.ToJSON..= identity'verificationSessionLivemode obj] : ["metadata" Data.Aeson.Types.ToJSON..= identity'verificationSessionMetadata obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("options" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redaction" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionRedaction obj) : ["status" Data.Aeson.Types.ToJSON..= identity'verificationSessionStatus obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_outputs" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "identity.verification_session"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSession where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSession" (\obj -> ((((((((((((GHC.Base.pure Identity'verificationSession GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_verification_report")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "redaction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_outputs"))

-- | Create a new 'Identity'verificationSession' with all required fields.
mkIdentity'verificationSession ::
  -- | 'identity'verificationSessionCreated'
  GHC.Types.Int ->
  -- | 'identity'verificationSessionId'
  Data.Text.Internal.Text ->
  -- | 'identity'verificationSessionLivemode'
  GHC.Types.Bool ->
  -- | 'identity'verificationSessionMetadata'
  Data.Aeson.Types.Internal.Object ->
  -- | 'identity'verificationSessionStatus'
  Identity'verificationSessionStatus' ->
  Identity'verificationSession
mkIdentity'verificationSession identity'verificationSessionCreated identity'verificationSessionId identity'verificationSessionLivemode identity'verificationSessionMetadata identity'verificationSessionStatus =
  Identity'verificationSession
    { identity'verificationSessionClientSecret = GHC.Maybe.Nothing,
      identity'verificationSessionCreated = identity'verificationSessionCreated,
      identity'verificationSessionId = identity'verificationSessionId,
      identity'verificationSessionLastError = GHC.Maybe.Nothing,
      identity'verificationSessionLastVerificationReport = GHC.Maybe.Nothing,
      identity'verificationSessionLivemode = identity'verificationSessionLivemode,
      identity'verificationSessionMetadata = identity'verificationSessionMetadata,
      identity'verificationSessionOptions = GHC.Maybe.Nothing,
      identity'verificationSessionRedaction = GHC.Maybe.Nothing,
      identity'verificationSessionStatus = identity'verificationSessionStatus,
      identity'verificationSessionType = GHC.Maybe.Nothing,
      identity'verificationSessionUrl = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.identity.verification_session.properties.last_error.anyOf@ in the specification.
--
-- If present, this property tells you the last error encountered when processing the verification.
data Identity'verificationSessionLastError'NonNullable = Identity'verificationSessionLastError'NonNullable
  { -- | code: A short machine-readable string giving the reason for the verification or user-session failure.
    identity'verificationSessionLastError'NonNullableCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionLastError'NonNullableCode'NonNullable)),
    -- | reason: A message that explains the reason for verification or user-session failure.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionLastError'NonNullableReason :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionLastError'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastError'NonNullableCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reason" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastError'NonNullableReason obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastError'NonNullableCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reason" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionLastError'NonNullableReason obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionLastError'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSessionLastError'NonNullable" (\obj -> (GHC.Base.pure Identity'verificationSessionLastError'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reason"))

-- | Create a new 'Identity'verificationSessionLastError'NonNullable' with all required fields.
mkIdentity'verificationSessionLastError'NonNullable :: Identity'verificationSessionLastError'NonNullable
mkIdentity'verificationSessionLastError'NonNullable =
  Identity'verificationSessionLastError'NonNullable
    { identity'verificationSessionLastError'NonNullableCode = GHC.Maybe.Nothing,
      identity'verificationSessionLastError'NonNullableReason = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.identity.verification_session.properties.last_error.anyOf.properties.code@ in the specification.
--
-- A short machine-readable string giving the reason for the verification or user-session failure.
data Identity'verificationSessionLastError'NonNullableCode'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Identity'verificationSessionLastError'NonNullableCode'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Identity'verificationSessionLastError'NonNullableCode'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"abandoned"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumAbandoned
  | -- | Represents the JSON value @"consent_declined"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumConsentDeclined
  | -- | Represents the JSON value @"country_not_supported"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumCountryNotSupported
  | -- | Represents the JSON value @"device_not_supported"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDeviceNotSupported
  | -- | Represents the JSON value @"document_expired"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentExpired
  | -- | Represents the JSON value @"document_type_not_supported"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentTypeNotSupported
  | -- | Represents the JSON value @"document_unverified_other"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentUnverifiedOther
  | -- | Represents the JSON value @"id_number_insufficient_document_data"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberInsufficientDocumentData
  | -- | Represents the JSON value @"id_number_mismatch"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberMismatch
  | -- | Represents the JSON value @"id_number_unverified_other"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberUnverifiedOther
  | -- | Represents the JSON value @"selfie_document_missing_photo"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieDocumentMissingPhoto
  | -- | Represents the JSON value @"selfie_face_mismatch"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieFaceMismatch
  | -- | Represents the JSON value @"selfie_manipulated"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieManipulated
  | -- | Represents the JSON value @"selfie_unverified_other"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieUnverifiedOther
  | -- | Represents the JSON value @"under_supported_age"@
    Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumUnderSupportedAge
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionLastError'NonNullableCode'NonNullable where
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableOther val) = val
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumAbandoned) = "abandoned"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumConsentDeclined) = "consent_declined"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumCountryNotSupported) = "country_not_supported"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDeviceNotSupported) = "device_not_supported"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentExpired) = "document_expired"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentTypeNotSupported) = "document_type_not_supported"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentUnverifiedOther) = "document_unverified_other"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberInsufficientDocumentData) = "id_number_insufficient_document_data"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberMismatch) = "id_number_mismatch"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberUnverifiedOther) = "id_number_unverified_other"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieDocumentMissingPhoto) = "selfie_document_missing_photo"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieFaceMismatch) = "selfie_face_mismatch"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieManipulated) = "selfie_manipulated"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieUnverifiedOther) = "selfie_unverified_other"
  toJSON (Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumUnderSupportedAge) = "under_supported_age"

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionLastError'NonNullableCode'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "abandoned" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumAbandoned
            | val GHC.Classes.== "consent_declined" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumConsentDeclined
            | val GHC.Classes.== "country_not_supported" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumCountryNotSupported
            | val GHC.Classes.== "device_not_supported" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDeviceNotSupported
            | val GHC.Classes.== "document_expired" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentExpired
            | val GHC.Classes.== "document_type_not_supported" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentTypeNotSupported
            | val GHC.Classes.== "document_unverified_other" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumDocumentUnverifiedOther
            | val GHC.Classes.== "id_number_insufficient_document_data" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberInsufficientDocumentData
            | val GHC.Classes.== "id_number_mismatch" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberMismatch
            | val GHC.Classes.== "id_number_unverified_other" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumIdNumberUnverifiedOther
            | val GHC.Classes.== "selfie_document_missing_photo" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieDocumentMissingPhoto
            | val GHC.Classes.== "selfie_face_mismatch" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieFaceMismatch
            | val GHC.Classes.== "selfie_manipulated" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieManipulated
            | val GHC.Classes.== "selfie_unverified_other" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumSelfieUnverifiedOther
            | val GHC.Classes.== "under_supported_age" -> Identity'verificationSessionLastError'NonNullableCode'NonNullableEnumUnderSupportedAge
            | GHC.Base.otherwise -> Identity'verificationSessionLastError'NonNullableCode'NonNullableOther val
      )

-- | Defines the oneOf schema located at @components.schemas.identity.verification_session.properties.last_verification_report.anyOf@ in the specification.
--
-- ID of the most recent VerificationReport. [Learn more about accessing detailed verification results.](https:\/\/stripe.com\/docs\/identity\/verification-sessions\#results)
data Identity'verificationSessionLastVerificationReport'NonNullableVariants
  = Identity'verificationSessionLastVerificationReport'NonNullableText Data.Text.Internal.Text
  | Identity'verificationSessionLastVerificationReport'NonNullableIdentity'verificationReport Identity'verificationReport
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionLastVerificationReport'NonNullableVariants where
  toJSON (Identity'verificationSessionLastVerificationReport'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (Identity'verificationSessionLastVerificationReport'NonNullableIdentity'verificationReport a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionLastVerificationReport'NonNullableVariants where
  parseJSON val = case (Identity'verificationSessionLastVerificationReport'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((Identity'verificationSessionLastVerificationReport'NonNullableIdentity'verificationReport Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @components.schemas.identity.verification_session.properties.options.anyOf@ in the specification.
--
-- A set of options for the session’s verification checks.
data Identity'verificationSessionOptions'NonNullable = Identity'verificationSessionOptions'NonNullable
  { -- | document:
    identity'verificationSessionOptions'NonNullableDocument :: (GHC.Maybe.Maybe GelatoSessionDocumentOptions),
    -- | id_number:
    identity'verificationSessionOptions'NonNullableIdNumber :: (GHC.Maybe.Maybe GelatoSessionIdNumberOptions)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionOptions'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionOptions'NonNullableDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionOptions'NonNullableIdNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionOptions'NonNullableDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionOptions'NonNullableIdNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionOptions'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSessionOptions'NonNullable" (\obj -> (GHC.Base.pure Identity'verificationSessionOptions'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number"))

-- | Create a new 'Identity'verificationSessionOptions'NonNullable' with all required fields.
mkIdentity'verificationSessionOptions'NonNullable :: Identity'verificationSessionOptions'NonNullable
mkIdentity'verificationSessionOptions'NonNullable =
  Identity'verificationSessionOptions'NonNullable
    { identity'verificationSessionOptions'NonNullableDocument = GHC.Maybe.Nothing,
      identity'verificationSessionOptions'NonNullableIdNumber = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.identity.verification_session.properties.redaction.anyOf@ in the specification.
--
-- Redaction status of this VerificationSession. If the VerificationSession is not redacted, this field will be null.
data Identity'verificationSessionRedaction'NonNullable = Identity'verificationSessionRedaction'NonNullable
  { -- | status: Indicates whether this object and its related objects have been redacted or not.
    identity'verificationSessionRedaction'NonNullableStatus :: (GHC.Maybe.Maybe Identity'verificationSessionRedaction'NonNullableStatus')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionRedaction'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionRedaction'NonNullableStatus obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionRedaction'NonNullableStatus obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionRedaction'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSessionRedaction'NonNullable" (\obj -> GHC.Base.pure Identity'verificationSessionRedaction'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status"))

-- | Create a new 'Identity'verificationSessionRedaction'NonNullable' with all required fields.
mkIdentity'verificationSessionRedaction'NonNullable :: Identity'verificationSessionRedaction'NonNullable
mkIdentity'verificationSessionRedaction'NonNullable = Identity'verificationSessionRedaction'NonNullable {identity'verificationSessionRedaction'NonNullableStatus = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.identity.verification_session.properties.redaction.anyOf.properties.status@ in the specification.
--
-- Indicates whether this object and its related objects have been redacted or not.
data Identity'verificationSessionRedaction'NonNullableStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Identity'verificationSessionRedaction'NonNullableStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Identity'verificationSessionRedaction'NonNullableStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"processing"@
    Identity'verificationSessionRedaction'NonNullableStatus'EnumProcessing
  | -- | Represents the JSON value @"redacted"@
    Identity'verificationSessionRedaction'NonNullableStatus'EnumRedacted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionRedaction'NonNullableStatus' where
  toJSON (Identity'verificationSessionRedaction'NonNullableStatus'Other val) = val
  toJSON (Identity'verificationSessionRedaction'NonNullableStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Identity'verificationSessionRedaction'NonNullableStatus'EnumProcessing) = "processing"
  toJSON (Identity'verificationSessionRedaction'NonNullableStatus'EnumRedacted) = "redacted"

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionRedaction'NonNullableStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "processing" -> Identity'verificationSessionRedaction'NonNullableStatus'EnumProcessing
            | val GHC.Classes.== "redacted" -> Identity'verificationSessionRedaction'NonNullableStatus'EnumRedacted
            | GHC.Base.otherwise -> Identity'verificationSessionRedaction'NonNullableStatus'Other val
      )

-- | Defines the enum schema located at @components.schemas.identity.verification_session.properties.status@ in the specification.
--
-- Status of this VerificationSession. [Learn more about the lifecycle of sessions](https:\/\/stripe.com\/docs\/identity\/how-sessions-work).
data Identity'verificationSessionStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Identity'verificationSessionStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Identity'verificationSessionStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"canceled"@
    Identity'verificationSessionStatus'EnumCanceled
  | -- | Represents the JSON value @"processing"@
    Identity'verificationSessionStatus'EnumProcessing
  | -- | Represents the JSON value @"requires_input"@
    Identity'verificationSessionStatus'EnumRequiresInput
  | -- | Represents the JSON value @"verified"@
    Identity'verificationSessionStatus'EnumVerified
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionStatus' where
  toJSON (Identity'verificationSessionStatus'Other val) = val
  toJSON (Identity'verificationSessionStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Identity'verificationSessionStatus'EnumCanceled) = "canceled"
  toJSON (Identity'verificationSessionStatus'EnumProcessing) = "processing"
  toJSON (Identity'verificationSessionStatus'EnumRequiresInput) = "requires_input"
  toJSON (Identity'verificationSessionStatus'EnumVerified) = "verified"

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "canceled" -> Identity'verificationSessionStatus'EnumCanceled
            | val GHC.Classes.== "processing" -> Identity'verificationSessionStatus'EnumProcessing
            | val GHC.Classes.== "requires_input" -> Identity'verificationSessionStatus'EnumRequiresInput
            | val GHC.Classes.== "verified" -> Identity'verificationSessionStatus'EnumVerified
            | GHC.Base.otherwise -> Identity'verificationSessionStatus'Other val
      )

-- | Defines the enum schema located at @components.schemas.identity.verification_session.properties.type@ in the specification.
--
-- The type of [verification check](https:\/\/stripe.com\/docs\/identity\/verification-checks) to be performed.
data Identity'verificationSessionType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Identity'verificationSessionType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Identity'verificationSessionType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"document"@
    Identity'verificationSessionType'NonNullableEnumDocument
  | -- | Represents the JSON value @"id_number"@
    Identity'verificationSessionType'NonNullableEnumIdNumber
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionType'NonNullable where
  toJSON (Identity'verificationSessionType'NonNullableOther val) = val
  toJSON (Identity'verificationSessionType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Identity'verificationSessionType'NonNullableEnumDocument) = "document"
  toJSON (Identity'verificationSessionType'NonNullableEnumIdNumber) = "id_number"

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "document" -> Identity'verificationSessionType'NonNullableEnumDocument
            | val GHC.Classes.== "id_number" -> Identity'verificationSessionType'NonNullableEnumIdNumber
            | GHC.Base.otherwise -> Identity'verificationSessionType'NonNullableOther val
      )

-- | Defines the object schema located at @components.schemas.identity.verification_session.properties.verified_outputs.anyOf@ in the specification.
--
-- The user’s verified data.
data Identity'verificationSessionVerifiedOutputs'NonNullable = Identity'verificationSessionVerifiedOutputs'NonNullable
  { -- | address: The user\'s verified address.
    identity'verificationSessionVerifiedOutputs'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable)),
    -- | dob: The user’s verified date of birth.
    identity'verificationSessionVerifiedOutputs'NonNullableDob :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable)),
    -- | first_name: The user\'s verified first name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableFirstName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | id_number: The user\'s verified id number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableIdNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | id_number_type: The user\'s verified id number type.
    identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullable)),
    -- | last_name: The user\'s verified last name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableLastName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionVerifiedOutputs'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_type" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableLastName obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_type" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableLastName obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionVerifiedOutputs'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSessionVerifiedOutputs'NonNullable" (\obj -> (((((GHC.Base.pure Identity'verificationSessionVerifiedOutputs'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name"))

-- | Create a new 'Identity'verificationSessionVerifiedOutputs'NonNullable' with all required fields.
mkIdentity'verificationSessionVerifiedOutputs'NonNullable :: Identity'verificationSessionVerifiedOutputs'NonNullable
mkIdentity'verificationSessionVerifiedOutputs'NonNullable =
  Identity'verificationSessionVerifiedOutputs'NonNullable
    { identity'verificationSessionVerifiedOutputs'NonNullableAddress = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableDob = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableFirstName = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableIdNumber = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableLastName = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.identity.verification_session.properties.verified_outputs.anyOf.properties.address.anyOf@ in the specification.
--
-- The user\\\'s verified address.
data Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable = Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable' with all required fields.
mkIdentity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable :: Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable
mkIdentity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable =
  Identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullable
    { identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.identity.verification_session.properties.verified_outputs.anyOf.properties.dob.anyOf@ in the specification.
--
-- The user’s verified date of birth.
data Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable = Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable
  { -- | day: Numerical day between 1 and 31.
    identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableDay :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | month: Numerical month between 1 and 12.
    identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableMonth :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | year: The four-digit year.
    identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableYear :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("day" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableDay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("month" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("year" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableYear obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("day" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableDay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("month" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("year" Data.Aeson.Types.ToJSON..=)) (identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableYear obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable" (\obj -> ((GHC.Base.pure Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "year"))

-- | Create a new 'Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable' with all required fields.
mkIdentity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable :: Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable
mkIdentity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable =
  Identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullable
    { identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableDay = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableMonth = GHC.Maybe.Nothing,
      identity'verificationSessionVerifiedOutputs'NonNullableDob'NonNullableYear = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.identity.verification_session.properties.verified_outputs.anyOf.properties.id_number_type@ in the specification.
--
-- The user\'s verified id number type.
data Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"br_cpf"@
    Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumBrCpf
  | -- | Represents the JSON value @"sg_nric"@
    Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumSgNric
  | -- | Represents the JSON value @"us_ssn"@
    Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumUsSsn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullable where
  toJSON (Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableOther val) = val
  toJSON (Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumBrCpf) = "br_cpf"
  toJSON (Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumSgNric) = "sg_nric"
  toJSON (Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumUsSsn) = "us_ssn"

instance Data.Aeson.Types.FromJSON.FromJSON Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "br_cpf" -> Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumBrCpf
            | val GHC.Classes.== "sg_nric" -> Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumSgNric
            | val GHC.Classes.== "us_ssn" -> Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableEnumUsSsn
            | GHC.Base.otherwise -> Identity'verificationSessionVerifiedOutputs'NonNullableIdNumberType'NonNullableOther val
      )
