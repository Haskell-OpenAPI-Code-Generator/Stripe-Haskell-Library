{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema MandatePaymentMethodDetails
module StripeAPI.Types.MandatePaymentMethodDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.MandateAcssDebit
import {-# SOURCE #-} StripeAPI.Types.MandateAuBecsDebit
import {-# SOURCE #-} StripeAPI.Types.MandateBacsDebit
import {-# SOURCE #-} StripeAPI.Types.MandateSepaDebit
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.mandate_payment_method_details@ in the specification.
data MandatePaymentMethodDetails = MandatePaymentMethodDetails
  { -- | acss_debit:
    mandatePaymentMethodDetailsAcssDebit :: (GHC.Maybe.Maybe MandateAcssDebit),
    -- | au_becs_debit:
    mandatePaymentMethodDetailsAuBecsDebit :: (GHC.Maybe.Maybe MandateAuBecsDebit),
    -- | bacs_debit:
    mandatePaymentMethodDetailsBacsDebit :: (GHC.Maybe.Maybe MandateBacsDebit),
    -- | card:
    mandatePaymentMethodDetailsCard :: (GHC.Maybe.Maybe CardMandatePaymentMethodDetails),
    -- | sepa_debit:
    mandatePaymentMethodDetailsSepaDebit :: (GHC.Maybe.Maybe MandateSepaDebit),
    -- | type: The type of the payment method associated with this mandate. An additional hash is included on \`payment_method_details\` with a name matching this value. It contains mandate information specific to the payment method.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    mandatePaymentMethodDetailsType :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON MandatePaymentMethodDetails where
  toJSON obj = Data.Aeson.Types.Internal.object ("acss_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsAcssDebit obj : "au_becs_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsAuBecsDebit obj : "bacs_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsBacsDebit obj : "card" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsCard obj : "sepa_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsSepaDebit obj : "type" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsType obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("acss_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsAcssDebit obj) GHC.Base.<> (("au_becs_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsAuBecsDebit obj) GHC.Base.<> (("bacs_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsBacsDebit obj) GHC.Base.<> (("card" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsCard obj) GHC.Base.<> (("sepa_debit" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsSepaDebit obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= mandatePaymentMethodDetailsType obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON MandatePaymentMethodDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "MandatePaymentMethodDetails" (\obj -> (((((GHC.Base.pure MandatePaymentMethodDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type"))

-- | Create a new 'MandatePaymentMethodDetails' with all required fields.
mkMandatePaymentMethodDetails ::
  -- | 'mandatePaymentMethodDetailsType'
  Data.Text.Internal.Text ->
  MandatePaymentMethodDetails
mkMandatePaymentMethodDetails mandatePaymentMethodDetailsType =
  MandatePaymentMethodDetails
    { mandatePaymentMethodDetailsAcssDebit = GHC.Maybe.Nothing,
      mandatePaymentMethodDetailsAuBecsDebit = GHC.Maybe.Nothing,
      mandatePaymentMethodDetailsBacsDebit = GHC.Maybe.Nothing,
      mandatePaymentMethodDetailsCard = GHC.Maybe.Nothing,
      mandatePaymentMethodDetailsSepaDebit = GHC.Maybe.Nothing,
      mandatePaymentMethodDetailsType = mandatePaymentMethodDetailsType
    }
