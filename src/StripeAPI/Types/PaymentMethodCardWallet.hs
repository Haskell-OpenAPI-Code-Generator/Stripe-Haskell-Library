{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodCardWallet
module StripeAPI.Types.PaymentMethodCardWallet where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodCardWalletMasterpass
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodCardWalletVisaCheckout
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the data type for the schema payment_method_card_wallet
data PaymentMethodCardWallet
  = PaymentMethodCardWallet
      { -- | amex_express_checkout:
        paymentMethodCardWalletAmexExpressCheckout :: (GHC.Maybe.Maybe PaymentMethodCardWalletAmexExpressCheckout),
        -- | apple_pay:
        paymentMethodCardWalletApplePay :: (GHC.Maybe.Maybe PaymentMethodCardWalletApplePay),
        -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodCardWalletDynamicLast4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | google_pay:
        paymentMethodCardWalletGooglePay :: (GHC.Maybe.Maybe PaymentMethodCardWalletGooglePay),
        -- | masterpass:
        paymentMethodCardWalletMasterpass :: (GHC.Maybe.Maybe PaymentMethodCardWalletMasterpass),
        -- | samsung_pay:
        paymentMethodCardWalletSamsungPay :: (GHC.Maybe.Maybe PaymentMethodCardWalletSamsungPay),
        -- | type: The type of the card wallet, one of \`amex_express_checkout\`, \`apple_pay\`, \`google_pay\`, \`masterpass\`, \`samsung_pay\`, or \`visa_checkout\`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
        paymentMethodCardWalletType :: PaymentMethodCardWalletType',
        -- | visa_checkout:
        paymentMethodCardWalletVisaCheckout :: (GHC.Maybe.Maybe PaymentMethodCardWalletVisaCheckout)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodCardWallet where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "amex_express_checkout" (paymentMethodCardWalletAmexExpressCheckout obj) : (Data.Aeson..=) "apple_pay" (paymentMethodCardWalletApplePay obj) : (Data.Aeson..=) "dynamic_last4" (paymentMethodCardWalletDynamicLast4 obj) : (Data.Aeson..=) "google_pay" (paymentMethodCardWalletGooglePay obj) : (Data.Aeson..=) "masterpass" (paymentMethodCardWalletMasterpass obj) : (Data.Aeson..=) "samsung_pay" (paymentMethodCardWalletSamsungPay obj) : (Data.Aeson..=) "type" (paymentMethodCardWalletType obj) : (Data.Aeson..=) "visa_checkout" (paymentMethodCardWalletVisaCheckout obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "amex_express_checkout" (paymentMethodCardWalletAmexExpressCheckout obj) GHC.Base.<> ((Data.Aeson..=) "apple_pay" (paymentMethodCardWalletApplePay obj) GHC.Base.<> ((Data.Aeson..=) "dynamic_last4" (paymentMethodCardWalletDynamicLast4 obj) GHC.Base.<> ((Data.Aeson..=) "google_pay" (paymentMethodCardWalletGooglePay obj) GHC.Base.<> ((Data.Aeson..=) "masterpass" (paymentMethodCardWalletMasterpass obj) GHC.Base.<> ((Data.Aeson..=) "samsung_pay" (paymentMethodCardWalletSamsungPay obj) GHC.Base.<> ((Data.Aeson..=) "type" (paymentMethodCardWalletType obj) GHC.Base.<> (Data.Aeson..=) "visa_checkout" (paymentMethodCardWalletVisaCheckout obj))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodCardWallet where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodCardWallet" (\obj -> (((((((GHC.Base.pure PaymentMethodCardWallet GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amex_express_checkout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "apple_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "google_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "masterpass")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "samsung_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "visa_checkout"))

-- | Defines the enum schema payment_method_card_walletType\'
--
-- The type of the card wallet, one of \`amex_express_checkout\`, \`apple_pay\`, \`google_pay\`, \`masterpass\`, \`samsung_pay\`, or \`visa_checkout\`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
data PaymentMethodCardWalletType'
  = PaymentMethodCardWalletType'EnumOther Data.Aeson.Types.Internal.Value
  | PaymentMethodCardWalletType'EnumTyped Data.Text.Internal.Text
  | PaymentMethodCardWalletType'EnumStringAmexExpressCheckout
  | PaymentMethodCardWalletType'EnumStringApplePay
  | PaymentMethodCardWalletType'EnumStringGooglePay
  | PaymentMethodCardWalletType'EnumStringMasterpass
  | PaymentMethodCardWalletType'EnumStringSamsungPay
  | PaymentMethodCardWalletType'EnumStringVisaCheckout
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodCardWalletType' where
  toJSON (PaymentMethodCardWalletType'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodCardWalletType'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodCardWalletType'EnumStringAmexExpressCheckout) = "amex_express_checkout"
  toJSON (PaymentMethodCardWalletType'EnumStringApplePay) = "apple_pay"
  toJSON (PaymentMethodCardWalletType'EnumStringGooglePay) = "google_pay"
  toJSON (PaymentMethodCardWalletType'EnumStringMasterpass) = "masterpass"
  toJSON (PaymentMethodCardWalletType'EnumStringSamsungPay) = "samsung_pay"
  toJSON (PaymentMethodCardWalletType'EnumStringVisaCheckout) = "visa_checkout"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodCardWalletType' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "amex_express_checkout" -> PaymentMethodCardWalletType'EnumStringAmexExpressCheckout
            | val GHC.Classes.== "apple_pay" -> PaymentMethodCardWalletType'EnumStringApplePay
            | val GHC.Classes.== "google_pay" -> PaymentMethodCardWalletType'EnumStringGooglePay
            | val GHC.Classes.== "masterpass" -> PaymentMethodCardWalletType'EnumStringMasterpass
            | val GHC.Classes.== "samsung_pay" -> PaymentMethodCardWalletType'EnumStringSamsungPay
            | val GHC.Classes.== "visa_checkout" -> PaymentMethodCardWalletType'EnumStringVisaCheckout
            | GHC.Base.otherwise -> PaymentMethodCardWalletType'EnumOther val
      )
