{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SetupAttemptPaymentMethodDetailsIdeal
module StripeAPI.Types.SetupAttemptPaymentMethodDetailsIdeal where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Mandate
import {-# SOURCE #-} StripeAPI.Types.PaymentMethod
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.setup_attempt_payment_method_details_ideal@ in the specification.
data SetupAttemptPaymentMethodDetailsIdeal = SetupAttemptPaymentMethodDetailsIdeal
  { -- | bank: The customer\'s bank. Can be one of \`abn_amro\`, \`asn_bank\`, \`bunq\`, \`handelsbanken\`, \`ing\`, \`knab\`, \`moneyou\`, \`n26\`, \`rabobank\`, \`regiobank\`, \`revolut\`, \`sns_bank\`, \`triodos_bank\`, \`van_lanschot\`, or \`yoursafe\`.
    setupAttemptPaymentMethodDetailsIdealBank :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupAttemptPaymentMethodDetailsIdealBank'NonNullable)),
    -- | bic: The Bank Identifier Code of the customer\'s bank.
    setupAttemptPaymentMethodDetailsIdealBic :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupAttemptPaymentMethodDetailsIdealBic'NonNullable)),
    -- | generated_sepa_debit: The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableVariants)),
    -- | generated_sepa_debit_mandate: The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
    setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableVariants)),
    -- | iban_last4: Last four characters of the IBAN.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    setupAttemptPaymentMethodDetailsIdealIbanLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_name: Owner\'s verified full name. Values are verified or provided by iDEAL directly
    -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    setupAttemptPaymentMethodDetailsIdealVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SetupAttemptPaymentMethodDetailsIdeal where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealBank obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bic" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealBic obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit_mandate" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban_last4" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealIbanLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealVerifiedName obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealBank obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bic" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealBic obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit_mandate" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban_last4" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealIbanLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (setupAttemptPaymentMethodDetailsIdealVerifiedName obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SetupAttemptPaymentMethodDetailsIdeal where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SetupAttemptPaymentMethodDetailsIdeal" (\obj -> (((((GHC.Base.pure SetupAttemptPaymentMethodDetailsIdeal GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bic")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "generated_sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "generated_sepa_debit_mandate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "iban_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name"))

-- | Create a new 'SetupAttemptPaymentMethodDetailsIdeal' with all required fields.
mkSetupAttemptPaymentMethodDetailsIdeal :: SetupAttemptPaymentMethodDetailsIdeal
mkSetupAttemptPaymentMethodDetailsIdeal =
  SetupAttemptPaymentMethodDetailsIdeal
    { setupAttemptPaymentMethodDetailsIdealBank = GHC.Maybe.Nothing,
      setupAttemptPaymentMethodDetailsIdealBic = GHC.Maybe.Nothing,
      setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit = GHC.Maybe.Nothing,
      setupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate = GHC.Maybe.Nothing,
      setupAttemptPaymentMethodDetailsIdealIbanLast4 = GHC.Maybe.Nothing,
      setupAttemptPaymentMethodDetailsIdealVerifiedName = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.setup_attempt_payment_method_details_ideal.properties.bank@ in the specification.
--
-- The customer\'s bank. Can be one of \`abn_amro\`, \`asn_bank\`, \`bunq\`, \`handelsbanken\`, \`ing\`, \`knab\`, \`moneyou\`, \`n26\`, \`rabobank\`, \`regiobank\`, \`revolut\`, \`sns_bank\`, \`triodos_bank\`, \`van_lanschot\`, or \`yoursafe\`.
data SetupAttemptPaymentMethodDetailsIdealBank'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"abn_amro"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumAbnAmro
  | -- | Represents the JSON value @"asn_bank"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumAsnBank
  | -- | Represents the JSON value @"bunq"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumBunq
  | -- | Represents the JSON value @"handelsbanken"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumHandelsbanken
  | -- | Represents the JSON value @"ing"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumIng
  | -- | Represents the JSON value @"knab"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumKnab
  | -- | Represents the JSON value @"moneyou"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumMoneyou
  | -- | Represents the JSON value @"n26"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumN26
  | -- | Represents the JSON value @"rabobank"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRabobank
  | -- | Represents the JSON value @"regiobank"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRegiobank
  | -- | Represents the JSON value @"revolut"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRevolut
  | -- | Represents the JSON value @"sns_bank"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumSnsBank
  | -- | Represents the JSON value @"triodos_bank"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumTriodosBank
  | -- | Represents the JSON value @"van_lanschot"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumVanLanschot
  | -- | Represents the JSON value @"yoursafe"@
    SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumYoursafe
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupAttemptPaymentMethodDetailsIdealBank'NonNullable where
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableOther val) = val
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumAbnAmro) = "abn_amro"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumAsnBank) = "asn_bank"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumBunq) = "bunq"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumHandelsbanken) = "handelsbanken"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumIng) = "ing"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumKnab) = "knab"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumMoneyou) = "moneyou"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumN26) = "n26"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRabobank) = "rabobank"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRegiobank) = "regiobank"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRevolut) = "revolut"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumSnsBank) = "sns_bank"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumTriodosBank) = "triodos_bank"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumVanLanschot) = "van_lanschot"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumYoursafe) = "yoursafe"

instance Data.Aeson.Types.FromJSON.FromJSON SetupAttemptPaymentMethodDetailsIdealBank'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "abn_amro" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumAbnAmro
            | val GHC.Classes.== "asn_bank" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumAsnBank
            | val GHC.Classes.== "bunq" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumBunq
            | val GHC.Classes.== "handelsbanken" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumHandelsbanken
            | val GHC.Classes.== "ing" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumIng
            | val GHC.Classes.== "knab" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumKnab
            | val GHC.Classes.== "moneyou" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumMoneyou
            | val GHC.Classes.== "n26" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumN26
            | val GHC.Classes.== "rabobank" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRabobank
            | val GHC.Classes.== "regiobank" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRegiobank
            | val GHC.Classes.== "revolut" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumRevolut
            | val GHC.Classes.== "sns_bank" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumSnsBank
            | val GHC.Classes.== "triodos_bank" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumTriodosBank
            | val GHC.Classes.== "van_lanschot" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumVanLanschot
            | val GHC.Classes.== "yoursafe" -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableEnumYoursafe
            | GHC.Base.otherwise -> SetupAttemptPaymentMethodDetailsIdealBank'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.setup_attempt_payment_method_details_ideal.properties.bic@ in the specification.
--
-- The Bank Identifier Code of the customer\'s bank.
data SetupAttemptPaymentMethodDetailsIdealBic'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"ABNANL2A"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumABNANL2A
  | -- | Represents the JSON value @"ASNBNL21"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumASNBNL21
  | -- | Represents the JSON value @"BITSNL2A"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumBITSNL2A
  | -- | Represents the JSON value @"BUNQNL2A"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumBUNQNL2A
  | -- | Represents the JSON value @"FVLBNL22"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumFVLBNL22
  | -- | Represents the JSON value @"HANDNL2A"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumHANDNL2A
  | -- | Represents the JSON value @"INGBNL2A"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumINGBNL2A
  | -- | Represents the JSON value @"KNABNL2H"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumKNABNL2H
  | -- | Represents the JSON value @"MOYONL21"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumMOYONL21
  | -- | Represents the JSON value @"NTSBDEB1"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumNTSBDEB1
  | -- | Represents the JSON value @"RABONL2U"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumRABONL2U
  | -- | Represents the JSON value @"RBRBNL21"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumRBRBNL21
  | -- | Represents the JSON value @"REVOIE23"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumREVOIE23
  | -- | Represents the JSON value @"REVOLT21"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumREVOLT21
  | -- | Represents the JSON value @"SNSBNL2A"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumSNSBNL2A
  | -- | Represents the JSON value @"TRIONL2U"@
    SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumTRIONL2U
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupAttemptPaymentMethodDetailsIdealBic'NonNullable where
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableOther val) = val
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumABNANL2A) = "ABNANL2A"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumASNBNL21) = "ASNBNL21"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumBITSNL2A) = "BITSNL2A"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumBUNQNL2A) = "BUNQNL2A"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumFVLBNL22) = "FVLBNL22"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumHANDNL2A) = "HANDNL2A"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumINGBNL2A) = "INGBNL2A"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumKNABNL2H) = "KNABNL2H"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumMOYONL21) = "MOYONL21"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumNTSBDEB1) = "NTSBDEB1"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumRABONL2U) = "RABONL2U"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumRBRBNL21) = "RBRBNL21"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumREVOIE23) = "REVOIE23"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumREVOLT21) = "REVOLT21"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumSNSBNL2A) = "SNSBNL2A"
  toJSON (SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumTRIONL2U) = "TRIONL2U"

instance Data.Aeson.Types.FromJSON.FromJSON SetupAttemptPaymentMethodDetailsIdealBic'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ABNANL2A" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumABNANL2A
            | val GHC.Classes.== "ASNBNL21" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumASNBNL21
            | val GHC.Classes.== "BITSNL2A" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumBITSNL2A
            | val GHC.Classes.== "BUNQNL2A" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumBUNQNL2A
            | val GHC.Classes.== "FVLBNL22" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumFVLBNL22
            | val GHC.Classes.== "HANDNL2A" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumHANDNL2A
            | val GHC.Classes.== "INGBNL2A" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumINGBNL2A
            | val GHC.Classes.== "KNABNL2H" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumKNABNL2H
            | val GHC.Classes.== "MOYONL21" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumMOYONL21
            | val GHC.Classes.== "NTSBDEB1" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumNTSBDEB1
            | val GHC.Classes.== "RABONL2U" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumRABONL2U
            | val GHC.Classes.== "RBRBNL21" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumRBRBNL21
            | val GHC.Classes.== "REVOIE23" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumREVOIE23
            | val GHC.Classes.== "REVOLT21" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumREVOLT21
            | val GHC.Classes.== "SNSBNL2A" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumSNSBNL2A
            | val GHC.Classes.== "TRIONL2U" -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableEnumTRIONL2U
            | GHC.Base.otherwise -> SetupAttemptPaymentMethodDetailsIdealBic'NonNullableOther val
      )

-- | Defines the oneOf schema located at @components.schemas.setup_attempt_payment_method_details_ideal.properties.generated_sepa_debit.anyOf@ in the specification.
--
-- The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
data SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableVariants
  = SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableText Data.Text.Internal.Text
  | SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullablePaymentMethod PaymentMethod
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableVariants where
  toJSON (SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullablePaymentMethod a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableVariants where
  parseJSON val = case (SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit'NonNullablePaymentMethod Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.setup_attempt_payment_method_details_ideal.properties.generated_sepa_debit_mandate.anyOf@ in the specification.
--
-- The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.
data SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableVariants
  = SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableText Data.Text.Internal.Text
  | SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableMandate Mandate
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableVariants where
  toJSON (SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableMandate a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableVariants where
  parseJSON val = case (SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate'NonNullableMandate Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
