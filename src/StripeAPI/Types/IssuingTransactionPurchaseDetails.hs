-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema IssuingTransactionPurchaseDetails
module StripeAPI.Types.IssuingTransactionPurchaseDetails where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFlightData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFlightDataLeg
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionFuelData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionLodgingData
import {-# SOURCE #-} StripeAPI.Types.IssuingTransactionReceiptData

-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details@ in the specification.
-- 
-- 
data IssuingTransactionPurchaseDetails = IssuingTransactionPurchaseDetails {
  -- | flight: Information about the flight that was purchased with this transaction.
  issuingTransactionPurchaseDetailsFlight :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFlight'NonNullable))
  -- | fuel: Information about fuel that was purchased with this transaction.
  , issuingTransactionPurchaseDetailsFuel :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsFuel'NonNullable))
  -- | lodging: Information about lodging that was purchased with this transaction.
  , issuingTransactionPurchaseDetailsLodging :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable IssuingTransactionPurchaseDetailsLodging'NonNullable))
  -- | receipt: The line items in the purchase.
  , issuingTransactionPurchaseDetailsReceipt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([IssuingTransactionReceiptData])))
  -- | reference: A merchant-specific order number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuingTransactionPurchaseDetailsReference :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetails
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lodging" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReceipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReference obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lodging" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReceipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsReference obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetails
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetails" (\obj -> ((((GHC.Base.pure IssuingTransactionPurchaseDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flight")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lodging")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference"))
-- | Create a new 'IssuingTransactionPurchaseDetails' with all required fields.
mkIssuingTransactionPurchaseDetails :: IssuingTransactionPurchaseDetails
mkIssuingTransactionPurchaseDetails = IssuingTransactionPurchaseDetails{issuingTransactionPurchaseDetailsFlight = GHC.Maybe.Nothing,
                                                                        issuingTransactionPurchaseDetailsFuel = GHC.Maybe.Nothing,
                                                                        issuingTransactionPurchaseDetailsLodging = GHC.Maybe.Nothing,
                                                                        issuingTransactionPurchaseDetailsReceipt = GHC.Maybe.Nothing,
                                                                        issuingTransactionPurchaseDetailsReference = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.flight.anyOf@ in the specification.
-- 
-- Information about the flight that was purchased with this transaction.
data IssuingTransactionPurchaseDetailsFlight'NonNullable = IssuingTransactionPurchaseDetailsFlight'NonNullable {
  -- | departure_at: The time that the flight departed.
  issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | passenger_name: The name of the passenger.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | refundable: Whether the ticket is refundable.
  , issuingTransactionPurchaseDetailsFlight'NonNullableRefundable :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool))
  -- | segments: The legs of the trip.
  , issuingTransactionPurchaseDetailsFlight'NonNullableSegments :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([IssuingTransactionFlightDataLeg])))
  -- | travel_agency: The travel agency that issued the ticket.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFlight'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passenger_name" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refundable" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableRefundable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("segments" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableSegments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("travel_agency" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passenger_name" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refundable" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableRefundable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("segments" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableSegments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("travel_agency" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFlight'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFlight'NonNullable" (\obj -> ((((GHC.Base.pure IssuingTransactionPurchaseDetailsFlight'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "departure_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "passenger_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refundable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "segments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "travel_agency"))
-- | Create a new 'IssuingTransactionPurchaseDetailsFlight'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFlight'NonNullable :: IssuingTransactionPurchaseDetailsFlight'NonNullable
mkIssuingTransactionPurchaseDetailsFlight'NonNullable = IssuingTransactionPurchaseDetailsFlight'NonNullable{issuingTransactionPurchaseDetailsFlight'NonNullableDepartureAt = GHC.Maybe.Nothing,
                                                                                                            issuingTransactionPurchaseDetailsFlight'NonNullablePassengerName = GHC.Maybe.Nothing,
                                                                                                            issuingTransactionPurchaseDetailsFlight'NonNullableRefundable = GHC.Maybe.Nothing,
                                                                                                            issuingTransactionPurchaseDetailsFlight'NonNullableSegments = GHC.Maybe.Nothing,
                                                                                                            issuingTransactionPurchaseDetailsFlight'NonNullableTravelAgency = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.fuel.anyOf@ in the specification.
-- 
-- Information about fuel that was purchased with this transaction.
data IssuingTransactionPurchaseDetailsFuel'NonNullable = IssuingTransactionPurchaseDetailsFuel'NonNullable {
  -- | type: The type of fuel that was purchased. One of \`diesel\`, \`unleaded_plus\`, \`unleaded_regular\`, \`unleaded_super\`, or \`other\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  issuingTransactionPurchaseDetailsFuel'NonNullableType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | unit: The units for \`volume_decimal\`. One of \`us_gallon\` or \`liter\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , issuingTransactionPurchaseDetailsFuel'NonNullableUnit :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | unit_cost_decimal: The cost in cents per each unit of fuel, represented as a decimal string with at most 12 decimal places.
  , issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | volume_decimal: The volume of the fuel that was pumped, represented as a decimal string with at most 12 decimal places.
  , issuingTransactionPurchaseDetailsFuel'NonNullableVolumeDecimal :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsFuel'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("volume_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableVolumeDecimal obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("volume_decimal" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsFuel'NonNullableVolumeDecimal obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsFuel'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsFuel'NonNullable" (\obj -> (((GHC.Base.pure IssuingTransactionPurchaseDetailsFuel'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_cost_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "volume_decimal"))
-- | Create a new 'IssuingTransactionPurchaseDetailsFuel'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsFuel'NonNullable :: IssuingTransactionPurchaseDetailsFuel'NonNullable
mkIssuingTransactionPurchaseDetailsFuel'NonNullable = IssuingTransactionPurchaseDetailsFuel'NonNullable{issuingTransactionPurchaseDetailsFuel'NonNullableType = GHC.Maybe.Nothing,
                                                                                                        issuingTransactionPurchaseDetailsFuel'NonNullableUnit = GHC.Maybe.Nothing,
                                                                                                        issuingTransactionPurchaseDetailsFuel'NonNullableUnitCostDecimal = GHC.Maybe.Nothing,
                                                                                                        issuingTransactionPurchaseDetailsFuel'NonNullableVolumeDecimal = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.issuing_transaction_purchase_details.properties.lodging.anyOf@ in the specification.
-- 
-- Information about lodging that was purchased with this transaction.
data IssuingTransactionPurchaseDetailsLodging'NonNullable = IssuingTransactionPurchaseDetailsLodging'NonNullable {
  -- | check_in_at: The time of checking into the lodging.
  issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | nights: The number of nights stayed at the lodging.
  , issuingTransactionPurchaseDetailsLodging'NonNullableNights :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON IssuingTransactionPurchaseDetailsLodging'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_in_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nights" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableNights obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_in_at" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nights" Data.Aeson.Types.ToJSON..=)) (issuingTransactionPurchaseDetailsLodging'NonNullableNights obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON IssuingTransactionPurchaseDetailsLodging'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingTransactionPurchaseDetailsLodging'NonNullable" (\obj -> (GHC.Base.pure IssuingTransactionPurchaseDetailsLodging'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "check_in_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nights"))
-- | Create a new 'IssuingTransactionPurchaseDetailsLodging'NonNullable' with all required fields.
mkIssuingTransactionPurchaseDetailsLodging'NonNullable :: IssuingTransactionPurchaseDetailsLodging'NonNullable
mkIssuingTransactionPurchaseDetailsLodging'NonNullable = IssuingTransactionPurchaseDetailsLodging'NonNullable{issuingTransactionPurchaseDetailsLodging'NonNullableCheckInAt = GHC.Maybe.Nothing,
                                                                                                              issuingTransactionPurchaseDetailsLodging'NonNullableNights = GHC.Maybe.Nothing}
