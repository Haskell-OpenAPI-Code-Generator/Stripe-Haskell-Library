{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentPagesCheckoutSessionPaymentMethodReuseAgreement
module StripeAPI.Types.PaymentPagesCheckoutSessionPaymentMethodReuseAgreement where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_payment_method_reuse_agreement@ in the specification.
data PaymentPagesCheckoutSessionPaymentMethodReuseAgreement = PaymentPagesCheckoutSessionPaymentMethodReuseAgreement
  { -- | position: Determines the position and visibility of the payment method reuse agreement in the UI. When set to \`auto\`, Stripe\'s defaults will be used.
    --
    -- When set to \`hidden\`, the payment method reuse agreement text will always be hidden in the UI.
    paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition :: PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionPaymentMethodReuseAgreement where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["position" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["position" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionPaymentMethodReuseAgreement where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionPaymentMethodReuseAgreement" (\obj -> GHC.Base.pure PaymentPagesCheckoutSessionPaymentMethodReuseAgreement GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "position"))

-- | Create a new 'PaymentPagesCheckoutSessionPaymentMethodReuseAgreement' with all required fields.
mkPaymentPagesCheckoutSessionPaymentMethodReuseAgreement ::
  -- | 'paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'
  PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition' ->
  PaymentPagesCheckoutSessionPaymentMethodReuseAgreement
mkPaymentPagesCheckoutSessionPaymentMethodReuseAgreement paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition = PaymentPagesCheckoutSessionPaymentMethodReuseAgreement {paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition = paymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition}

-- | Defines the enum schema located at @components.schemas.payment_pages_checkout_session_payment_method_reuse_agreement.properties.position@ in the specification.
--
-- Determines the position and visibility of the payment method reuse agreement in the UI. When set to \`auto\`, Stripe\'s defaults will be used.
--
-- When set to \`hidden\`, the payment method reuse agreement text will always be hidden in the UI.
data PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'EnumAuto
  | -- | Represents the JSON value @"hidden"@
    PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'EnumHidden
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition' where
  toJSON (PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'Other val) = val
  toJSON (PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'EnumAuto) = "auto"
  toJSON (PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'EnumHidden) = "hidden"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'EnumAuto
            | val GHC.Classes.== "hidden" -> PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'EnumHidden
            | GHC.Base.otherwise -> PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition'Other val
      )
