{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodConfiguration
module StripeAPI.Types.PaymentMethodConfiguration where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodConfigResourcePaymentMethodProperties
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_configuration@ in the specification.
--
-- PaymentMethodConfigurations control which payment methods are displayed to your customers when you don\'t explicitly specify payment method types. You can have multiple configurations with different sets of payment methods for different scenarios.
--
-- There are two types of PaymentMethodConfigurations. Which is used depends on the [charge type](https:\/\/stripe.com\/docs\/connect\/charges):
--
-- **Direct** configurations apply to payments created on your account, including Connect destination charges, Connect separate charges and transfers, and payments not involving Connect.
--
-- **Child** configurations apply to payments created on your connected accounts using direct charges, and charges with the on_behalf_of parameter.
--
-- Child configurations have a \`parent\` that sets default values and controls which settings connected accounts may override. You can specify a parent ID at payment time, and Stripe will automatically resolve the connected accountâ€™s associated child configuration. Parent configurations are [managed in the dashboard](https:\/\/dashboard.stripe.com\/settings\/payment_methods\/connected_accounts) and are not available in this API.
--
-- Related guides:
-- - [Payment Method Configurations API](https:\/\/stripe.com\/docs\/connect\/payment-method-configurations)
-- - [Multiple configurations on dynamic payment methods](https:\/\/stripe.com\/docs\/payments\/multiple-payment-method-configs)
-- - [Multiple configurations for your Connect accounts](https:\/\/stripe.com\/docs\/connect\/multiple-payment-method-configurations)
data PaymentMethodConfiguration = PaymentMethodConfiguration
  { -- | acss_debit:
    paymentMethodConfigurationAcssDebit :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | active: Whether the configuration can be used for new payments.
    paymentMethodConfigurationActive :: GHC.Types.Bool,
    -- | affirm:
    paymentMethodConfigurationAffirm :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | afterpay_clearpay:
    paymentMethodConfigurationAfterpayClearpay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | alipay:
    paymentMethodConfigurationAlipay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | apple_pay:
    paymentMethodConfigurationApplePay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | application: For child configs, the Connect application associated with the configuration.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodConfigurationApplication :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | au_becs_debit:
    paymentMethodConfigurationAuBecsDebit :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | bacs_debit:
    paymentMethodConfigurationBacsDebit :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | bancontact:
    paymentMethodConfigurationBancontact :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | blik:
    paymentMethodConfigurationBlik :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | boleto:
    paymentMethodConfigurationBoleto :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | card:
    paymentMethodConfigurationCard :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | cartes_bancaires:
    paymentMethodConfigurationCartesBancaires :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | cashapp:
    paymentMethodConfigurationCashapp :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | eps:
    paymentMethodConfigurationEps :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | fpx:
    paymentMethodConfigurationFpx :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | giropay:
    paymentMethodConfigurationGiropay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | google_pay:
    paymentMethodConfigurationGooglePay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | grabpay:
    paymentMethodConfigurationGrabpay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodConfigurationId :: Data.Text.Internal.Text,
    -- | ideal:
    paymentMethodConfigurationIdeal :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | is_default: The default configuration is used whenever a payment method configuration is not specified.
    paymentMethodConfigurationIsDefault :: GHC.Types.Bool,
    -- | jcb:
    paymentMethodConfigurationJcb :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | klarna:
    paymentMethodConfigurationKlarna :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | konbini:
    paymentMethodConfigurationKonbini :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | link:
    paymentMethodConfigurationLink :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    paymentMethodConfigurationLivemode :: GHC.Types.Bool,
    -- | name: The configuration\'s name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodConfigurationName :: Data.Text.Internal.Text,
    -- | oxxo:
    paymentMethodConfigurationOxxo :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | p24:
    paymentMethodConfigurationP24 :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | parent: For child configs, the configuration\'s parent configuration.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodConfigurationParent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | paynow:
    paymentMethodConfigurationPaynow :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | paypal:
    paymentMethodConfigurationPaypal :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | promptpay:
    paymentMethodConfigurationPromptpay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | revolut_pay:
    paymentMethodConfigurationRevolutPay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | sepa_debit:
    paymentMethodConfigurationSepaDebit :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | sofort:
    paymentMethodConfigurationSofort :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | us_bank_account:
    paymentMethodConfigurationUsBankAccount :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties),
    -- | wechat_pay:
    paymentMethodConfigurationWechatPay :: (GHC.Maybe.Maybe PaymentMethodConfigResourcePaymentMethodProperties)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodConfiguration where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAcssDebit obj) : ["active" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationActive obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationApplePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationCartesBancaires obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("google_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationGooglePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationGrabpay obj) : ["id" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationIdeal obj) : ["is_default" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationIsDefault obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationJcb obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationLink obj) : ["livemode" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationLivemode obj] : ["name" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationParent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationPaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationPromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationSofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationWechatPay obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "payment_method_configuration"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAcssDebit obj) : ["active" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationActive obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationApplePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationCartesBancaires obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("google_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationGooglePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationGrabpay obj) : ["id" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationIdeal obj) : ["is_default" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationIsDefault obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationJcb obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationLink obj) : ["livemode" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationLivemode obj] : ["name" Data.Aeson.Types.ToJSON..= paymentMethodConfigurationName obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationParent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationPaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationPromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationSofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (paymentMethodConfigurationWechatPay obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "payment_method_configuration"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodConfiguration where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodConfiguration" (\obj -> (((((((((((((((((((((((((((((((((((((((GHC.Base.pure PaymentMethodConfiguration GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "apple_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "application")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "blik")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cartes_bancaires")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "google_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "is_default")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jcb")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "parent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat_pay"))

-- | Create a new 'PaymentMethodConfiguration' with all required fields.
mkPaymentMethodConfiguration ::
  -- | 'paymentMethodConfigurationActive'
  GHC.Types.Bool ->
  -- | 'paymentMethodConfigurationId'
  Data.Text.Internal.Text ->
  -- | 'paymentMethodConfigurationIsDefault'
  GHC.Types.Bool ->
  -- | 'paymentMethodConfigurationLivemode'
  GHC.Types.Bool ->
  -- | 'paymentMethodConfigurationName'
  Data.Text.Internal.Text ->
  PaymentMethodConfiguration
mkPaymentMethodConfiguration paymentMethodConfigurationActive paymentMethodConfigurationId paymentMethodConfigurationIsDefault paymentMethodConfigurationLivemode paymentMethodConfigurationName =
  PaymentMethodConfiguration
    { paymentMethodConfigurationAcssDebit = GHC.Maybe.Nothing,
      paymentMethodConfigurationActive = paymentMethodConfigurationActive,
      paymentMethodConfigurationAffirm = GHC.Maybe.Nothing,
      paymentMethodConfigurationAfterpayClearpay = GHC.Maybe.Nothing,
      paymentMethodConfigurationAlipay = GHC.Maybe.Nothing,
      paymentMethodConfigurationApplePay = GHC.Maybe.Nothing,
      paymentMethodConfigurationApplication = GHC.Maybe.Nothing,
      paymentMethodConfigurationAuBecsDebit = GHC.Maybe.Nothing,
      paymentMethodConfigurationBacsDebit = GHC.Maybe.Nothing,
      paymentMethodConfigurationBancontact = GHC.Maybe.Nothing,
      paymentMethodConfigurationBlik = GHC.Maybe.Nothing,
      paymentMethodConfigurationBoleto = GHC.Maybe.Nothing,
      paymentMethodConfigurationCard = GHC.Maybe.Nothing,
      paymentMethodConfigurationCartesBancaires = GHC.Maybe.Nothing,
      paymentMethodConfigurationCashapp = GHC.Maybe.Nothing,
      paymentMethodConfigurationEps = GHC.Maybe.Nothing,
      paymentMethodConfigurationFpx = GHC.Maybe.Nothing,
      paymentMethodConfigurationGiropay = GHC.Maybe.Nothing,
      paymentMethodConfigurationGooglePay = GHC.Maybe.Nothing,
      paymentMethodConfigurationGrabpay = GHC.Maybe.Nothing,
      paymentMethodConfigurationId = paymentMethodConfigurationId,
      paymentMethodConfigurationIdeal = GHC.Maybe.Nothing,
      paymentMethodConfigurationIsDefault = paymentMethodConfigurationIsDefault,
      paymentMethodConfigurationJcb = GHC.Maybe.Nothing,
      paymentMethodConfigurationKlarna = GHC.Maybe.Nothing,
      paymentMethodConfigurationKonbini = GHC.Maybe.Nothing,
      paymentMethodConfigurationLink = GHC.Maybe.Nothing,
      paymentMethodConfigurationLivemode = paymentMethodConfigurationLivemode,
      paymentMethodConfigurationName = paymentMethodConfigurationName,
      paymentMethodConfigurationOxxo = GHC.Maybe.Nothing,
      paymentMethodConfigurationP24 = GHC.Maybe.Nothing,
      paymentMethodConfigurationParent = GHC.Maybe.Nothing,
      paymentMethodConfigurationPaynow = GHC.Maybe.Nothing,
      paymentMethodConfigurationPaypal = GHC.Maybe.Nothing,
      paymentMethodConfigurationPromptpay = GHC.Maybe.Nothing,
      paymentMethodConfigurationRevolutPay = GHC.Maybe.Nothing,
      paymentMethodConfigurationSepaDebit = GHC.Maybe.Nothing,
      paymentMethodConfigurationSofort = GHC.Maybe.Nothing,
      paymentMethodConfigurationUsBankAccount = GHC.Maybe.Nothing,
      paymentMethodConfigurationWechatPay = GHC.Maybe.Nothing
    }
