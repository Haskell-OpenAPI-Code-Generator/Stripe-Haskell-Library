{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodDetailsPaypal
module StripeAPI.Types.PaymentMethodDetailsPaypal where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaypalSellerProtection
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_paypal@ in the specification.
data PaymentMethodDetailsPaypal = PaymentMethodDetailsPaypal
  { -- | payer_email: Owner\'s email. Values are provided by PayPal directly
    -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsPaypalPayerEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | payer_id: PayPal account PayerID. This identifier uniquely identifies the PayPal customer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsPaypalPayerId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | payer_name: Owner\'s full name. Values provided by PayPal directly
    -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsPaypalPayerName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | seller_protection: The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.
    paymentMethodDetailsPaypalSellerProtection :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsPaypalSellerProtection'NonNullable)),
    -- | transaction_id: A unique ID generated by PayPal for this transaction.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsPaypalTransactionId :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsPaypal where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payer_email" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalPayerEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payer_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalPayerId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payer_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalPayerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("seller_protection" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalSellerProtection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalTransactionId obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payer_email" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalPayerEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payer_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalPayerId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payer_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalPayerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("seller_protection" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalSellerProtection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_id" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalTransactionId obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsPaypal where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsPaypal" (\obj -> ((((GHC.Base.pure PaymentMethodDetailsPaypal GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payer_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payer_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payer_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "seller_protection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transaction_id"))

-- | Create a new 'PaymentMethodDetailsPaypal' with all required fields.
mkPaymentMethodDetailsPaypal :: PaymentMethodDetailsPaypal
mkPaymentMethodDetailsPaypal =
  PaymentMethodDetailsPaypal
    { paymentMethodDetailsPaypalPayerEmail = GHC.Maybe.Nothing,
      paymentMethodDetailsPaypalPayerId = GHC.Maybe.Nothing,
      paymentMethodDetailsPaypalPayerName = GHC.Maybe.Nothing,
      paymentMethodDetailsPaypalSellerProtection = GHC.Maybe.Nothing,
      paymentMethodDetailsPaypalTransactionId = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @components.schemas.payment_method_details_paypal.properties.seller_protection.anyOf@ in the specification.
--
-- The level of protection offered as defined by PayPal Seller Protection for Merchants, for this transaction.
data PaymentMethodDetailsPaypalSellerProtection'NonNullable = PaymentMethodDetailsPaypalSellerProtection'NonNullable
  { -- | dispute_categories: An array of conditions that are covered for the transaction, if applicable.
    paymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullable]))),
    -- | status: Indicates whether the transaction is eligible for PayPal\'s seller protection.
    paymentMethodDetailsPaypalSellerProtection'NonNullableStatus :: (GHC.Maybe.Maybe PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsPaypalSellerProtection'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_categories" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalSellerProtection'NonNullableStatus obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dispute_categories" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsPaypalSellerProtection'NonNullableStatus obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsPaypalSellerProtection'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsPaypalSellerProtection'NonNullable" (\obj -> (GHC.Base.pure PaymentMethodDetailsPaypalSellerProtection'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dispute_categories")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status"))

-- | Create a new 'PaymentMethodDetailsPaypalSellerProtection'NonNullable' with all required fields.
mkPaymentMethodDetailsPaypalSellerProtection'NonNullable :: PaymentMethodDetailsPaypalSellerProtection'NonNullable
mkPaymentMethodDetailsPaypalSellerProtection'NonNullable =
  PaymentMethodDetailsPaypalSellerProtection'NonNullable
    { paymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories = GHC.Maybe.Nothing,
      paymentMethodDetailsPaypalSellerProtection'NonNullableStatus = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.payment_method_details_paypal.properties.seller_protection.anyOf.properties.dispute_categories.items@ in the specification.
data PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"fraudulent"@
    PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableEnumFraudulent
  | -- | Represents the JSON value @"product_not_received"@
    PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableEnumProductNotReceived
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullable where
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableOther val) = val
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableEnumFraudulent) = "fraudulent"
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableEnumProductNotReceived) = "product_not_received"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "fraudulent" -> PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableEnumFraudulent
            | val GHC.Classes.== "product_not_received" -> PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableEnumProductNotReceived
            | GHC.Base.otherwise -> PaymentMethodDetailsPaypalSellerProtection'NonNullableDisputeCategories'NonNullableOther val
      )

-- | Defines the enum schema located at @components.schemas.payment_method_details_paypal.properties.seller_protection.anyOf.properties.status@ in the specification.
--
-- Indicates whether the transaction is eligible for PayPal\'s seller protection.
data PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"eligible"@
    PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumEligible
  | -- | Represents the JSON value @"not_eligible"@
    PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumNotEligible
  | -- | Represents the JSON value @"partially_eligible"@
    PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumPartiallyEligible
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus' where
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'Other val) = val
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumEligible) = "eligible"
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumNotEligible) = "not_eligible"
  toJSON (PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumPartiallyEligible) = "partially_eligible"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "eligible" -> PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumEligible
            | val GHC.Classes.== "not_eligible" -> PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumNotEligible
            | val GHC.Classes.== "partially_eligible" -> PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'EnumPartiallyEligible
            | GHC.Base.otherwise -> PaymentMethodDetailsPaypalSellerProtection'NonNullableStatus'Other val
      )
