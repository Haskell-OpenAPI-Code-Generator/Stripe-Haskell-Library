{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentMethodDetailsSofort
module StripeAPI.Types.PaymentMethodDetailsSofort where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Mandate
import {-# SOURCE #-} StripeAPI.Types.PaymentMethod
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_sofort@ in the specification.
data PaymentMethodDetailsSofort = PaymentMethodDetailsSofort
  { -- | bank_code: Bank code of bank associated with the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSofortBankCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | bank_name: Name of the bank associated with the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSofortBankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | bic: Bank Identifier Code of the bank associated with the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSofortBic :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter ISO code representing the country the bank account is located in.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSofortCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | generated_sepa_debit: The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    paymentMethodDetailsSofortGeneratedSepaDebit :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableVariants)),
    -- | generated_sepa_debit_mandate: The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
    paymentMethodDetailsSofortGeneratedSepaDebitMandate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableVariants)),
    -- | iban_last4: Last four characters of the IBAN.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSofortIbanLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | preferred_language: Preferred language of the SOFORT authorization page that the customer is redirected to.
    -- Can be one of \`de\`, \`en\`, \`es\`, \`fr\`, \`it\`, \`nl\`, or \`pl\`
    paymentMethodDetailsSofortPreferredLanguage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsSofortPreferredLanguage'NonNullable)),
    -- | verified_name: Owner\'s verified full name. Values are verified or provided by SOFORT directly
    -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentMethodDetailsSofortVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsSofort where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_code" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortBankCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortBankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bic" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortBic obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortGeneratedSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit_mandate" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortGeneratedSepaDebitMandate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban_last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortIbanLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_language" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortPreferredLanguage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortVerifiedName obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_code" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortBankCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortBankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bic" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortBic obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortGeneratedSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit_mandate" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortGeneratedSepaDebitMandate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban_last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortIbanLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_language" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortPreferredLanguage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsSofortVerifiedName obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsSofort where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsSofort" (\obj -> ((((((((GHC.Base.pure PaymentMethodDetailsSofort GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bic")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "generated_sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "generated_sepa_debit_mandate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "iban_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferred_language")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name"))

-- | Create a new 'PaymentMethodDetailsSofort' with all required fields.
mkPaymentMethodDetailsSofort :: PaymentMethodDetailsSofort
mkPaymentMethodDetailsSofort =
  PaymentMethodDetailsSofort
    { paymentMethodDetailsSofortBankCode = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortBankName = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortBic = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortCountry = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortGeneratedSepaDebit = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortGeneratedSepaDebitMandate = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortIbanLast4 = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortPreferredLanguage = GHC.Maybe.Nothing,
      paymentMethodDetailsSofortVerifiedName = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.payment_method_details_sofort.properties.generated_sepa_debit.anyOf@ in the specification.
--
-- The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
data PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableVariants
  = PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableText Data.Text.Internal.Text
  | PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullablePaymentMethod PaymentMethod
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableVariants where
  toJSON (PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullablePaymentMethod a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableVariants where
  parseJSON val = case (PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PaymentMethodDetailsSofortGeneratedSepaDebit'NonNullablePaymentMethod Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @components.schemas.payment_method_details_sofort.properties.generated_sepa_debit_mandate.anyOf@ in the specification.
--
-- The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
data PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableVariants
  = PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableText Data.Text.Internal.Text
  | PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableMandate Mandate
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableVariants where
  toJSON (PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableMandate a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableVariants where
  parseJSON val = case (PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PaymentMethodDetailsSofortGeneratedSepaDebitMandate'NonNullableMandate Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.payment_method_details_sofort.properties.preferred_language@ in the specification.
--
-- Preferred language of the SOFORT authorization page that the customer is redirected to.
-- Can be one of \`de\`, \`en\`, \`es\`, \`fr\`, \`it\`, \`nl\`, or \`pl\`
data PaymentMethodDetailsSofortPreferredLanguage'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"de"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumDe
  | -- | Represents the JSON value @"en"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumEn
  | -- | Represents the JSON value @"es"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumEs
  | -- | Represents the JSON value @"fr"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumFr
  | -- | Represents the JSON value @"it"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumIt
  | -- | Represents the JSON value @"nl"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumNl
  | -- | Represents the JSON value @"pl"@
    PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumPl
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsSofortPreferredLanguage'NonNullable where
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableOther val) = val
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumDe) = "de"
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumEn) = "en"
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumEs) = "es"
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumFr) = "fr"
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumIt) = "it"
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumNl) = "nl"
  toJSON (PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumPl) = "pl"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsSofortPreferredLanguage'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "de" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumDe
            | val GHC.Classes.== "en" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumEn
            | val GHC.Classes.== "es" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumEs
            | val GHC.Classes.== "fr" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumFr
            | val GHC.Classes.== "it" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumIt
            | val GHC.Classes.== "nl" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumNl
            | val GHC.Classes.== "pl" -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableEnumPl
            | GHC.Base.otherwise -> PaymentMethodDetailsSofortPreferredLanguage'NonNullableOther val
      )
