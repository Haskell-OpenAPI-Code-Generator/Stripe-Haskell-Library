{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema OrdersV2ResourceTotalDetails
module StripeAPI.Types.OrdersV2ResourceTotalDetails where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.OrdersV2ResourceTotalDetailsApiResourceBreakdown
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.orders_v2_resource_total_details@ in the specification.
data OrdersV2ResourceTotalDetails = OrdersV2ResourceTotalDetails
  { -- | amount_discount: This is the sum of all the discounts.
    ordersV2ResourceTotalDetailsAmountDiscount :: GHC.Types.Int,
    -- | amount_shipping: This is the sum of all the shipping amounts.
    ordersV2ResourceTotalDetailsAmountShipping :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | amount_tax: This is the sum of all the tax amounts.
    ordersV2ResourceTotalDetailsAmountTax :: GHC.Types.Int,
    -- | breakdown:
    ordersV2ResourceTotalDetailsBreakdown :: (GHC.Maybe.Maybe OrdersV2ResourceTotalDetailsApiResourceBreakdown)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON OrdersV2ResourceTotalDetails where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount_discount" Data.Aeson.Types.ToJSON..= ordersV2ResourceTotalDetailsAmountDiscount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_shipping" Data.Aeson.Types.ToJSON..=)) (ordersV2ResourceTotalDetailsAmountShipping obj) : ["amount_tax" Data.Aeson.Types.ToJSON..= ordersV2ResourceTotalDetailsAmountTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("breakdown" Data.Aeson.Types.ToJSON..=)) (ordersV2ResourceTotalDetailsBreakdown obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount_discount" Data.Aeson.Types.ToJSON..= ordersV2ResourceTotalDetailsAmountDiscount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_shipping" Data.Aeson.Types.ToJSON..=)) (ordersV2ResourceTotalDetailsAmountShipping obj) : ["amount_tax" Data.Aeson.Types.ToJSON..= ordersV2ResourceTotalDetailsAmountTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("breakdown" Data.Aeson.Types.ToJSON..=)) (ordersV2ResourceTotalDetailsBreakdown obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON OrdersV2ResourceTotalDetails where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "OrdersV2ResourceTotalDetails" (\obj -> (((GHC.Base.pure OrdersV2ResourceTotalDetails GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "breakdown"))

-- | Create a new 'OrdersV2ResourceTotalDetails' with all required fields.
mkOrdersV2ResourceTotalDetails ::
  -- | 'ordersV2ResourceTotalDetailsAmountDiscount'
  GHC.Types.Int ->
  -- | 'ordersV2ResourceTotalDetailsAmountTax'
  GHC.Types.Int ->
  OrdersV2ResourceTotalDetails
mkOrdersV2ResourceTotalDetails ordersV2ResourceTotalDetailsAmountDiscount ordersV2ResourceTotalDetailsAmountTax =
  OrdersV2ResourceTotalDetails
    { ordersV2ResourceTotalDetailsAmountDiscount = ordersV2ResourceTotalDetailsAmountDiscount,
      ordersV2ResourceTotalDetailsAmountShipping = GHC.Maybe.Nothing,
      ordersV2ResourceTotalDetailsAmountTax = ordersV2ResourceTotalDetailsAmountTax,
      ordersV2ResourceTotalDetailsBreakdown = GHC.Maybe.Nothing
    }
