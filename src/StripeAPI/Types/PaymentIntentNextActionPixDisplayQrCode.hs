{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentIntentNextActionPixDisplayQrCode
module StripeAPI.Types.PaymentIntentNextActionPixDisplayQrCode where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_intent_next_action_pix_display_qr_code@ in the specification.
data PaymentIntentNextActionPixDisplayQrCode = PaymentIntentNextActionPixDisplayQrCode
  { -- | data: The raw data string used to generate QR code, it should be used together with QR code library.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentIntentNextActionPixDisplayQrCodeData :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expires_at: The date (unix timestamp) when the PIX expires.
    paymentIntentNextActionPixDisplayQrCodeExpiresAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | hosted_instructions_url: The URL to the hosted pix instructions page, which allows customers to view the pix QR code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentIntentNextActionPixDisplayQrCodeHostedInstructionsUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | image_url_png: The image_url_png string used to render png QR code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentIntentNextActionPixDisplayQrCodeImageUrlPng :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | image_url_svg: The image_url_svg string used to render svg QR code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentIntentNextActionPixDisplayQrCodeImageUrlSvg :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentIntentNextActionPixDisplayQrCode where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("data" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("hosted_instructions_url" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeHostedInstructionsUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("image_url_png" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeImageUrlPng obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("image_url_svg" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeImageUrlSvg obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("data" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("hosted_instructions_url" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeHostedInstructionsUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("image_url_png" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeImageUrlPng obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("image_url_svg" Data.Aeson.Types.ToJSON..=)) (paymentIntentNextActionPixDisplayQrCodeImageUrlSvg obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentIntentNextActionPixDisplayQrCode where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentIntentNextActionPixDisplayQrCode" (\obj -> ((((GHC.Base.pure PaymentIntentNextActionPixDisplayQrCode GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "hosted_instructions_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "image_url_png")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "image_url_svg"))

-- | Create a new 'PaymentIntentNextActionPixDisplayQrCode' with all required fields.
mkPaymentIntentNextActionPixDisplayQrCode :: PaymentIntentNextActionPixDisplayQrCode
mkPaymentIntentNextActionPixDisplayQrCode =
  PaymentIntentNextActionPixDisplayQrCode
    { paymentIntentNextActionPixDisplayQrCodeData = GHC.Maybe.Nothing,
      paymentIntentNextActionPixDisplayQrCodeExpiresAt = GHC.Maybe.Nothing,
      paymentIntentNextActionPixDisplayQrCodeHostedInstructionsUrl = GHC.Maybe.Nothing,
      paymentIntentNextActionPixDisplayQrCodeImageUrlPng = GHC.Maybe.Nothing,
      paymentIntentNextActionPixDisplayQrCodeImageUrlSvg = GHC.Maybe.Nothing
    }
