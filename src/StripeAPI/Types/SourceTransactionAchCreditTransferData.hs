{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema SourceTransactionAchCreditTransferData
module StripeAPI.Types.SourceTransactionAchCreditTransferData where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.source_transaction_ach_credit_transfer_data@ in the specification.
data SourceTransactionAchCreditTransferData = SourceTransactionAchCreditTransferData
  { -- | customer_data: Customer data associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionAchCreditTransferDataCustomerData :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | fingerprint: Bank account fingerprint associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionAchCreditTransferDataFingerprint :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last4: Last 4 digits of the account number associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionAchCreditTransferDataLast4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | routing_number: Routing number associated with the transfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    sourceTransactionAchCreditTransferDataRoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON SourceTransactionAchCreditTransferData where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_data" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataCustomerData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataRoutingNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_data" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataCustomerData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataFingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (sourceTransactionAchCreditTransferDataRoutingNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON SourceTransactionAchCreditTransferData where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "SourceTransactionAchCreditTransferData" (\obj -> (((GHC.Base.pure SourceTransactionAchCreditTransferData GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number"))

-- | Create a new 'SourceTransactionAchCreditTransferData' with all required fields.
mkSourceTransactionAchCreditTransferData :: SourceTransactionAchCreditTransferData
mkSourceTransactionAchCreditTransferData =
  SourceTransactionAchCreditTransferData
    { sourceTransactionAchCreditTransferDataCustomerData = GHC.Maybe.Nothing,
      sourceTransactionAchCreditTransferDataFingerprint = GHC.Maybe.Nothing,
      sourceTransactionAchCreditTransferDataLast4 = GHC.Maybe.Nothing,
      sourceTransactionAchCreditTransferDataRoutingNumber = GHC.Maybe.Nothing
    }
