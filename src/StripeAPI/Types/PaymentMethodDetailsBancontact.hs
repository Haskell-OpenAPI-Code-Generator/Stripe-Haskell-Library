-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema PaymentMethodDetailsBancontact
module StripeAPI.Types.PaymentMethodDetailsBancontact where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Mandate
import {-# SOURCE #-} StripeAPI.Types.PaymentMethod

-- | Defines the object schema located at @components.schemas.payment_method_details_bancontact@ in the specification.
-- 
-- 
data PaymentMethodDetailsBancontact = PaymentMethodDetailsBancontact {
  -- | bank_code: Bank code of bank associated with the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  paymentMethodDetailsBancontactBankCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | bank_name: Name of the bank associated with the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , paymentMethodDetailsBancontactBankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | bic: Bank Identifier Code of the bank associated with the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , paymentMethodDetailsBancontactBic :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | generated_sepa_debit: The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
  , paymentMethodDetailsBancontactGeneratedSepaDebit :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableVariants))
  -- | generated_sepa_debit_mandate: The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
  , paymentMethodDetailsBancontactGeneratedSepaDebitMandate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableVariants))
  -- | iban_last4: Last four characters of the IBAN.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , paymentMethodDetailsBancontactIbanLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | preferred_language: Preferred language of the Bancontact authorization page that the customer is redirected to.
  -- Can be one of \`en\`, \`de\`, \`fr\`, or \`nl\`
  , paymentMethodDetailsBancontactPreferredLanguage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable PaymentMethodDetailsBancontactPreferredLanguage'NonNullable))
  -- | verified_name: Owner\'s verified full name. Values are verified or provided by Bancontact directly
  -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , paymentMethodDetailsBancontactVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsBancontact
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_code" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactBankCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactBankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bic" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactBic obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactGeneratedSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit_mandate" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactGeneratedSepaDebitMandate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban_last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactIbanLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_language" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactPreferredLanguage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactVerifiedName obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_code" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactBankCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactBankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bic" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactBic obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactGeneratedSepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("generated_sepa_debit_mandate" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactGeneratedSepaDebitMandate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("iban_last4" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactIbanLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_language" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactPreferredLanguage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (paymentMethodDetailsBancontactVerifiedName obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsBancontact
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsBancontact" (\obj -> (((((((GHC.Base.pure PaymentMethodDetailsBancontact GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bic")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "generated_sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "generated_sepa_debit_mandate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "iban_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferred_language")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name"))
-- | Create a new 'PaymentMethodDetailsBancontact' with all required fields.
mkPaymentMethodDetailsBancontact :: PaymentMethodDetailsBancontact
mkPaymentMethodDetailsBancontact = PaymentMethodDetailsBancontact{paymentMethodDetailsBancontactBankCode = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactBankName = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactBic = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactGeneratedSepaDebit = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactGeneratedSepaDebitMandate = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactIbanLast4 = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactPreferredLanguage = GHC.Maybe.Nothing,
                                                                  paymentMethodDetailsBancontactVerifiedName = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.payment_method_details_bancontact.properties.generated_sepa_debit.anyOf@ in the specification.
-- 
-- The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.
data PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableVariants =
   PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableText Data.Text.Internal.Text
  | PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullablePaymentMethod PaymentMethod
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableVariants
    where toJSON (PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullablePaymentMethod a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableVariants
    where parseJSON val = case (PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PaymentMethodDetailsBancontactGeneratedSepaDebit'NonNullablePaymentMethod Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.payment_method_details_bancontact.properties.generated_sepa_debit_mandate.anyOf@ in the specification.
-- 
-- The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.
data PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableVariants =
   PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableText Data.Text.Internal.Text
  | PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableMandate Mandate
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableVariants
    where toJSON (PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableMandate a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableVariants
    where parseJSON val = case (PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PaymentMethodDetailsBancontactGeneratedSepaDebitMandate'NonNullableMandate Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.payment_method_details_bancontact.properties.preferred_language@ in the specification.
-- 
-- Preferred language of the Bancontact authorization page that the customer is redirected to.
-- Can be one of \`en\`, \`de\`, \`fr\`, or \`nl\`
data PaymentMethodDetailsBancontactPreferredLanguage'NonNullable =
   PaymentMethodDetailsBancontactPreferredLanguage'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PaymentMethodDetailsBancontactPreferredLanguage'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumDe -- ^ Represents the JSON value @"de"@
  | PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumEn -- ^ Represents the JSON value @"en"@
  | PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumFr -- ^ Represents the JSON value @"fr"@
  | PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumNl -- ^ Represents the JSON value @"nl"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsBancontactPreferredLanguage'NonNullable
    where toJSON (PaymentMethodDetailsBancontactPreferredLanguage'NonNullableOther val) = val
          toJSON (PaymentMethodDetailsBancontactPreferredLanguage'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumDe) = "de"
          toJSON (PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumEn) = "en"
          toJSON (PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumFr) = "fr"
          toJSON (PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumNl) = "nl"
instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsBancontactPreferredLanguage'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "de" -> PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumDe
                                            | val GHC.Classes.== "en" -> PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumEn
                                            | val GHC.Classes.== "fr" -> PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumFr
                                            | val GHC.Classes.== "nl" -> PaymentMethodDetailsBancontactPreferredLanguage'NonNullableEnumNl
                                            | GHC.Base.otherwise -> PaymentMethodDetailsBancontactPreferredLanguage'NonNullableOther val)
