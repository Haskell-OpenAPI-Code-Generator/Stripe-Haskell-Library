{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema DiscountsResourceDiscountAmount
module StripeAPI.Types.DiscountsResourceDiscountAmount where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.DeletedDiscount
import {-# SOURCE #-} StripeAPI.Types.Discount
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.discounts_resource_discount_amount@ in the specification.
data DiscountsResourceDiscountAmount = DiscountsResourceDiscountAmount
  { -- | amount: The amount, in cents (or local equivalent), of the discount.
    discountsResourceDiscountAmountAmount :: GHC.Types.Int,
    -- | discount: The discount that was applied to get this discount amount.
    discountsResourceDiscountAmountDiscount :: DiscountsResourceDiscountAmountDiscount'Variants
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DiscountsResourceDiscountAmount where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= discountsResourceDiscountAmountAmount obj] : ["discount" Data.Aeson.Types.ToJSON..= discountsResourceDiscountAmountDiscount obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= discountsResourceDiscountAmountAmount obj] : ["discount" Data.Aeson.Types.ToJSON..= discountsResourceDiscountAmountDiscount obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DiscountsResourceDiscountAmount where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DiscountsResourceDiscountAmount" (\obj -> (GHC.Base.pure DiscountsResourceDiscountAmount GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "discount"))

-- | Create a new 'DiscountsResourceDiscountAmount' with all required fields.
mkDiscountsResourceDiscountAmount ::
  -- | 'discountsResourceDiscountAmountAmount'
  GHC.Types.Int ->
  -- | 'discountsResourceDiscountAmountDiscount'
  DiscountsResourceDiscountAmountDiscount'Variants ->
  DiscountsResourceDiscountAmount
mkDiscountsResourceDiscountAmount discountsResourceDiscountAmountAmount discountsResourceDiscountAmountDiscount =
  DiscountsResourceDiscountAmount
    { discountsResourceDiscountAmountAmount = discountsResourceDiscountAmountAmount,
      discountsResourceDiscountAmountDiscount = discountsResourceDiscountAmountDiscount
    }

-- | Defines the oneOf schema located at @components.schemas.discounts_resource_discount_amount.properties.discount.anyOf@ in the specification.
--
-- The discount that was applied to get this discount amount.
data DiscountsResourceDiscountAmountDiscount'Variants
  = DiscountsResourceDiscountAmountDiscount'Text Data.Text.Internal.Text
  | DiscountsResourceDiscountAmountDiscount'Discount Discount
  | DiscountsResourceDiscountAmountDiscount'DeletedDiscount DeletedDiscount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DiscountsResourceDiscountAmountDiscount'Variants where
  toJSON (DiscountsResourceDiscountAmountDiscount'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DiscountsResourceDiscountAmountDiscount'Discount a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DiscountsResourceDiscountAmountDiscount'DeletedDiscount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DiscountsResourceDiscountAmountDiscount'Variants where
  parseJSON val = case (DiscountsResourceDiscountAmountDiscount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DiscountsResourceDiscountAmountDiscount'Discount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DiscountsResourceDiscountAmountDiscount'DeletedDiscount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
