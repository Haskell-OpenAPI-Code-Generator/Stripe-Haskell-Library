-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema Invoice
module StripeAPI.Types.Invoice where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.Account
import {-# SOURCE #-} StripeAPI.Types.Address
import {-# SOURCE #-} StripeAPI.Types.AlipayAccount
import {-# SOURCE #-} StripeAPI.Types.ApiErrors
import {-# SOURCE #-} StripeAPI.Types.Application
import {-# SOURCE #-} StripeAPI.Types.AutomaticTax
import {-# SOURCE #-} StripeAPI.Types.BankAccount
import {-# SOURCE #-} StripeAPI.Types.BitcoinReceiver
import {-# SOURCE #-} StripeAPI.Types.Card
import {-# SOURCE #-} StripeAPI.Types.Charge
import {-# SOURCE #-} StripeAPI.Types.Coupon
import {-# SOURCE #-} StripeAPI.Types.Customer
import {-# SOURCE #-} StripeAPI.Types.DeletedApplication
import {-# SOURCE #-} StripeAPI.Types.DeletedCustomer
import {-# SOURCE #-} StripeAPI.Types.DeletedDiscount
import {-# SOURCE #-} StripeAPI.Types.DeletedTaxId
import {-# SOURCE #-} StripeAPI.Types.Discount
import {-# SOURCE #-} StripeAPI.Types.DiscountsResourceDiscountAmount
import {-# SOURCE #-} StripeAPI.Types.InvoiceSettingCustomField
import {-# SOURCE #-} StripeAPI.Types.InvoiceSettingRenderingOptions
import {-# SOURCE #-} StripeAPI.Types.InvoiceTaxAmount
import {-# SOURCE #-} StripeAPI.Types.InvoiceThresholdReason
import {-# SOURCE #-} StripeAPI.Types.InvoiceTransferData
import {-# SOURCE #-} StripeAPI.Types.InvoicesPaymentSettings
import {-# SOURCE #-} StripeAPI.Types.InvoicesResourceInvoiceTaxId
import {-# SOURCE #-} StripeAPI.Types.InvoicesStatusTransitions
import {-# SOURCE #-} StripeAPI.Types.LineItem
import {-# SOURCE #-} StripeAPI.Types.PaymentIntent
import {-# SOURCE #-} StripeAPI.Types.PaymentMethod
import {-# SOURCE #-} StripeAPI.Types.PromotionCode
import {-# SOURCE #-} StripeAPI.Types.Quote
import {-# SOURCE #-} StripeAPI.Types.Recipient
import {-# SOURCE #-} StripeAPI.Types.SetupIntent
import {-# SOURCE #-} StripeAPI.Types.Shipping
import {-# SOURCE #-} StripeAPI.Types.Source
import {-# SOURCE #-} StripeAPI.Types.SourceCodeVerificationFlow
import {-# SOURCE #-} StripeAPI.Types.SourceOrder
import {-# SOURCE #-} StripeAPI.Types.SourceOwner
import {-# SOURCE #-} StripeAPI.Types.SourceReceiverFlow
import {-# SOURCE #-} StripeAPI.Types.SourceRedirectFlow
import {-# SOURCE #-} StripeAPI.Types.SourceTypeAchCreditTransfer
import {-# SOURCE #-} StripeAPI.Types.SourceTypeAchDebit
import {-# SOURCE #-} StripeAPI.Types.SourceTypeAcssDebit
import {-# SOURCE #-} StripeAPI.Types.SourceTypeAlipay
import {-# SOURCE #-} StripeAPI.Types.SourceTypeAuBecsDebit
import {-# SOURCE #-} StripeAPI.Types.SourceTypeBancontact
import {-# SOURCE #-} StripeAPI.Types.SourceTypeCard
import {-# SOURCE #-} StripeAPI.Types.SourceTypeCardPresent
import {-# SOURCE #-} StripeAPI.Types.SourceTypeEps
import {-# SOURCE #-} StripeAPI.Types.SourceTypeGiropay
import {-# SOURCE #-} StripeAPI.Types.SourceTypeIdeal
import {-# SOURCE #-} StripeAPI.Types.SourceTypeKlarna
import {-# SOURCE #-} StripeAPI.Types.SourceTypeMultibanco
import {-# SOURCE #-} StripeAPI.Types.SourceTypeP24
import {-# SOURCE #-} StripeAPI.Types.SourceTypeSepaDebit
import {-# SOURCE #-} StripeAPI.Types.SourceTypeSofort
import {-# SOURCE #-} StripeAPI.Types.SourceTypeThreeDSecure
import {-# SOURCE #-} StripeAPI.Types.SourceTypeWechat
import {-# SOURCE #-} StripeAPI.Types.Subscription
import {-# SOURCE #-} StripeAPI.Types.TaxId
import {-# SOURCE #-} StripeAPI.Types.TaxRate
import {-# SOURCE #-} StripeAPI.Types.TestHelpers_TestClock

-- | Defines the object schema located at @components.schemas.invoice@ in the specification.
-- 
-- Invoices are statements of amounts owed by a customer, and are either
-- generated one-off, or generated periodically from a subscription.
-- 
-- They contain [invoice items](https:\/\/stripe.com\/docs\/api\#invoiceitems), and proration adjustments
-- that may be caused by subscription upgrades\/downgrades (if necessary).
-- 
-- If your invoice is configured to be billed through automatic charges,
-- Stripe automatically finalizes your invoice and attempts payment. Note
-- that finalizing the invoice,
-- [when automatic](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\/\#auto_advance), does
-- not happen immediately as the invoice is created. Stripe waits
-- until one hour after the last webhook was successfully sent (or the last
-- webhook timed out after failing). If you (and the platforms you may have
-- connected to) have no webhooks configured, Stripe waits one hour after
-- creation to finalize the invoice.
-- 
-- If your invoice is configured to be billed by sending an email, then based on your
-- [email settings](https:\/\/dashboard.stripe.com\/account\/billing\/automatic),
-- Stripe will email the invoice to your customer and await payment. These
-- emails can contain a link to a hosted page to pay the invoice.
-- 
-- Stripe applies any customer credit on the account before determining the
-- amount due for the invoice (i.e., the amount that will be actually
-- charged). If the amount due for the invoice is less than Stripe\'s [minimum allowed charge
-- per currency](\/docs\/currencies\#minimum-and-maximum-charge-amounts), the
-- invoice is automatically marked paid, and we add the amount due to the
-- customer\'s credit balance which is applied to the next invoice.
-- 
-- More details on the customer\'s credit balance are
-- [here](https:\/\/stripe.com\/docs\/billing\/customer\/balance).
-- 
-- Related guide: [Send Invoices to Customers](https:\/\/stripe.com\/docs\/billing\/invoices\/sending).
data Invoice = Invoice {
  -- | account_country: The country of the business associated with this invoice, most often the business creating the invoice.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceAccountCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_name: The public name of the business associated with this invoice, most often the business creating the invoice.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceAccountName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_tax_ids: The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
  , invoiceAccountTaxIds :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([InvoiceAccountTaxIds'NonNullableVariants])))
  -- | amount_due: Final amount due at this time for this invoice. If the invoice\'s total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the \`amount_due\` may be 0. If there is a positive \`starting_balance\` for the invoice (the customer owes money), the \`amount_due\` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in \`amount_due\`.
  , invoiceAmountDue :: GHC.Types.Int
  -- | amount_paid: The amount, in %s, that was paid.
  , invoiceAmountPaid :: GHC.Types.Int
  -- | amount_remaining: The difference between amount_due and amount_paid, in %s.
  , invoiceAmountRemaining :: GHC.Types.Int
  -- | application: ID of the Connect Application that created the invoice.
  , invoiceApplication :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceApplication'NonNullableVariants))
  -- | application_fee_amount: The fee in %s that will be applied to the invoice and transferred to the application owner\'s Stripe account when the invoice is paid.
  , invoiceApplicationFeeAmount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | attempt_count: Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.
  , invoiceAttemptCount :: GHC.Types.Int
  -- | attempted: Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the \`invoice.created\` webhook, for example, so you might not want to display that invoice as unpaid to your users.
  , invoiceAttempted :: GHC.Types.Bool
  -- | auto_advance: Controls whether Stripe will perform [automatic collection](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\/\#auto_advance) of the invoice. When \`false\`, the invoice\'s state will not automatically advance without an explicit action.
  , invoiceAutoAdvance :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | automatic_tax: 
  , invoiceAutomaticTax :: AutomaticTax
  -- | billing_reason: Indicates the reason why the invoice was created. \`subscription_cycle\` indicates an invoice created by a subscription advancing into a new period. \`subscription_create\` indicates an invoice created due to creating a subscription. \`subscription_update\` indicates an invoice created due to updating a subscription. \`subscription\` is set for all old invoices to indicate either a change to a subscription or a period advancement. \`manual\` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The \`upcoming\` value is reserved for simulated invoices per the upcoming invoice endpoint. \`subscription_threshold\` indicates an invoice created due to a billing threshold being reached.
  , invoiceBillingReason :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceBillingReason'NonNullable))
  -- | charge: ID of the latest charge generated for this invoice, if any.
  , invoiceCharge :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceCharge'NonNullableVariants))
  -- | collection_method: Either \`charge_automatically\`, or \`send_invoice\`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.
  , invoiceCollectionMethod :: InvoiceCollectionMethod'
  -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
  , invoiceCreated :: GHC.Types.Int
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  , invoiceCurrency :: Data.Text.Internal.Text
  -- | custom_fields: Custom fields displayed on the invoice.
  , invoiceCustomFields :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([InvoiceSettingCustomField])))
  -- | customer: The ID of the customer who will be billed.
  , invoiceCustomer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceCustomer'NonNullableVariants))
  -- | customer_address: The customer\'s address. Until the invoice is finalized, this field will equal \`customer.address\`. Once the invoice is finalized, this field will no longer be updated.
  , invoiceCustomerAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceCustomerAddress'NonNullable))
  -- | customer_email: The customer\'s email. Until the invoice is finalized, this field will equal \`customer.email\`. Once the invoice is finalized, this field will no longer be updated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | customer_name: The customer\'s name. Until the invoice is finalized, this field will equal \`customer.name\`. Once the invoice is finalized, this field will no longer be updated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | customer_phone: The customer\'s phone number. Until the invoice is finalized, this field will equal \`customer.phone\`. Once the invoice is finalized, this field will no longer be updated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | customer_shipping: The customer\'s shipping information. Until the invoice is finalized, this field will equal \`customer.shipping\`. Once the invoice is finalized, this field will no longer be updated.
  , invoiceCustomerShipping :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceCustomerShipping'NonNullable))
  -- | customer_tax_exempt: The customer\'s tax exempt status. Until the invoice is finalized, this field will equal \`customer.tax_exempt\`. Once the invoice is finalized, this field will no longer be updated.
  , invoiceCustomerTaxExempt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceCustomerTaxExempt'NonNullable))
  -- | customer_tax_ids: The customer\'s tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as \`customer.tax_ids\`. Once the invoice is finalized, this field will no longer be updated.
  , invoiceCustomerTaxIds :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([InvoicesResourceInvoiceTaxId])))
  -- | default_payment_method: ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription\'s default payment method, if any, or to the default payment method in the customer\'s invoice settings.
  , invoiceDefaultPaymentMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceDefaultPaymentMethod'NonNullableVariants))
  -- | default_source: ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription\'s default source, if any, or to the customer\'s default source.
  , invoiceDefaultSource :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceDefaultSource'NonNullableVariants))
  -- | default_tax_rates: The tax rates applied to this invoice, if any.
  , invoiceDefaultTaxRates :: ([TaxRate])
  -- | description: An arbitrary string attached to the object. Often useful for displaying to users. Referenced as \'memo\' in the Dashboard.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | discount: Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.
  , invoiceDiscount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceDiscount'NonNullable))
  -- | discounts: The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use \`expand[]=discounts\` to expand each discount.
  , invoiceDiscounts :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([InvoiceDiscounts'NonNullableVariants])))
  -- | due_date: The date on which payment for this invoice is due. This value will be \`null\` for invoices where \`collection_method=charge_automatically\`.
  , invoiceDueDate :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | ending_balance: Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.
  , invoiceEndingBalance :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | footer: Footer displayed on the invoice.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceFooter :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | hosted_invoice_url: The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceHostedInvoiceUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | invoice_pdf: The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceInvoicePdf :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | last_finalization_error: The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.
  , invoiceLastFinalizationError :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullable))
  -- | lines: The individual line items that make up the invoice. \`lines\` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.
  , invoiceLines :: InvoiceLines'
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , invoiceLivemode :: GHC.Types.Bool
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , invoiceMetadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object))
  -- | next_payment_attempt: The time at which payment will next be attempted. This value will be \`null\` for invoices where \`collection_method=send_invoice\`.
  , invoiceNextPaymentAttempt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | number: A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer\'s unique invoice_prefix if it is specified.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | on_behalf_of: The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https:\/\/stripe.com\/docs\/billing\/invoices\/connect) documentation for details.
  , invoiceOnBehalfOf :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceOnBehalfOf'NonNullableVariants))
  -- | paid: Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer\'s account balance.
  , invoicePaid :: GHC.Types.Bool
  -- | paid_out_of_band: Returns true if the invoice was manually marked paid, returns false if the invoice hasn\'t been paid yet or was paid on Stripe.
  , invoicePaidOutOfBand :: GHC.Types.Bool
  -- | payment_intent: The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.
  , invoicePaymentIntent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoicePaymentIntent'NonNullableVariants))
  -- | payment_settings: 
  , invoicePaymentSettings :: InvoicesPaymentSettings
  -- | period_end: End of the usage period during which invoice items were added to this invoice.
  , invoicePeriodEnd :: GHC.Types.Int
  -- | period_start: Start of the usage period during which invoice items were added to this invoice.
  , invoicePeriodStart :: GHC.Types.Int
  -- | post_payment_credit_notes_amount: Total amount of all post-payment credit notes issued for this invoice.
  , invoicePostPaymentCreditNotesAmount :: GHC.Types.Int
  -- | pre_payment_credit_notes_amount: Total amount of all pre-payment credit notes issued for this invoice.
  , invoicePrePaymentCreditNotesAmount :: GHC.Types.Int
  -- | quote: The quote this invoice was generated from.
  , invoiceQuote :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceQuote'NonNullableVariants))
  -- | receipt_number: This is the transaction number that appears on email receipts sent for this invoice.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceReceiptNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | rendering_options: Options for invoice PDF rendering.
  , invoiceRenderingOptions :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceRenderingOptions'NonNullable))
  -- | starting_balance: Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.
  , invoiceStartingBalance :: GHC.Types.Int
  -- | statement_descriptor: Extra information about an invoice for the customer\'s credit card statement.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceStatementDescriptor :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | status: The status of the invoice, one of \`draft\`, \`open\`, \`paid\`, \`uncollectible\`, or \`void\`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\#workflow-overview)
  , invoiceStatus :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceStatus'NonNullable))
  -- | status_transitions: 
  , invoiceStatusTransitions :: InvoicesStatusTransitions
  -- | subscription: The subscription that this invoice was prepared for, if any.
  , invoiceSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceSubscription'NonNullableVariants))
  -- | subscription_proration_date: Only set for upcoming invoices that preview prorations. The time used to calculate prorations.
  , invoiceSubscriptionProrationDate :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | subtotal: Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated
  , invoiceSubtotal :: GHC.Types.Int
  -- | subtotal_excluding_tax: The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated
  , invoiceSubtotalExcludingTax :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | tax: The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.
  , invoiceTax :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | test_clock: ID of the test clock this invoice belongs to.
  , invoiceTestClock :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceTestClock'NonNullableVariants))
  -- | threshold_reason: 
  , invoiceThresholdReason :: (GHC.Maybe.Maybe InvoiceThresholdReason)
  -- | total: Total after discounts and taxes.
  , invoiceTotal :: GHC.Types.Int
  -- | total_discount_amounts: The aggregate amounts calculated per discount across all line items.
  , invoiceTotalDiscountAmounts :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([DiscountsResourceDiscountAmount])))
  -- | total_excluding_tax: The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.
  , invoiceTotalExcludingTax :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | total_tax_amounts: The aggregate amounts calculated per tax rate for all line items.
  , invoiceTotalTaxAmounts :: ([InvoiceTaxAmount])
  -- | transfer_data: The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.
  , invoiceTransferData :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceTransferData'NonNullable))
  -- | webhooks_delivered_at: Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https:\/\/stripe.com\/docs\/billing\/webhooks\#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.
  , invoiceWebhooksDeliveredAt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Invoice
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_country" Data.Aeson.Types.ToJSON..=)) (invoiceAccountCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_name" Data.Aeson.Types.ToJSON..=)) (invoiceAccountName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_tax_ids" Data.Aeson.Types.ToJSON..=)) (invoiceAccountTaxIds obj) : ["amount_due" Data.Aeson.Types.ToJSON..= invoiceAmountDue obj] : ["amount_paid" Data.Aeson.Types.ToJSON..= invoiceAmountPaid obj] : ["amount_remaining" Data.Aeson.Types.ToJSON..= invoiceAmountRemaining obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application" Data.Aeson.Types.ToJSON..=)) (invoiceApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application_fee_amount" Data.Aeson.Types.ToJSON..=)) (invoiceApplicationFeeAmount obj) : ["attempt_count" Data.Aeson.Types.ToJSON..= invoiceAttemptCount obj] : ["attempted" Data.Aeson.Types.ToJSON..= invoiceAttempted obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_advance" Data.Aeson.Types.ToJSON..=)) (invoiceAutoAdvance obj) : ["automatic_tax" Data.Aeson.Types.ToJSON..= invoiceAutomaticTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_reason" Data.Aeson.Types.ToJSON..=)) (invoiceBillingReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (invoiceCharge obj) : ["collection_method" Data.Aeson.Types.ToJSON..= invoiceCollectionMethod obj] : ["created" Data.Aeson.Types.ToJSON..= invoiceCreated obj] : ["currency" Data.Aeson.Types.ToJSON..= invoiceCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (invoiceCustomFields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (invoiceCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_address" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_name" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_phone" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_shipping" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_tax_exempt" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerTaxExempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_tax_ids" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerTaxIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_payment_method" Data.Aeson.Types.ToJSON..=)) (invoiceDefaultPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_source" Data.Aeson.Types.ToJSON..=)) (invoiceDefaultSource obj) : ["default_tax_rates" Data.Aeson.Types.ToJSON..= invoiceDefaultTaxRates obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (invoiceDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (invoiceDiscounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("due_date" Data.Aeson.Types.ToJSON..=)) (invoiceDueDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ending_balance" Data.Aeson.Types.ToJSON..=)) (invoiceEndingBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer" Data.Aeson.Types.ToJSON..=)) (invoiceFooter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("hosted_invoice_url" Data.Aeson.Types.ToJSON..=)) (invoiceHostedInvoiceUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (invoiceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_pdf" Data.Aeson.Types.ToJSON..=)) (invoiceInvoicePdf obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_finalization_error" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError obj) : ["lines" Data.Aeson.Types.ToJSON..= invoiceLines obj] : ["livemode" Data.Aeson.Types.ToJSON..= invoiceLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (invoiceMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_payment_attempt" Data.Aeson.Types.ToJSON..=)) (invoiceNextPaymentAttempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("number" Data.Aeson.Types.ToJSON..=)) (invoiceNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("on_behalf_of" Data.Aeson.Types.ToJSON..=)) (invoiceOnBehalfOf obj) : ["paid" Data.Aeson.Types.ToJSON..= invoicePaid obj] : ["paid_out_of_band" Data.Aeson.Types.ToJSON..= invoicePaidOutOfBand obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (invoicePaymentIntent obj) : ["payment_settings" Data.Aeson.Types.ToJSON..= invoicePaymentSettings obj] : ["period_end" Data.Aeson.Types.ToJSON..= invoicePeriodEnd obj] : ["period_start" Data.Aeson.Types.ToJSON..= invoicePeriodStart obj] : ["post_payment_credit_notes_amount" Data.Aeson.Types.ToJSON..= invoicePostPaymentCreditNotesAmount obj] : ["pre_payment_credit_notes_amount" Data.Aeson.Types.ToJSON..= invoicePrePaymentCreditNotesAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quote" Data.Aeson.Types.ToJSON..=)) (invoiceQuote obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt_number" Data.Aeson.Types.ToJSON..=)) (invoiceReceiptNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("rendering_options" Data.Aeson.Types.ToJSON..=)) (invoiceRenderingOptions obj) : ["starting_balance" Data.Aeson.Types.ToJSON..= invoiceStartingBalance obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (invoiceStatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (invoiceStatus obj) : ["status_transitions" Data.Aeson.Types.ToJSON..= invoiceStatusTransitions obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (invoiceSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_proration_date" Data.Aeson.Types.ToJSON..=)) (invoiceSubscriptionProrationDate obj) : ["subtotal" Data.Aeson.Types.ToJSON..= invoiceSubtotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subtotal_excluding_tax" Data.Aeson.Types.ToJSON..=)) (invoiceSubtotalExcludingTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (invoiceTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (invoiceTestClock obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("threshold_reason" Data.Aeson.Types.ToJSON..=)) (invoiceThresholdReason obj) : ["total" Data.Aeson.Types.ToJSON..= invoiceTotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_discount_amounts" Data.Aeson.Types.ToJSON..=)) (invoiceTotalDiscountAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_excluding_tax" Data.Aeson.Types.ToJSON..=)) (invoiceTotalExcludingTax obj) : ["total_tax_amounts" Data.Aeson.Types.ToJSON..= invoiceTotalTaxAmounts obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_data" Data.Aeson.Types.ToJSON..=)) (invoiceTransferData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhooks_delivered_at" Data.Aeson.Types.ToJSON..=)) (invoiceWebhooksDeliveredAt obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "invoice"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_country" Data.Aeson.Types.ToJSON..=)) (invoiceAccountCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_name" Data.Aeson.Types.ToJSON..=)) (invoiceAccountName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_tax_ids" Data.Aeson.Types.ToJSON..=)) (invoiceAccountTaxIds obj) : ["amount_due" Data.Aeson.Types.ToJSON..= invoiceAmountDue obj] : ["amount_paid" Data.Aeson.Types.ToJSON..= invoiceAmountPaid obj] : ["amount_remaining" Data.Aeson.Types.ToJSON..= invoiceAmountRemaining obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application" Data.Aeson.Types.ToJSON..=)) (invoiceApplication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application_fee_amount" Data.Aeson.Types.ToJSON..=)) (invoiceApplicationFeeAmount obj) : ["attempt_count" Data.Aeson.Types.ToJSON..= invoiceAttemptCount obj] : ["attempted" Data.Aeson.Types.ToJSON..= invoiceAttempted obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("auto_advance" Data.Aeson.Types.ToJSON..=)) (invoiceAutoAdvance obj) : ["automatic_tax" Data.Aeson.Types.ToJSON..= invoiceAutomaticTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_reason" Data.Aeson.Types.ToJSON..=)) (invoiceBillingReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (invoiceCharge obj) : ["collection_method" Data.Aeson.Types.ToJSON..= invoiceCollectionMethod obj] : ["created" Data.Aeson.Types.ToJSON..= invoiceCreated obj] : ["currency" Data.Aeson.Types.ToJSON..= invoiceCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("custom_fields" Data.Aeson.Types.ToJSON..=)) (invoiceCustomFields obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (invoiceCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_address" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_name" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_phone" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_shipping" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_tax_exempt" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerTaxExempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_tax_ids" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerTaxIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_payment_method" Data.Aeson.Types.ToJSON..=)) (invoiceDefaultPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_source" Data.Aeson.Types.ToJSON..=)) (invoiceDefaultSource obj) : ["default_tax_rates" Data.Aeson.Types.ToJSON..= invoiceDefaultTaxRates obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (invoiceDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (invoiceDiscounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("due_date" Data.Aeson.Types.ToJSON..=)) (invoiceDueDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ending_balance" Data.Aeson.Types.ToJSON..=)) (invoiceEndingBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("footer" Data.Aeson.Types.ToJSON..=)) (invoiceFooter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("hosted_invoice_url" Data.Aeson.Types.ToJSON..=)) (invoiceHostedInvoiceUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (invoiceId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_pdf" Data.Aeson.Types.ToJSON..=)) (invoiceInvoicePdf obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_finalization_error" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError obj) : ["lines" Data.Aeson.Types.ToJSON..= invoiceLines obj] : ["livemode" Data.Aeson.Types.ToJSON..= invoiceLivemode obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (invoiceMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_payment_attempt" Data.Aeson.Types.ToJSON..=)) (invoiceNextPaymentAttempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("number" Data.Aeson.Types.ToJSON..=)) (invoiceNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("on_behalf_of" Data.Aeson.Types.ToJSON..=)) (invoiceOnBehalfOf obj) : ["paid" Data.Aeson.Types.ToJSON..= invoicePaid obj] : ["paid_out_of_band" Data.Aeson.Types.ToJSON..= invoicePaidOutOfBand obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (invoicePaymentIntent obj) : ["payment_settings" Data.Aeson.Types.ToJSON..= invoicePaymentSettings obj] : ["period_end" Data.Aeson.Types.ToJSON..= invoicePeriodEnd obj] : ["period_start" Data.Aeson.Types.ToJSON..= invoicePeriodStart obj] : ["post_payment_credit_notes_amount" Data.Aeson.Types.ToJSON..= invoicePostPaymentCreditNotesAmount obj] : ["pre_payment_credit_notes_amount" Data.Aeson.Types.ToJSON..= invoicePrePaymentCreditNotesAmount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quote" Data.Aeson.Types.ToJSON..=)) (invoiceQuote obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt_number" Data.Aeson.Types.ToJSON..=)) (invoiceReceiptNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("rendering_options" Data.Aeson.Types.ToJSON..=)) (invoiceRenderingOptions obj) : ["starting_balance" Data.Aeson.Types.ToJSON..= invoiceStartingBalance obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (invoiceStatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (invoiceStatus obj) : ["status_transitions" Data.Aeson.Types.ToJSON..= invoiceStatusTransitions obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (invoiceSubscription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription_proration_date" Data.Aeson.Types.ToJSON..=)) (invoiceSubscriptionProrationDate obj) : ["subtotal" Data.Aeson.Types.ToJSON..= invoiceSubtotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subtotal_excluding_tax" Data.Aeson.Types.ToJSON..=)) (invoiceSubtotalExcludingTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (invoiceTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (invoiceTestClock obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("threshold_reason" Data.Aeson.Types.ToJSON..=)) (invoiceThresholdReason obj) : ["total" Data.Aeson.Types.ToJSON..= invoiceTotal obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_discount_amounts" Data.Aeson.Types.ToJSON..=)) (invoiceTotalDiscountAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total_excluding_tax" Data.Aeson.Types.ToJSON..=)) (invoiceTotalExcludingTax obj) : ["total_tax_amounts" Data.Aeson.Types.ToJSON..= invoiceTotalTaxAmounts obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_data" Data.Aeson.Types.ToJSON..=)) (invoiceTransferData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("webhooks_delivered_at" Data.Aeson.Types.ToJSON..=)) (invoiceWebhooksDeliveredAt obj) : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "invoice"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Invoice
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Invoice" (\obj -> ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure Invoice GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_tax_ids")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_paid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_remaining")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "application")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "application_fee_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "attempt_count")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "attempted")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "auto_advance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "automatic_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "collection_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_tax_ids")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "default_tax_rates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "due_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ending_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "footer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "hosted_invoice_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_pdf")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_finalization_error")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "lines")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "next_payment_attempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "on_behalf_of")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "paid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "paid_out_of_band")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "period_end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "period_start")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "post_payment_credit_notes_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pre_payment_credit_notes_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quote")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receipt_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "rendering_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "starting_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "status_transitions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription_proration_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "subtotal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subtotal_excluding_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "test_clock")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "threshold_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "total_discount_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "total_excluding_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "total_tax_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfer_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "webhooks_delivered_at"))
-- | Create a new 'Invoice' with all required fields.
mkInvoice :: GHC.Types.Int -- ^ 'invoiceAmountDue'
  -> GHC.Types.Int -- ^ 'invoiceAmountPaid'
  -> GHC.Types.Int -- ^ 'invoiceAmountRemaining'
  -> GHC.Types.Int -- ^ 'invoiceAttemptCount'
  -> GHC.Types.Bool -- ^ 'invoiceAttempted'
  -> AutomaticTax -- ^ 'invoiceAutomaticTax'
  -> InvoiceCollectionMethod' -- ^ 'invoiceCollectionMethod'
  -> GHC.Types.Int -- ^ 'invoiceCreated'
  -> Data.Text.Internal.Text -- ^ 'invoiceCurrency'
  -> [TaxRate] -- ^ 'invoiceDefaultTaxRates'
  -> InvoiceLines' -- ^ 'invoiceLines'
  -> GHC.Types.Bool -- ^ 'invoiceLivemode'
  -> GHC.Types.Bool -- ^ 'invoicePaid'
  -> GHC.Types.Bool -- ^ 'invoicePaidOutOfBand'
  -> InvoicesPaymentSettings -- ^ 'invoicePaymentSettings'
  -> GHC.Types.Int -- ^ 'invoicePeriodEnd'
  -> GHC.Types.Int -- ^ 'invoicePeriodStart'
  -> GHC.Types.Int -- ^ 'invoicePostPaymentCreditNotesAmount'
  -> GHC.Types.Int -- ^ 'invoicePrePaymentCreditNotesAmount'
  -> GHC.Types.Int -- ^ 'invoiceStartingBalance'
  -> InvoicesStatusTransitions -- ^ 'invoiceStatusTransitions'
  -> GHC.Types.Int -- ^ 'invoiceSubtotal'
  -> GHC.Types.Int -- ^ 'invoiceTotal'
  -> [InvoiceTaxAmount] -- ^ 'invoiceTotalTaxAmounts'
  -> Invoice
mkInvoice invoiceAmountDue invoiceAmountPaid invoiceAmountRemaining invoiceAttemptCount invoiceAttempted invoiceAutomaticTax invoiceCollectionMethod invoiceCreated invoiceCurrency invoiceDefaultTaxRates invoiceLines invoiceLivemode invoicePaid invoicePaidOutOfBand invoicePaymentSettings invoicePeriodEnd invoicePeriodStart invoicePostPaymentCreditNotesAmount invoicePrePaymentCreditNotesAmount invoiceStartingBalance invoiceStatusTransitions invoiceSubtotal invoiceTotal invoiceTotalTaxAmounts = Invoice{invoiceAccountCountry = GHC.Maybe.Nothing,
invoiceAccountName = GHC.Maybe.Nothing,
invoiceAccountTaxIds = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoiceAmountDue = invoiceAmountDue,
invoiceAmountPaid = invoiceAmountPaid,
invoiceAmountRemaining = invoiceAmountRemaining,
invoiceApplication = GHC.Maybe.Nothing,
invoiceApplicationFeeAmount = GHC.Maybe.Nothing,
invoiceAttemptCount = invoiceAttemptCount,
invoiceAttempted = invoiceAttempted,
invoiceAutoAdvance = GHC.Maybe.Nothing,
invoiceAutomaticTax = invoiceAutomaticTax,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoiceBillingReason = GHC.Maybe.Nothing,
invoiceCharge = GHC.Maybe.Nothing,
invoiceCollectionMethod = invoiceCollectionMethod,
invoiceCreated = invoiceCreated,
invoiceCurrency = invoiceCurrency,
invoiceCustomFields = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoiceCustomer = GHC.Maybe.Nothing,
invoiceCustomerAddress = GHC.Maybe.Nothing,
invoiceCustomerEmail = GHC.Maybe.Nothing,
invoiceCustomerName = GHC.Maybe.Nothing,
invoiceCustomerPhone = GHC.Maybe.Nothing,
invoiceCustomerShipping = GHC.Maybe.Nothing,
invoiceCustomerTaxExempt = GHC.Maybe.Nothing,
invoiceCustomerTaxIds = GHC.Maybe.Nothing,
invoiceDefaultPaymentMethod = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoiceDefaultSource = GHC.Maybe.Nothing,
invoiceDefaultTaxRates = invoiceDefaultTaxRates,
invoiceDescription = GHC.Maybe.Nothing,
invoiceDiscount = GHC.Maybe.Nothing,
invoiceDiscounts = GHC.Maybe.Nothing,
invoiceDueDate = GHC.Maybe.Nothing,
invoiceEndingBalance = GHC.Maybe.Nothing,
invoiceFooter = GHC.Maybe.Nothing,
invoiceHostedInvoiceUrl = GHC.Maybe.Nothing,
invoiceId = GHC.Maybe.Nothing,
invoiceInvoicePdf = GHC.Maybe.Nothing,
invoiceLastFinalizationError = GHC.Maybe.Nothing,
invoiceLines = invoiceLines,
invoiceLivemode = invoiceLivemode,
invoiceMetadata = GHC.Maybe.Nothing,
invoiceNextPaymentAttempt = GHC.Maybe.Nothing,
invoiceNumber = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoiceOnBehalfOf = GHC.Maybe.Nothing,
invoicePaid = invoicePaid,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoicePaidOutOfBand = invoicePaidOutOfBand,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoicePaymentIntent = GHC.Maybe.Nothing,
invoicePaymentSettings = invoicePaymentSettings,
invoicePeriodEnd = invoicePeriodEnd,
invoicePeriodStart = invoicePeriodStart,
invoicePostPaymentCreditNotesAmount = invoicePostPaymentCreditNotesAmount,
invoicePrePaymentCreditNotesAmount = invoicePrePaymentCreditNotesAmount,
invoiceQuote = GHC.Maybe.Nothing,
invoiceReceiptNumber = GHC.Maybe.Nothing,
invoiceRenderingOptions = GHC.Maybe.Nothing,
invoiceStartingBalance = invoiceStartingBalance,
invoiceStatementDescriptor = GHC.Maybe.Nothing,
invoiceStatus = GHC.Maybe.Nothing,
invoiceStatusTransitions = invoiceStatusTransitions,
invoiceSubscription = GHC.Maybe.Nothing,
invoiceSubscriptionProrationDate = GHC.Maybe.Nothing,
invoiceSubtotal = invoiceSubtotal,
invoiceSubtotalExcludingTax = GHC.Maybe.Nothing,
invoiceTax = GHC.Maybe.Nothing,
invoiceTestClock = GHC.Maybe.Nothing,
invoiceThresholdReason = GHC.Maybe.Nothing,
invoiceTotal = invoiceTotal,
invoiceTotalDiscountAmounts = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         invoiceTotalExcludingTax = GHC.Maybe.Nothing,
invoiceTotalTaxAmounts = invoiceTotalTaxAmounts,
invoiceTransferData = GHC.Maybe.Nothing,
invoiceWebhooksDeliveredAt = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.account_tax_ids.items.anyOf@ in the specification.
-- 
-- 
data InvoiceAccountTaxIds'NonNullableVariants =
   InvoiceAccountTaxIds'NonNullableText Data.Text.Internal.Text
  | InvoiceAccountTaxIds'NonNullableTaxId TaxId
  | InvoiceAccountTaxIds'NonNullableDeletedTaxId DeletedTaxId
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceAccountTaxIds'NonNullableVariants
    where toJSON (InvoiceAccountTaxIds'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceAccountTaxIds'NonNullableTaxId a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceAccountTaxIds'NonNullableDeletedTaxId a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceAccountTaxIds'NonNullableVariants
    where parseJSON val = case (InvoiceAccountTaxIds'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceAccountTaxIds'NonNullableTaxId Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceAccountTaxIds'NonNullableDeletedTaxId Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.application.anyOf@ in the specification.
-- 
-- ID of the Connect Application that created the invoice.
data InvoiceApplication'NonNullableVariants =
   InvoiceApplication'NonNullableText Data.Text.Internal.Text
  | InvoiceApplication'NonNullableApplication Application
  | InvoiceApplication'NonNullableDeletedApplication DeletedApplication
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceApplication'NonNullableVariants
    where toJSON (InvoiceApplication'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceApplication'NonNullableApplication a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceApplication'NonNullableDeletedApplication a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceApplication'NonNullableVariants
    where parseJSON val = case (InvoiceApplication'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceApplication'NonNullableApplication Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceApplication'NonNullableDeletedApplication Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.invoice.properties.billing_reason@ in the specification.
-- 
-- Indicates the reason why the invoice was created. \`subscription_cycle\` indicates an invoice created by a subscription advancing into a new period. \`subscription_create\` indicates an invoice created due to creating a subscription. \`subscription_update\` indicates an invoice created due to updating a subscription. \`subscription\` is set for all old invoices to indicate either a change to a subscription or a period advancement. \`manual\` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The \`upcoming\` value is reserved for simulated invoices per the upcoming invoice endpoint. \`subscription_threshold\` indicates an invoice created due to a billing threshold being reached.
data InvoiceBillingReason'NonNullable =
   InvoiceBillingReason'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceBillingReason'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceBillingReason'NonNullableEnumAutomaticPendingInvoiceItemInvoice -- ^ Represents the JSON value @"automatic_pending_invoice_item_invoice"@
  | InvoiceBillingReason'NonNullableEnumManual -- ^ Represents the JSON value @"manual"@
  | InvoiceBillingReason'NonNullableEnumQuoteAccept -- ^ Represents the JSON value @"quote_accept"@
  | InvoiceBillingReason'NonNullableEnumSubscription -- ^ Represents the JSON value @"subscription"@
  | InvoiceBillingReason'NonNullableEnumSubscriptionCreate -- ^ Represents the JSON value @"subscription_create"@
  | InvoiceBillingReason'NonNullableEnumSubscriptionCycle -- ^ Represents the JSON value @"subscription_cycle"@
  | InvoiceBillingReason'NonNullableEnumSubscriptionThreshold -- ^ Represents the JSON value @"subscription_threshold"@
  | InvoiceBillingReason'NonNullableEnumSubscriptionUpdate -- ^ Represents the JSON value @"subscription_update"@
  | InvoiceBillingReason'NonNullableEnumUpcoming -- ^ Represents the JSON value @"upcoming"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceBillingReason'NonNullable
    where toJSON (InvoiceBillingReason'NonNullableOther val) = val
          toJSON (InvoiceBillingReason'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceBillingReason'NonNullableEnumAutomaticPendingInvoiceItemInvoice) = "automatic_pending_invoice_item_invoice"
          toJSON (InvoiceBillingReason'NonNullableEnumManual) = "manual"
          toJSON (InvoiceBillingReason'NonNullableEnumQuoteAccept) = "quote_accept"
          toJSON (InvoiceBillingReason'NonNullableEnumSubscription) = "subscription"
          toJSON (InvoiceBillingReason'NonNullableEnumSubscriptionCreate) = "subscription_create"
          toJSON (InvoiceBillingReason'NonNullableEnumSubscriptionCycle) = "subscription_cycle"
          toJSON (InvoiceBillingReason'NonNullableEnumSubscriptionThreshold) = "subscription_threshold"
          toJSON (InvoiceBillingReason'NonNullableEnumSubscriptionUpdate) = "subscription_update"
          toJSON (InvoiceBillingReason'NonNullableEnumUpcoming) = "upcoming"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceBillingReason'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "automatic_pending_invoice_item_invoice" -> InvoiceBillingReason'NonNullableEnumAutomaticPendingInvoiceItemInvoice
                                            | val GHC.Classes.== "manual" -> InvoiceBillingReason'NonNullableEnumManual
                                            | val GHC.Classes.== "quote_accept" -> InvoiceBillingReason'NonNullableEnumQuoteAccept
                                            | val GHC.Classes.== "subscription" -> InvoiceBillingReason'NonNullableEnumSubscription
                                            | val GHC.Classes.== "subscription_create" -> InvoiceBillingReason'NonNullableEnumSubscriptionCreate
                                            | val GHC.Classes.== "subscription_cycle" -> InvoiceBillingReason'NonNullableEnumSubscriptionCycle
                                            | val GHC.Classes.== "subscription_threshold" -> InvoiceBillingReason'NonNullableEnumSubscriptionThreshold
                                            | val GHC.Classes.== "subscription_update" -> InvoiceBillingReason'NonNullableEnumSubscriptionUpdate
                                            | val GHC.Classes.== "upcoming" -> InvoiceBillingReason'NonNullableEnumUpcoming
                                            | GHC.Base.otherwise -> InvoiceBillingReason'NonNullableOther val)
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.charge.anyOf@ in the specification.
-- 
-- ID of the latest charge generated for this invoice, if any.
data InvoiceCharge'NonNullableVariants =
   InvoiceCharge'NonNullableText Data.Text.Internal.Text
  | InvoiceCharge'NonNullableCharge Charge
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceCharge'NonNullableVariants
    where toJSON (InvoiceCharge'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceCharge'NonNullableCharge a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceCharge'NonNullableVariants
    where parseJSON val = case (InvoiceCharge'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceCharge'NonNullableCharge Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.invoice.properties.collection_method@ in the specification.
-- 
-- Either \`charge_automatically\`, or \`send_invoice\`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.
data InvoiceCollectionMethod' =
   InvoiceCollectionMethod'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceCollectionMethod'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceCollectionMethod'EnumChargeAutomatically -- ^ Represents the JSON value @"charge_automatically"@
  | InvoiceCollectionMethod'EnumSendInvoice -- ^ Represents the JSON value @"send_invoice"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceCollectionMethod'
    where toJSON (InvoiceCollectionMethod'Other val) = val
          toJSON (InvoiceCollectionMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceCollectionMethod'EnumChargeAutomatically) = "charge_automatically"
          toJSON (InvoiceCollectionMethod'EnumSendInvoice) = "send_invoice"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceCollectionMethod'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "charge_automatically" -> InvoiceCollectionMethod'EnumChargeAutomatically
                                            | val GHC.Classes.== "send_invoice" -> InvoiceCollectionMethod'EnumSendInvoice
                                            | GHC.Base.otherwise -> InvoiceCollectionMethod'Other val)
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.customer.anyOf@ in the specification.
-- 
-- The ID of the customer who will be billed.
data InvoiceCustomer'NonNullableVariants =
   InvoiceCustomer'NonNullableText Data.Text.Internal.Text
  | InvoiceCustomer'NonNullableCustomer Customer
  | InvoiceCustomer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceCustomer'NonNullableVariants
    where toJSON (InvoiceCustomer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceCustomer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceCustomer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceCustomer'NonNullableVariants
    where parseJSON val = case (InvoiceCustomer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceCustomer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceCustomer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.invoice.properties.customer_address.anyOf@ in the specification.
-- 
-- The customer\\\'s address. Until the invoice is finalized, this field will equal \\\`customer.address\\\`. Once the invoice is finalized, this field will no longer be updated.
data InvoiceCustomerAddress'NonNullable = InvoiceCustomerAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceCustomerAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceCustomerAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceCustomerAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceCustomerAddress'NonNullable" (\obj -> (((((GHC.Base.pure InvoiceCustomerAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'InvoiceCustomerAddress'NonNullable' with all required fields.
mkInvoiceCustomerAddress'NonNullable :: InvoiceCustomerAddress'NonNullable
mkInvoiceCustomerAddress'NonNullable = InvoiceCustomerAddress'NonNullable{invoiceCustomerAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                          invoiceCustomerAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                          invoiceCustomerAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                          invoiceCustomerAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                          invoiceCustomerAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                          invoiceCustomerAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.invoice.properties.customer_shipping.anyOf@ in the specification.
-- 
-- The customer\\\'s shipping information. Until the invoice is finalized, this field will equal \\\`customer.shipping\\\`. Once the invoice is finalized, this field will no longer be updated.
data InvoiceCustomerShipping'NonNullable = InvoiceCustomerShipping'NonNullable {
  -- | address: 
  invoiceCustomerShipping'NonNullableAddress :: (GHC.Maybe.Maybe Address)
  -- | carrier: The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerShipping'NonNullableCarrier :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | name: Recipient name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerShipping'NonNullableName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phone: Recipient phone (including extension).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerShipping'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | tracking_number: The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceCustomerShipping'NonNullableTrackingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceCustomerShipping'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tracking_number" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableTrackingNumber obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tracking_number" Data.Aeson.Types.ToJSON..=)) (invoiceCustomerShipping'NonNullableTrackingNumber obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceCustomerShipping'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceCustomerShipping'NonNullable" (\obj -> ((((GHC.Base.pure InvoiceCustomerShipping'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tracking_number"))
-- | Create a new 'InvoiceCustomerShipping'NonNullable' with all required fields.
mkInvoiceCustomerShipping'NonNullable :: InvoiceCustomerShipping'NonNullable
mkInvoiceCustomerShipping'NonNullable = InvoiceCustomerShipping'NonNullable{invoiceCustomerShipping'NonNullableAddress = GHC.Maybe.Nothing,
                                                                            invoiceCustomerShipping'NonNullableCarrier = GHC.Maybe.Nothing,
                                                                            invoiceCustomerShipping'NonNullableName = GHC.Maybe.Nothing,
                                                                            invoiceCustomerShipping'NonNullablePhone = GHC.Maybe.Nothing,
                                                                            invoiceCustomerShipping'NonNullableTrackingNumber = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.invoice.properties.customer_tax_exempt@ in the specification.
-- 
-- The customer\'s tax exempt status. Until the invoice is finalized, this field will equal \`customer.tax_exempt\`. Once the invoice is finalized, this field will no longer be updated.
data InvoiceCustomerTaxExempt'NonNullable =
   InvoiceCustomerTaxExempt'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceCustomerTaxExempt'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceCustomerTaxExempt'NonNullableEnumExempt -- ^ Represents the JSON value @"exempt"@
  | InvoiceCustomerTaxExempt'NonNullableEnumNone -- ^ Represents the JSON value @"none"@
  | InvoiceCustomerTaxExempt'NonNullableEnumReverse -- ^ Represents the JSON value @"reverse"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceCustomerTaxExempt'NonNullable
    where toJSON (InvoiceCustomerTaxExempt'NonNullableOther val) = val
          toJSON (InvoiceCustomerTaxExempt'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceCustomerTaxExempt'NonNullableEnumExempt) = "exempt"
          toJSON (InvoiceCustomerTaxExempt'NonNullableEnumNone) = "none"
          toJSON (InvoiceCustomerTaxExempt'NonNullableEnumReverse) = "reverse"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceCustomerTaxExempt'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "exempt" -> InvoiceCustomerTaxExempt'NonNullableEnumExempt
                                            | val GHC.Classes.== "none" -> InvoiceCustomerTaxExempt'NonNullableEnumNone
                                            | val GHC.Classes.== "reverse" -> InvoiceCustomerTaxExempt'NonNullableEnumReverse
                                            | GHC.Base.otherwise -> InvoiceCustomerTaxExempt'NonNullableOther val)
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.default_payment_method.anyOf@ in the specification.
-- 
-- ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription\'s default payment method, if any, or to the default payment method in the customer\'s invoice settings.
data InvoiceDefaultPaymentMethod'NonNullableVariants =
   InvoiceDefaultPaymentMethod'NonNullableText Data.Text.Internal.Text
  | InvoiceDefaultPaymentMethod'NonNullablePaymentMethod PaymentMethod
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDefaultPaymentMethod'NonNullableVariants
    where toJSON (InvoiceDefaultPaymentMethod'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDefaultPaymentMethod'NonNullablePaymentMethod a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDefaultPaymentMethod'NonNullableVariants
    where parseJSON val = case (InvoiceDefaultPaymentMethod'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDefaultPaymentMethod'NonNullablePaymentMethod Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.default_source.anyOf@ in the specification.
-- 
-- ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription\'s default source, if any, or to the customer\'s default source.
data InvoiceDefaultSource'NonNullableVariants =
   InvoiceDefaultSource'NonNullableText Data.Text.Internal.Text
  | InvoiceDefaultSource'NonNullableAlipayAccount AlipayAccount
  | InvoiceDefaultSource'NonNullableBankAccount BankAccount
  | InvoiceDefaultSource'NonNullableBitcoinReceiver BitcoinReceiver
  | InvoiceDefaultSource'NonNullableCard Card
  | InvoiceDefaultSource'NonNullableSource Source
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDefaultSource'NonNullableVariants
    where toJSON (InvoiceDefaultSource'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDefaultSource'NonNullableAlipayAccount a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDefaultSource'NonNullableBankAccount a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDefaultSource'NonNullableBitcoinReceiver a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDefaultSource'NonNullableCard a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDefaultSource'NonNullableSource a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDefaultSource'NonNullableVariants
    where parseJSON val = case (InvoiceDefaultSource'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDefaultSource'NonNullableAlipayAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDefaultSource'NonNullableBankAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDefaultSource'NonNullableBitcoinReceiver Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDefaultSource'NonNullableCard Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDefaultSource'NonNullableSource Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched"))))) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.invoice.properties.discount.anyOf@ in the specification.
-- 
-- Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.
data InvoiceDiscount'NonNullable = InvoiceDiscount'NonNullable {
  -- | checkout_session: The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceDiscount'NonNullableCheckoutSession :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | coupon: A coupon contains information about a percent-off or amount-off discount you
  -- might want to apply to a customer. Coupons may be applied to [subscriptions](https:\/\/stripe.com\/docs\/api\#subscriptions), [invoices](https:\/\/stripe.com\/docs\/api\#invoices),
  -- [checkout sessions](https:\/\/stripe.com\/docs\/api\/checkout\/sessions), [quotes](https:\/\/stripe.com\/docs\/api\#quotes), and more. Coupons do not work with conventional one-off [charges](https:\/\/stripe.com\/docs\/api\#create_charge) or [payment intents](https:\/\/stripe.com\/docs\/api\/payment_intents).
  , invoiceDiscount'NonNullableCoupon :: (GHC.Maybe.Maybe Coupon)
  -- | customer: The ID of the customer associated with this discount.
  , invoiceDiscount'NonNullableCustomer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceDiscount'NonNullableCustomer'NonNullableVariants))
  -- | end: If the coupon has a duration of \`repeating\`, the date that this discount will end. If the coupon has a duration of \`once\` or \`forever\`, this attribute will be null.
  , invoiceDiscount'NonNullableEnd :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | id: The ID of the discount object. Discounts cannot be fetched by ID. Use \`expand[]=discounts\` in API calls to expand discount IDs in an array.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceDiscount'NonNullableId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | invoice: The invoice that the discount\'s coupon was applied to, if it was applied directly to a particular invoice.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceDiscount'NonNullableInvoice :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | invoice_item: The invoice item \`id\` (or invoice line item \`id\` for invoice line items of type=\'subscription\') that the discount\'s coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceDiscount'NonNullableInvoiceItem :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | object: String representing the object\'s type. Objects of the same type share the same value.
  , invoiceDiscount'NonNullableObject :: (GHC.Maybe.Maybe InvoiceDiscount'NonNullableObject')
  -- | promotion_code: The promotion code applied to create this discount.
  , invoiceDiscount'NonNullablePromotionCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceDiscount'NonNullablePromotionCode'NonNullableVariants))
  -- | start: Date that the coupon was applied.
  , invoiceDiscount'NonNullableStart :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | subscription: The subscription that this coupon is applied to, if it is applied to a particular subscription.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceDiscount'NonNullableSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDiscount'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("checkout_session" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableCheckoutSession obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullablePromotionCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableStart obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableSubscription obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("checkout_session" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableCheckoutSession obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullablePromotionCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableStart obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (invoiceDiscount'NonNullableSubscription obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDiscount'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceDiscount'NonNullable" (\obj -> ((((((((((GHC.Base.pure InvoiceDiscount'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "checkout_session")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotion_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "start")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription"))
-- | Create a new 'InvoiceDiscount'NonNullable' with all required fields.
mkInvoiceDiscount'NonNullable :: InvoiceDiscount'NonNullable
mkInvoiceDiscount'NonNullable = InvoiceDiscount'NonNullable{invoiceDiscount'NonNullableCheckoutSession = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableCoupon = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableCustomer = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableEnd = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableId = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableInvoice = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableInvoiceItem = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableObject = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullablePromotionCode = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableStart = GHC.Maybe.Nothing,
                                                            invoiceDiscount'NonNullableSubscription = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.discount.anyOf.properties.customer.anyOf@ in the specification.
-- 
-- The ID of the customer associated with this discount.
data InvoiceDiscount'NonNullableCustomer'NonNullableVariants =
   InvoiceDiscount'NonNullableCustomer'NonNullableText Data.Text.Internal.Text
  | InvoiceDiscount'NonNullableCustomer'NonNullableCustomer Customer
  | InvoiceDiscount'NonNullableCustomer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDiscount'NonNullableCustomer'NonNullableVariants
    where toJSON (InvoiceDiscount'NonNullableCustomer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDiscount'NonNullableCustomer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDiscount'NonNullableCustomer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDiscount'NonNullableCustomer'NonNullableVariants
    where parseJSON val = case (InvoiceDiscount'NonNullableCustomer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDiscount'NonNullableCustomer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDiscount'NonNullableCustomer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.invoice.properties.discount.anyOf.properties.object@ in the specification.
-- 
-- String representing the object\'s type. Objects of the same type share the same value.
data InvoiceDiscount'NonNullableObject' =
   InvoiceDiscount'NonNullableObject'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceDiscount'NonNullableObject'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceDiscount'NonNullableObject'EnumDiscount -- ^ Represents the JSON value @"discount"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDiscount'NonNullableObject'
    where toJSON (InvoiceDiscount'NonNullableObject'Other val) = val
          toJSON (InvoiceDiscount'NonNullableObject'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceDiscount'NonNullableObject'EnumDiscount) = "discount"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDiscount'NonNullableObject'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "discount" -> InvoiceDiscount'NonNullableObject'EnumDiscount
                                            | GHC.Base.otherwise -> InvoiceDiscount'NonNullableObject'Other val)
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.discount.anyOf.properties.promotion_code.anyOf@ in the specification.
-- 
-- The promotion code applied to create this discount.
data InvoiceDiscount'NonNullablePromotionCode'NonNullableVariants =
   InvoiceDiscount'NonNullablePromotionCode'NonNullableText Data.Text.Internal.Text
  | InvoiceDiscount'NonNullablePromotionCode'NonNullablePromotionCode PromotionCode
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDiscount'NonNullablePromotionCode'NonNullableVariants
    where toJSON (InvoiceDiscount'NonNullablePromotionCode'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDiscount'NonNullablePromotionCode'NonNullablePromotionCode a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDiscount'NonNullablePromotionCode'NonNullableVariants
    where parseJSON val = case (InvoiceDiscount'NonNullablePromotionCode'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDiscount'NonNullablePromotionCode'NonNullablePromotionCode Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.discounts.items.anyOf@ in the specification.
-- 
-- 
data InvoiceDiscounts'NonNullableVariants =
   InvoiceDiscounts'NonNullableText Data.Text.Internal.Text
  | InvoiceDiscounts'NonNullableDiscount Discount
  | InvoiceDiscounts'NonNullableDeletedDiscount DeletedDiscount
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceDiscounts'NonNullableVariants
    where toJSON (InvoiceDiscounts'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDiscounts'NonNullableDiscount a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceDiscounts'NonNullableDeletedDiscount a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceDiscounts'NonNullableVariants
    where parseJSON val = case (InvoiceDiscounts'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDiscounts'NonNullableDiscount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceDiscounts'NonNullableDeletedDiscount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf@ in the specification.
-- 
-- The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.
data InvoiceLastFinalizationError'NonNullable = InvoiceLastFinalizationError'NonNullable {
  -- | charge: For card errors, the ID of the failed charge.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceLastFinalizationError'NonNullableCharge :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | code: For some errors that could be handled programmatically, a short string indicating the [error code](https:\/\/stripe.com\/docs\/error-codes) reported.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | decline_code: For card errors resulting from a card issuer decline, a short string indicating the [card issuer\'s reason for the decline](https:\/\/stripe.com\/docs\/declines\#issuer-declines) if they provide one.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableDeclineCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | doc_url: A URL to more information about the [error code](https:\/\/stripe.com\/docs\/error-codes) reported.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableDocUrl :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | message: A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 40000
  , invoiceLastFinalizationError'NonNullableMessage :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | param: If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableParam :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | payment_intent: A PaymentIntent guides you through the process of collecting a payment from your customer.
  -- We recommend that you create exactly one PaymentIntent for each order or
  -- customer session in your system. You can reference the PaymentIntent later to
  -- see the history of payment attempts for a particular session.
  -- 
  -- A PaymentIntent transitions through
  -- [multiple statuses](https:\/\/stripe.com\/docs\/payments\/intents\#intent-statuses)
  -- throughout its lifetime as it interfaces with Stripe.js to perform
  -- authentication flows and ultimately creates at most one successful charge.
  -- 
  -- Related guide: [Payment Intents API](https:\/\/stripe.com\/docs\/payments\/payment-intents).
  , invoiceLastFinalizationError'NonNullablePaymentIntent :: (GHC.Maybe.Maybe PaymentIntent)
  -- | payment_method: PaymentMethod objects represent your customer\'s payment instruments.
  -- You can use them with [PaymentIntents](https:\/\/stripe.com\/docs\/payments\/payment-intents) to collect payments or save them to
  -- Customer objects to store instrument details for future payments.
  -- 
  -- Related guides: [Payment Methods](https:\/\/stripe.com\/docs\/payments\/payment-methods) and [More Payment Scenarios](https:\/\/stripe.com\/docs\/payments\/more-payment-scenarios).
  , invoiceLastFinalizationError'NonNullablePaymentMethod :: (GHC.Maybe.Maybe PaymentMethod)
  -- | payment_method_type: If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullablePaymentMethodType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | setup_intent: A SetupIntent guides you through the process of setting up and saving a customer\'s payment credentials for future payments.
  -- For example, you could use a SetupIntent to set up and save your customer\'s card without immediately collecting a payment.
  -- Later, you can use [PaymentIntents](https:\/\/stripe.com\/docs\/api\#payment_intents) to drive the payment flow.
  -- 
  -- Create a SetupIntent as soon as you\'re ready to collect your customer\'s payment credentials.
  -- Do not maintain long-lived, unconfirmed SetupIntents as they may no longer be valid.
  -- The SetupIntent then transitions through multiple [statuses](https:\/\/stripe.com\/docs\/payments\/intents\#intent-statuses) as it guides
  -- you through the setup process.
  -- 
  -- Successful SetupIntents result in payment credentials that are optimized for future payments.
  -- For example, cardholders in [certain regions](\/guides\/strong-customer-authentication) may need to be run through
  -- [Strong Customer Authentication](https:\/\/stripe.com\/docs\/strong-customer-authentication) at the time of payment method collection
  -- in order to streamline later [off-session payments](https:\/\/stripe.com\/docs\/payments\/setup-intents).
  -- If the SetupIntent is used with a [Customer](https:\/\/stripe.com\/docs\/api\#setup_intent_object-customer), upon success,
  -- it will automatically attach the resulting payment method to that Customer.
  -- We recommend using SetupIntents or [setup_future_usage](https:\/\/stripe.com\/docs\/api\#payment_intent_object-setup_future_usage) on
  -- PaymentIntents to save payment methods in order to prevent saving invalid or unoptimized payment methods.
  -- 
  -- By using SetupIntents, you ensure that your customers experience the minimum set of required friction,
  -- even as regulations change over time.
  -- 
  -- Related guide: [Setup Intents API](https:\/\/stripe.com\/docs\/payments\/setup-intents).
  , invoiceLastFinalizationError'NonNullableSetupIntent :: (GHC.Maybe.Maybe SetupIntent)
  -- | source: The source object for errors returned on a request involving a source.
  , invoiceLastFinalizationError'NonNullableSource :: (GHC.Maybe.Maybe InvoiceLastFinalizationError'NonNullableSource')
  -- | type: The type of error returned. One of \`api_error\`, \`card_error\`, \`idempotency_error\`, or \`invalid_request_error\`
  , invoiceLastFinalizationError'NonNullableType :: (GHC.Maybe.Maybe InvoiceLastFinalizationError'NonNullableType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableCharge obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableDeclineCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("doc_url" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableDocUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("message" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableMessage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("param" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableParam obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullablePaymentIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullablePaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullablePaymentMethodType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_intent" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSetupIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableType obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charge" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableCharge obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableDeclineCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("doc_url" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableDocUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("message" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableMessage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("param" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableParam obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_intent" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullablePaymentIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullablePaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullablePaymentMethodType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("setup_intent" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSetupIntent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableType obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceLastFinalizationError'NonNullable" (\obj -> (((((((((((GHC.Base.pure InvoiceLastFinalizationError'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charge")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "decline_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "doc_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "param")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "setup_intent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))
-- | Create a new 'InvoiceLastFinalizationError'NonNullable' with all required fields.
mkInvoiceLastFinalizationError'NonNullable :: InvoiceLastFinalizationError'NonNullable
mkInvoiceLastFinalizationError'NonNullable = InvoiceLastFinalizationError'NonNullable{invoiceLastFinalizationError'NonNullableCharge = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableCode = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableDeclineCode = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableDocUrl = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableMessage = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableParam = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullablePaymentIntent = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullablePaymentMethod = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullablePaymentMethodType = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableSetupIntent = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableSource = GHC.Maybe.Nothing,
                                                                                      invoiceLastFinalizationError'NonNullableType = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf@ in the specification.
-- 
-- The source object for errors returned on a request involving a source.
data InvoiceLastFinalizationError'NonNullableSource' = InvoiceLastFinalizationError'NonNullableSource' {
  -- | account: The ID of the account that the bank account is associated with.
  invoiceLastFinalizationError'NonNullableSource'Account :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableVariants))
  -- | account_holder_name: The name of the person or business that owns the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AccountHolderName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_holder_type: The type of entity that holds the account. This can be either \`individual\` or \`company\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_type: The bank account type. This can only be \`checking\` or \`savings\` in most countries. In Japan, this can only be \`futsu\` or \`toza\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | ach_credit_transfer
  , invoiceLastFinalizationError'NonNullableSource'AchCreditTransfer :: (GHC.Maybe.Maybe SourceTypeAchCreditTransfer)
  -- | ach_debit
  , invoiceLastFinalizationError'NonNullableSource'AchDebit :: (GHC.Maybe.Maybe SourceTypeAchDebit)
  -- | acss_debit
  , invoiceLastFinalizationError'NonNullableSource'AcssDebit :: (GHC.Maybe.Maybe SourceTypeAcssDebit)
  -- | address_city: City\/District\/Suburb\/Town\/Village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_country: Billing address country, if provided when creating card.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line1: Address line 1 (Street address\/PO Box\/Company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line1_check: If \`address_line1\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressLine1Check :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line2: Address line 2 (Apartment\/Suite\/Unit\/Building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_state: State\/County\/Province\/Region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_zip: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressZip :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_zip_check: If \`address_zip\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'AddressZipCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | alipay
  , invoiceLastFinalizationError'NonNullableSource'Alipay :: (GHC.Maybe.Maybe SourceTypeAlipay)
  -- | amount: A positive integer in the smallest currency unit (that is, 100 cents for \$1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for \`single_use\` sources.
  , invoiceLastFinalizationError'NonNullableSource'Amount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | au_becs_debit
  , invoiceLastFinalizationError'NonNullableSource'AuBecsDebit :: (GHC.Maybe.Maybe SourceTypeAuBecsDebit)
  -- | available_payout_methods: A set of available payout methods for this bank account. Only values from this set should be passed as the \`method\` when creating a payout.
  , invoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullable])))
  -- | bancontact
  , invoiceLastFinalizationError'NonNullableSource'Bancontact :: (GHC.Maybe.Maybe SourceTypeBancontact)
  -- | bank_name: Name of the bank associated with the routing number (e.g., \`WELLS FARGO\`).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'BankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | brand: Card brand. Can be \`American Express\`, \`Diners Club\`, \`Discover\`, \`JCB\`, \`MasterCard\`, \`UnionPay\`, \`Visa\`, or \`Unknown\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Brand :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | card
  , invoiceLastFinalizationError'NonNullableSource'Card :: (GHC.Maybe.Maybe SourceTypeCard)
  -- | card_present
  , invoiceLastFinalizationError'NonNullableSource'CardPresent :: (GHC.Maybe.Maybe SourceTypeCardPresent)
  -- | client_secret: The client secret of the source. Used for client-side retrieval using a publishable key.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'ClientSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | code_verification: 
  , invoiceLastFinalizationError'NonNullableSource'CodeVerification :: (GHC.Maybe.Maybe SourceCodeVerificationFlow)
  -- | country: Two-letter ISO code representing the country the bank account is located in.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
  , invoiceLastFinalizationError'NonNullableSource'Created :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/payouts) paid out to the bank account.
  , invoiceLastFinalizationError'NonNullableSource'Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer: The ID of the customer that the bank account is associated with.
  , invoiceLastFinalizationError'NonNullableSource'Customer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableVariants))
  -- | cvc_check: If a CVC was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`. A result of unchecked indicates that CVC was provided but hasn\'t been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https:\/\/support.stripe.com\/questions\/check-if-a-card-is-valid-without-a-charge).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'CvcCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | default_for_currency: Whether this bank account is the default external account for its currency.
  , invoiceLastFinalizationError'NonNullableSource'DefaultForCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool))
  -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'DynamicLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | eps
  , invoiceLastFinalizationError'NonNullableSource'Eps :: (GHC.Maybe.Maybe SourceTypeEps)
  -- | exp_month: Two-digit number representing the card\'s expiration month.
  , invoiceLastFinalizationError'NonNullableSource'ExpMonth :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | exp_year: Four-digit number representing the card\'s expiration year.
  , invoiceLastFinalizationError'NonNullableSource'ExpYear :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | fingerprint: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Fingerprint :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | flow: The authentication \`flow\` of the source. \`flow\` is one of \`redirect\`, \`receiver\`, \`code_verification\`, \`none\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Flow :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | funding: Card funding type. Can be \`credit\`, \`debit\`, \`prepaid\`, or \`unknown\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Funding :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | giropay
  , invoiceLastFinalizationError'NonNullableSource'Giropay :: (GHC.Maybe.Maybe SourceTypeGiropay)
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | ideal
  , invoiceLastFinalizationError'NonNullableSource'Ideal :: (GHC.Maybe.Maybe SourceTypeIdeal)
  -- | klarna
  , invoiceLastFinalizationError'NonNullableSource'Klarna :: (GHC.Maybe.Maybe SourceTypeKlarna)
  -- | last4: The last four digits of the bank account number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Last4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , invoiceLastFinalizationError'NonNullableSource'Livemode :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , invoiceLastFinalizationError'NonNullableSource'Metadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object))
  -- | multibanco
  , invoiceLastFinalizationError'NonNullableSource'Multibanco :: (GHC.Maybe.Maybe SourceTypeMultibanco)
  -- | name: Cardholder name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | object: String representing the object\'s type. Objects of the same type share the same value.
  , invoiceLastFinalizationError'NonNullableSource'Object :: (GHC.Maybe.Maybe InvoiceLastFinalizationError'NonNullableSource'Object')
  -- | owner: Information about the owner of the payment instrument that may be used or required by particular source types.
  , invoiceLastFinalizationError'NonNullableSource'Owner :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable))
  -- | p24
  , invoiceLastFinalizationError'NonNullableSource'P24 :: (GHC.Maybe.Maybe SourceTypeP24)
  -- | receiver: 
  , invoiceLastFinalizationError'NonNullableSource'Receiver :: (GHC.Maybe.Maybe SourceReceiverFlow)
  -- | recipient: The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
  , invoiceLastFinalizationError'NonNullableSource'Recipient :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableVariants))
  -- | redirect: 
  , invoiceLastFinalizationError'NonNullableSource'Redirect :: (GHC.Maybe.Maybe SourceRedirectFlow)
  -- | routing_number: The routing transit number for the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'RoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | sepa_debit
  , invoiceLastFinalizationError'NonNullableSource'SepaDebit :: (GHC.Maybe.Maybe SourceTypeSepaDebit)
  -- | sofort
  , invoiceLastFinalizationError'NonNullableSource'Sofort :: (GHC.Maybe.Maybe SourceTypeSofort)
  -- | source_order: 
  , invoiceLastFinalizationError'NonNullableSource'SourceOrder :: (GHC.Maybe.Maybe SourceOrder)
  -- | statement_descriptor: Extra information about a source. This will appear on your customer\'s statement every time you charge the source.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'StatementDescriptor :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | status: For bank accounts, possible values are \`new\`, \`validated\`, \`verified\`, \`verification_failed\`, or \`errored\`. A bank account that hasn\'t had any activity or validation performed is \`new\`. If Stripe can determine that the bank account exists, its status will be \`validated\`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be \`verified\`. If the verification failed for any reason, such as microdeposit failure, the status will be \`verification_failed\`. If a transfer sent to this bank account fails, we\'ll set the status to \`errored\` and will not continue to send transfers until the bank details are updated.
  -- 
  -- For external accounts, possible values are \`new\` and \`errored\`. Validations aren\'t run against external accounts because they\'re only used for payouts. This means the other statuses don\'t apply. If a transfer fails, the status is set to \`errored\` and transfers are stopped until account details are updated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | three_d_secure
  , invoiceLastFinalizationError'NonNullableSource'ThreeDSecure :: (GHC.Maybe.Maybe SourceTypeThreeDSecure)
  -- | tokenization_method: If the card number is tokenized, this is the method that was used. Can be \`android_pay\` (includes Google Pay), \`apple_pay\`, \`masterpass\`, \`visa_checkout\`, or null.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'TokenizationMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | type: The \`type\` of the source. The \`type\` is a payment method, one of \`ach_credit_transfer\`, \`ach_debit\`, \`alipay\`, \`bancontact\`, \`card\`, \`card_present\`, \`eps\`, \`giropay\`, \`ideal\`, \`multibanco\`, \`klarna\`, \`p24\`, \`sepa_debit\`, \`sofort\`, \`three_d_secure\`, or \`wechat\`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https:\/\/stripe.com\/docs\/sources) used.
  , invoiceLastFinalizationError'NonNullableSource'Type :: (GHC.Maybe.Maybe InvoiceLastFinalizationError'NonNullableSource'Type')
  -- | usage: Either \`reusable\` or \`single_use\`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Usage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | wechat
  , invoiceLastFinalizationError'NonNullableSource'Wechat :: (GHC.Maybe.Maybe SourceTypeWechat)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Wechat obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Wechat obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceLastFinalizationError'NonNullableSource'" (\obj -> ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure InvoiceLastFinalizationError'NonNullableSource' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_credit_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available_payout_methods")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "code_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_for_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "multibanco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receiver")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "recipient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "redirect")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source_order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "three_d_secure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tokenization_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat"))
-- | Create a new 'InvoiceLastFinalizationError'NonNullableSource'' with all required fields.
mkInvoiceLastFinalizationError'NonNullableSource' :: InvoiceLastFinalizationError'NonNullableSource'
mkInvoiceLastFinalizationError'NonNullableSource' = InvoiceLastFinalizationError'NonNullableSource'{invoiceLastFinalizationError'NonNullableSource'Account = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AccountHolderName = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AccountHolderType = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AccountType = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AchCreditTransfer = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AchDebit = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AcssDebit = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressCity = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressCountry = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressLine1 = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressLine1Check = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressLine2 = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressState = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressZip = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AddressZipCheck = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Alipay = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Amount = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AuBecsDebit = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Bancontact = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'BankName = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Brand = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Card = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'CardPresent = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'ClientSecret = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'CodeVerification = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Country = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Created = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Currency = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Customer = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'CvcCheck = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'DefaultForCurrency = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'DynamicLast4 = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Eps = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'ExpMonth = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'ExpYear = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Fingerprint = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Flow = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Funding = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Giropay = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Id = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Ideal = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Klarna = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Last4 = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Livemode = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Metadata = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Multibanco = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Name = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Object = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Owner = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'P24 = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Receiver = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Recipient = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Redirect = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'RoutingNumber = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'SepaDebit = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Sofort = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'SourceOrder = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'StatementDescriptor = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Status = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'ThreeDSecure = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'TokenizationMethod = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Type = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Usage = GHC.Maybe.Nothing,
                                                                                                    invoiceLastFinalizationError'NonNullableSource'Wechat = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.account.anyOf@ in the specification.
-- 
-- The ID of the account that the bank account is associated with.
data InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableVariants =
   InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableText Data.Text.Internal.Text
  | InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableVariants
    where toJSON (InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableVariants
    where parseJSON val = case (InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceLastFinalizationError'NonNullableSource'Account'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.available_payout_methods.items@ in the specification.
-- 
-- 
data InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullable =
   InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableEnumInstant -- ^ Represents the JSON value @"instant"@
  | InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableEnumStandard -- ^ Represents the JSON value @"standard"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullable
    where toJSON (InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableOther val) = val
          toJSON (InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableEnumInstant) = "instant"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableEnumStandard) = "standard"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "instant" -> InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableEnumInstant
                                            | val GHC.Classes.== "standard" -> InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableEnumStandard
                                            | GHC.Base.otherwise -> InvoiceLastFinalizationError'NonNullableSource'AvailablePayoutMethods'NonNullableOther val)
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.customer.anyOf@ in the specification.
-- 
-- The ID of the customer that the bank account is associated with.
data InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableVariants =
   InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableText Data.Text.Internal.Text
  | InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableCustomer Customer
  | InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableVariants
    where toJSON (InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableVariants
    where parseJSON val = case (InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceLastFinalizationError'NonNullableSource'Customer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.object@ in the specification.
-- 
-- String representing the object\'s type. Objects of the same type share the same value.
data InvoiceLastFinalizationError'NonNullableSource'Object' =
   InvoiceLastFinalizationError'NonNullableSource'Object'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceLastFinalizationError'NonNullableSource'Object'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceLastFinalizationError'NonNullableSource'Object'EnumBankAccount -- ^ Represents the JSON value @"bank_account"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Object'
    where toJSON (InvoiceLastFinalizationError'NonNullableSource'Object'Other val) = val
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Object'EnumBankAccount) = "bank_account"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Object'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "bank_account" -> InvoiceLastFinalizationError'NonNullableSource'Object'EnumBankAccount
                                            | GHC.Base.otherwise -> InvoiceLastFinalizationError'NonNullableSource'Object'Other val)
-- | Defines the object schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.owner.anyOf@ in the specification.
-- 
-- Information about the owner of the payment instrument that may be used or required by particular source types.
data InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable = InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable {
  -- | address: Owner\'s address.
  invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable))
  -- | email: Owner\'s email address.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | name: Owner\'s full name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | phone: Owner\'s phone number (including extension).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | verified_address: Verified owner\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable))
  -- | verified_email: Verified owner\'s email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | verified_name: Verified owner\'s full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | verified_phone: Verified owner\'s phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable" (\obj -> (((((((GHC.Base.pure InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_phone"))
-- | Create a new 'InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable' with all required fields.
mkInvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable :: InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable
mkInvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable = InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullable{invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableEmail = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableName = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullablePhone = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedEmail = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedName = GHC.Maybe.Nothing,
                                                                                                                                      invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedPhone = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.owner.anyOf.properties.address.anyOf@ in the specification.
-- 
-- Owner\\\'s address.
data InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable = InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable' with all required fields.
mkInvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable :: InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable
mkInvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable = InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullable{invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.owner.anyOf.properties.verified_address.anyOf@ in the specification.
-- 
-- Verified owner\\\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
data InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable = InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable" (\obj -> (((((GHC.Base.pure InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable' with all required fields.
mkInvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable :: InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable
mkInvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable = InvoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullable{invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                            invoiceLastFinalizationError'NonNullableSource'Owner'NonNullableVerifiedAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.recipient.anyOf@ in the specification.
-- 
-- The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
data InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableVariants =
   InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableText Data.Text.Internal.Text
  | InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableRecipient Recipient
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableVariants
    where toJSON (InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableRecipient a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableVariants
    where parseJSON val = case (InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceLastFinalizationError'NonNullableSource'Recipient'NonNullableRecipient Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.source.anyOf.properties.type@ in the specification.
-- 
-- The \`type\` of the source. The \`type\` is a payment method, one of \`ach_credit_transfer\`, \`ach_debit\`, \`alipay\`, \`bancontact\`, \`card\`, \`card_present\`, \`eps\`, \`giropay\`, \`ideal\`, \`multibanco\`, \`klarna\`, \`p24\`, \`sepa_debit\`, \`sofort\`, \`three_d_secure\`, or \`wechat\`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https:\/\/stripe.com\/docs\/sources) used.
data InvoiceLastFinalizationError'NonNullableSource'Type' =
   InvoiceLastFinalizationError'NonNullableSource'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceLastFinalizationError'NonNullableSource'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumAchCreditTransfer -- ^ Represents the JSON value @"ach_credit_transfer"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumAchDebit -- ^ Represents the JSON value @"ach_debit"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumAcssDebit -- ^ Represents the JSON value @"acss_debit"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumAlipay -- ^ Represents the JSON value @"alipay"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumAuBecsDebit -- ^ Represents the JSON value @"au_becs_debit"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumBancontact -- ^ Represents the JSON value @"bancontact"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumCard -- ^ Represents the JSON value @"card"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumCardPresent -- ^ Represents the JSON value @"card_present"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumEps -- ^ Represents the JSON value @"eps"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumGiropay -- ^ Represents the JSON value @"giropay"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumIdeal -- ^ Represents the JSON value @"ideal"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumKlarna -- ^ Represents the JSON value @"klarna"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumMultibanco -- ^ Represents the JSON value @"multibanco"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumP24 -- ^ Represents the JSON value @"p24"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumSepaDebit -- ^ Represents the JSON value @"sepa_debit"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumSofort -- ^ Represents the JSON value @"sofort"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumThreeDSecure -- ^ Represents the JSON value @"three_d_secure"@
  | InvoiceLastFinalizationError'NonNullableSource'Type'EnumWechat -- ^ Represents the JSON value @"wechat"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableSource'Type'
    where toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'Other val) = val
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumAchCreditTransfer) = "ach_credit_transfer"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumAchDebit) = "ach_debit"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumAcssDebit) = "acss_debit"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumAlipay) = "alipay"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumAuBecsDebit) = "au_becs_debit"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumBancontact) = "bancontact"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumCard) = "card"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumCardPresent) = "card_present"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumEps) = "eps"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumGiropay) = "giropay"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumIdeal) = "ideal"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumKlarna) = "klarna"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumMultibanco) = "multibanco"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumP24) = "p24"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumSepaDebit) = "sepa_debit"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumSofort) = "sofort"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumThreeDSecure) = "three_d_secure"
          toJSON (InvoiceLastFinalizationError'NonNullableSource'Type'EnumWechat) = "wechat"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableSource'Type'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ach_credit_transfer" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumAchCreditTransfer
                                            | val GHC.Classes.== "ach_debit" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumAchDebit
                                            | val GHC.Classes.== "acss_debit" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumAcssDebit
                                            | val GHC.Classes.== "alipay" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumAlipay
                                            | val GHC.Classes.== "au_becs_debit" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumAuBecsDebit
                                            | val GHC.Classes.== "bancontact" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumBancontact
                                            | val GHC.Classes.== "card" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumCard
                                            | val GHC.Classes.== "card_present" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumCardPresent
                                            | val GHC.Classes.== "eps" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumEps
                                            | val GHC.Classes.== "giropay" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumGiropay
                                            | val GHC.Classes.== "ideal" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumIdeal
                                            | val GHC.Classes.== "klarna" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumKlarna
                                            | val GHC.Classes.== "multibanco" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumMultibanco
                                            | val GHC.Classes.== "p24" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumP24
                                            | val GHC.Classes.== "sepa_debit" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumSepaDebit
                                            | val GHC.Classes.== "sofort" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumSofort
                                            | val GHC.Classes.== "three_d_secure" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumThreeDSecure
                                            | val GHC.Classes.== "wechat" -> InvoiceLastFinalizationError'NonNullableSource'Type'EnumWechat
                                            | GHC.Base.otherwise -> InvoiceLastFinalizationError'NonNullableSource'Type'Other val)
-- | Defines the enum schema located at @components.schemas.invoice.properties.last_finalization_error.anyOf.properties.type@ in the specification.
-- 
-- The type of error returned. One of \`api_error\`, \`card_error\`, \`idempotency_error\`, or \`invalid_request_error\`
data InvoiceLastFinalizationError'NonNullableType' =
   InvoiceLastFinalizationError'NonNullableType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceLastFinalizationError'NonNullableType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceLastFinalizationError'NonNullableType'EnumApiError -- ^ Represents the JSON value @"api_error"@
  | InvoiceLastFinalizationError'NonNullableType'EnumCardError -- ^ Represents the JSON value @"card_error"@
  | InvoiceLastFinalizationError'NonNullableType'EnumIdempotencyError -- ^ Represents the JSON value @"idempotency_error"@
  | InvoiceLastFinalizationError'NonNullableType'EnumInvalidRequestError -- ^ Represents the JSON value @"invalid_request_error"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLastFinalizationError'NonNullableType'
    where toJSON (InvoiceLastFinalizationError'NonNullableType'Other val) = val
          toJSON (InvoiceLastFinalizationError'NonNullableType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceLastFinalizationError'NonNullableType'EnumApiError) = "api_error"
          toJSON (InvoiceLastFinalizationError'NonNullableType'EnumCardError) = "card_error"
          toJSON (InvoiceLastFinalizationError'NonNullableType'EnumIdempotencyError) = "idempotency_error"
          toJSON (InvoiceLastFinalizationError'NonNullableType'EnumInvalidRequestError) = "invalid_request_error"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLastFinalizationError'NonNullableType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "api_error" -> InvoiceLastFinalizationError'NonNullableType'EnumApiError
                                            | val GHC.Classes.== "card_error" -> InvoiceLastFinalizationError'NonNullableType'EnumCardError
                                            | val GHC.Classes.== "idempotency_error" -> InvoiceLastFinalizationError'NonNullableType'EnumIdempotencyError
                                            | val GHC.Classes.== "invalid_request_error" -> InvoiceLastFinalizationError'NonNullableType'EnumInvalidRequestError
                                            | GHC.Base.otherwise -> InvoiceLastFinalizationError'NonNullableType'Other val)
-- | Defines the object schema located at @components.schemas.invoice.properties.lines@ in the specification.
-- 
-- The individual line items that make up the invoice. \`lines\` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.
data InvoiceLines' = InvoiceLines' {
  -- | data: Details about each object.
  invoiceLines'Data :: ([LineItem])
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , invoiceLines'HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , invoiceLines'Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceLines'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= invoiceLines'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= invoiceLines'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= invoiceLines'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= invoiceLines'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= invoiceLines'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= invoiceLines'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceLines'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceLines'" (\obj -> ((GHC.Base.pure InvoiceLines' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Create a new 'InvoiceLines'' with all required fields.
mkInvoiceLines' :: [LineItem] -- ^ 'invoiceLines'Data'
  -> GHC.Types.Bool -- ^ 'invoiceLines'HasMore'
  -> Data.Text.Internal.Text -- ^ 'invoiceLines'Url'
  -> InvoiceLines'
mkInvoiceLines' invoiceLines'Data invoiceLines'HasMore invoiceLines'Url = InvoiceLines'{invoiceLines'Data = invoiceLines'Data,
                                                                                        invoiceLines'HasMore = invoiceLines'HasMore,
                                                                                        invoiceLines'Url = invoiceLines'Url}
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.on_behalf_of.anyOf@ in the specification.
-- 
-- The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https:\/\/stripe.com\/docs\/billing\/invoices\/connect) documentation for details.
data InvoiceOnBehalfOf'NonNullableVariants =
   InvoiceOnBehalfOf'NonNullableText Data.Text.Internal.Text
  | InvoiceOnBehalfOf'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceOnBehalfOf'NonNullableVariants
    where toJSON (InvoiceOnBehalfOf'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceOnBehalfOf'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceOnBehalfOf'NonNullableVariants
    where parseJSON val = case (InvoiceOnBehalfOf'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceOnBehalfOf'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.payment_intent.anyOf@ in the specification.
-- 
-- The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.
data InvoicePaymentIntent'NonNullableVariants =
   InvoicePaymentIntent'NonNullableText Data.Text.Internal.Text
  | InvoicePaymentIntent'NonNullablePaymentIntent PaymentIntent
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoicePaymentIntent'NonNullableVariants
    where toJSON (InvoicePaymentIntent'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoicePaymentIntent'NonNullablePaymentIntent a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoicePaymentIntent'NonNullableVariants
    where parseJSON val = case (InvoicePaymentIntent'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoicePaymentIntent'NonNullablePaymentIntent Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.quote.anyOf@ in the specification.
-- 
-- The quote this invoice was generated from.
data InvoiceQuote'NonNullableVariants =
   InvoiceQuote'NonNullableText Data.Text.Internal.Text
  | InvoiceQuote'NonNullableQuote Quote
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceQuote'NonNullableVariants
    where toJSON (InvoiceQuote'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceQuote'NonNullableQuote a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceQuote'NonNullableVariants
    where parseJSON val = case (InvoiceQuote'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceQuote'NonNullableQuote Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.invoice.properties.rendering_options.anyOf@ in the specification.
-- 
-- Options for invoice PDF rendering.
data InvoiceRenderingOptions'NonNullable = InvoiceRenderingOptions'NonNullable {
  -- | amount_tax_display: How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  invoiceRenderingOptions'NonNullableAmountTaxDisplay :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceRenderingOptions'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax_display" Data.Aeson.Types.ToJSON..=)) (invoiceRenderingOptions'NonNullableAmountTaxDisplay obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_tax_display" Data.Aeson.Types.ToJSON..=)) (invoiceRenderingOptions'NonNullableAmountTaxDisplay obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceRenderingOptions'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceRenderingOptions'NonNullable" (\obj -> GHC.Base.pure InvoiceRenderingOptions'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_tax_display"))
-- | Create a new 'InvoiceRenderingOptions'NonNullable' with all required fields.
mkInvoiceRenderingOptions'NonNullable :: InvoiceRenderingOptions'NonNullable
mkInvoiceRenderingOptions'NonNullable = InvoiceRenderingOptions'NonNullable{invoiceRenderingOptions'NonNullableAmountTaxDisplay = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @components.schemas.invoice.properties.status@ in the specification.
-- 
-- The status of the invoice, one of \`draft\`, \`open\`, \`paid\`, \`uncollectible\`, or \`void\`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\#workflow-overview)
data InvoiceStatus'NonNullable =
   InvoiceStatus'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | InvoiceStatus'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | InvoiceStatus'NonNullableEnumDeleted -- ^ Represents the JSON value @"deleted"@
  | InvoiceStatus'NonNullableEnumDraft -- ^ Represents the JSON value @"draft"@
  | InvoiceStatus'NonNullableEnumOpen -- ^ Represents the JSON value @"open"@
  | InvoiceStatus'NonNullableEnumPaid -- ^ Represents the JSON value @"paid"@
  | InvoiceStatus'NonNullableEnumUncollectible -- ^ Represents the JSON value @"uncollectible"@
  | InvoiceStatus'NonNullableEnumVoid -- ^ Represents the JSON value @"void"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceStatus'NonNullable
    where toJSON (InvoiceStatus'NonNullableOther val) = val
          toJSON (InvoiceStatus'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (InvoiceStatus'NonNullableEnumDeleted) = "deleted"
          toJSON (InvoiceStatus'NonNullableEnumDraft) = "draft"
          toJSON (InvoiceStatus'NonNullableEnumOpen) = "open"
          toJSON (InvoiceStatus'NonNullableEnumPaid) = "paid"
          toJSON (InvoiceStatus'NonNullableEnumUncollectible) = "uncollectible"
          toJSON (InvoiceStatus'NonNullableEnumVoid) = "void"
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceStatus'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "deleted" -> InvoiceStatus'NonNullableEnumDeleted
                                            | val GHC.Classes.== "draft" -> InvoiceStatus'NonNullableEnumDraft
                                            | val GHC.Classes.== "open" -> InvoiceStatus'NonNullableEnumOpen
                                            | val GHC.Classes.== "paid" -> InvoiceStatus'NonNullableEnumPaid
                                            | val GHC.Classes.== "uncollectible" -> InvoiceStatus'NonNullableEnumUncollectible
                                            | val GHC.Classes.== "void" -> InvoiceStatus'NonNullableEnumVoid
                                            | GHC.Base.otherwise -> InvoiceStatus'NonNullableOther val)
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.subscription.anyOf@ in the specification.
-- 
-- The subscription that this invoice was prepared for, if any.
data InvoiceSubscription'NonNullableVariants =
   InvoiceSubscription'NonNullableText Data.Text.Internal.Text
  | InvoiceSubscription'NonNullableSubscription Subscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceSubscription'NonNullableVariants
    where toJSON (InvoiceSubscription'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceSubscription'NonNullableSubscription a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceSubscription'NonNullableVariants
    where parseJSON val = case (InvoiceSubscription'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceSubscription'NonNullableSubscription Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.test_clock.anyOf@ in the specification.
-- 
-- ID of the test clock this invoice belongs to.
data InvoiceTestClock'NonNullableVariants =
   InvoiceTestClock'NonNullableText Data.Text.Internal.Text
  | InvoiceTestClock'NonNullableTestHelpers'testClock TestHelpers'testClock
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceTestClock'NonNullableVariants
    where toJSON (InvoiceTestClock'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceTestClock'NonNullableTestHelpers'testClock a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceTestClock'NonNullableVariants
    where parseJSON val = case (InvoiceTestClock'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceTestClock'NonNullableTestHelpers'testClock Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @components.schemas.invoice.properties.transfer_data.anyOf@ in the specification.
-- 
-- The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.
data InvoiceTransferData'NonNullable = InvoiceTransferData'NonNullable {
  -- | amount: The amount in %s that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.
  invoiceTransferData'NonNullableAmount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | destination: The account where funds from the payment will be transferred to upon payment success.
  , invoiceTransferData'NonNullableDestination :: (GHC.Maybe.Maybe InvoiceTransferData'NonNullableDestination'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceTransferData'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (invoiceTransferData'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination" Data.Aeson.Types.ToJSON..=)) (invoiceTransferData'NonNullableDestination obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (invoiceTransferData'NonNullableAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination" Data.Aeson.Types.ToJSON..=)) (invoiceTransferData'NonNullableDestination obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceTransferData'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "InvoiceTransferData'NonNullable" (\obj -> (GHC.Base.pure InvoiceTransferData'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination"))
-- | Create a new 'InvoiceTransferData'NonNullable' with all required fields.
mkInvoiceTransferData'NonNullable :: InvoiceTransferData'NonNullable
mkInvoiceTransferData'NonNullable = InvoiceTransferData'NonNullable{invoiceTransferData'NonNullableAmount = GHC.Maybe.Nothing,
                                                                    invoiceTransferData'NonNullableDestination = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @components.schemas.invoice.properties.transfer_data.anyOf.properties.destination.anyOf@ in the specification.
-- 
-- The account where funds from the payment will be transferred to upon payment success.
data InvoiceTransferData'NonNullableDestination'Variants =
   InvoiceTransferData'NonNullableDestination'Text Data.Text.Internal.Text
  | InvoiceTransferData'NonNullableDestination'Account Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON InvoiceTransferData'NonNullableDestination'Variants
    where toJSON (InvoiceTransferData'NonNullableDestination'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (InvoiceTransferData'NonNullableDestination'Account a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON InvoiceTransferData'NonNullableDestination'Variants
    where parseJSON val = case (InvoiceTransferData'NonNullableDestination'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((InvoiceTransferData'NonNullableDestination'Account Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
