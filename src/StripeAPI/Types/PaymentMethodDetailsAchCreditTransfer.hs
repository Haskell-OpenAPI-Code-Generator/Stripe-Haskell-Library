{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodDetailsAchCreditTransfer
module StripeAPI.Types.PaymentMethodDetailsAchCreditTransfer where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the data type for the schema payment_method_details_ach_credit_transfer
data PaymentMethodDetailsAchCreditTransfer
  = PaymentMethodDetailsAchCreditTransfer
      { -- | account_number: Account number to transfer funds to.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsAchCreditTransferAccountNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | bank_name: Name of the bank associated with the routing number.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsAchCreditTransferBankName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | routing_number: Routing transit number for the bank account to transfer funds to.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsAchCreditTransferRoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | swift_code: SWIFT code of the bank associated with the routing number.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsAchCreditTransferSwiftCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsAchCreditTransfer where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "account_number" (paymentMethodDetailsAchCreditTransferAccountNumber obj) : (Data.Aeson..=) "bank_name" (paymentMethodDetailsAchCreditTransferBankName obj) : (Data.Aeson..=) "routing_number" (paymentMethodDetailsAchCreditTransferRoutingNumber obj) : (Data.Aeson..=) "swift_code" (paymentMethodDetailsAchCreditTransferSwiftCode obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "account_number" (paymentMethodDetailsAchCreditTransferAccountNumber obj) GHC.Base.<> ((Data.Aeson..=) "bank_name" (paymentMethodDetailsAchCreditTransferBankName obj) GHC.Base.<> ((Data.Aeson..=) "routing_number" (paymentMethodDetailsAchCreditTransferRoutingNumber obj) GHC.Base.<> (Data.Aeson..=) "swift_code" (paymentMethodDetailsAchCreditTransferSwiftCode obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsAchCreditTransfer where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsAchCreditTransfer" (\obj -> (((GHC.Base.pure PaymentMethodDetailsAchCreditTransfer GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "swift_code"))
