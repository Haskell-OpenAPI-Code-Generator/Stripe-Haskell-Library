{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema IssuingDisputeMerchandiseNotAsDescribedEvidence
module StripeAPI.Types.IssuingDisputeMerchandiseNotAsDescribedEvidence where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.File
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.issuing_dispute_merchandise_not_as_described_evidence@ in the specification.
data IssuingDisputeMerchandiseNotAsDescribedEvidence = IssuingDisputeMerchandiseNotAsDescribedEvidence
  { -- | additional_documentation: (ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Additional documentation supporting the dispute.
    issuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation :: (GHC.Maybe.Maybe IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Variants),
    -- | explanation: Explanation of why the cardholder is disputing this transaction.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingDisputeMerchandiseNotAsDescribedEvidenceExplanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | received_at: Date when the product was received.
    issuingDisputeMerchandiseNotAsDescribedEvidenceReceivedAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | return_description: Description of the cardholder\'s attempt to return the product.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    issuingDisputeMerchandiseNotAsDescribedEvidenceReturnDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | return_status: Result of cardholder\'s attempt to return the product.
    issuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus :: (GHC.Maybe.Maybe IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'),
    -- | returned_at: Date when the product was returned or attempted to be returned.
    issuingDisputeMerchandiseNotAsDescribedEvidenceReturnedAt :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON IssuingDisputeMerchandiseNotAsDescribedEvidence where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation obj : "explanation" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceExplanation obj : "received_at" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReceivedAt obj : "return_description" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReturnDescription obj : "return_status" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus obj : "returned_at" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReturnedAt obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceExplanation obj) GHC.Base.<> (("received_at" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReceivedAt obj) GHC.Base.<> (("return_description" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReturnDescription obj) GHC.Base.<> (("return_status" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus obj) GHC.Base.<> ("returned_at" Data.Aeson.Types.ToJSON..= issuingDisputeMerchandiseNotAsDescribedEvidenceReturnedAt obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON IssuingDisputeMerchandiseNotAsDescribedEvidence where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "IssuingDisputeMerchandiseNotAsDescribedEvidence" (\obj -> (((((GHC.Base.pure IssuingDisputeMerchandiseNotAsDescribedEvidence GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "received_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "return_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "return_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "returned_at"))

-- | Create a new 'IssuingDisputeMerchandiseNotAsDescribedEvidence' with all required fields.
mkIssuingDisputeMerchandiseNotAsDescribedEvidence :: IssuingDisputeMerchandiseNotAsDescribedEvidence
mkIssuingDisputeMerchandiseNotAsDescribedEvidence =
  IssuingDisputeMerchandiseNotAsDescribedEvidence
    { issuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation = GHC.Maybe.Nothing,
      issuingDisputeMerchandiseNotAsDescribedEvidenceExplanation = GHC.Maybe.Nothing,
      issuingDisputeMerchandiseNotAsDescribedEvidenceReceivedAt = GHC.Maybe.Nothing,
      issuingDisputeMerchandiseNotAsDescribedEvidenceReturnDescription = GHC.Maybe.Nothing,
      issuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus = GHC.Maybe.Nothing,
      issuingDisputeMerchandiseNotAsDescribedEvidenceReturnedAt = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @components.schemas.issuing_dispute_merchandise_not_as_described_evidence.properties.additional_documentation.anyOf@ in the specification.
--
-- (ID of a [file upload](https:\/\/stripe.com\/docs\/guides\/file-upload)) Additional documentation supporting the dispute.
data IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Variants
  = IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Text Data.Text.Internal.Text
  | IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'File File
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Variants where
  toJSON (IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'File a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Variants where
  parseJSON val = case (IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation'File Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @components.schemas.issuing_dispute_merchandise_not_as_described_evidence.properties.return_status@ in the specification.
--
-- Result of cardholder\'s attempt to return the product.
data IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"merchant_rejected"@
    IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'EnumMerchantRejected
  | -- | Represents the JSON value @"successful"@
    IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'EnumSuccessful
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus' where
  toJSON (IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'Other val) = val
  toJSON (IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'EnumMerchantRejected) = "merchant_rejected"
  toJSON (IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'EnumSuccessful) = "successful"

instance Data.Aeson.Types.FromJSON.FromJSON IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "merchant_rejected" -> IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'EnumMerchantRejected
            | val GHC.Classes.== "successful" -> IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'EnumSuccessful
            | GHC.Base.otherwise -> IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus'Other val
      )
