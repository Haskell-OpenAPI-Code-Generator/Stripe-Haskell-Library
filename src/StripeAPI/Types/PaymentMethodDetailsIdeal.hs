{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodDetailsIdeal
module StripeAPI.Types.PaymentMethodDetailsIdeal where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the data type for the schema payment_method_details_ideal
data PaymentMethodDetailsIdeal
  = PaymentMethodDetailsIdeal
      { -- | bank: The customer\'s bank. Can be one of \`abn_amro\`, \`asn_bank\`, \`bunq\`, \`handelsbanken\`, \`ing\`, \`knab\`, \`moneyou\`, \`rabobank\`, \`regiobank\`, \`sns_bank\`, \`triodos_bank\`, or \`van_lanschot\`.
        paymentMethodDetailsIdealBank :: (GHC.Maybe.Maybe PaymentMethodDetailsIdealBank'),
        -- | bic: The Bank Identifier Code of the customer\'s bank.
        paymentMethodDetailsIdealBic :: (GHC.Maybe.Maybe PaymentMethodDetailsIdealBic'),
        -- | iban_last4: Last four characters of the IBAN.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsIdealIbanLast4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | verified_name: Owner\'s verified full name. Values are verified or provided by iDEAL directly
        -- (if supported) at the time of authorization or settlement. They cannot be set or mutated.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsIdealVerifiedName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsIdeal where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "bank" (paymentMethodDetailsIdealBank obj) : (Data.Aeson..=) "bic" (paymentMethodDetailsIdealBic obj) : (Data.Aeson..=) "iban_last4" (paymentMethodDetailsIdealIbanLast4 obj) : (Data.Aeson..=) "verified_name" (paymentMethodDetailsIdealVerifiedName obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "bank" (paymentMethodDetailsIdealBank obj) GHC.Base.<> ((Data.Aeson..=) "bic" (paymentMethodDetailsIdealBic obj) GHC.Base.<> ((Data.Aeson..=) "iban_last4" (paymentMethodDetailsIdealIbanLast4 obj) GHC.Base.<> (Data.Aeson..=) "verified_name" (paymentMethodDetailsIdealVerifiedName obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsIdeal where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsIdeal" (\obj -> (((GHC.Base.pure PaymentMethodDetailsIdeal GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bank")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bic")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "iban_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "verified_name"))

-- | Defines the enum schema payment_method_details_idealBank\'
--
-- The customer\'s bank. Can be one of \`abn_amro\`, \`asn_bank\`, \`bunq\`, \`handelsbanken\`, \`ing\`, \`knab\`, \`moneyou\`, \`rabobank\`, \`regiobank\`, \`sns_bank\`, \`triodos_bank\`, or \`van_lanschot\`.
data PaymentMethodDetailsIdealBank'
  = PaymentMethodDetailsIdealBank'EnumOther Data.Aeson.Types.Internal.Value
  | PaymentMethodDetailsIdealBank'EnumTyped Data.Text.Internal.Text
  | PaymentMethodDetailsIdealBank'EnumStringAbnAmro
  | PaymentMethodDetailsIdealBank'EnumStringAsnBank
  | PaymentMethodDetailsIdealBank'EnumStringBunq
  | PaymentMethodDetailsIdealBank'EnumStringHandelsbanken
  | PaymentMethodDetailsIdealBank'EnumStringIng
  | PaymentMethodDetailsIdealBank'EnumStringKnab
  | PaymentMethodDetailsIdealBank'EnumStringMoneyou
  | PaymentMethodDetailsIdealBank'EnumStringRabobank
  | PaymentMethodDetailsIdealBank'EnumStringRegiobank
  | PaymentMethodDetailsIdealBank'EnumStringSnsBank
  | PaymentMethodDetailsIdealBank'EnumStringTriodosBank
  | PaymentMethodDetailsIdealBank'EnumStringVanLanschot
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsIdealBank' where
  toJSON (PaymentMethodDetailsIdealBank'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsIdealBank'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsIdealBank'EnumStringAbnAmro) = "abn_amro"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringAsnBank) = "asn_bank"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringBunq) = "bunq"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringHandelsbanken) = "handelsbanken"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringIng) = "ing"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringKnab) = "knab"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringMoneyou) = "moneyou"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringRabobank) = "rabobank"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringRegiobank) = "regiobank"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringSnsBank) = "sns_bank"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringTriodosBank) = "triodos_bank"
  toJSON (PaymentMethodDetailsIdealBank'EnumStringVanLanschot) = "van_lanschot"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsIdealBank' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "abn_amro" -> PaymentMethodDetailsIdealBank'EnumStringAbnAmro
            | val GHC.Classes.== "asn_bank" -> PaymentMethodDetailsIdealBank'EnumStringAsnBank
            | val GHC.Classes.== "bunq" -> PaymentMethodDetailsIdealBank'EnumStringBunq
            | val GHC.Classes.== "handelsbanken" -> PaymentMethodDetailsIdealBank'EnumStringHandelsbanken
            | val GHC.Classes.== "ing" -> PaymentMethodDetailsIdealBank'EnumStringIng
            | val GHC.Classes.== "knab" -> PaymentMethodDetailsIdealBank'EnumStringKnab
            | val GHC.Classes.== "moneyou" -> PaymentMethodDetailsIdealBank'EnumStringMoneyou
            | val GHC.Classes.== "rabobank" -> PaymentMethodDetailsIdealBank'EnumStringRabobank
            | val GHC.Classes.== "regiobank" -> PaymentMethodDetailsIdealBank'EnumStringRegiobank
            | val GHC.Classes.== "sns_bank" -> PaymentMethodDetailsIdealBank'EnumStringSnsBank
            | val GHC.Classes.== "triodos_bank" -> PaymentMethodDetailsIdealBank'EnumStringTriodosBank
            | val GHC.Classes.== "van_lanschot" -> PaymentMethodDetailsIdealBank'EnumStringVanLanschot
            | GHC.Base.otherwise -> PaymentMethodDetailsIdealBank'EnumOther val
      )

-- | Defines the enum schema payment_method_details_idealBic\'
--
-- The Bank Identifier Code of the customer\'s bank.
data PaymentMethodDetailsIdealBic'
  = PaymentMethodDetailsIdealBic'EnumOther Data.Aeson.Types.Internal.Value
  | PaymentMethodDetailsIdealBic'EnumTyped Data.Text.Internal.Text
  | PaymentMethodDetailsIdealBic'EnumStringABNANL2A
  | PaymentMethodDetailsIdealBic'EnumStringASNBNL21
  | PaymentMethodDetailsIdealBic'EnumStringBUNQNL2A
  | PaymentMethodDetailsIdealBic'EnumStringFVLBNL22
  | PaymentMethodDetailsIdealBic'EnumStringHANDNL2A
  | PaymentMethodDetailsIdealBic'EnumStringINGBNL2A
  | PaymentMethodDetailsIdealBic'EnumStringKNABNL2H
  | PaymentMethodDetailsIdealBic'EnumStringMOYONL21
  | PaymentMethodDetailsIdealBic'EnumStringRABONL2U
  | PaymentMethodDetailsIdealBic'EnumStringRBRBNL21
  | PaymentMethodDetailsIdealBic'EnumStringSNSBNL2A
  | PaymentMethodDetailsIdealBic'EnumStringTRIONL2U
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsIdealBic' where
  toJSON (PaymentMethodDetailsIdealBic'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsIdealBic'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsIdealBic'EnumStringABNANL2A) = "ABNANL2A"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringASNBNL21) = "ASNBNL21"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringBUNQNL2A) = "BUNQNL2A"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringFVLBNL22) = "FVLBNL22"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringHANDNL2A) = "HANDNL2A"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringINGBNL2A) = "INGBNL2A"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringKNABNL2H) = "KNABNL2H"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringMOYONL21) = "MOYONL21"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringRABONL2U) = "RABONL2U"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringRBRBNL21) = "RBRBNL21"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringSNSBNL2A) = "SNSBNL2A"
  toJSON (PaymentMethodDetailsIdealBic'EnumStringTRIONL2U) = "TRIONL2U"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsIdealBic' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "ABNANL2A" -> PaymentMethodDetailsIdealBic'EnumStringABNANL2A
            | val GHC.Classes.== "ASNBNL21" -> PaymentMethodDetailsIdealBic'EnumStringASNBNL21
            | val GHC.Classes.== "BUNQNL2A" -> PaymentMethodDetailsIdealBic'EnumStringBUNQNL2A
            | val GHC.Classes.== "FVLBNL22" -> PaymentMethodDetailsIdealBic'EnumStringFVLBNL22
            | val GHC.Classes.== "HANDNL2A" -> PaymentMethodDetailsIdealBic'EnumStringHANDNL2A
            | val GHC.Classes.== "INGBNL2A" -> PaymentMethodDetailsIdealBic'EnumStringINGBNL2A
            | val GHC.Classes.== "KNABNL2H" -> PaymentMethodDetailsIdealBic'EnumStringKNABNL2H
            | val GHC.Classes.== "MOYONL21" -> PaymentMethodDetailsIdealBic'EnumStringMOYONL21
            | val GHC.Classes.== "RABONL2U" -> PaymentMethodDetailsIdealBic'EnumStringRABONL2U
            | val GHC.Classes.== "RBRBNL21" -> PaymentMethodDetailsIdealBic'EnumStringRBRBNL21
            | val GHC.Classes.== "SNSBNL2A" -> PaymentMethodDetailsIdealBic'EnumStringSNSBNL2A
            | val GHC.Classes.== "TRIONL2U" -> PaymentMethodDetailsIdealBic'EnumStringTRIONL2U
            | GHC.Base.otherwise -> PaymentMethodDetailsIdealBic'EnumOther val
      )
