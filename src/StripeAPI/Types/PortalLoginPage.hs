{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PortalLoginPage
module StripeAPI.Types.PortalLoginPage where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.portal_login_page@ in the specification.
data PortalLoginPage = PortalLoginPage
  { -- | enabled: If \`true\`, a shareable \`url\` will be generated that will take your customers to a hosted login page for the customer portal.
    --
    -- If \`false\`, the previously generated \`url\`, if any, will be deactivated.
    portalLoginPageEnabled :: GHC.Types.Bool,
    -- | url: A shareable URL to the hosted portal login page. Your customers will be able to log in with their [email](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-email) and receive a link to their customer portal.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    portalLoginPageUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PortalLoginPage where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= portalLoginPageEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (portalLoginPageUrl obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= portalLoginPageEnabled obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (portalLoginPageUrl obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PortalLoginPage where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PortalLoginPage" (\obj -> (GHC.Base.pure PortalLoginPage GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))

-- | Create a new 'PortalLoginPage' with all required fields.
mkPortalLoginPage ::
  -- | 'portalLoginPageEnabled'
  GHC.Types.Bool ->
  PortalLoginPage
mkPortalLoginPage portalLoginPageEnabled =
  PortalLoginPage
    { portalLoginPageEnabled = portalLoginPageEnabled,
      portalLoginPageUrl = GHC.Maybe.Nothing
    }
