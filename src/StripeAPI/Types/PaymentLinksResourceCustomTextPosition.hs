{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentLinksResourceCustomTextPosition
module StripeAPI.Types.PaymentLinksResourceCustomTextPosition where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_links_resource_custom_text_position@ in the specification.
data PaymentLinksResourceCustomTextPosition = PaymentLinksResourceCustomTextPosition
  { -- | message: Text may be up to 1200 characters in length.
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    paymentLinksResourceCustomTextPositionMessage :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentLinksResourceCustomTextPosition where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["message" Data.Aeson.Types.ToJSON..= paymentLinksResourceCustomTextPositionMessage obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["message" Data.Aeson.Types.ToJSON..= paymentLinksResourceCustomTextPositionMessage obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentLinksResourceCustomTextPosition where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentLinksResourceCustomTextPosition" (\obj -> GHC.Base.pure PaymentLinksResourceCustomTextPosition GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "message"))

-- | Create a new 'PaymentLinksResourceCustomTextPosition' with all required fields.
mkPaymentLinksResourceCustomTextPosition ::
  -- | 'paymentLinksResourceCustomTextPositionMessage'
  Data.Text.Internal.Text ->
  PaymentLinksResourceCustomTextPosition
mkPaymentLinksResourceCustomTextPosition paymentLinksResourceCustomTextPositionMessage = PaymentLinksResourceCustomTextPosition {paymentLinksResourceCustomTextPositionMessage = paymentLinksResourceCustomTextPositionMessage}
