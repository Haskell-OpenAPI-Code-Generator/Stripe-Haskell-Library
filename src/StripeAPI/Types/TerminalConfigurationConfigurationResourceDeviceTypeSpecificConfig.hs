{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig
module StripeAPI.Types.TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.File
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.terminal_configuration_configuration_resource_device_type_specific_config@ in the specification.
data TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig = TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig
  { -- | splashscreen: A File ID representing an image you would like displayed on the reader.
    terminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen :: (GHC.Maybe.Maybe TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("splashscreen" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("splashscreen" Data.Aeson.Types.ToJSON..=)) (terminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig" (\obj -> GHC.Base.pure TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "splashscreen"))

-- | Create a new 'TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig' with all required fields.
mkTerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig :: TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig
mkTerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig = TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig {terminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen = GHC.Maybe.Nothing}

-- | Defines the oneOf schema located at @components.schemas.terminal_configuration_configuration_resource_device_type_specific_config.properties.splashscreen.anyOf@ in the specification.
--
-- A File ID representing an image you would like displayed on the reader.
data TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Variants
  = TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Text Data.Text.Internal.Text
  | TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'File File
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Variants where
  toJSON (TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'File a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Variants where
  parseJSON val = case (TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen'File Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
