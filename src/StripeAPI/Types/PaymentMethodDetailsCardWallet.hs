{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodDetailsCardWallet
module StripeAPI.Types.PaymentMethodDetailsCardWallet where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodDetailsCardWalletMasterpass
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodDetailsCardWalletVisaCheckout
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the data type for the schema payment_method_details_card_wallet
data PaymentMethodDetailsCardWallet
  = PaymentMethodDetailsCardWallet
      { -- | amex_express_checkout:
        paymentMethodDetailsCardWalletAmexExpressCheckout :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletAmexExpressCheckout),
        -- | apple_pay:
        paymentMethodDetailsCardWalletApplePay :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletApplePay),
        -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsCardWalletDynamicLast4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | google_pay:
        paymentMethodDetailsCardWalletGooglePay :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletGooglePay),
        -- | masterpass:
        paymentMethodDetailsCardWalletMasterpass :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletMasterpass),
        -- | samsung_pay:
        paymentMethodDetailsCardWalletSamsungPay :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletSamsungPay),
        -- | type: The type of the card wallet, one of \`amex_express_checkout\`, \`apple_pay\`, \`google_pay\`, \`masterpass\`, \`samsung_pay\`, or \`visa_checkout\`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
        paymentMethodDetailsCardWalletType :: PaymentMethodDetailsCardWalletType',
        -- | visa_checkout:
        paymentMethodDetailsCardWalletVisaCheckout :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletVisaCheckout)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsCardWallet where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "amex_express_checkout" (paymentMethodDetailsCardWalletAmexExpressCheckout obj) : (Data.Aeson..=) "apple_pay" (paymentMethodDetailsCardWalletApplePay obj) : (Data.Aeson..=) "dynamic_last4" (paymentMethodDetailsCardWalletDynamicLast4 obj) : (Data.Aeson..=) "google_pay" (paymentMethodDetailsCardWalletGooglePay obj) : (Data.Aeson..=) "masterpass" (paymentMethodDetailsCardWalletMasterpass obj) : (Data.Aeson..=) "samsung_pay" (paymentMethodDetailsCardWalletSamsungPay obj) : (Data.Aeson..=) "type" (paymentMethodDetailsCardWalletType obj) : (Data.Aeson..=) "visa_checkout" (paymentMethodDetailsCardWalletVisaCheckout obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "amex_express_checkout" (paymentMethodDetailsCardWalletAmexExpressCheckout obj) GHC.Base.<> ((Data.Aeson..=) "apple_pay" (paymentMethodDetailsCardWalletApplePay obj) GHC.Base.<> ((Data.Aeson..=) "dynamic_last4" (paymentMethodDetailsCardWalletDynamicLast4 obj) GHC.Base.<> ((Data.Aeson..=) "google_pay" (paymentMethodDetailsCardWalletGooglePay obj) GHC.Base.<> ((Data.Aeson..=) "masterpass" (paymentMethodDetailsCardWalletMasterpass obj) GHC.Base.<> ((Data.Aeson..=) "samsung_pay" (paymentMethodDetailsCardWalletSamsungPay obj) GHC.Base.<> ((Data.Aeson..=) "type" (paymentMethodDetailsCardWalletType obj) GHC.Base.<> (Data.Aeson..=) "visa_checkout" (paymentMethodDetailsCardWalletVisaCheckout obj))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsCardWallet where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsCardWallet" (\obj -> (((((((GHC.Base.pure PaymentMethodDetailsCardWallet GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amex_express_checkout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "apple_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "google_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "masterpass")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "samsung_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "visa_checkout"))

-- | Defines the enum schema payment_method_details_card_walletType\'
--
-- The type of the card wallet, one of \`amex_express_checkout\`, \`apple_pay\`, \`google_pay\`, \`masterpass\`, \`samsung_pay\`, or \`visa_checkout\`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
data PaymentMethodDetailsCardWalletType'
  = PaymentMethodDetailsCardWalletType'EnumOther Data.Aeson.Types.Internal.Value
  | PaymentMethodDetailsCardWalletType'EnumTyped Data.Text.Internal.Text
  | PaymentMethodDetailsCardWalletType'EnumStringAmexExpressCheckout
  | PaymentMethodDetailsCardWalletType'EnumStringApplePay
  | PaymentMethodDetailsCardWalletType'EnumStringGooglePay
  | PaymentMethodDetailsCardWalletType'EnumStringMasterpass
  | PaymentMethodDetailsCardWalletType'EnumStringSamsungPay
  | PaymentMethodDetailsCardWalletType'EnumStringVisaCheckout
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsCardWalletType' where
  toJSON (PaymentMethodDetailsCardWalletType'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsCardWalletType'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (PaymentMethodDetailsCardWalletType'EnumStringAmexExpressCheckout) = "amex_express_checkout"
  toJSON (PaymentMethodDetailsCardWalletType'EnumStringApplePay) = "apple_pay"
  toJSON (PaymentMethodDetailsCardWalletType'EnumStringGooglePay) = "google_pay"
  toJSON (PaymentMethodDetailsCardWalletType'EnumStringMasterpass) = "masterpass"
  toJSON (PaymentMethodDetailsCardWalletType'EnumStringSamsungPay) = "samsung_pay"
  toJSON (PaymentMethodDetailsCardWalletType'EnumStringVisaCheckout) = "visa_checkout"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsCardWalletType' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "amex_express_checkout" -> PaymentMethodDetailsCardWalletType'EnumStringAmexExpressCheckout
            | val GHC.Classes.== "apple_pay" -> PaymentMethodDetailsCardWalletType'EnumStringApplePay
            | val GHC.Classes.== "google_pay" -> PaymentMethodDetailsCardWalletType'EnumStringGooglePay
            | val GHC.Classes.== "masterpass" -> PaymentMethodDetailsCardWalletType'EnumStringMasterpass
            | val GHC.Classes.== "samsung_pay" -> PaymentMethodDetailsCardWalletType'EnumStringSamsungPay
            | val GHC.Classes.== "visa_checkout" -> PaymentMethodDetailsCardWalletType'EnumStringVisaCheckout
            | GHC.Base.otherwise -> PaymentMethodDetailsCardWalletType'EnumOther val
      )
