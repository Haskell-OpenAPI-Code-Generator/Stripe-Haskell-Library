{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the types generated from the schema PaymentMethodDetailsCardWallet
module StripeAPI.Types.PaymentMethodDetailsCardWallet where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodDetailsCardWalletMasterpass
import {-# SOURCE #-} StripeAPI.Types.PaymentMethodDetailsCardWalletVisaCheckout
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_method_details_card_wallet@ in the specification.
data PaymentMethodDetailsCardWallet
  = PaymentMethodDetailsCardWallet
      { -- | amex_express_checkout:
        paymentMethodDetailsCardWalletAmexExpressCheckout :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletAmexExpressCheckout),
        -- | apple_pay:
        paymentMethodDetailsCardWalletApplePay :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletApplePay),
        -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        paymentMethodDetailsCardWalletDynamicLast4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | google_pay:
        paymentMethodDetailsCardWalletGooglePay :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletGooglePay),
        -- | masterpass:
        paymentMethodDetailsCardWalletMasterpass :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletMasterpass),
        -- | samsung_pay:
        paymentMethodDetailsCardWalletSamsungPay :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletSamsungPay),
        -- | type: The type of the card wallet, one of \`amex_express_checkout\`, \`apple_pay\`, \`google_pay\`, \`masterpass\`, \`samsung_pay\`, or \`visa_checkout\`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
        paymentMethodDetailsCardWalletType :: PaymentMethodDetailsCardWalletType',
        -- | visa_checkout:
        paymentMethodDetailsCardWalletVisaCheckout :: (GHC.Maybe.Maybe PaymentMethodDetailsCardWalletVisaCheckout)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsCardWallet where
  toJSON obj = Data.Aeson.Types.Internal.object ("amex_express_checkout" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletAmexExpressCheckout obj : "apple_pay" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletApplePay obj : "dynamic_last4" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletDynamicLast4 obj : "google_pay" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletGooglePay obj : "masterpass" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletMasterpass obj : "samsung_pay" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletSamsungPay obj : "type" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletType obj : "visa_checkout" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletVisaCheckout obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amex_express_checkout" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletAmexExpressCheckout obj) GHC.Base.<> (("apple_pay" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletApplePay obj) GHC.Base.<> (("dynamic_last4" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletDynamicLast4 obj) GHC.Base.<> (("google_pay" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletGooglePay obj) GHC.Base.<> (("masterpass" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletMasterpass obj) GHC.Base.<> (("samsung_pay" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletSamsungPay obj) GHC.Base.<> (("type" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletType obj) GHC.Base.<> ("visa_checkout" Data.Aeson.Types.ToJSON..= paymentMethodDetailsCardWalletVisaCheckout obj))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsCardWallet where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentMethodDetailsCardWallet" (\obj -> (((((((GHC.Base.pure PaymentMethodDetailsCardWallet GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amex_express_checkout")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "apple_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "google_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "masterpass")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "samsung_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "visa_checkout"))

-- | Create a new 'PaymentMethodDetailsCardWallet' with all required fields.
mkPaymentMethodDetailsCardWallet ::
  -- | 'paymentMethodDetailsCardWalletType'
  PaymentMethodDetailsCardWalletType' ->
  PaymentMethodDetailsCardWallet
mkPaymentMethodDetailsCardWallet paymentMethodDetailsCardWalletType =
  PaymentMethodDetailsCardWallet
    { paymentMethodDetailsCardWalletAmexExpressCheckout = GHC.Maybe.Nothing,
      paymentMethodDetailsCardWalletApplePay = GHC.Maybe.Nothing,
      paymentMethodDetailsCardWalletDynamicLast4 = GHC.Maybe.Nothing,
      paymentMethodDetailsCardWalletGooglePay = GHC.Maybe.Nothing,
      paymentMethodDetailsCardWalletMasterpass = GHC.Maybe.Nothing,
      paymentMethodDetailsCardWalletSamsungPay = GHC.Maybe.Nothing,
      paymentMethodDetailsCardWalletType = paymentMethodDetailsCardWalletType,
      paymentMethodDetailsCardWalletVisaCheckout = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @components.schemas.payment_method_details_card_wallet.properties.type@ in the specification.
--
-- The type of the card wallet, one of \`amex_express_checkout\`, \`apple_pay\`, \`google_pay\`, \`masterpass\`, \`samsung_pay\`, or \`visa_checkout\`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
data PaymentMethodDetailsCardWalletType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentMethodDetailsCardWalletType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentMethodDetailsCardWalletType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"amex_express_checkout"@
    PaymentMethodDetailsCardWalletType'EnumAmexExpressCheckout
  | -- | Represents the JSON value @"apple_pay"@
    PaymentMethodDetailsCardWalletType'EnumApplePay
  | -- | Represents the JSON value @"google_pay"@
    PaymentMethodDetailsCardWalletType'EnumGooglePay
  | -- | Represents the JSON value @"masterpass"@
    PaymentMethodDetailsCardWalletType'EnumMasterpass
  | -- | Represents the JSON value @"samsung_pay"@
    PaymentMethodDetailsCardWalletType'EnumSamsungPay
  | -- | Represents the JSON value @"visa_checkout"@
    PaymentMethodDetailsCardWalletType'EnumVisaCheckout
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentMethodDetailsCardWalletType' where
  toJSON (PaymentMethodDetailsCardWalletType'Other val) = val
  toJSON (PaymentMethodDetailsCardWalletType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentMethodDetailsCardWalletType'EnumAmexExpressCheckout) = "amex_express_checkout"
  toJSON (PaymentMethodDetailsCardWalletType'EnumApplePay) = "apple_pay"
  toJSON (PaymentMethodDetailsCardWalletType'EnumGooglePay) = "google_pay"
  toJSON (PaymentMethodDetailsCardWalletType'EnumMasterpass) = "masterpass"
  toJSON (PaymentMethodDetailsCardWalletType'EnumSamsungPay) = "samsung_pay"
  toJSON (PaymentMethodDetailsCardWalletType'EnumVisaCheckout) = "visa_checkout"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentMethodDetailsCardWalletType' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "amex_express_checkout" -> PaymentMethodDetailsCardWalletType'EnumAmexExpressCheckout
            | val GHC.Classes.== "apple_pay" -> PaymentMethodDetailsCardWalletType'EnumApplePay
            | val GHC.Classes.== "google_pay" -> PaymentMethodDetailsCardWalletType'EnumGooglePay
            | val GHC.Classes.== "masterpass" -> PaymentMethodDetailsCardWalletType'EnumMasterpass
            | val GHC.Classes.== "samsung_pay" -> PaymentMethodDetailsCardWalletType'EnumSamsungPay
            | val GHC.Classes.== "visa_checkout" -> PaymentMethodDetailsCardWalletType'EnumVisaCheckout
            | GHC.Base.otherwise -> PaymentMethodDetailsCardWalletType'Other val
      )
