-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema TerminalReaderReaderResourceSetReaderDisplayAction
module StripeAPI.Types.TerminalReaderReaderResourceSetReaderDisplayAction where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.TerminalReaderReaderResourceCart
import {-# SOURCE #-} StripeAPI.Types.TerminalReaderReaderResourceLineItem

-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_set_reader_display_action@ in the specification.
-- 
-- Represents a reader action to set the reader display
data TerminalReaderReaderResourceSetReaderDisplayAction = TerminalReaderReaderResourceSetReaderDisplayAction {
  -- | cart: Cart object to be displayed by the reader.
  terminalReaderReaderResourceSetReaderDisplayActionCart :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceSetReaderDisplayAction
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cart" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart obj) : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "cart"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cart" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart obj) : ["type" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "cart"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceSetReaderDisplayAction
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceSetReaderDisplayAction" (\obj -> GHC.Base.pure TerminalReaderReaderResourceSetReaderDisplayAction GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cart"))
-- | Create a new 'TerminalReaderReaderResourceSetReaderDisplayAction' with all required fields.
mkTerminalReaderReaderResourceSetReaderDisplayAction :: TerminalReaderReaderResourceSetReaderDisplayAction
mkTerminalReaderReaderResourceSetReaderDisplayAction = TerminalReaderReaderResourceSetReaderDisplayAction{terminalReaderReaderResourceSetReaderDisplayActionCart = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.terminal_reader_reader_resource_set_reader_display_action.properties.cart.anyOf@ in the specification.
-- 
-- Cart object to be displayed by the reader.
data TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable = TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable {
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line_items: List of line items in the cart.
  , terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableLineItems :: (GHC.Maybe.Maybe ([TerminalReaderReaderResourceLineItem]))
  -- | tax: Tax amount for the entire cart. A positive integer in the [smallest currency unit](https:\/\/stripe.com\/docs\/currencies\#zero-decimal).
  , terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTax :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | total: Total amount for the entire cart, including tax. A positive integer in the [smallest currency unit](https:\/\/stripe.com\/docs\/currencies\#zero-decimal).
  , terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTotal :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableLineItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTotal obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableLineItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTotal obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable" (\obj -> (((GHC.Base.pure TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "total"))
-- | Create a new 'TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable' with all required fields.
mkTerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable :: TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable
mkTerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable = TerminalReaderReaderResourceSetReaderDisplayActionCart'NonNullable{terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableCurrency = GHC.Maybe.Nothing,
                                                                                                                                          terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableLineItems = GHC.Maybe.Nothing,
                                                                                                                                          terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTax = GHC.Maybe.Nothing,
                                                                                                                                          terminalReaderReaderResourceSetReaderDisplayActionCart'NonNullableTotal = GHC.Maybe.Nothing}
