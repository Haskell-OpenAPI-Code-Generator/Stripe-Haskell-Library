{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postTreasuryOutboundTransfers
module StripeAPI.Operations.PostTreasuryOutboundTransfers where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/treasury/outbound_transfers
--
-- \<p>Creates an OutboundTransfer.\<\/p>
postTreasuryOutboundTransfers ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostTreasuryOutboundTransfersRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryOutboundTransfersResponse)
postTreasuryOutboundTransfers body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostTreasuryOutboundTransfersResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostTreasuryOutboundTransfersResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Treasury'outboundTransfer
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostTreasuryOutboundTransfersResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/treasury/outbound_transfers" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_transfers.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostTreasuryOutboundTransfersRequestBody = PostTreasuryOutboundTransfersRequestBody
  { -- | amount: Amount (in cents) to be transferred.
    postTreasuryOutboundTransfersRequestBodyAmount :: GHC.Types.Int,
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    postTreasuryOutboundTransfersRequestBodyCurrency :: Data.Text.Internal.Text,
    -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTreasuryOutboundTransfersRequestBodyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | destination_payment_method: The PaymentMethod to use as the payment instrument for the OutboundTransfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | destination_payment_method_options: Hash describing payment method configuration details.
    postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions :: (GHC.Maybe.Maybe PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'),
    -- | expand: Specifies which fields in the response should be expanded.
    postTreasuryOutboundTransfersRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | financial_account: The FinancialAccount to pull funds from.
    postTreasuryOutboundTransfersRequestBodyFinancialAccount :: Data.Text.Internal.Text,
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postTreasuryOutboundTransfersRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | statement_descriptor: Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for \`ach\` transfers or 140 characters for \`us_domestic_wire\` transfers. The default value is \"transfer\".
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTreasuryOutboundTransfersRequestBodyStatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundTransfersRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTreasuryOutboundTransfersRequestBodyAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= postTreasuryOutboundTransfersRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method_options" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyExpand obj) : ["financial_account" Data.Aeson.Types.ToJSON..= postTreasuryOutboundTransfersRequestBodyFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyStatementDescriptor obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTreasuryOutboundTransfersRequestBodyAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= postTreasuryOutboundTransfersRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method_options" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyExpand obj) : ["financial_account" Data.Aeson.Types.ToJSON..= postTreasuryOutboundTransfersRequestBodyFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyStatementDescriptor obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundTransfersRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundTransfersRequestBody" (\obj -> ((((((((GHC.Base.pure PostTreasuryOutboundTransfersRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "financial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor"))

-- | Create a new 'PostTreasuryOutboundTransfersRequestBody' with all required fields.
mkPostTreasuryOutboundTransfersRequestBody ::
  -- | 'postTreasuryOutboundTransfersRequestBodyAmount'
  GHC.Types.Int ->
  -- | 'postTreasuryOutboundTransfersRequestBodyCurrency'
  Data.Text.Internal.Text ->
  -- | 'postTreasuryOutboundTransfersRequestBodyFinancialAccount'
  Data.Text.Internal.Text ->
  PostTreasuryOutboundTransfersRequestBody
mkPostTreasuryOutboundTransfersRequestBody postTreasuryOutboundTransfersRequestBodyAmount postTreasuryOutboundTransfersRequestBodyCurrency postTreasuryOutboundTransfersRequestBodyFinancialAccount =
  PostTreasuryOutboundTransfersRequestBody
    { postTreasuryOutboundTransfersRequestBodyAmount = postTreasuryOutboundTransfersRequestBodyAmount,
      postTreasuryOutboundTransfersRequestBodyCurrency = postTreasuryOutboundTransfersRequestBodyCurrency,
      postTreasuryOutboundTransfersRequestBodyDescription = GHC.Maybe.Nothing,
      postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethod = GHC.Maybe.Nothing,
      postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions = GHC.Maybe.Nothing,
      postTreasuryOutboundTransfersRequestBodyExpand = GHC.Maybe.Nothing,
      postTreasuryOutboundTransfersRequestBodyFinancialAccount = postTreasuryOutboundTransfersRequestBodyFinancialAccount,
      postTreasuryOutboundTransfersRequestBodyMetadata = GHC.Maybe.Nothing,
      postTreasuryOutboundTransfersRequestBodyStatementDescriptor = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_transfers.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options@ in the specification.
--
-- Hash describing payment method configuration details.
data PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' = PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'
  { -- | us_bank_account
    postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount :: (GHC.Maybe.Maybe PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'" (\obj -> GHC.Base.pure PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account"))

-- | Create a new 'PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'' with all required fields.
mkPostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' :: PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'
mkPostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' = PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions' {postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_transfers.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options.properties.us_bank_account.anyOf@ in the specification.
data PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 = PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
  { -- | network
    postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network :: (GHC.Maybe.Maybe PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1" (\obj -> GHC.Base.pure PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network"))

-- | Create a new 'PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1' with all required fields.
mkPostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 :: PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
mkPostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 = PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 {postTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/treasury\/outbound_transfers.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options.properties.us_bank_account.anyOf.properties.network@ in the specification.
data PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"ach"@
    PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumAch
  | -- | Represents the JSON value @"us_domestic_wire"@
    PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumUsDomesticWire
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network' where
  toJSON (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Other val) = val
  toJSON (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumAch) = "ach"
  toJSON (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumUsDomesticWire) = "us_domestic_wire"

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ach" -> PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumAch
            | val GHC.Classes.== "us_domestic_wire" -> PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumUsDomesticWire
            | GHC.Base.otherwise -> PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/treasury\/outbound_transfers.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options.properties.us_bank_account.anyOf@ in the specification.
data PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants
  = -- | Represents the JSON value @""@
    PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'EmptyString
  | PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants where
  toJSON (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'EmptyString
        | GHC.Base.otherwise -> case (PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'PostTreasuryOutboundTransfersRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'postTreasuryOutboundTransfers'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryOutboundTransfersResponseError' is used.
data PostTreasuryOutboundTransfersResponse
  = -- | Means either no matching case available or a parse error
    PostTreasuryOutboundTransfersResponseError GHC.Base.String
  | -- | Successful response.
    PostTreasuryOutboundTransfersResponse200 Treasury'outboundTransfer
  | -- | Error response.
    PostTreasuryOutboundTransfersResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
