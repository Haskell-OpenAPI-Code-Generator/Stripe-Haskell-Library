-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTreasuryOutboundPayments
module StripeAPI.Operations.PostTreasuryOutboundPayments where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/treasury/outbound_payments
-- 
-- \<p>Creates an OutboundPayment.\<\/p>
postTreasuryOutboundPayments :: forall m . StripeAPI.Common.MonadHTTP m => PostTreasuryOutboundPaymentsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryOutboundPaymentsResponse) -- ^ Monadic computation which returns the result of the operation
postTreasuryOutboundPayments body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTreasuryOutboundPaymentsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTreasuryOutboundPaymentsResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                       Treasury'outboundPayment)
                                                                                                                                                                                           | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTreasuryOutboundPaymentsResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                         Error)
                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/treasury/outbound_payments") GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBody = PostTreasuryOutboundPaymentsRequestBody {
  -- | amount: Amount (in cents) to be transferred.
  postTreasuryOutboundPaymentsRequestBodyAmount :: GHC.Types.Int
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  , postTreasuryOutboundPaymentsRequestBodyCurrency :: Data.Text.Internal.Text
  -- | customer: ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the \`destination_payment_method\` passed in.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | destination_payment_method: The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with \`destination_payment_method_data\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | destination_payment_method_data: Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with \`destination_payment_method\`.
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData')
  -- | destination_payment_method_options: Payment method-specific configuration for this OutboundPayment.
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions')
  -- | end_user_details: End user details.
  , postTreasuryOutboundPaymentsRequestBodyEndUserDetails :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyEndUserDetails')
  -- | expand: Specifies which fields in the response should be expanded.
  , postTreasuryOutboundPaymentsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | financial_account: The FinancialAccount to pull funds from.
  , postTreasuryOutboundPaymentsRequestBodyFinancialAccount :: Data.Text.Internal.Text
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postTreasuryOutboundPaymentsRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | statement_descriptor: The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for \`ach\` payments, 140 characters for \`wire\` payments, or 500 characters for \`stripe\` network transfers. The default value is \`payment\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyStatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method_data" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method_options" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end_user_details" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyEndUserDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyExpand obj) : ["financial_account" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyStatementDescriptor obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method_data" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("destination_payment_method_options" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end_user_details" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyEndUserDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyExpand obj) : ["financial_account" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyStatementDescriptor obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBody" (\obj -> (((((((((((GHC.Base.pure PostTreasuryOutboundPaymentsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_payment_method_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "destination_payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "end_user_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "financial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBody' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBody :: GHC.Types.Int -- ^ 'postTreasuryOutboundPaymentsRequestBodyAmount'
  -> Data.Text.Internal.Text -- ^ 'postTreasuryOutboundPaymentsRequestBodyCurrency'
  -> Data.Text.Internal.Text -- ^ 'postTreasuryOutboundPaymentsRequestBodyFinancialAccount'
  -> PostTreasuryOutboundPaymentsRequestBody
mkPostTreasuryOutboundPaymentsRequestBody postTreasuryOutboundPaymentsRequestBodyAmount postTreasuryOutboundPaymentsRequestBodyCurrency postTreasuryOutboundPaymentsRequestBodyFinancialAccount = PostTreasuryOutboundPaymentsRequestBody{postTreasuryOutboundPaymentsRequestBodyAmount = postTreasuryOutboundPaymentsRequestBodyAmount,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyCurrency = postTreasuryOutboundPaymentsRequestBodyCurrency,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyCustomer = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDescription = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethod = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyEndUserDetails = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyFinancialAccount = postTreasuryOutboundPaymentsRequestBodyFinancialAccount,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyStatementDescriptor = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data@ in the specification.
-- 
-- Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with \`destination_payment_method\`.
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData' {
  -- | billing_details
  postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails')
  -- | financial_account
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'FinancialAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | type
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'
  -- | us_bank_account
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'FinancialAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Metadata obj) : ["type" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_details" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'FinancialAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Metadata obj) : ["type" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'" (\obj -> ((((GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_details")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData' :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type' -- ^ 'postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'
  -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData' postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'{postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails = GHC.Maybe.Nothing,
                                                                                                                                                                                                                       postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'FinancialAccount = GHC.Maybe.Nothing,
                                                                                                                                                                                                                       postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Metadata = GHC.Maybe.Nothing,
                                                                                                                                                                                                                       postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type = postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type,
                                                                                                                                                                                                                       postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.billing_details@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails' {
  -- | address
  postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'Variants)
  -- | email
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Variants)
  -- | name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | phone
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Phone obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Phone obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'" (\obj -> (((GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails' :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'{postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address = GHC.Maybe.Nothing,
                                                                                                                                                                            postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email = GHC.Maybe.Nothing,
                                                                                                                                                                            postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Name = GHC.Maybe.Nothing,
                                                                                                                                                                            postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Phone = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.billing_details.properties.address.anyOf@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1State obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1State obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1" (\obj -> (((((GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1{postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1City = GHC.Maybe.Nothing,
                                                                                                                                                                                                        postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Country = GHC.Maybe.Nothing,
                                                                                                                                                                                                        postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line1 = GHC.Maybe.Nothing,
                                                                                                                                                                                                        postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1Line2 = GHC.Maybe.Nothing,
                                                                                                                                                                                                        postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1PostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                                        postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.billing_details.properties.address.anyOf@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'Variants =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'EmptyString -- ^ Represents the JSON value @""@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'Variants
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'EmptyString
                             | GHC.Base.otherwise -> case (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Address'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.billing_details.properties.email.anyOf@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Variants =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'EmptyString -- ^ Represents the JSON value @""@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Variants
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'EmptyString
                             | GHC.Base.otherwise -> case (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'BillingDetails'Email'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.type@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type' =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'EnumFinancialAccount -- ^ Represents the JSON value @"financial_account"@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'EnumUsBankAccount -- ^ Represents the JSON value @"us_bank_account"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'Other val) = val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'EnumFinancialAccount) = "financial_account"
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'EnumUsBankAccount) = "us_bank_account"
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "financial_account" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'EnumFinancialAccount
                                            | val GHC.Classes.== "us_bank_account" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'EnumUsBankAccount
                                            | GHC.Base.otherwise -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'Type'Other val)
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.us_bank_account@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount' {
  -- | account_holder_type
  postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType')
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | account_type
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType')
  -- | financial_connections_account
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'FinancialConnectionsAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | routing_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'RoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'FinancialConnectionsAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'RoutingNumber obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_number" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'FinancialConnectionsAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'RoutingNumber obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'" (\obj -> ((((GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_connections_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount' :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'{postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType = GHC.Maybe.Nothing,
                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountNumber = GHC.Maybe.Nothing,
                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType = GHC.Maybe.Nothing,
                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'FinancialConnectionsAccount = GHC.Maybe.Nothing,
                                                                                                                                                                          postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'RoutingNumber = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.us_bank_account.properties.account_holder_type@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType' =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'EnumCompany -- ^ Represents the JSON value @"company"@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'EnumIndividual -- ^ Represents the JSON value @"individual"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'Other val) = val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'EnumCompany) = "company"
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'EnumIndividual) = "individual"
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "company" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'EnumCompany
                                            | val GHC.Classes.== "individual" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'EnumIndividual
                                            | GHC.Base.otherwise -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountHolderType'Other val)
-- | Defines the enum schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_data.properties.us_bank_account.properties.account_type@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType' =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'EnumChecking -- ^ Represents the JSON value @"checking"@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'EnumSavings -- ^ Represents the JSON value @"savings"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'Other val) = val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'EnumChecking) = "checking"
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'EnumSavings) = "savings"
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "checking" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'EnumChecking
                                            | val GHC.Classes.== "savings" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'EnumSavings
                                            | GHC.Base.otherwise -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodData'UsBankAccount'AccountType'Other val)
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options@ in the specification.
-- 
-- Payment method-specific configuration for this OutboundPayment.
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions' {
  -- | us_bank_account
  postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'" (\obj -> GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions' :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions' = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'{postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options.properties.us_bank_account.anyOf@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 {
  -- | network
  postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network :: (GHC.Maybe.Maybe PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1" (\obj -> GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 :: PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
mkPostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 = PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1{postTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options.properties.us_bank_account.anyOf.properties.network@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network' =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumAch -- ^ Represents the JSON value @"ach"@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumUsDomesticWire -- ^ Represents the JSON value @"us_domestic_wire"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Other val) = val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumAch) = "ach"
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumUsDomesticWire) = "us_domestic_wire"
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "ach" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumAch
                                            | val GHC.Classes.== "us_domestic_wire" -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'EnumUsDomesticWire
                                            | GHC.Base.otherwise -> PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1Network'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.destination_payment_method_options.properties.us_bank_account.anyOf@ in the specification.
-- 
-- 
data PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants =
   PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'EmptyString -- ^ Represents the JSON value @""@
  | PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants
    where toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'EmptyString
                             | GHC.Base.otherwise -> case (PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'PostTreasuryOutboundPaymentsRequestBodyDestinationPaymentMethodOptions'UsBankAccount'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/treasury\/outbound_payments.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.end_user_details@ in the specification.
-- 
-- End user details.
data PostTreasuryOutboundPaymentsRequestBodyEndUserDetails' = PostTreasuryOutboundPaymentsRequestBodyEndUserDetails' {
  -- | ip_address
  postTreasuryOutboundPaymentsRequestBodyEndUserDetails'IpAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | present
  , postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryOutboundPaymentsRequestBodyEndUserDetails'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyEndUserDetails'IpAddress obj) : ["present" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip_address" Data.Aeson.Types.ToJSON..=)) (postTreasuryOutboundPaymentsRequestBodyEndUserDetails'IpAddress obj) : ["present" Data.Aeson.Types.ToJSON..= postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryOutboundPaymentsRequestBodyEndUserDetails'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryOutboundPaymentsRequestBodyEndUserDetails'" (\obj -> (GHC.Base.pure PostTreasuryOutboundPaymentsRequestBodyEndUserDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "present"))
-- | Create a new 'PostTreasuryOutboundPaymentsRequestBodyEndUserDetails'' with all required fields.
mkPostTreasuryOutboundPaymentsRequestBodyEndUserDetails' :: GHC.Types.Bool -- ^ 'postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present'
  -> PostTreasuryOutboundPaymentsRequestBodyEndUserDetails'
mkPostTreasuryOutboundPaymentsRequestBodyEndUserDetails' postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present = PostTreasuryOutboundPaymentsRequestBodyEndUserDetails'{postTreasuryOutboundPaymentsRequestBodyEndUserDetails'IpAddress = GHC.Maybe.Nothing,
                                                                                                                                                                                postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present = postTreasuryOutboundPaymentsRequestBodyEndUserDetails'Present}
-- | Represents a response of the operation 'postTreasuryOutboundPayments'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryOutboundPaymentsResponseError' is used.
data PostTreasuryOutboundPaymentsResponse =
   PostTreasuryOutboundPaymentsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTreasuryOutboundPaymentsResponse200 Treasury'outboundPayment -- ^ Successful response.
  | PostTreasuryOutboundPaymentsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
