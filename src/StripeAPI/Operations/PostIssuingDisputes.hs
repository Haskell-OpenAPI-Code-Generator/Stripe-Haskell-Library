{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postIssuingDisputes
module StripeAPI.Operations.PostIssuingDisputes where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/issuing/disputes
--
-- \<p>Creates an Issuing \<code>Dispute\<\/code> object. Individual pieces of evidence within the \<code>evidence\<\/code> object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to \<a href=\"\/docs\/issuing\/purchases\/disputes\#dispute-reasons-and-evidence\">Dispute reasons and evidence\<\/a> for more details about evidence requirements.\<\/p>
postIssuingDisputes ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostIssuingDisputesRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostIssuingDisputesResponse)
postIssuingDisputes body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostIssuingDisputesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostIssuingDisputesResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Issuing'dispute
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostIssuingDisputesResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/issuing/disputes") GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostIssuingDisputesRequestBody = PostIssuingDisputesRequestBody
  { -- | evidence: Evidence provided for the dispute.
    postIssuingDisputesRequestBodyEvidence :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'),
    -- | expand: Specifies which fields in the response should be expanded.
    postIssuingDisputesRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postIssuingDisputesRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | transaction: The ID of the issuing transaction to create a dispute for.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postIssuingDisputesRequestBodyTransaction :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("evidence" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence obj : "expand" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyExpand obj : "metadata" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyMetadata obj : "transaction" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyTransaction obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("evidence" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence obj) GHC.Base.<> (("expand" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyExpand obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyMetadata obj) GHC.Base.<> ("transaction" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyTransaction obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBody" (\obj -> (((GHC.Base.pure PostIssuingDisputesRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "evidence")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "transaction"))

-- | Create a new 'PostIssuingDisputesRequestBody' with all required fields.
mkPostIssuingDisputesRequestBody ::
  -- | 'postIssuingDisputesRequestBodyTransaction'
  Data.Text.Internal.Text ->
  PostIssuingDisputesRequestBody
mkPostIssuingDisputesRequestBody postIssuingDisputesRequestBodyTransaction =
  PostIssuingDisputesRequestBody
    { postIssuingDisputesRequestBodyEvidence = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyExpand = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyMetadata = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyTransaction = postIssuingDisputesRequestBodyTransaction
    }

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence@ in the specification.
--
-- Evidence provided for the dispute.
data PostIssuingDisputesRequestBodyEvidence' = PostIssuingDisputesRequestBodyEvidence'
  { -- | canceled
    postIssuingDisputesRequestBodyEvidence'Canceled :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'Variants),
    -- | duplicate
    postIssuingDisputesRequestBodyEvidence'Duplicate :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Duplicate'Variants),
    -- | fraudulent
    postIssuingDisputesRequestBodyEvidence'Fraudulent :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Fraudulent'Variants),
    -- | merchandise_not_as_described
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'Variants),
    -- | not_received
    postIssuingDisputesRequestBodyEvidence'NotReceived :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'NotReceived'Variants),
    -- | other
    postIssuingDisputesRequestBodyEvidence'Other :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Other'Variants),
    -- | reason
    postIssuingDisputesRequestBodyEvidence'Reason :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Reason'),
    -- | service_not_as_described
    postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence' where
  toJSON obj = Data.Aeson.Types.Internal.object ("canceled" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled obj : "duplicate" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate obj : "fraudulent" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Fraudulent obj : "merchandise_not_as_described" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed obj : "not_received" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived obj : "other" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other obj : "reason" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Reason obj : "service_not_as_described" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("canceled" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled obj) GHC.Base.<> (("duplicate" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate obj) GHC.Base.<> (("fraudulent" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Fraudulent obj) GHC.Base.<> (("merchandise_not_as_described" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed obj) GHC.Base.<> (("not_received" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived obj) GHC.Base.<> (("other" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other obj) GHC.Base.<> (("reason" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Reason obj) GHC.Base.<> ("service_not_as_described" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed obj))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'" (\obj -> (((((((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "canceled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "duplicate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fraudulent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "merchandise_not_as_described")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "not_received")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "other")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "service_not_as_described"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence' :: PostIssuingDisputesRequestBodyEvidence'
mkPostIssuingDisputesRequestBodyEvidence' =
  PostIssuingDisputesRequestBodyEvidence'
    { postIssuingDisputesRequestBodyEvidence'Canceled = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Duplicate = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Fraudulent = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'NotReceived = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Other = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Reason = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 = PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants),
    -- | canceled_at
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants),
    -- | cancellation_policy_provided
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants),
    -- | cancellation_reason
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationReason :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expected_at
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_description
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_type
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'),
    -- | return_status
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'),
    -- | returned_at
    postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation obj : "canceled_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt obj : "cancellation_policy_provided" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided obj : "cancellation_reason" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationReason obj : "expected_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1Explanation obj : "product_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductDescription obj : "product_type" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType obj : "return_status" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus obj : "returned_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation obj) GHC.Base.<> (("canceled_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt obj) GHC.Base.<> (("cancellation_policy_provided" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided obj) GHC.Base.<> (("cancellation_reason" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationReason obj) GHC.Base.<> (("expected_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1Explanation obj) GHC.Base.<> (("product_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductDescription obj) GHC.Base.<> (("product_type" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType obj) GHC.Base.<> (("return_status" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus obj) GHC.Base.<> ("returned_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt obj))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1" (\obj -> (((((((((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "canceled_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cancellation_policy_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cancellation_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expected_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "return_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "returned_at"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1
    { postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationReason = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1Explanation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductDescription = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.canceled_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CanceledAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.cancellation_policy_provided.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Bool GHC.Types.Bool
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Bool a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Bool Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.expected_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.product_type@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumEmptyString
  | -- | Represents the JSON value @"merchandise"@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumMerchandise
  | -- | Represents the JSON value @"service"@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumService
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType' where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'Other val) = val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumEmptyString) = ""
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumMerchandise) = "merchandise"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumService) = "service"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumEmptyString
            | val GHC.Classes.== "merchandise" -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumMerchandise
            | val GHC.Classes.== "service" -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'EnumService
            | GHC.Base.otherwise -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ProductType'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.return_status@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumEmptyString
  | -- | Represents the JSON value @"merchant_rejected"@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumMerchantRejected
  | -- | Represents the JSON value @"successful"@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumSuccessful
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus' where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Other val) = val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumEmptyString) = ""
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumMerchantRejected) = "merchant_rejected"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumSuccessful) = "successful"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumEmptyString
            | val GHC.Classes.== "merchant_rejected" -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumMerchantRejected
            | val GHC.Classes.== "successful" -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumSuccessful
            | GHC.Base.otherwise -> PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.returned_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Canceled'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Canceled'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Canceled'PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Canceled'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Canceled'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Canceled'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Canceled'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Canceled'PostIssuingDisputesRequestBodyEvidence'Canceled'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 = PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants),
    -- | card_statement
    postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants),
    -- | cash_receipt
    postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants),
    -- | check_image
    postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | original_transaction
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation obj : "card_statement" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement obj : "cash_receipt" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt obj : "check_image" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1Explanation obj : "original_transaction" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation obj) GHC.Base.<> (("card_statement" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement obj) GHC.Base.<> (("cash_receipt" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt obj) GHC.Base.<> (("check_image" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1Explanation obj) GHC.Base.<> ("original_transaction" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1" (\obj -> (((((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_statement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cash_receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "check_image")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "original_transaction"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1
    { postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1Explanation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.card_statement.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CardStatement'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.cash_receipt.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.check_image.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1CheckImage'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Duplicate'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Duplicate'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Duplicate'PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Duplicate'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Duplicate'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Duplicate'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Duplicate'PostIssuingDisputesRequestBodyEvidence'Duplicate'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.fraudulent.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 = PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1Explanation obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation obj) GHC.Base.<> ("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1Explanation obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1" (\obj -> (GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1
    { postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1Explanation = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.fraudulent.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.fraudulent.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Fraudulent'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Fraudulent'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Fraudulent'PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Fraudulent'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Fraudulent'PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Fraudulent'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Fraudulent'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Fraudulent'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Fraudulent'PostIssuingDisputesRequestBodyEvidence'Fraudulent'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 = PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | received_at
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants),
    -- | return_description
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | return_status
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'),
    -- | returned_at
    postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation obj : "received_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt obj : "return_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription obj : "return_status" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus obj : "returned_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation obj) GHC.Base.<> (("received_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt obj) GHC.Base.<> (("return_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription obj) GHC.Base.<> (("return_status" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus obj) GHC.Base.<> ("returned_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1" (\obj -> (((((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "received_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "return_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "return_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "returned_at"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
    { postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.received_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.return_status@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumEmptyString
  | -- | Represents the JSON value @"merchant_rejected"@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumMerchantRejected
  | -- | Represents the JSON value @"successful"@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumSuccessful
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus' where
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Other val) = val
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumEmptyString) = ""
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumMerchantRejected) = "merchant_rejected"
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumSuccessful) = "successful"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumEmptyString
            | val GHC.Classes.== "merchant_rejected" -> PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumMerchantRejected
            | val GHC.Classes.== "successful" -> PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumSuccessful
            | GHC.Base.otherwise -> PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.returned_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'PostIssuingDisputesRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 = PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants),
    -- | expected_at
    postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_description
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_type
    postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation obj : "expected_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1Explanation obj : "product_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductDescription obj : "product_type" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation obj) GHC.Base.<> (("expected_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1Explanation obj) GHC.Base.<> (("product_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductDescription obj) GHC.Base.<> ("product_type" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType obj)))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1" (\obj -> ((((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expected_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_type"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1
    { postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1Explanation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductDescription = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf.properties.expected_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf.properties.product_type@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumEmptyString
  | -- | Represents the JSON value @"merchandise"@
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumMerchandise
  | -- | Represents the JSON value @"service"@
    PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumService
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType' where
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'Other val) = val
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumEmptyString) = ""
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumMerchandise) = "merchandise"
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumService) = "service"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumEmptyString
            | val GHC.Classes.== "merchandise" -> PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumMerchandise
            | val GHC.Classes.== "service" -> PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumService
            | GHC.Base.otherwise -> PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1ProductType'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'NotReceived'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'NotReceived'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'NotReceived'PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'NotReceived'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'NotReceived'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'NotReceived'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'NotReceived'PostIssuingDisputesRequestBodyEvidence'NotReceived'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 = PostIssuingDisputesRequestBodyEvidence'Other'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Other'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_description
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_type
    postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1Explanation obj : "product_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductDescription obj : "product_type" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1Explanation obj) GHC.Base.<> (("product_description" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductDescription obj) GHC.Base.<> ("product_type" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'Other'OneOf1" (\obj -> (((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_type"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'Other'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'Other'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'Other'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'Other'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'Other'OneOf1
    { postIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Other'OneOf1Explanation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductDescription = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf.properties.product_type@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumEmptyString
  | -- | Represents the JSON value @"merchandise"@
    PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumMerchandise
  | -- | Represents the JSON value @"service"@
    PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumService
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType' where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'Other val) = val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumEmptyString) = ""
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumMerchandise) = "merchandise"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumService) = "service"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumEmptyString
            | val GHC.Classes.== "merchandise" -> PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumMerchandise
            | val GHC.Classes.== "service" -> PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'EnumService
            | GHC.Base.otherwise -> PostIssuingDisputesRequestBodyEvidence'Other'OneOf1ProductType'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Other'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'Other'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'Other'PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 PostIssuingDisputesRequestBodyEvidence'Other'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Other'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'Other'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Other'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'Other'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'Other'PostIssuingDisputesRequestBodyEvidence'Other'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.reason@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'Reason'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingDisputesRequestBodyEvidence'Reason'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingDisputesRequestBodyEvidence'Reason'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"canceled"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumCanceled
  | -- | Represents the JSON value @"duplicate"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumDuplicate
  | -- | Represents the JSON value @"fraudulent"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumFraudulent
  | -- | Represents the JSON value @"merchandise_not_as_described"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumMerchandiseNotAsDescribed
  | -- | Represents the JSON value @"not_received"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumNotReceived
  | -- | Represents the JSON value @"other"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumOther
  | -- | Represents the JSON value @"service_not_as_described"@
    PostIssuingDisputesRequestBodyEvidence'Reason'EnumServiceNotAsDescribed
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'Reason' where
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'Other val) = val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumCanceled) = "canceled"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumDuplicate) = "duplicate"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumFraudulent) = "fraudulent"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumMerchandiseNotAsDescribed) = "merchandise_not_as_described"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumNotReceived) = "not_received"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumOther) = "other"
  toJSON (PostIssuingDisputesRequestBodyEvidence'Reason'EnumServiceNotAsDescribed) = "service_not_as_described"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'Reason' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "canceled" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumCanceled
            | val GHC.Classes.== "duplicate" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumDuplicate
            | val GHC.Classes.== "fraudulent" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumFraudulent
            | val GHC.Classes.== "merchandise_not_as_described" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumMerchandiseNotAsDescribed
            | val GHC.Classes.== "not_received" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumNotReceived
            | val GHC.Classes.== "other" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumOther
            | val GHC.Classes.== "service_not_as_described" -> PostIssuingDisputesRequestBodyEvidence'Reason'EnumServiceNotAsDescribed
            | GHC.Base.otherwise -> PostIssuingDisputesRequestBodyEvidence'Reason'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 = PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
  { -- | additional_documentation
    postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants),
    -- | canceled_at
    postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants),
    -- | cancellation_reason
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | received_at
    postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt :: (GHC.Maybe.Maybe PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation obj : "canceled_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt obj : "cancellation_reason" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason obj : "explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation obj : "received_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_documentation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation obj) GHC.Base.<> (("canceled_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt obj) GHC.Base.<> (("cancellation_reason" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason obj) GHC.Base.<> (("explanation" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation obj) GHC.Base.<> ("received_at" Data.Aeson.Types.ToJSON..= postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt obj)))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1" (\obj -> ((((GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "canceled_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cancellation_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "received_at"))

-- | Create a new 'PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1' with all required fields.
mkPostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 :: PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
mkPostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 =
  PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
    { postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation = GHC.Maybe.Nothing,
      postIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf.properties.additional_documentation.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf.properties.canceled_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf.properties.received_at.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf@ in the specification.
data PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'Variants
  = -- | Represents the JSON value @""@
    PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'EmptyString
  | PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'Variants where
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'EmptyString
        | GHC.Base.otherwise -> case (PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'PostIssuingDisputesRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'postIssuingDisputes'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIssuingDisputesResponseError' is used.
data PostIssuingDisputesResponse
  = -- | Means either no matching case available or a parse error
    PostIssuingDisputesResponseError GHC.Base.String
  | -- | Successful response.
    PostIssuingDisputesResponse200 Issuing'dispute
  | -- | Error response.
    PostIssuingDisputesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
