-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postAccount
module StripeAPI.Operations.PostAccount where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/account
-- 
-- \<p>Updates a \<a href=\"\/docs\/connect\/accounts\">connected account\<\/a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked \<strong>Custom Only\<\/strong> below.) Parameters marked \<strong>Custom and Express\<\/strong> are not supported for Standard accounts.\<\/p>
-- 
-- \<p>To update your own account, use the \<a href=\"https:\/\/dashboard.stripe.com\/account\">Dashboard\<\/a>. Refer to our \<a href=\"\/docs\/connect\/updating-accounts\">Connect\<\/a> documentation to learn more about updating accounts.\<\/p>
postAccount :: forall m . StripeAPI.Common.MonadHTTP m => GHC.Maybe.Maybe PostAccountRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostAccountResponse) -- ^ Monadic computation which returns the result of the operation
postAccount body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostAccountResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostAccountResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                    Account)
                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostAccountResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                      Error)
                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/account") GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostAccountRequestBody = PostAccountRequestBody {
  -- | account_token: An [account token](https:\/\/stripe.com\/docs\/api\#create_account_token), used to securely provide details to the account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodyAccountToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | bank_account: Either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/js), or a dictionary containing a user\'s bank account details.
  , postAccountRequestBodyBankAccount :: (GHC.Maybe.Maybe PostAccountRequestBodyBankAccount'Variants)
  -- | business_profile: Business information about the account.
  , postAccountRequestBodyBusinessProfile :: (GHC.Maybe.Maybe PostAccountRequestBodyBusinessProfile')
  -- | business_type: The business type.
  , postAccountRequestBodyBusinessType :: (GHC.Maybe.Maybe PostAccountRequestBodyBusinessType')
  -- | capabilities: Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
  , postAccountRequestBodyCapabilities :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities')
  -- | company: Information about the company or business. This field is available for any \`business_type\`.
  , postAccountRequestBodyCompany :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany')
  -- | default_currency: Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account\'s country](https:\/\/stripe.com\/docs\/payouts).
  , postAccountRequestBodyDefaultCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | documents: Documents that may be submitted to satisfy various informational requests.
  , postAccountRequestBodyDocuments :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments')
  -- | email: The email address of the account holder. This is only to make the account easier to identify to you. Stripe only emails Custom accounts with your consent.
  , postAccountRequestBodyEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expand: Specifies which fields in the response should be expanded.
  , postAccountRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | external_account: A card or bank account to attach to the account for receiving [payouts](https:\/\/stripe.com\/docs\/connect\/bank-debit-card-payouts) (you wonâ€™t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/js), or a dictionary, as documented in the \`external_account\` parameter for [bank account](https:\/\/stripe.com\/docs\/api\#account_create_bank_account) creation. \<br>\<br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the bank account or card creation API.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyExternalAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | individual: Information about the person represented by the account. This field is null unless \`business_type\` is set to \`individual\`.
  , postAccountRequestBodyIndividual :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual')
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postAccountRequestBodyMetadata :: (GHC.Maybe.Maybe PostAccountRequestBodyMetadata'Variants)
  -- | settings: Options for customizing how the account functions within Stripe.
  , postAccountRequestBodySettings :: (GHC.Maybe.Maybe PostAccountRequestBodySettings')
  -- | tos_acceptance: Details on the account\'s acceptance of the [Stripe Services Agreement](https:\/\/stripe.com\/docs\/connect\/updating-accounts\#tos-acceptance).
  , postAccountRequestBodyTosAcceptance :: (GHC.Maybe.Maybe PostAccountRequestBodyTosAcceptance')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_token" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyAccountToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyExternalAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_token" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyAccountToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyExternalAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBody" (\obj -> ((((((((((((((GHC.Base.pure PostAccountRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_profile")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capabilities")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "individual")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance"))
-- | Create a new 'PostAccountRequestBody' with all required fields.
mkPostAccountRequestBody :: PostAccountRequestBody
mkPostAccountRequestBody = PostAccountRequestBody{postAccountRequestBodyAccountToken = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyBankAccount = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyBusinessProfile = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyBusinessType = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyCapabilities = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyCompany = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyDefaultCurrency = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyDocuments = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyEmail = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyExpand = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyExternalAccount = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyIndividual = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyMetadata = GHC.Maybe.Nothing,
                                                  postAccountRequestBodySettings = GHC.Maybe.Nothing,
                                                  postAccountRequestBodyTosAcceptance = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodyBankAccount'OneOf1 = PostAccountRequestBodyBankAccount'OneOf1 {
  -- | account_holder_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodyBankAccount'OneOf1AccountHolderName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | account_holder_type
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBankAccount'OneOf1AccountHolderType :: (GHC.Maybe.Maybe PostAccountRequestBodyBankAccount'OneOf1AccountHolderType')
  -- | account_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBankAccount'OneOf1AccountNumber :: Data.Text.Internal.Text
  -- | account_type
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBankAccount'OneOf1AccountType :: (GHC.Maybe.Maybe PostAccountRequestBodyBankAccount'OneOf1AccountType')
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBankAccount'OneOf1Country :: Data.Text.Internal.Text
  -- | currency
  , postAccountRequestBodyBankAccount'OneOf1Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | object
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBankAccount'OneOf1Object :: (GHC.Maybe.Maybe PostAccountRequestBodyBankAccount'OneOf1Object')
  -- | routing_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBankAccount'OneOf1RoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBankAccount'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1AccountHolderType obj) : ["account_number" Data.Aeson.Types.ToJSON..= postAccountRequestBodyBankAccount'OneOf1AccountNumber obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1AccountType obj) : ["country" Data.Aeson.Types.ToJSON..= postAccountRequestBodyBankAccount'OneOf1Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1RoutingNumber obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1AccountHolderType obj) : ["account_number" Data.Aeson.Types.ToJSON..= postAccountRequestBodyBankAccount'OneOf1AccountNumber obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1AccountType obj) : ["country" Data.Aeson.Types.ToJSON..= postAccountRequestBodyBankAccount'OneOf1Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBankAccount'OneOf1RoutingNumber obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBankAccount'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyBankAccount'OneOf1" (\obj -> (((((((GHC.Base.pure PostAccountRequestBodyBankAccount'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number"))
-- | Create a new 'PostAccountRequestBodyBankAccount'OneOf1' with all required fields.
mkPostAccountRequestBodyBankAccount'OneOf1 :: Data.Text.Internal.Text -- ^ 'postAccountRequestBodyBankAccount'OneOf1AccountNumber'
  -> Data.Text.Internal.Text -- ^ 'postAccountRequestBodyBankAccount'OneOf1Country'
  -> PostAccountRequestBodyBankAccount'OneOf1
mkPostAccountRequestBodyBankAccount'OneOf1 postAccountRequestBodyBankAccount'OneOf1AccountNumber postAccountRequestBodyBankAccount'OneOf1Country = PostAccountRequestBodyBankAccount'OneOf1{postAccountRequestBodyBankAccount'OneOf1AccountHolderName = GHC.Maybe.Nothing,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1AccountHolderType = GHC.Maybe.Nothing,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1AccountNumber = postAccountRequestBodyBankAccount'OneOf1AccountNumber,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1AccountType = GHC.Maybe.Nothing,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1Country = postAccountRequestBodyBankAccount'OneOf1Country,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1Currency = GHC.Maybe.Nothing,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1Object = GHC.Maybe.Nothing,
                                                                                                                                                                                            postAccountRequestBodyBankAccount'OneOf1RoutingNumber = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.account_holder_type@ in the specification.
-- 
-- 
data PostAccountRequestBodyBankAccount'OneOf1AccountHolderType' =
   PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany -- ^ Represents the JSON value @"company"@
  | PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual -- ^ Represents the JSON value @"individual"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'
    where toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'Other val) = val
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany) = "company"
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual) = "individual"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "company" -> PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany
                                            | val GHC.Classes.== "individual" -> PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual
                                            | GHC.Base.otherwise -> PostAccountRequestBodyBankAccount'OneOf1AccountHolderType'Other val)
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.account_type@ in the specification.
-- 
-- 
data PostAccountRequestBodyBankAccount'OneOf1AccountType' =
   PostAccountRequestBodyBankAccount'OneOf1AccountType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodyBankAccount'OneOf1AccountType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumChecking -- ^ Represents the JSON value @"checking"@
  | PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumFutsu -- ^ Represents the JSON value @"futsu"@
  | PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumSavings -- ^ Represents the JSON value @"savings"@
  | PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumToza -- ^ Represents the JSON value @"toza"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBankAccount'OneOf1AccountType'
    where toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountType'Other val) = val
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumChecking) = "checking"
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumFutsu) = "futsu"
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumSavings) = "savings"
          toJSON (PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumToza) = "toza"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBankAccount'OneOf1AccountType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "checking" -> PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumChecking
                                            | val GHC.Classes.== "futsu" -> PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumFutsu
                                            | val GHC.Classes.== "savings" -> PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumSavings
                                            | val GHC.Classes.== "toza" -> PostAccountRequestBodyBankAccount'OneOf1AccountType'EnumToza
                                            | GHC.Base.otherwise -> PostAccountRequestBodyBankAccount'OneOf1AccountType'Other val)
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.object@ in the specification.
-- 
-- 
data PostAccountRequestBodyBankAccount'OneOf1Object' =
   PostAccountRequestBodyBankAccount'OneOf1Object'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodyBankAccount'OneOf1Object'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodyBankAccount'OneOf1Object'EnumBankAccount -- ^ Represents the JSON value @"bank_account"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBankAccount'OneOf1Object'
    where toJSON (PostAccountRequestBodyBankAccount'OneOf1Object'Other val) = val
          toJSON (PostAccountRequestBodyBankAccount'OneOf1Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodyBankAccount'OneOf1Object'EnumBankAccount) = "bank_account"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBankAccount'OneOf1Object'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "bank_account" -> PostAccountRequestBodyBankAccount'OneOf1Object'EnumBankAccount
                                            | GHC.Base.otherwise -> PostAccountRequestBodyBankAccount'OneOf1Object'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf@ in the specification.
-- 
-- Either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/js), or a dictionary containing a user\'s bank account details.
data PostAccountRequestBodyBankAccount'Variants =
   PostAccountRequestBodyBankAccount'PostAccountRequestBodyBankAccount'OneOf1 PostAccountRequestBodyBankAccount'OneOf1
  | PostAccountRequestBodyBankAccount'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBankAccount'Variants
    where toJSON (PostAccountRequestBodyBankAccount'PostAccountRequestBodyBankAccount'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodyBankAccount'Text a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBankAccount'Variants
    where parseJSON val = case (PostAccountRequestBodyBankAccount'PostAccountRequestBodyBankAccount'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostAccountRequestBodyBankAccount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile@ in the specification.
-- 
-- Business information about the account.
data PostAccountRequestBodyBusinessProfile' = PostAccountRequestBodyBusinessProfile' {
  -- | mcc
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 4
  postAccountRequestBodyBusinessProfile'Mcc :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBusinessProfile'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 40000
  , postAccountRequestBodyBusinessProfile'ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | support_address
  , postAccountRequestBodyBusinessProfile'SupportAddress :: (GHC.Maybe.Maybe PostAccountRequestBodyBusinessProfile'SupportAddress')
  -- | support_email
  , postAccountRequestBodyBusinessProfile'SupportEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | support_phone
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBusinessProfile'SupportPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | support_url
  , postAccountRequestBodyBusinessProfile'SupportUrl :: (GHC.Maybe.Maybe PostAccountRequestBodyBusinessProfile'SupportUrl'Variants)
  -- | url
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBusinessProfile'Url :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBusinessProfile'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'Mcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'Url obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'Mcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'Url obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBusinessProfile'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyBusinessProfile'" (\obj -> (((((((GHC.Base.pure PostAccountRequestBodyBusinessProfile' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mcc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))
-- | Create a new 'PostAccountRequestBodyBusinessProfile'' with all required fields.
mkPostAccountRequestBodyBusinessProfile' :: PostAccountRequestBodyBusinessProfile'
mkPostAccountRequestBodyBusinessProfile' = PostAccountRequestBodyBusinessProfile'{postAccountRequestBodyBusinessProfile'Mcc = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'Name = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'ProductDescription = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'SupportAddress = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'SupportEmail = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'SupportPhone = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'SupportUrl = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyBusinessProfile'Url = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.support_address@ in the specification.
-- 
-- 
data PostAccountRequestBodyBusinessProfile'SupportAddress' = PostAccountRequestBodyBusinessProfile'SupportAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountRequestBodyBusinessProfile'SupportAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBusinessProfile'SupportAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyBusinessProfile'SupportAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyBusinessProfile'SupportAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBusinessProfile'SupportAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyBusinessProfile'SupportAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBusinessProfile'SupportAddress'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'State obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyBusinessProfile'SupportAddress'State obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBusinessProfile'SupportAddress'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyBusinessProfile'SupportAddress'" (\obj -> (((((GHC.Base.pure PostAccountRequestBodyBusinessProfile'SupportAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'PostAccountRequestBodyBusinessProfile'SupportAddress'' with all required fields.
mkPostAccountRequestBodyBusinessProfile'SupportAddress' :: PostAccountRequestBodyBusinessProfile'SupportAddress'
mkPostAccountRequestBodyBusinessProfile'SupportAddress' = PostAccountRequestBodyBusinessProfile'SupportAddress'{postAccountRequestBodyBusinessProfile'SupportAddress'City = GHC.Maybe.Nothing,
                                                                                                                postAccountRequestBodyBusinessProfile'SupportAddress'Country = GHC.Maybe.Nothing,
                                                                                                                postAccountRequestBodyBusinessProfile'SupportAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                                postAccountRequestBodyBusinessProfile'SupportAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                                postAccountRequestBodyBusinessProfile'SupportAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                                postAccountRequestBodyBusinessProfile'SupportAddress'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.support_url.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodyBusinessProfile'SupportUrl'Variants =
   PostAccountRequestBodyBusinessProfile'SupportUrl'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodyBusinessProfile'SupportUrl'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBusinessProfile'SupportUrl'Variants
    where toJSON (PostAccountRequestBodyBusinessProfile'SupportUrl'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodyBusinessProfile'SupportUrl'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBusinessProfile'SupportUrl'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodyBusinessProfile'SupportUrl'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodyBusinessProfile'SupportUrl'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_type@ in the specification.
-- 
-- The business type.
data PostAccountRequestBodyBusinessType' =
   PostAccountRequestBodyBusinessType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodyBusinessType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodyBusinessType'EnumCompany -- ^ Represents the JSON value @"company"@
  | PostAccountRequestBodyBusinessType'EnumGovernmentEntity -- ^ Represents the JSON value @"government_entity"@
  | PostAccountRequestBodyBusinessType'EnumIndividual -- ^ Represents the JSON value @"individual"@
  | PostAccountRequestBodyBusinessType'EnumNonProfit -- ^ Represents the JSON value @"non_profit"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyBusinessType'
    where toJSON (PostAccountRequestBodyBusinessType'Other val) = val
          toJSON (PostAccountRequestBodyBusinessType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodyBusinessType'EnumCompany) = "company"
          toJSON (PostAccountRequestBodyBusinessType'EnumGovernmentEntity) = "government_entity"
          toJSON (PostAccountRequestBodyBusinessType'EnumIndividual) = "individual"
          toJSON (PostAccountRequestBodyBusinessType'EnumNonProfit) = "non_profit"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyBusinessType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "company" -> PostAccountRequestBodyBusinessType'EnumCompany
                                            | val GHC.Classes.== "government_entity" -> PostAccountRequestBodyBusinessType'EnumGovernmentEntity
                                            | val GHC.Classes.== "individual" -> PostAccountRequestBodyBusinessType'EnumIndividual
                                            | val GHC.Classes.== "non_profit" -> PostAccountRequestBodyBusinessType'EnumNonProfit
                                            | GHC.Base.otherwise -> PostAccountRequestBodyBusinessType'Other val)
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities@ in the specification.
-- 
-- Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
data PostAccountRequestBodyCapabilities' = PostAccountRequestBodyCapabilities' {
  -- | acss_debit_payments
  postAccountRequestBodyCapabilities'AcssDebitPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'AcssDebitPayments')
  -- | affirm_payments
  , postAccountRequestBodyCapabilities'AffirmPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'AffirmPayments')
  -- | afterpay_clearpay_payments
  , postAccountRequestBodyCapabilities'AfterpayClearpayPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'AfterpayClearpayPayments')
  -- | au_becs_debit_payments
  , postAccountRequestBodyCapabilities'AuBecsDebitPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'AuBecsDebitPayments')
  -- | bacs_debit_payments
  , postAccountRequestBodyCapabilities'BacsDebitPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'BacsDebitPayments')
  -- | bancontact_payments
  , postAccountRequestBodyCapabilities'BancontactPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'BancontactPayments')
  -- | bank_transfer_payments
  , postAccountRequestBodyCapabilities'BankTransferPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'BankTransferPayments')
  -- | boleto_payments
  , postAccountRequestBodyCapabilities'BoletoPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'BoletoPayments')
  -- | card_issuing
  , postAccountRequestBodyCapabilities'CardIssuing :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'CardIssuing')
  -- | card_payments
  , postAccountRequestBodyCapabilities'CardPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'CardPayments')
  -- | cartes_bancaires_payments
  , postAccountRequestBodyCapabilities'CartesBancairesPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'CartesBancairesPayments')
  -- | eps_payments
  , postAccountRequestBodyCapabilities'EpsPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'EpsPayments')
  -- | fpx_payments
  , postAccountRequestBodyCapabilities'FpxPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'FpxPayments')
  -- | giropay_payments
  , postAccountRequestBodyCapabilities'GiropayPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'GiropayPayments')
  -- | grabpay_payments
  , postAccountRequestBodyCapabilities'GrabpayPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'GrabpayPayments')
  -- | ideal_payments
  , postAccountRequestBodyCapabilities'IdealPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'IdealPayments')
  -- | jcb_payments
  , postAccountRequestBodyCapabilities'JcbPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'JcbPayments')
  -- | klarna_payments
  , postAccountRequestBodyCapabilities'KlarnaPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'KlarnaPayments')
  -- | konbini_payments
  , postAccountRequestBodyCapabilities'KonbiniPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'KonbiniPayments')
  -- | legacy_payments
  , postAccountRequestBodyCapabilities'LegacyPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'LegacyPayments')
  -- | link_payments
  , postAccountRequestBodyCapabilities'LinkPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'LinkPayments')
  -- | oxxo_payments
  , postAccountRequestBodyCapabilities'OxxoPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'OxxoPayments')
  -- | p24_payments
  , postAccountRequestBodyCapabilities'P24Payments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'P24Payments')
  -- | paynow_payments
  , postAccountRequestBodyCapabilities'PaynowPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'PaynowPayments')
  -- | promptpay_payments
  , postAccountRequestBodyCapabilities'PromptpayPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'PromptpayPayments')
  -- | sepa_debit_payments
  , postAccountRequestBodyCapabilities'SepaDebitPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'SepaDebitPayments')
  -- | sofort_payments
  , postAccountRequestBodyCapabilities'SofortPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'SofortPayments')
  -- | tax_reporting_us_1099_k
  , postAccountRequestBodyCapabilities'TaxReportingUs_1099K :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'TaxReportingUs_1099K')
  -- | tax_reporting_us_1099_misc
  , postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc')
  -- | transfers
  , postAccountRequestBodyCapabilities'Transfers :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'Transfers')
  -- | treasury
  , postAccountRequestBodyCapabilities'Treasury :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'Treasury')
  -- | us_bank_account_ach_payments
  , postAccountRequestBodyCapabilities'UsBankAccountAchPayments :: (GHC.Maybe.Maybe PostAccountRequestBodyCapabilities'UsBankAccountAchPayments')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AcssDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AffirmPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AfterpayClearpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AuBecsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BancontactPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_transfer_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BankTransferPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BoletoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CartesBancairesPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'EpsPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'FpxPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GiropayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GrabpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'IdealPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'JcbPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KlarnaPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KonbiniPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legacy_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LegacyPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LinkPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'OxxoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'P24Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PaynowPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PromptpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SofortPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_k" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099K obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_misc" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfers" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Transfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Treasury obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account_ach_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'UsBankAccountAchPayments obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AcssDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AffirmPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AfterpayClearpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AuBecsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BancontactPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_transfer_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BankTransferPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BoletoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CartesBancairesPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'EpsPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'FpxPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GiropayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GrabpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'IdealPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'JcbPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KlarnaPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KonbiniPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legacy_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LegacyPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LinkPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'OxxoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'P24Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PaynowPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PromptpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SofortPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_k" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099K obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_misc" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfers" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Transfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Treasury obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account_ach_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'UsBankAccountAchPayments obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'" (\obj -> (((((((((((((((((((((((((((((((GHC.Base.pure PostAccountRequestBodyCapabilities' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_transfer_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cartes_bancaires_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jcb_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "legacy_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_reporting_us_1099_k")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_reporting_us_1099_misc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "treasury")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account_ach_payments"))
-- | Create a new 'PostAccountRequestBodyCapabilities'' with all required fields.
mkPostAccountRequestBodyCapabilities' :: PostAccountRequestBodyCapabilities'
mkPostAccountRequestBodyCapabilities' = PostAccountRequestBodyCapabilities'{postAccountRequestBodyCapabilities'AcssDebitPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'AffirmPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'AfterpayClearpayPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'AuBecsDebitPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'BacsDebitPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'BancontactPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'BankTransferPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'BoletoPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'CardIssuing = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'CardPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'CartesBancairesPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'EpsPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'FpxPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'GiropayPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'GrabpayPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'IdealPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'JcbPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'KlarnaPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'KonbiniPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'LegacyPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'LinkPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'OxxoPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'P24Payments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'PaynowPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'PromptpayPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'SepaDebitPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'SofortPayments = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'TaxReportingUs_1099K = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'Transfers = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'Treasury = GHC.Maybe.Nothing,
                                                                            postAccountRequestBodyCapabilities'UsBankAccountAchPayments = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.acss_debit_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'AcssDebitPayments' = PostAccountRequestBodyCapabilities'AcssDebitPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'AcssDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'AcssDebitPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AcssDebitPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AcssDebitPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'AcssDebitPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'AcssDebitPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'AcssDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'AcssDebitPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'AcssDebitPayments' :: PostAccountRequestBodyCapabilities'AcssDebitPayments'
mkPostAccountRequestBodyCapabilities'AcssDebitPayments' = PostAccountRequestBodyCapabilities'AcssDebitPayments'{postAccountRequestBodyCapabilities'AcssDebitPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.affirm_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'AffirmPayments' = PostAccountRequestBodyCapabilities'AffirmPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'AffirmPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'AffirmPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AffirmPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AffirmPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'AffirmPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'AffirmPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'AffirmPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'AffirmPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'AffirmPayments' :: PostAccountRequestBodyCapabilities'AffirmPayments'
mkPostAccountRequestBodyCapabilities'AffirmPayments' = PostAccountRequestBodyCapabilities'AffirmPayments'{postAccountRequestBodyCapabilities'AffirmPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.afterpay_clearpay_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'AfterpayClearpayPayments' = PostAccountRequestBodyCapabilities'AfterpayClearpayPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'AfterpayClearpayPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'AfterpayClearpayPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'AfterpayClearpayPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'AfterpayClearpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'AfterpayClearpayPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'AfterpayClearpayPayments' :: PostAccountRequestBodyCapabilities'AfterpayClearpayPayments'
mkPostAccountRequestBodyCapabilities'AfterpayClearpayPayments' = PostAccountRequestBodyCapabilities'AfterpayClearpayPayments'{postAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.au_becs_debit_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'AuBecsDebitPayments' = PostAccountRequestBodyCapabilities'AuBecsDebitPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'AuBecsDebitPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'AuBecsDebitPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'AuBecsDebitPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'AuBecsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'AuBecsDebitPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'AuBecsDebitPayments' :: PostAccountRequestBodyCapabilities'AuBecsDebitPayments'
mkPostAccountRequestBodyCapabilities'AuBecsDebitPayments' = PostAccountRequestBodyCapabilities'AuBecsDebitPayments'{postAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bacs_debit_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'BacsDebitPayments' = PostAccountRequestBodyCapabilities'BacsDebitPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'BacsDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'BacsDebitPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BacsDebitPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BacsDebitPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'BacsDebitPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'BacsDebitPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'BacsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'BacsDebitPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'BacsDebitPayments' :: PostAccountRequestBodyCapabilities'BacsDebitPayments'
mkPostAccountRequestBodyCapabilities'BacsDebitPayments' = PostAccountRequestBodyCapabilities'BacsDebitPayments'{postAccountRequestBodyCapabilities'BacsDebitPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bancontact_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'BancontactPayments' = PostAccountRequestBodyCapabilities'BancontactPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'BancontactPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'BancontactPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BancontactPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BancontactPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'BancontactPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'BancontactPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'BancontactPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'BancontactPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'BancontactPayments' :: PostAccountRequestBodyCapabilities'BancontactPayments'
mkPostAccountRequestBodyCapabilities'BancontactPayments' = PostAccountRequestBodyCapabilities'BancontactPayments'{postAccountRequestBodyCapabilities'BancontactPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bank_transfer_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'BankTransferPayments' = PostAccountRequestBodyCapabilities'BankTransferPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'BankTransferPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'BankTransferPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BankTransferPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BankTransferPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'BankTransferPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'BankTransferPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'BankTransferPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'BankTransferPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'BankTransferPayments' :: PostAccountRequestBodyCapabilities'BankTransferPayments'
mkPostAccountRequestBodyCapabilities'BankTransferPayments' = PostAccountRequestBodyCapabilities'BankTransferPayments'{postAccountRequestBodyCapabilities'BankTransferPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.boleto_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'BoletoPayments' = PostAccountRequestBodyCapabilities'BoletoPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'BoletoPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'BoletoPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BoletoPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'BoletoPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'BoletoPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'BoletoPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'BoletoPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'BoletoPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'BoletoPayments' :: PostAccountRequestBodyCapabilities'BoletoPayments'
mkPostAccountRequestBodyCapabilities'BoletoPayments' = PostAccountRequestBodyCapabilities'BoletoPayments'{postAccountRequestBodyCapabilities'BoletoPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.card_issuing@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'CardIssuing' = PostAccountRequestBodyCapabilities'CardIssuing' {
  -- | requested
  postAccountRequestBodyCapabilities'CardIssuing'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'CardIssuing'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardIssuing'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardIssuing'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'CardIssuing'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'CardIssuing'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'CardIssuing'' with all required fields.
mkPostAccountRequestBodyCapabilities'CardIssuing' :: PostAccountRequestBodyCapabilities'CardIssuing'
mkPostAccountRequestBodyCapabilities'CardIssuing' = PostAccountRequestBodyCapabilities'CardIssuing'{postAccountRequestBodyCapabilities'CardIssuing'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.card_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'CardPayments' = PostAccountRequestBodyCapabilities'CardPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'CardPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'CardPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CardPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'CardPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'CardPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'CardPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'CardPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'CardPayments' :: PostAccountRequestBodyCapabilities'CardPayments'
mkPostAccountRequestBodyCapabilities'CardPayments' = PostAccountRequestBodyCapabilities'CardPayments'{postAccountRequestBodyCapabilities'CardPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.cartes_bancaires_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'CartesBancairesPayments' = PostAccountRequestBodyCapabilities'CartesBancairesPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'CartesBancairesPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'CartesBancairesPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CartesBancairesPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'CartesBancairesPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'CartesBancairesPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'CartesBancairesPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'CartesBancairesPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'CartesBancairesPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'CartesBancairesPayments' :: PostAccountRequestBodyCapabilities'CartesBancairesPayments'
mkPostAccountRequestBodyCapabilities'CartesBancairesPayments' = PostAccountRequestBodyCapabilities'CartesBancairesPayments'{postAccountRequestBodyCapabilities'CartesBancairesPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.eps_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'EpsPayments' = PostAccountRequestBodyCapabilities'EpsPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'EpsPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'EpsPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'EpsPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'EpsPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'EpsPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'EpsPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'EpsPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'EpsPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'EpsPayments' :: PostAccountRequestBodyCapabilities'EpsPayments'
mkPostAccountRequestBodyCapabilities'EpsPayments' = PostAccountRequestBodyCapabilities'EpsPayments'{postAccountRequestBodyCapabilities'EpsPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.fpx_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'FpxPayments' = PostAccountRequestBodyCapabilities'FpxPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'FpxPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'FpxPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'FpxPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'FpxPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'FpxPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'FpxPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'FpxPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'FpxPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'FpxPayments' :: PostAccountRequestBodyCapabilities'FpxPayments'
mkPostAccountRequestBodyCapabilities'FpxPayments' = PostAccountRequestBodyCapabilities'FpxPayments'{postAccountRequestBodyCapabilities'FpxPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.giropay_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'GiropayPayments' = PostAccountRequestBodyCapabilities'GiropayPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'GiropayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'GiropayPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GiropayPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GiropayPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'GiropayPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'GiropayPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'GiropayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'GiropayPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'GiropayPayments' :: PostAccountRequestBodyCapabilities'GiropayPayments'
mkPostAccountRequestBodyCapabilities'GiropayPayments' = PostAccountRequestBodyCapabilities'GiropayPayments'{postAccountRequestBodyCapabilities'GiropayPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.grabpay_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'GrabpayPayments' = PostAccountRequestBodyCapabilities'GrabpayPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'GrabpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'GrabpayPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GrabpayPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'GrabpayPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'GrabpayPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'GrabpayPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'GrabpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'GrabpayPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'GrabpayPayments' :: PostAccountRequestBodyCapabilities'GrabpayPayments'
mkPostAccountRequestBodyCapabilities'GrabpayPayments' = PostAccountRequestBodyCapabilities'GrabpayPayments'{postAccountRequestBodyCapabilities'GrabpayPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.ideal_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'IdealPayments' = PostAccountRequestBodyCapabilities'IdealPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'IdealPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'IdealPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'IdealPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'IdealPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'IdealPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'IdealPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'IdealPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'IdealPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'IdealPayments' :: PostAccountRequestBodyCapabilities'IdealPayments'
mkPostAccountRequestBodyCapabilities'IdealPayments' = PostAccountRequestBodyCapabilities'IdealPayments'{postAccountRequestBodyCapabilities'IdealPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.jcb_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'JcbPayments' = PostAccountRequestBodyCapabilities'JcbPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'JcbPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'JcbPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'JcbPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'JcbPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'JcbPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'JcbPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'JcbPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'JcbPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'JcbPayments' :: PostAccountRequestBodyCapabilities'JcbPayments'
mkPostAccountRequestBodyCapabilities'JcbPayments' = PostAccountRequestBodyCapabilities'JcbPayments'{postAccountRequestBodyCapabilities'JcbPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.klarna_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'KlarnaPayments' = PostAccountRequestBodyCapabilities'KlarnaPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'KlarnaPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'KlarnaPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KlarnaPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KlarnaPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'KlarnaPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'KlarnaPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'KlarnaPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'KlarnaPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'KlarnaPayments' :: PostAccountRequestBodyCapabilities'KlarnaPayments'
mkPostAccountRequestBodyCapabilities'KlarnaPayments' = PostAccountRequestBodyCapabilities'KlarnaPayments'{postAccountRequestBodyCapabilities'KlarnaPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.konbini_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'KonbiniPayments' = PostAccountRequestBodyCapabilities'KonbiniPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'KonbiniPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'KonbiniPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KonbiniPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'KonbiniPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'KonbiniPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'KonbiniPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'KonbiniPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'KonbiniPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'KonbiniPayments' :: PostAccountRequestBodyCapabilities'KonbiniPayments'
mkPostAccountRequestBodyCapabilities'KonbiniPayments' = PostAccountRequestBodyCapabilities'KonbiniPayments'{postAccountRequestBodyCapabilities'KonbiniPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.legacy_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'LegacyPayments' = PostAccountRequestBodyCapabilities'LegacyPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'LegacyPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'LegacyPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LegacyPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LegacyPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'LegacyPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'LegacyPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'LegacyPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'LegacyPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'LegacyPayments' :: PostAccountRequestBodyCapabilities'LegacyPayments'
mkPostAccountRequestBodyCapabilities'LegacyPayments' = PostAccountRequestBodyCapabilities'LegacyPayments'{postAccountRequestBodyCapabilities'LegacyPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.link_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'LinkPayments' = PostAccountRequestBodyCapabilities'LinkPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'LinkPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'LinkPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LinkPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'LinkPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'LinkPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'LinkPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'LinkPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'LinkPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'LinkPayments' :: PostAccountRequestBodyCapabilities'LinkPayments'
mkPostAccountRequestBodyCapabilities'LinkPayments' = PostAccountRequestBodyCapabilities'LinkPayments'{postAccountRequestBodyCapabilities'LinkPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.oxxo_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'OxxoPayments' = PostAccountRequestBodyCapabilities'OxxoPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'OxxoPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'OxxoPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'OxxoPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'OxxoPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'OxxoPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'OxxoPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'OxxoPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'OxxoPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'OxxoPayments' :: PostAccountRequestBodyCapabilities'OxxoPayments'
mkPostAccountRequestBodyCapabilities'OxxoPayments' = PostAccountRequestBodyCapabilities'OxxoPayments'{postAccountRequestBodyCapabilities'OxxoPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.p24_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'P24Payments' = PostAccountRequestBodyCapabilities'P24Payments' {
  -- | requested
  postAccountRequestBodyCapabilities'P24Payments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'P24Payments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'P24Payments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'P24Payments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'P24Payments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'P24Payments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'P24Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'P24Payments'' with all required fields.
mkPostAccountRequestBodyCapabilities'P24Payments' :: PostAccountRequestBodyCapabilities'P24Payments'
mkPostAccountRequestBodyCapabilities'P24Payments' = PostAccountRequestBodyCapabilities'P24Payments'{postAccountRequestBodyCapabilities'P24Payments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.paynow_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'PaynowPayments' = PostAccountRequestBodyCapabilities'PaynowPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'PaynowPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'PaynowPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PaynowPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PaynowPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'PaynowPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'PaynowPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'PaynowPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'PaynowPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'PaynowPayments' :: PostAccountRequestBodyCapabilities'PaynowPayments'
mkPostAccountRequestBodyCapabilities'PaynowPayments' = PostAccountRequestBodyCapabilities'PaynowPayments'{postAccountRequestBodyCapabilities'PaynowPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.promptpay_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'PromptpayPayments' = PostAccountRequestBodyCapabilities'PromptpayPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'PromptpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'PromptpayPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PromptpayPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'PromptpayPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'PromptpayPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'PromptpayPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'PromptpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'PromptpayPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'PromptpayPayments' :: PostAccountRequestBodyCapabilities'PromptpayPayments'
mkPostAccountRequestBodyCapabilities'PromptpayPayments' = PostAccountRequestBodyCapabilities'PromptpayPayments'{postAccountRequestBodyCapabilities'PromptpayPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.sepa_debit_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'SepaDebitPayments' = PostAccountRequestBodyCapabilities'SepaDebitPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'SepaDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'SepaDebitPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SepaDebitPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SepaDebitPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'SepaDebitPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'SepaDebitPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'SepaDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'SepaDebitPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'SepaDebitPayments' :: PostAccountRequestBodyCapabilities'SepaDebitPayments'
mkPostAccountRequestBodyCapabilities'SepaDebitPayments' = PostAccountRequestBodyCapabilities'SepaDebitPayments'{postAccountRequestBodyCapabilities'SepaDebitPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.sofort_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'SofortPayments' = PostAccountRequestBodyCapabilities'SofortPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'SofortPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'SofortPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SofortPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'SofortPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'SofortPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'SofortPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'SofortPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'SofortPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'SofortPayments' :: PostAccountRequestBodyCapabilities'SofortPayments'
mkPostAccountRequestBodyCapabilities'SofortPayments' = PostAccountRequestBodyCapabilities'SofortPayments'{postAccountRequestBodyCapabilities'SofortPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.tax_reporting_us_1099_k@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'TaxReportingUs_1099K' = PostAccountRequestBodyCapabilities'TaxReportingUs_1099K' {
  -- | requested
  postAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'TaxReportingUs_1099K'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'TaxReportingUs_1099K'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'TaxReportingUs_1099K'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'TaxReportingUs_1099K' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'TaxReportingUs_1099K'' with all required fields.
mkPostAccountRequestBodyCapabilities'TaxReportingUs_1099K' :: PostAccountRequestBodyCapabilities'TaxReportingUs_1099K'
mkPostAccountRequestBodyCapabilities'TaxReportingUs_1099K' = PostAccountRequestBodyCapabilities'TaxReportingUs_1099K'{postAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.tax_reporting_us_1099_misc@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' = PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' {
  -- | requested
  postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'' with all required fields.
mkPostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' :: PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'
mkPostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' = PostAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'{postAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.transfers@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'Transfers' = PostAccountRequestBodyCapabilities'Transfers' {
  -- | requested
  postAccountRequestBodyCapabilities'Transfers'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'Transfers'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Transfers'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Transfers'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'Transfers'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'Transfers'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'Transfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'Transfers'' with all required fields.
mkPostAccountRequestBodyCapabilities'Transfers' :: PostAccountRequestBodyCapabilities'Transfers'
mkPostAccountRequestBodyCapabilities'Transfers' = PostAccountRequestBodyCapabilities'Transfers'{postAccountRequestBodyCapabilities'Transfers'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.treasury@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'Treasury' = PostAccountRequestBodyCapabilities'Treasury' {
  -- | requested
  postAccountRequestBodyCapabilities'Treasury'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'Treasury'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Treasury'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'Treasury'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'Treasury'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'Treasury'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'Treasury' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'Treasury'' with all required fields.
mkPostAccountRequestBodyCapabilities'Treasury' :: PostAccountRequestBodyCapabilities'Treasury'
mkPostAccountRequestBodyCapabilities'Treasury' = PostAccountRequestBodyCapabilities'Treasury'{postAccountRequestBodyCapabilities'Treasury'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.us_bank_account_ach_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodyCapabilities'UsBankAccountAchPayments' = PostAccountRequestBodyCapabilities'UsBankAccountAchPayments' {
  -- | requested
  postAccountRequestBodyCapabilities'UsBankAccountAchPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCapabilities'UsBankAccountAchPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'UsBankAccountAchPayments'Requested obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCapabilities'UsBankAccountAchPayments'Requested obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCapabilities'UsBankAccountAchPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCapabilities'UsBankAccountAchPayments'" (\obj -> GHC.Base.pure PostAccountRequestBodyCapabilities'UsBankAccountAchPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))
-- | Create a new 'PostAccountRequestBodyCapabilities'UsBankAccountAchPayments'' with all required fields.
mkPostAccountRequestBodyCapabilities'UsBankAccountAchPayments' :: PostAccountRequestBodyCapabilities'UsBankAccountAchPayments'
mkPostAccountRequestBodyCapabilities'UsBankAccountAchPayments' = PostAccountRequestBodyCapabilities'UsBankAccountAchPayments'{postAccountRequestBodyCapabilities'UsBankAccountAchPayments'Requested = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company@ in the specification.
-- 
-- Information about the company or business. This field is available for any \`business_type\`.
data PostAccountRequestBodyCompany' = PostAccountRequestBodyCompany' {
  -- | address
  postAccountRequestBodyCompany'Address :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'Address')
  -- | address_kana
  , postAccountRequestBodyCompany'AddressKana :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'AddressKana')
  -- | address_kanji
  , postAccountRequestBodyCompany'AddressKanji :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'AddressKanji')
  -- | directors_provided
  , postAccountRequestBodyCompany'DirectorsProvided :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | executives_provided
  , postAccountRequestBodyCompany'ExecutivesProvided :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  , postAccountRequestBodyCompany'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | name_kana
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  , postAccountRequestBodyCompany'NameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | name_kanji
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  , postAccountRequestBodyCompany'NameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | owners_provided
  , postAccountRequestBodyCompany'OwnersProvided :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | ownership_declaration
  , postAccountRequestBodyCompany'OwnershipDeclaration :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'OwnershipDeclaration')
  -- | phone
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | registration_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'RegistrationNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | structure
  , postAccountRequestBodyCompany'Structure :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'Structure')
  -- | tax_id
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'TaxId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tax_id_registrar
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'TaxIdRegistrar :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | vat_id
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'VatId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | verification
  , postAccountRequestBodyCompany'Verification :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'Verification')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("directors_provided" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'DirectorsProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executives_provided" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'ExecutivesProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'NameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'NameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owners_provided" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnersProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ownership_declaration" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registration_number" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'RegistrationNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("structure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Structure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'TaxId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id_registrar" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'TaxIdRegistrar obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_id" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'VatId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("directors_provided" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'DirectorsProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executives_provided" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'ExecutivesProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'NameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'NameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owners_provided" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnersProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ownership_declaration" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registration_number" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'RegistrationNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("structure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Structure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'TaxId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id_registrar" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'TaxIdRegistrar obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_id" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'VatId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'" (\obj -> ((((((((((((((((GHC.Base.pure PostAccountRequestBodyCompany' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "directors_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executives_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owners_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ownership_declaration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registration_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "structure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_id_registrar")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "vat_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))
-- | Create a new 'PostAccountRequestBodyCompany'' with all required fields.
mkPostAccountRequestBodyCompany' :: PostAccountRequestBodyCompany'
mkPostAccountRequestBodyCompany' = PostAccountRequestBodyCompany'{postAccountRequestBodyCompany'Address = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'AddressKana = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'AddressKanji = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'DirectorsProvided = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'ExecutivesProvided = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'Name = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'NameKana = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'NameKanji = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'OwnersProvided = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'OwnershipDeclaration = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'Phone = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'RegistrationNumber = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'Structure = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'TaxId = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'TaxIdRegistrar = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'VatId = GHC.Maybe.Nothing,
                                                                  postAccountRequestBodyCompany'Verification = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'Address' = PostAccountRequestBodyCompany'Address' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountRequestBodyCompany'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyCompany'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyCompany'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'Address'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'State obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Address'State obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'Address'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'Address'" (\obj -> (((((GHC.Base.pure PostAccountRequestBodyCompany'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'PostAccountRequestBodyCompany'Address'' with all required fields.
mkPostAccountRequestBodyCompany'Address' :: PostAccountRequestBodyCompany'Address'
mkPostAccountRequestBodyCompany'Address' = PostAccountRequestBodyCompany'Address'{postAccountRequestBodyCompany'Address'City = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyCompany'Address'Country = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyCompany'Address'Line1 = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyCompany'Address'Line2 = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyCompany'Address'PostalCode = GHC.Maybe.Nothing,
                                                                                  postAccountRequestBodyCompany'Address'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address_kana@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'AddressKana' = PostAccountRequestBodyCompany'AddressKana' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodyCompany'AddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'AddressKana'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Town obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKana'Town obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'AddressKana'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'AddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountRequestBodyCompany'AddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))
-- | Create a new 'PostAccountRequestBodyCompany'AddressKana'' with all required fields.
mkPostAccountRequestBodyCompany'AddressKana' :: PostAccountRequestBodyCompany'AddressKana'
mkPostAccountRequestBodyCompany'AddressKana' = PostAccountRequestBodyCompany'AddressKana'{postAccountRequestBodyCompany'AddressKana'City = GHC.Maybe.Nothing,
                                                                                          postAccountRequestBodyCompany'AddressKana'Country = GHC.Maybe.Nothing,
                                                                                          postAccountRequestBodyCompany'AddressKana'Line1 = GHC.Maybe.Nothing,
                                                                                          postAccountRequestBodyCompany'AddressKana'Line2 = GHC.Maybe.Nothing,
                                                                                          postAccountRequestBodyCompany'AddressKana'PostalCode = GHC.Maybe.Nothing,
                                                                                          postAccountRequestBodyCompany'AddressKana'State = GHC.Maybe.Nothing,
                                                                                          postAccountRequestBodyCompany'AddressKana'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address_kanji@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'AddressKanji' = PostAccountRequestBodyCompany'AddressKanji' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodyCompany'AddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'AddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'AddressKanji'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Town obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'AddressKanji'Town obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'AddressKanji'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'AddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountRequestBodyCompany'AddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))
-- | Create a new 'PostAccountRequestBodyCompany'AddressKanji'' with all required fields.
mkPostAccountRequestBodyCompany'AddressKanji' :: PostAccountRequestBodyCompany'AddressKanji'
mkPostAccountRequestBodyCompany'AddressKanji' = PostAccountRequestBodyCompany'AddressKanji'{postAccountRequestBodyCompany'AddressKanji'City = GHC.Maybe.Nothing,
                                                                                            postAccountRequestBodyCompany'AddressKanji'Country = GHC.Maybe.Nothing,
                                                                                            postAccountRequestBodyCompany'AddressKanji'Line1 = GHC.Maybe.Nothing,
                                                                                            postAccountRequestBodyCompany'AddressKanji'Line2 = GHC.Maybe.Nothing,
                                                                                            postAccountRequestBodyCompany'AddressKanji'PostalCode = GHC.Maybe.Nothing,
                                                                                            postAccountRequestBodyCompany'AddressKanji'State = GHC.Maybe.Nothing,
                                                                                            postAccountRequestBodyCompany'AddressKanji'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.ownership_declaration@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'OwnershipDeclaration' = PostAccountRequestBodyCompany'OwnershipDeclaration' {
  -- | date
  postAccountRequestBodyCompany'OwnershipDeclaration'Date :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | ip
  , postAccountRequestBodyCompany'OwnershipDeclaration'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyCompany'OwnershipDeclaration'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'OwnershipDeclaration'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration'UserAgent obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'OwnershipDeclaration'UserAgent obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'OwnershipDeclaration'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'OwnershipDeclaration'" (\obj -> ((GHC.Base.pure PostAccountRequestBodyCompany'OwnershipDeclaration' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))
-- | Create a new 'PostAccountRequestBodyCompany'OwnershipDeclaration'' with all required fields.
mkPostAccountRequestBodyCompany'OwnershipDeclaration' :: PostAccountRequestBodyCompany'OwnershipDeclaration'
mkPostAccountRequestBodyCompany'OwnershipDeclaration' = PostAccountRequestBodyCompany'OwnershipDeclaration'{postAccountRequestBodyCompany'OwnershipDeclaration'Date = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyCompany'OwnershipDeclaration'Ip = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyCompany'OwnershipDeclaration'UserAgent = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.structure@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'Structure' =
   PostAccountRequestBodyCompany'Structure'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodyCompany'Structure'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodyCompany'Structure'EnumEmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodyCompany'Structure'EnumFreeZoneEstablishment -- ^ Represents the JSON value @"free_zone_establishment"@
  | PostAccountRequestBodyCompany'Structure'EnumFreeZoneLlc -- ^ Represents the JSON value @"free_zone_llc"@
  | PostAccountRequestBodyCompany'Structure'EnumGovernmentInstrumentality -- ^ Represents the JSON value @"government_instrumentality"@
  | PostAccountRequestBodyCompany'Structure'EnumGovernmentalUnit -- ^ Represents the JSON value @"governmental_unit"@
  | PostAccountRequestBodyCompany'Structure'EnumIncorporatedNonProfit -- ^ Represents the JSON value @"incorporated_non_profit"@
  | PostAccountRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership -- ^ Represents the JSON value @"limited_liability_partnership"@
  | PostAccountRequestBodyCompany'Structure'EnumLlc -- ^ Represents the JSON value @"llc"@
  | PostAccountRequestBodyCompany'Structure'EnumMultiMemberLlc -- ^ Represents the JSON value @"multi_member_llc"@
  | PostAccountRequestBodyCompany'Structure'EnumPrivateCompany -- ^ Represents the JSON value @"private_company"@
  | PostAccountRequestBodyCompany'Structure'EnumPrivateCorporation -- ^ Represents the JSON value @"private_corporation"@
  | PostAccountRequestBodyCompany'Structure'EnumPrivatePartnership -- ^ Represents the JSON value @"private_partnership"@
  | PostAccountRequestBodyCompany'Structure'EnumPublicCompany -- ^ Represents the JSON value @"public_company"@
  | PostAccountRequestBodyCompany'Structure'EnumPublicCorporation -- ^ Represents the JSON value @"public_corporation"@
  | PostAccountRequestBodyCompany'Structure'EnumPublicPartnership -- ^ Represents the JSON value @"public_partnership"@
  | PostAccountRequestBodyCompany'Structure'EnumSingleMemberLlc -- ^ Represents the JSON value @"single_member_llc"@
  | PostAccountRequestBodyCompany'Structure'EnumSoleEstablishment -- ^ Represents the JSON value @"sole_establishment"@
  | PostAccountRequestBodyCompany'Structure'EnumSoleProprietorship -- ^ Represents the JSON value @"sole_proprietorship"@
  | PostAccountRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality -- ^ Represents the JSON value @"tax_exempt_government_instrumentality"@
  | PostAccountRequestBodyCompany'Structure'EnumUnincorporatedAssociation -- ^ Represents the JSON value @"unincorporated_association"@
  | PostAccountRequestBodyCompany'Structure'EnumUnincorporatedNonProfit -- ^ Represents the JSON value @"unincorporated_non_profit"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'Structure'
    where toJSON (PostAccountRequestBodyCompany'Structure'Other val) = val
          toJSON (PostAccountRequestBodyCompany'Structure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodyCompany'Structure'EnumEmptyString) = ""
          toJSON (PostAccountRequestBodyCompany'Structure'EnumFreeZoneEstablishment) = "free_zone_establishment"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumFreeZoneLlc) = "free_zone_llc"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumGovernmentInstrumentality) = "government_instrumentality"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumGovernmentalUnit) = "governmental_unit"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumIncorporatedNonProfit) = "incorporated_non_profit"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership) = "limited_liability_partnership"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumLlc) = "llc"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumMultiMemberLlc) = "multi_member_llc"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumPrivateCompany) = "private_company"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumPrivateCorporation) = "private_corporation"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumPrivatePartnership) = "private_partnership"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumPublicCompany) = "public_company"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumPublicCorporation) = "public_corporation"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumPublicPartnership) = "public_partnership"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumSingleMemberLlc) = "single_member_llc"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumSoleEstablishment) = "sole_establishment"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumSoleProprietorship) = "sole_proprietorship"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality) = "tax_exempt_government_instrumentality"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumUnincorporatedAssociation) = "unincorporated_association"
          toJSON (PostAccountRequestBodyCompany'Structure'EnumUnincorporatedNonProfit) = "unincorporated_non_profit"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'Structure'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "" -> PostAccountRequestBodyCompany'Structure'EnumEmptyString
                                            | val GHC.Classes.== "free_zone_establishment" -> PostAccountRequestBodyCompany'Structure'EnumFreeZoneEstablishment
                                            | val GHC.Classes.== "free_zone_llc" -> PostAccountRequestBodyCompany'Structure'EnumFreeZoneLlc
                                            | val GHC.Classes.== "government_instrumentality" -> PostAccountRequestBodyCompany'Structure'EnumGovernmentInstrumentality
                                            | val GHC.Classes.== "governmental_unit" -> PostAccountRequestBodyCompany'Structure'EnumGovernmentalUnit
                                            | val GHC.Classes.== "incorporated_non_profit" -> PostAccountRequestBodyCompany'Structure'EnumIncorporatedNonProfit
                                            | val GHC.Classes.== "limited_liability_partnership" -> PostAccountRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership
                                            | val GHC.Classes.== "llc" -> PostAccountRequestBodyCompany'Structure'EnumLlc
                                            | val GHC.Classes.== "multi_member_llc" -> PostAccountRequestBodyCompany'Structure'EnumMultiMemberLlc
                                            | val GHC.Classes.== "private_company" -> PostAccountRequestBodyCompany'Structure'EnumPrivateCompany
                                            | val GHC.Classes.== "private_corporation" -> PostAccountRequestBodyCompany'Structure'EnumPrivateCorporation
                                            | val GHC.Classes.== "private_partnership" -> PostAccountRequestBodyCompany'Structure'EnumPrivatePartnership
                                            | val GHC.Classes.== "public_company" -> PostAccountRequestBodyCompany'Structure'EnumPublicCompany
                                            | val GHC.Classes.== "public_corporation" -> PostAccountRequestBodyCompany'Structure'EnumPublicCorporation
                                            | val GHC.Classes.== "public_partnership" -> PostAccountRequestBodyCompany'Structure'EnumPublicPartnership
                                            | val GHC.Classes.== "single_member_llc" -> PostAccountRequestBodyCompany'Structure'EnumSingleMemberLlc
                                            | val GHC.Classes.== "sole_establishment" -> PostAccountRequestBodyCompany'Structure'EnumSoleEstablishment
                                            | val GHC.Classes.== "sole_proprietorship" -> PostAccountRequestBodyCompany'Structure'EnumSoleProprietorship
                                            | val GHC.Classes.== "tax_exempt_government_instrumentality" -> PostAccountRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality
                                            | val GHC.Classes.== "unincorporated_association" -> PostAccountRequestBodyCompany'Structure'EnumUnincorporatedAssociation
                                            | val GHC.Classes.== "unincorporated_non_profit" -> PostAccountRequestBodyCompany'Structure'EnumUnincorporatedNonProfit
                                            | GHC.Base.otherwise -> PostAccountRequestBodyCompany'Structure'Other val)
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.verification@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'Verification' = PostAccountRequestBodyCompany'Verification' {
  -- | document
  postAccountRequestBodyCompany'Verification'Document :: (GHC.Maybe.Maybe PostAccountRequestBodyCompany'Verification'Document')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'Verification'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification'Document obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification'Document obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'Verification'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'Verification'" (\obj -> GHC.Base.pure PostAccountRequestBodyCompany'Verification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))
-- | Create a new 'PostAccountRequestBodyCompany'Verification'' with all required fields.
mkPostAccountRequestBodyCompany'Verification' :: PostAccountRequestBodyCompany'Verification'
mkPostAccountRequestBodyCompany'Verification' = PostAccountRequestBodyCompany'Verification'{postAccountRequestBodyCompany'Verification'Document = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.verification.properties.document@ in the specification.
-- 
-- 
data PostAccountRequestBodyCompany'Verification'Document' = PostAccountRequestBodyCompany'Verification'Document' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountRequestBodyCompany'Verification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountRequestBodyCompany'Verification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyCompany'Verification'Document'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification'Document'Front obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyCompany'Verification'Document'Front obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyCompany'Verification'Document'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyCompany'Verification'Document'" (\obj -> (GHC.Base.pure PostAccountRequestBodyCompany'Verification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))
-- | Create a new 'PostAccountRequestBodyCompany'Verification'Document'' with all required fields.
mkPostAccountRequestBodyCompany'Verification'Document' :: PostAccountRequestBodyCompany'Verification'Document'
mkPostAccountRequestBodyCompany'Verification'Document' = PostAccountRequestBodyCompany'Verification'Document'{postAccountRequestBodyCompany'Verification'Document'Back = GHC.Maybe.Nothing,
                                                                                                              postAccountRequestBodyCompany'Verification'Document'Front = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents@ in the specification.
-- 
-- Documents that may be submitted to satisfy various informational requests.
data PostAccountRequestBodyDocuments' = PostAccountRequestBodyDocuments' {
  -- | bank_account_ownership_verification
  postAccountRequestBodyDocuments'BankAccountOwnershipVerification :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'BankAccountOwnershipVerification')
  -- | company_license
  , postAccountRequestBodyDocuments'CompanyLicense :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'CompanyLicense')
  -- | company_memorandum_of_association
  , postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation')
  -- | company_ministerial_decree
  , postAccountRequestBodyDocuments'CompanyMinisterialDecree :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'CompanyMinisterialDecree')
  -- | company_registration_verification
  , postAccountRequestBodyDocuments'CompanyRegistrationVerification :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'CompanyRegistrationVerification')
  -- | company_tax_id_verification
  , postAccountRequestBodyDocuments'CompanyTaxIdVerification :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'CompanyTaxIdVerification')
  -- | proof_of_registration
  , postAccountRequestBodyDocuments'ProofOfRegistration :: (GHC.Maybe.Maybe PostAccountRequestBodyDocuments'ProofOfRegistration')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'BankAccountOwnershipVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_license" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyLicense obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_memorandum_of_association" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_ministerial_decree" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMinisterialDecree obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_registration_verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyRegistrationVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_tax_id_verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyTaxIdVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proof_of_registration" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'ProofOfRegistration obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'BankAccountOwnershipVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_license" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyLicense obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_memorandum_of_association" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_ministerial_decree" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMinisterialDecree obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_registration_verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyRegistrationVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_tax_id_verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyTaxIdVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proof_of_registration" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'ProofOfRegistration obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'" (\obj -> ((((((GHC.Base.pure PostAccountRequestBodyDocuments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_account_ownership_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_license")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_memorandum_of_association")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_ministerial_decree")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_registration_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_tax_id_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proof_of_registration"))
-- | Create a new 'PostAccountRequestBodyDocuments'' with all required fields.
mkPostAccountRequestBodyDocuments' :: PostAccountRequestBodyDocuments'
mkPostAccountRequestBodyDocuments' = PostAccountRequestBodyDocuments'{postAccountRequestBodyDocuments'BankAccountOwnershipVerification = GHC.Maybe.Nothing,
                                                                      postAccountRequestBodyDocuments'CompanyLicense = GHC.Maybe.Nothing,
                                                                      postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation = GHC.Maybe.Nothing,
                                                                      postAccountRequestBodyDocuments'CompanyMinisterialDecree = GHC.Maybe.Nothing,
                                                                      postAccountRequestBodyDocuments'CompanyRegistrationVerification = GHC.Maybe.Nothing,
                                                                      postAccountRequestBodyDocuments'CompanyTaxIdVerification = GHC.Maybe.Nothing,
                                                                      postAccountRequestBodyDocuments'ProofOfRegistration = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.bank_account_ownership_verification@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'BankAccountOwnershipVerification' = PostAccountRequestBodyDocuments'BankAccountOwnershipVerification' {
  -- | files
  postAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'BankAccountOwnershipVerification'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'BankAccountOwnershipVerification'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'BankAccountOwnershipVerification'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'BankAccountOwnershipVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'BankAccountOwnershipVerification'' with all required fields.
mkPostAccountRequestBodyDocuments'BankAccountOwnershipVerification' :: PostAccountRequestBodyDocuments'BankAccountOwnershipVerification'
mkPostAccountRequestBodyDocuments'BankAccountOwnershipVerification' = PostAccountRequestBodyDocuments'BankAccountOwnershipVerification'{postAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_license@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'CompanyLicense' = PostAccountRequestBodyDocuments'CompanyLicense' {
  -- | files
  postAccountRequestBodyDocuments'CompanyLicense'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'CompanyLicense'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyLicense'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyLicense'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'CompanyLicense'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'CompanyLicense'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'CompanyLicense' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'CompanyLicense'' with all required fields.
mkPostAccountRequestBodyDocuments'CompanyLicense' :: PostAccountRequestBodyDocuments'CompanyLicense'
mkPostAccountRequestBodyDocuments'CompanyLicense' = PostAccountRequestBodyDocuments'CompanyLicense'{postAccountRequestBodyDocuments'CompanyLicense'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_memorandum_of_association@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' = PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' {
  -- | files
  postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'' with all required fields.
mkPostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' :: PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'
mkPostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' = PostAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'{postAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_ministerial_decree@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'CompanyMinisterialDecree' = PostAccountRequestBodyDocuments'CompanyMinisterialDecree' {
  -- | files
  postAccountRequestBodyDocuments'CompanyMinisterialDecree'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'CompanyMinisterialDecree'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMinisterialDecree'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyMinisterialDecree'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'CompanyMinisterialDecree'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'CompanyMinisterialDecree'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'CompanyMinisterialDecree' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'CompanyMinisterialDecree'' with all required fields.
mkPostAccountRequestBodyDocuments'CompanyMinisterialDecree' :: PostAccountRequestBodyDocuments'CompanyMinisterialDecree'
mkPostAccountRequestBodyDocuments'CompanyMinisterialDecree' = PostAccountRequestBodyDocuments'CompanyMinisterialDecree'{postAccountRequestBodyDocuments'CompanyMinisterialDecree'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_registration_verification@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'CompanyRegistrationVerification' = PostAccountRequestBodyDocuments'CompanyRegistrationVerification' {
  -- | files
  postAccountRequestBodyDocuments'CompanyRegistrationVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'CompanyRegistrationVerification'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyRegistrationVerification'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyRegistrationVerification'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'CompanyRegistrationVerification'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'CompanyRegistrationVerification'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'CompanyRegistrationVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'CompanyRegistrationVerification'' with all required fields.
mkPostAccountRequestBodyDocuments'CompanyRegistrationVerification' :: PostAccountRequestBodyDocuments'CompanyRegistrationVerification'
mkPostAccountRequestBodyDocuments'CompanyRegistrationVerification' = PostAccountRequestBodyDocuments'CompanyRegistrationVerification'{postAccountRequestBodyDocuments'CompanyRegistrationVerification'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_tax_id_verification@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'CompanyTaxIdVerification' = PostAccountRequestBodyDocuments'CompanyTaxIdVerification' {
  -- | files
  postAccountRequestBodyDocuments'CompanyTaxIdVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'CompanyTaxIdVerification'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyTaxIdVerification'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'CompanyTaxIdVerification'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'CompanyTaxIdVerification'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'CompanyTaxIdVerification'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'CompanyTaxIdVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'CompanyTaxIdVerification'' with all required fields.
mkPostAccountRequestBodyDocuments'CompanyTaxIdVerification' :: PostAccountRequestBodyDocuments'CompanyTaxIdVerification'
mkPostAccountRequestBodyDocuments'CompanyTaxIdVerification' = PostAccountRequestBodyDocuments'CompanyTaxIdVerification'{postAccountRequestBodyDocuments'CompanyTaxIdVerification'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.proof_of_registration@ in the specification.
-- 
-- 
data PostAccountRequestBodyDocuments'ProofOfRegistration' = PostAccountRequestBodyDocuments'ProofOfRegistration' {
  -- | files
  postAccountRequestBodyDocuments'ProofOfRegistration'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyDocuments'ProofOfRegistration'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'ProofOfRegistration'Files obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyDocuments'ProofOfRegistration'Files obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyDocuments'ProofOfRegistration'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyDocuments'ProofOfRegistration'" (\obj -> GHC.Base.pure PostAccountRequestBodyDocuments'ProofOfRegistration' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))
-- | Create a new 'PostAccountRequestBodyDocuments'ProofOfRegistration'' with all required fields.
mkPostAccountRequestBodyDocuments'ProofOfRegistration' :: PostAccountRequestBodyDocuments'ProofOfRegistration'
mkPostAccountRequestBodyDocuments'ProofOfRegistration' = PostAccountRequestBodyDocuments'ProofOfRegistration'{postAccountRequestBodyDocuments'ProofOfRegistration'Files = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual@ in the specification.
-- 
-- Information about the person represented by the account. This field is null unless \`business_type\` is set to \`individual\`.
data PostAccountRequestBodyIndividual' = PostAccountRequestBodyIndividual' {
  -- | address
  postAccountRequestBodyIndividual'Address :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'Address')
  -- | address_kana
  , postAccountRequestBodyIndividual'AddressKana :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'AddressKana')
  -- | address_kanji
  , postAccountRequestBodyIndividual'AddressKanji :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'AddressKanji')
  -- | dob
  , postAccountRequestBodyIndividual'Dob :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'Dob'Variants)
  -- | email
  , postAccountRequestBodyIndividual'Email :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  , postAccountRequestBodyIndividual'FirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name_kana
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'FirstNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | first_name_kanji
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'FirstNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | full_name_aliases
  , postAccountRequestBodyIndividual'FullNameAliases :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'FullNameAliases'Variants)
  -- | gender
  , postAccountRequestBodyIndividual'Gender :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id_number
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'IdNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id_number_secondary
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'IdNumberSecondary :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  , postAccountRequestBodyIndividual'LastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name_kana
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'LastNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last_name_kanji
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'LastNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | maiden_name
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'MaidenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata
  , postAccountRequestBodyIndividual'Metadata :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'Metadata'Variants)
  -- | phone
  , postAccountRequestBodyIndividual'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | political_exposure
  , postAccountRequestBodyIndividual'PoliticalExposure :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'PoliticalExposure')
  -- | registered_address
  , postAccountRequestBodyIndividual'RegisteredAddress :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'RegisteredAddress')
  -- | ssn_last_4
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'SsnLast_4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | verification
  , postAccountRequestBodyIndividual'Verification :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'Verification')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Dob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Gender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'IdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'IdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'LastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'LastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'LastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'MaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'PoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'SsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Dob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'FullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Gender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'IdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'IdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'LastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'LastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'LastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'MaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'PoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'SsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'" (\obj -> (((((((((((((((((((((GHC.Base.pure PostAccountRequestBodyIndividual' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "full_name_aliases")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gender")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number_secondary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maiden_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "political_exposure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registered_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ssn_last_4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))
-- | Create a new 'PostAccountRequestBodyIndividual'' with all required fields.
mkPostAccountRequestBodyIndividual' :: PostAccountRequestBodyIndividual'
mkPostAccountRequestBodyIndividual' = PostAccountRequestBodyIndividual'{postAccountRequestBodyIndividual'Address = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'AddressKana = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'AddressKanji = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'Dob = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'Email = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'FirstName = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'FirstNameKana = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'FirstNameKanji = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'FullNameAliases = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'Gender = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'IdNumber = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'IdNumberSecondary = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'LastName = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'LastNameKana = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'LastNameKanji = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'MaidenName = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'Metadata = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'Phone = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'PoliticalExposure = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'RegisteredAddress = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'SsnLast_4 = GHC.Maybe.Nothing,
                                                                        postAccountRequestBodyIndividual'Verification = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Address' = PostAccountRequestBodyIndividual'Address' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountRequestBodyIndividual'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyIndividual'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyIndividual'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Address'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'State obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Address'State obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Address'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'Address'" (\obj -> (((((GHC.Base.pure PostAccountRequestBodyIndividual'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'PostAccountRequestBodyIndividual'Address'' with all required fields.
mkPostAccountRequestBodyIndividual'Address' :: PostAccountRequestBodyIndividual'Address'
mkPostAccountRequestBodyIndividual'Address' = PostAccountRequestBodyIndividual'Address'{postAccountRequestBodyIndividual'Address'City = GHC.Maybe.Nothing,
                                                                                        postAccountRequestBodyIndividual'Address'Country = GHC.Maybe.Nothing,
                                                                                        postAccountRequestBodyIndividual'Address'Line1 = GHC.Maybe.Nothing,
                                                                                        postAccountRequestBodyIndividual'Address'Line2 = GHC.Maybe.Nothing,
                                                                                        postAccountRequestBodyIndividual'Address'PostalCode = GHC.Maybe.Nothing,
                                                                                        postAccountRequestBodyIndividual'Address'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address_kana@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'AddressKana' = PostAccountRequestBodyIndividual'AddressKana' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodyIndividual'AddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'AddressKana'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Town obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKana'Town obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'AddressKana'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'AddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountRequestBodyIndividual'AddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))
-- | Create a new 'PostAccountRequestBodyIndividual'AddressKana'' with all required fields.
mkPostAccountRequestBodyIndividual'AddressKana' :: PostAccountRequestBodyIndividual'AddressKana'
mkPostAccountRequestBodyIndividual'AddressKana' = PostAccountRequestBodyIndividual'AddressKana'{postAccountRequestBodyIndividual'AddressKana'City = GHC.Maybe.Nothing,
                                                                                                postAccountRequestBodyIndividual'AddressKana'Country = GHC.Maybe.Nothing,
                                                                                                postAccountRequestBodyIndividual'AddressKana'Line1 = GHC.Maybe.Nothing,
                                                                                                postAccountRequestBodyIndividual'AddressKana'Line2 = GHC.Maybe.Nothing,
                                                                                                postAccountRequestBodyIndividual'AddressKana'PostalCode = GHC.Maybe.Nothing,
                                                                                                postAccountRequestBodyIndividual'AddressKana'State = GHC.Maybe.Nothing,
                                                                                                postAccountRequestBodyIndividual'AddressKana'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address_kanji@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'AddressKanji' = PostAccountRequestBodyIndividual'AddressKanji' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodyIndividual'AddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | town
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'AddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'AddressKanji'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Town obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'AddressKanji'Town obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'AddressKanji'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'AddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountRequestBodyIndividual'AddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))
-- | Create a new 'PostAccountRequestBodyIndividual'AddressKanji'' with all required fields.
mkPostAccountRequestBodyIndividual'AddressKanji' :: PostAccountRequestBodyIndividual'AddressKanji'
mkPostAccountRequestBodyIndividual'AddressKanji' = PostAccountRequestBodyIndividual'AddressKanji'{postAccountRequestBodyIndividual'AddressKanji'City = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'AddressKanji'Country = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'AddressKanji'Line1 = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'AddressKanji'Line2 = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'AddressKanji'PostalCode = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'AddressKanji'State = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'AddressKanji'Town = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.dob.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Dob'OneOf1 = PostAccountRequestBodyIndividual'Dob'OneOf1 {
  -- | day
  postAccountRequestBodyIndividual'Dob'OneOf1Day :: GHC.Types.Int
  -- | month
  , postAccountRequestBodyIndividual'Dob'OneOf1Month :: GHC.Types.Int
  -- | year
  , postAccountRequestBodyIndividual'Dob'OneOf1Year :: GHC.Types.Int
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Dob'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountRequestBodyIndividual'Dob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountRequestBodyIndividual'Dob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountRequestBodyIndividual'Dob'OneOf1Year obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountRequestBodyIndividual'Dob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountRequestBodyIndividual'Dob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountRequestBodyIndividual'Dob'OneOf1Year obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Dob'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'Dob'OneOf1" (\obj -> ((GHC.Base.pure PostAccountRequestBodyIndividual'Dob'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))
-- | Create a new 'PostAccountRequestBodyIndividual'Dob'OneOf1' with all required fields.
mkPostAccountRequestBodyIndividual'Dob'OneOf1 :: GHC.Types.Int -- ^ 'postAccountRequestBodyIndividual'Dob'OneOf1Day'
  -> GHC.Types.Int -- ^ 'postAccountRequestBodyIndividual'Dob'OneOf1Month'
  -> GHC.Types.Int -- ^ 'postAccountRequestBodyIndividual'Dob'OneOf1Year'
  -> PostAccountRequestBodyIndividual'Dob'OneOf1
mkPostAccountRequestBodyIndividual'Dob'OneOf1 postAccountRequestBodyIndividual'Dob'OneOf1Day postAccountRequestBodyIndividual'Dob'OneOf1Month postAccountRequestBodyIndividual'Dob'OneOf1Year = PostAccountRequestBodyIndividual'Dob'OneOf1{postAccountRequestBodyIndividual'Dob'OneOf1Day = postAccountRequestBodyIndividual'Dob'OneOf1Day,
                                                                                                                                                                                                                                            postAccountRequestBodyIndividual'Dob'OneOf1Month = postAccountRequestBodyIndividual'Dob'OneOf1Month,
                                                                                                                                                                                                                                            postAccountRequestBodyIndividual'Dob'OneOf1Year = postAccountRequestBodyIndividual'Dob'OneOf1Year}
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.dob.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Dob'Variants =
   PostAccountRequestBodyIndividual'Dob'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodyIndividual'Dob'PostAccountRequestBodyIndividual'Dob'OneOf1 PostAccountRequestBodyIndividual'Dob'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Dob'Variants
    where toJSON (PostAccountRequestBodyIndividual'Dob'PostAccountRequestBodyIndividual'Dob'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodyIndividual'Dob'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Dob'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodyIndividual'Dob'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodyIndividual'Dob'PostAccountRequestBodyIndividual'Dob'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.full_name_aliases.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'FullNameAliases'Variants =
   PostAccountRequestBodyIndividual'FullNameAliases'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodyIndividual'FullNameAliases'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'FullNameAliases'Variants
    where toJSON (PostAccountRequestBodyIndividual'FullNameAliases'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodyIndividual'FullNameAliases'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'FullNameAliases'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodyIndividual'FullNameAliases'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodyIndividual'FullNameAliases'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.metadata.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Metadata'Variants =
   PostAccountRequestBodyIndividual'Metadata'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodyIndividual'Metadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Metadata'Variants
    where toJSON (PostAccountRequestBodyIndividual'Metadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodyIndividual'Metadata'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Metadata'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodyIndividual'Metadata'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodyIndividual'Metadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.political_exposure@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'PoliticalExposure' =
   PostAccountRequestBodyIndividual'PoliticalExposure'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodyIndividual'PoliticalExposure'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodyIndividual'PoliticalExposure'EnumExisting -- ^ Represents the JSON value @"existing"@
  | PostAccountRequestBodyIndividual'PoliticalExposure'EnumNone -- ^ Represents the JSON value @"none"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'PoliticalExposure'
    where toJSON (PostAccountRequestBodyIndividual'PoliticalExposure'Other val) = val
          toJSON (PostAccountRequestBodyIndividual'PoliticalExposure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodyIndividual'PoliticalExposure'EnumExisting) = "existing"
          toJSON (PostAccountRequestBodyIndividual'PoliticalExposure'EnumNone) = "none"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'PoliticalExposure'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "existing" -> PostAccountRequestBodyIndividual'PoliticalExposure'EnumExisting
                                            | val GHC.Classes.== "none" -> PostAccountRequestBodyIndividual'PoliticalExposure'EnumNone
                                            | GHC.Base.otherwise -> PostAccountRequestBodyIndividual'PoliticalExposure'Other val)
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.registered_address@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'RegisteredAddress' = PostAccountRequestBodyIndividual'RegisteredAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 100
  postAccountRequestBodyIndividual'RegisteredAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'RegisteredAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyIndividual'RegisteredAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 200
  , postAccountRequestBodyIndividual'RegisteredAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'RegisteredAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyIndividual'RegisteredAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'RegisteredAddress'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'State obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'RegisteredAddress'State obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'RegisteredAddress'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'RegisteredAddress'" (\obj -> (((((GHC.Base.pure PostAccountRequestBodyIndividual'RegisteredAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'PostAccountRequestBodyIndividual'RegisteredAddress'' with all required fields.
mkPostAccountRequestBodyIndividual'RegisteredAddress' :: PostAccountRequestBodyIndividual'RegisteredAddress'
mkPostAccountRequestBodyIndividual'RegisteredAddress' = PostAccountRequestBodyIndividual'RegisteredAddress'{postAccountRequestBodyIndividual'RegisteredAddress'City = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyIndividual'RegisteredAddress'Country = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyIndividual'RegisteredAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyIndividual'RegisteredAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyIndividual'RegisteredAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                            postAccountRequestBodyIndividual'RegisteredAddress'State = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Verification' = PostAccountRequestBodyIndividual'Verification' {
  -- | additional_document
  postAccountRequestBodyIndividual'Verification'AdditionalDocument :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'Verification'AdditionalDocument')
  -- | document
  , postAccountRequestBodyIndividual'Verification'Document :: (GHC.Maybe.Maybe PostAccountRequestBodyIndividual'Verification'Document')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Verification'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'Document obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'Document obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Verification'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'Verification'" (\obj -> (GHC.Base.pure PostAccountRequestBodyIndividual'Verification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))
-- | Create a new 'PostAccountRequestBodyIndividual'Verification'' with all required fields.
mkPostAccountRequestBodyIndividual'Verification' :: PostAccountRequestBodyIndividual'Verification'
mkPostAccountRequestBodyIndividual'Verification' = PostAccountRequestBodyIndividual'Verification'{postAccountRequestBodyIndividual'Verification'AdditionalDocument = GHC.Maybe.Nothing,
                                                                                                  postAccountRequestBodyIndividual'Verification'Document = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification.properties.additional_document@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Verification'AdditionalDocument' = PostAccountRequestBodyIndividual'Verification'AdditionalDocument' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountRequestBodyIndividual'Verification'AdditionalDocument'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountRequestBodyIndividual'Verification'AdditionalDocument'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Verification'AdditionalDocument'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'AdditionalDocument'Front obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'AdditionalDocument'Front obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Verification'AdditionalDocument'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'Verification'AdditionalDocument'" (\obj -> (GHC.Base.pure PostAccountRequestBodyIndividual'Verification'AdditionalDocument' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))
-- | Create a new 'PostAccountRequestBodyIndividual'Verification'AdditionalDocument'' with all required fields.
mkPostAccountRequestBodyIndividual'Verification'AdditionalDocument' :: PostAccountRequestBodyIndividual'Verification'AdditionalDocument'
mkPostAccountRequestBodyIndividual'Verification'AdditionalDocument' = PostAccountRequestBodyIndividual'Verification'AdditionalDocument'{postAccountRequestBodyIndividual'Verification'AdditionalDocument'Back = GHC.Maybe.Nothing,
                                                                                                                                        postAccountRequestBodyIndividual'Verification'AdditionalDocument'Front = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification.properties.document@ in the specification.
-- 
-- 
data PostAccountRequestBodyIndividual'Verification'Document' = PostAccountRequestBodyIndividual'Verification'Document' {
  -- | back
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  postAccountRequestBodyIndividual'Verification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | front
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 500
  , postAccountRequestBodyIndividual'Verification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyIndividual'Verification'Document'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'Document'Front obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyIndividual'Verification'Document'Front obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyIndividual'Verification'Document'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyIndividual'Verification'Document'" (\obj -> (GHC.Base.pure PostAccountRequestBodyIndividual'Verification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))
-- | Create a new 'PostAccountRequestBodyIndividual'Verification'Document'' with all required fields.
mkPostAccountRequestBodyIndividual'Verification'Document' :: PostAccountRequestBodyIndividual'Verification'Document'
mkPostAccountRequestBodyIndividual'Verification'Document' = PostAccountRequestBodyIndividual'Verification'Document'{postAccountRequestBodyIndividual'Verification'Document'Back = GHC.Maybe.Nothing,
                                                                                                                    postAccountRequestBodyIndividual'Verification'Document'Front = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostAccountRequestBodyMetadata'Variants =
   PostAccountRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyMetadata'Variants
    where toJSON (PostAccountRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodyMetadata'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyMetadata'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodyMetadata'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings@ in the specification.
-- 
-- Options for customizing how the account functions within Stripe.
data PostAccountRequestBodySettings' = PostAccountRequestBodySettings' {
  -- | branding
  postAccountRequestBodySettings'Branding :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Branding')
  -- | card_issuing
  , postAccountRequestBodySettings'CardIssuing :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'CardIssuing')
  -- | card_payments
  , postAccountRequestBodySettings'CardPayments :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'CardPayments')
  -- | payments
  , postAccountRequestBodySettings'Payments :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Payments')
  -- | payouts
  , postAccountRequestBodySettings'Payouts :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Payouts')
  -- | treasury
  , postAccountRequestBodySettings'Treasury :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Treasury')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'" (\obj -> (((((GHC.Base.pure PostAccountRequestBodySettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "treasury"))
-- | Create a new 'PostAccountRequestBodySettings'' with all required fields.
mkPostAccountRequestBodySettings' :: PostAccountRequestBodySettings'
mkPostAccountRequestBodySettings' = PostAccountRequestBodySettings'{postAccountRequestBodySettings'Branding = GHC.Maybe.Nothing,
                                                                    postAccountRequestBodySettings'CardIssuing = GHC.Maybe.Nothing,
                                                                    postAccountRequestBodySettings'CardPayments = GHC.Maybe.Nothing,
                                                                    postAccountRequestBodySettings'Payments = GHC.Maybe.Nothing,
                                                                    postAccountRequestBodySettings'Payouts = GHC.Maybe.Nothing,
                                                                    postAccountRequestBodySettings'Treasury = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.branding@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Branding' = PostAccountRequestBodySettings'Branding' {
  -- | icon
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postAccountRequestBodySettings'Branding'Icon :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | logo
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'Branding'Logo :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | primary_color
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'Branding'PrimaryColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | secondary_color
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'Branding'SecondaryColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Branding'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("icon" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'Icon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("logo" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'Logo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("primary_color" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'PrimaryColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("secondary_color" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'SecondaryColor obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("icon" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'Icon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("logo" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'Logo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("primary_color" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'PrimaryColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("secondary_color" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Branding'SecondaryColor obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Branding'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'Branding'" (\obj -> (((GHC.Base.pure PostAccountRequestBodySettings'Branding' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "icon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "primary_color")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "secondary_color"))
-- | Create a new 'PostAccountRequestBodySettings'Branding'' with all required fields.
mkPostAccountRequestBodySettings'Branding' :: PostAccountRequestBodySettings'Branding'
mkPostAccountRequestBodySettings'Branding' = PostAccountRequestBodySettings'Branding'{postAccountRequestBodySettings'Branding'Icon = GHC.Maybe.Nothing,
                                                                                      postAccountRequestBodySettings'Branding'Logo = GHC.Maybe.Nothing,
                                                                                      postAccountRequestBodySettings'Branding'PrimaryColor = GHC.Maybe.Nothing,
                                                                                      postAccountRequestBodySettings'Branding'SecondaryColor = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'CardIssuing' = PostAccountRequestBodySettings'CardIssuing' {
  -- | tos_acceptance
  postAccountRequestBodySettings'CardIssuing'TosAcceptance :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'CardIssuing'TosAcceptance')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'CardIssuing'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'CardIssuing'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'CardIssuing'" (\obj -> GHC.Base.pure PostAccountRequestBodySettings'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance"))
-- | Create a new 'PostAccountRequestBodySettings'CardIssuing'' with all required fields.
mkPostAccountRequestBodySettings'CardIssuing' :: PostAccountRequestBodySettings'CardIssuing'
mkPostAccountRequestBodySettings'CardIssuing' = PostAccountRequestBodySettings'CardIssuing'{postAccountRequestBodySettings'CardIssuing'TosAcceptance = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing.properties.tos_acceptance@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'CardIssuing'TosAcceptance' = PostAccountRequestBodySettings'CardIssuing'TosAcceptance' {
  -- | date
  postAccountRequestBodySettings'CardIssuing'TosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | ip
  , postAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'CardIssuing'TosAcceptance'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'CardIssuing'TosAcceptance'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'CardIssuing'TosAcceptance'" (\obj -> ((GHC.Base.pure PostAccountRequestBodySettings'CardIssuing'TosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))
-- | Create a new 'PostAccountRequestBodySettings'CardIssuing'TosAcceptance'' with all required fields.
mkPostAccountRequestBodySettings'CardIssuing'TosAcceptance' :: PostAccountRequestBodySettings'CardIssuing'TosAcceptance'
mkPostAccountRequestBodySettings'CardIssuing'TosAcceptance' = PostAccountRequestBodySettings'CardIssuing'TosAcceptance'{postAccountRequestBodySettings'CardIssuing'TosAcceptance'Date = GHC.Maybe.Nothing,
                                                                                                                        postAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip = GHC.Maybe.Nothing,
                                                                                                                        postAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'CardPayments' = PostAccountRequestBodySettings'CardPayments' {
  -- | decline_on
  postAccountRequestBodySettings'CardPayments'DeclineOn :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'CardPayments'DeclineOn')
  -- | statement_descriptor_prefix
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 10
  , postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | statement_descriptor_prefix_kana
  , postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants)
  -- | statement_descriptor_prefix_kanji
  , postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'CardPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_on" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'DeclineOn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_on" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'DeclineOn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'CardPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'CardPayments'" (\obj -> (((GHC.Base.pure PostAccountRequestBodySettings'CardPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "decline_on")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_prefix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_prefix_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_prefix_kanji"))
-- | Create a new 'PostAccountRequestBodySettings'CardPayments'' with all required fields.
mkPostAccountRequestBodySettings'CardPayments' :: PostAccountRequestBodySettings'CardPayments'
mkPostAccountRequestBodySettings'CardPayments' = PostAccountRequestBodySettings'CardPayments'{postAccountRequestBodySettings'CardPayments'DeclineOn = GHC.Maybe.Nothing,
                                                                                              postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix = GHC.Maybe.Nothing,
                                                                                              postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana = GHC.Maybe.Nothing,
                                                                                              postAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.decline_on@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'CardPayments'DeclineOn' = PostAccountRequestBodySettings'CardPayments'DeclineOn' {
  -- | avs_failure
  postAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | cvc_failure
  , postAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'CardPayments'DeclineOn'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avs_failure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_failure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avs_failure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_failure" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'CardPayments'DeclineOn'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'CardPayments'DeclineOn'" (\obj -> (GHC.Base.pure PostAccountRequestBodySettings'CardPayments'DeclineOn' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "avs_failure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_failure"))
-- | Create a new 'PostAccountRequestBodySettings'CardPayments'DeclineOn'' with all required fields.
mkPostAccountRequestBodySettings'CardPayments'DeclineOn' :: PostAccountRequestBodySettings'CardPayments'DeclineOn'
mkPostAccountRequestBodySettings'CardPayments'DeclineOn' = PostAccountRequestBodySettings'CardPayments'DeclineOn'{postAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure = GHC.Maybe.Nothing,
                                                                                                                  postAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.statement_descriptor_prefix_kana.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants =
   PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants
    where toJSON (PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.statement_descriptor_prefix_kanji.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants =
   PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'EmptyString -- ^ Represents the JSON value @""@
  | PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants
    where toJSON (PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'EmptyString
                             | GHC.Base.otherwise -> case (PostAccountRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payments@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Payments' = PostAccountRequestBodySettings'Payments' {
  -- | statement_descriptor
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 22
  postAccountRequestBodySettings'Payments'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | statement_descriptor_kana
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 22
  , postAccountRequestBodySettings'Payments'StatementDescriptorKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | statement_descriptor_kanji
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 22
  , postAccountRequestBodySettings'Payments'StatementDescriptorKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Payments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments'StatementDescriptorKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments'StatementDescriptorKanji obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kana" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments'StatementDescriptorKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payments'StatementDescriptorKanji obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Payments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'Payments'" (\obj -> ((GHC.Base.pure PostAccountRequestBodySettings'Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_kanji"))
-- | Create a new 'PostAccountRequestBodySettings'Payments'' with all required fields.
mkPostAccountRequestBodySettings'Payments' :: PostAccountRequestBodySettings'Payments'
mkPostAccountRequestBodySettings'Payments' = PostAccountRequestBodySettings'Payments'{postAccountRequestBodySettings'Payments'StatementDescriptor = GHC.Maybe.Nothing,
                                                                                      postAccountRequestBodySettings'Payments'StatementDescriptorKana = GHC.Maybe.Nothing,
                                                                                      postAccountRequestBodySettings'Payments'StatementDescriptorKanji = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Payouts' = PostAccountRequestBodySettings'Payouts' {
  -- | debit_negative_balances
  postAccountRequestBodySettings'Payouts'DebitNegativeBalances :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | schedule
  , postAccountRequestBodySettings'Payouts'Schedule :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Payouts'Schedule')
  -- | statement_descriptor
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 22
  , postAccountRequestBodySettings'Payouts'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Payouts'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit_negative_balances" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'DebitNegativeBalances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("schedule" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'StatementDescriptor obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit_negative_balances" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'DebitNegativeBalances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("schedule" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'StatementDescriptor obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Payouts'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'Payouts'" (\obj -> ((GHC.Base.pure PostAccountRequestBodySettings'Payouts' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "debit_negative_balances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "schedule")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor"))
-- | Create a new 'PostAccountRequestBodySettings'Payouts'' with all required fields.
mkPostAccountRequestBodySettings'Payouts' :: PostAccountRequestBodySettings'Payouts'
mkPostAccountRequestBodySettings'Payouts' = PostAccountRequestBodySettings'Payouts'{postAccountRequestBodySettings'Payouts'DebitNegativeBalances = GHC.Maybe.Nothing,
                                                                                    postAccountRequestBodySettings'Payouts'Schedule = GHC.Maybe.Nothing,
                                                                                    postAccountRequestBodySettings'Payouts'StatementDescriptor = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Payouts'Schedule' = PostAccountRequestBodySettings'Payouts'Schedule' {
  -- | delay_days
  postAccountRequestBodySettings'Payouts'Schedule'DelayDays :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants)
  -- | interval
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'Payouts'Schedule'Interval :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Payouts'Schedule'Interval')
  -- | monthly_anchor
  , postAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | weekly_anchor
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Payouts'Schedule'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delay_days" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'DelayDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'Interval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("weekly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delay_days" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'DelayDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'Interval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("weekly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Payouts'Schedule'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'Payouts'Schedule'" (\obj -> (((GHC.Base.pure PostAccountRequestBodySettings'Payouts'Schedule' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "delay_days")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "monthly_anchor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "weekly_anchor"))
-- | Create a new 'PostAccountRequestBodySettings'Payouts'Schedule'' with all required fields.
mkPostAccountRequestBodySettings'Payouts'Schedule' :: PostAccountRequestBodySettings'Payouts'Schedule'
mkPostAccountRequestBodySettings'Payouts'Schedule' = PostAccountRequestBodySettings'Payouts'Schedule'{postAccountRequestBodySettings'Payouts'Schedule'DelayDays = GHC.Maybe.Nothing,
                                                                                                      postAccountRequestBodySettings'Payouts'Schedule'Interval = GHC.Maybe.Nothing,
                                                                                                      postAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor = GHC.Maybe.Nothing,
                                                                                                      postAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.delay_days.anyOf@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants =
   PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Minimum -- ^ Represents the JSON value @"minimum"@
  | PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants
    where toJSON (PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Minimum) = "minimum"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants
    where parseJSON val = if | val GHC.Classes.== "minimum" -> GHC.Base.pure PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Minimum
                             | GHC.Base.otherwise -> case (PostAccountRequestBodySettings'Payouts'Schedule'DelayDays'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.interval@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Payouts'Schedule'Interval' =
   PostAccountRequestBodySettings'Payouts'Schedule'Interval'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodySettings'Payouts'Schedule'Interval'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumDaily -- ^ Represents the JSON value @"daily"@
  | PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumManual -- ^ Represents the JSON value @"manual"@
  | PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly -- ^ Represents the JSON value @"monthly"@
  | PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly -- ^ Represents the JSON value @"weekly"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Payouts'Schedule'Interval'
    where toJSON (PostAccountRequestBodySettings'Payouts'Schedule'Interval'Other val) = val
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'Interval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumDaily) = "daily"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumManual) = "manual"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly) = "monthly"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly) = "weekly"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Payouts'Schedule'Interval'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "daily" -> PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumDaily
                                            | val GHC.Classes.== "manual" -> PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumManual
                                            | val GHC.Classes.== "monthly" -> PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly
                                            | val GHC.Classes.== "weekly" -> PostAccountRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly
                                            | GHC.Base.otherwise -> PostAccountRequestBodySettings'Payouts'Schedule'Interval'Other val)
-- | Defines the enum schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.weekly_anchor@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor' =
   PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday -- ^ Represents the JSON value @"friday"@
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday -- ^ Represents the JSON value @"monday"@
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday -- ^ Represents the JSON value @"saturday"@
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday -- ^ Represents the JSON value @"sunday"@
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday -- ^ Represents the JSON value @"thursday"@
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday -- ^ Represents the JSON value @"tuesday"@
  | PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday -- ^ Represents the JSON value @"wednesday"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'
    where toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other val) = val
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday) = "friday"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday) = "monday"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday) = "saturday"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday) = "sunday"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday) = "thursday"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday) = "tuesday"
          toJSON (PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday) = "wednesday"
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "friday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday
                                            | val GHC.Classes.== "monday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday
                                            | val GHC.Classes.== "saturday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday
                                            | val GHC.Classes.== "sunday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday
                                            | val GHC.Classes.== "thursday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday
                                            | val GHC.Classes.== "tuesday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday
                                            | val GHC.Classes.== "wednesday" -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday
                                            | GHC.Base.otherwise -> PostAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other val)
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.treasury@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Treasury' = PostAccountRequestBodySettings'Treasury' {
  -- | tos_acceptance
  postAccountRequestBodySettings'Treasury'TosAcceptance :: (GHC.Maybe.Maybe PostAccountRequestBodySettings'Treasury'TosAcceptance')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Treasury'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Treasury'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'Treasury'" (\obj -> GHC.Base.pure PostAccountRequestBodySettings'Treasury' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance"))
-- | Create a new 'PostAccountRequestBodySettings'Treasury'' with all required fields.
mkPostAccountRequestBodySettings'Treasury' :: PostAccountRequestBodySettings'Treasury'
mkPostAccountRequestBodySettings'Treasury' = PostAccountRequestBodySettings'Treasury'{postAccountRequestBodySettings'Treasury'TosAcceptance = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.treasury.properties.tos_acceptance@ in the specification.
-- 
-- 
data PostAccountRequestBodySettings'Treasury'TosAcceptance' = PostAccountRequestBodySettings'Treasury'TosAcceptance' {
  -- | date
  postAccountRequestBodySettings'Treasury'TosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | ip
  , postAccountRequestBodySettings'Treasury'TosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodySettings'Treasury'TosAcceptance'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodySettings'Treasury'TosAcceptance'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance'UserAgent obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodySettings'Treasury'TosAcceptance'UserAgent obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodySettings'Treasury'TosAcceptance'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodySettings'Treasury'TosAcceptance'" (\obj -> ((GHC.Base.pure PostAccountRequestBodySettings'Treasury'TosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))
-- | Create a new 'PostAccountRequestBodySettings'Treasury'TosAcceptance'' with all required fields.
mkPostAccountRequestBodySettings'Treasury'TosAcceptance' :: PostAccountRequestBodySettings'Treasury'TosAcceptance'
mkPostAccountRequestBodySettings'Treasury'TosAcceptance' = PostAccountRequestBodySettings'Treasury'TosAcceptance'{postAccountRequestBodySettings'Treasury'TosAcceptance'Date = GHC.Maybe.Nothing,
                                                                                                                  postAccountRequestBodySettings'Treasury'TosAcceptance'Ip = GHC.Maybe.Nothing,
                                                                                                                  postAccountRequestBodySettings'Treasury'TosAcceptance'UserAgent = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/account.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tos_acceptance@ in the specification.
-- 
-- Details on the account\'s acceptance of the [Stripe Services Agreement](https:\/\/stripe.com\/docs\/connect\/updating-accounts\#tos-acceptance).
data PostAccountRequestBodyTosAcceptance' = PostAccountRequestBodyTosAcceptance' {
  -- | date
  postAccountRequestBodyTosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | ip
  , postAccountRequestBodyTosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | service_agreement
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyTosAcceptance'ServiceAgreement :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | user_agent
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postAccountRequestBodyTosAcceptance'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostAccountRequestBodyTosAcceptance'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_agreement" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'ServiceAgreement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'UserAgent obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_agreement" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'ServiceAgreement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountRequestBodyTosAcceptance'UserAgent obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostAccountRequestBodyTosAcceptance'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountRequestBodyTosAcceptance'" (\obj -> (((GHC.Base.pure PostAccountRequestBodyTosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_agreement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))
-- | Create a new 'PostAccountRequestBodyTosAcceptance'' with all required fields.
mkPostAccountRequestBodyTosAcceptance' :: PostAccountRequestBodyTosAcceptance'
mkPostAccountRequestBodyTosAcceptance' = PostAccountRequestBodyTosAcceptance'{postAccountRequestBodyTosAcceptance'Date = GHC.Maybe.Nothing,
                                                                              postAccountRequestBodyTosAcceptance'Ip = GHC.Maybe.Nothing,
                                                                              postAccountRequestBodyTosAcceptance'ServiceAgreement = GHC.Maybe.Nothing,
                                                                              postAccountRequestBodyTosAcceptance'UserAgent = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postAccount'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountResponseError' is used.
data PostAccountResponse =
   PostAccountResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostAccountResponse200 Account -- ^ Successful response.
  | PostAccountResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
