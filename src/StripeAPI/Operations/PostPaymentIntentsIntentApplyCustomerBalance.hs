-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postPaymentIntentsIntentApplyCustomerBalance
module StripeAPI.Operations.PostPaymentIntentsIntentApplyCustomerBalance where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/payment_intents/{intent}/apply_customer_balance
-- 
-- \<p>Manually reconcile the remaining amount for a customer_balance PaymentIntent.\<\/p>
-- 
-- \<p>This can be used when the cash balance for \<a href=\"docs\/payments\/customer-balance\/reconciliation\#cash-manual-reconciliation\">a customer in manual reconciliation mode\<\/a> received funds.\<\/p>
postPaymentIntentsIntentApplyCustomerBalance :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ intent | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostPaymentIntentsIntentApplyCustomerBalanceRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostPaymentIntentsIntentApplyCustomerBalanceResponse) -- ^ Monadic computation which returns the result of the operation
postPaymentIntentsIntentApplyCustomerBalance intent
                                             body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostPaymentIntentsIntentApplyCustomerBalanceResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostPaymentIntentsIntentApplyCustomerBalanceResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       PaymentIntent)
                                                                                                                                                                                                                           | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostPaymentIntentsIntentApplyCustomerBalanceResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                         Error)
                                                                                                                                                                                                                           | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/payment_intents/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel intent)) GHC.Base.++ "/apply_customer_balance"))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/payment_intents\/{intent}\/apply_customer_balance.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostPaymentIntentsIntentApplyCustomerBalanceRequestBody = PostPaymentIntentsIntentApplyCustomerBalanceRequestBody {
  -- | amount: Amount intended to be applied to this PaymentIntent from the customer’s cash balance.
  -- 
  -- A positive integer representing how much to charge in the [smallest currency unit](https:\/\/stripe.com\/docs\/currencies\#zero-decimal) (e.g., 100 cents to charge \$1.00 or 100 to charge ¥100, a zero-decimal currency).
  -- 
  -- The maximum amount is the amount of the PaymentIntent.
  -- 
  -- When omitted, the amount defaults to the remaining amount requested on the PaymentIntent.
  postPaymentIntentsIntentApplyCustomerBalanceRequestBodyAmount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
  , postPaymentIntentsIntentApplyCustomerBalanceRequestBodyCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expand: Specifies which fields in the response should be expanded.
  , postPaymentIntentsIntentApplyCustomerBalanceRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentIntentsIntentApplyCustomerBalanceRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postPaymentIntentsIntentApplyCustomerBalanceRequestBodyAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postPaymentIntentsIntentApplyCustomerBalanceRequestBodyCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postPaymentIntentsIntentApplyCustomerBalanceRequestBodyExpand obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postPaymentIntentsIntentApplyCustomerBalanceRequestBodyAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postPaymentIntentsIntentApplyCustomerBalanceRequestBodyCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postPaymentIntentsIntentApplyCustomerBalanceRequestBodyExpand obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentIntentsIntentApplyCustomerBalanceRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentIntentsIntentApplyCustomerBalanceRequestBody" (\obj -> ((GHC.Base.pure PostPaymentIntentsIntentApplyCustomerBalanceRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))
-- | Create a new 'PostPaymentIntentsIntentApplyCustomerBalanceRequestBody' with all required fields.
mkPostPaymentIntentsIntentApplyCustomerBalanceRequestBody :: PostPaymentIntentsIntentApplyCustomerBalanceRequestBody
mkPostPaymentIntentsIntentApplyCustomerBalanceRequestBody = PostPaymentIntentsIntentApplyCustomerBalanceRequestBody{postPaymentIntentsIntentApplyCustomerBalanceRequestBodyAmount = GHC.Maybe.Nothing,
                                                                                                                    postPaymentIntentsIntentApplyCustomerBalanceRequestBodyCurrency = GHC.Maybe.Nothing,
                                                                                                                    postPaymentIntentsIntentApplyCustomerBalanceRequestBodyExpand = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'postPaymentIntentsIntentApplyCustomerBalance'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostPaymentIntentsIntentApplyCustomerBalanceResponseError' is used.
data PostPaymentIntentsIntentApplyCustomerBalanceResponse =
   PostPaymentIntentsIntentApplyCustomerBalanceResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostPaymentIntentsIntentApplyCustomerBalanceResponse200 PaymentIntent -- ^ Successful response.
  | PostPaymentIntentsIntentApplyCustomerBalanceResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
