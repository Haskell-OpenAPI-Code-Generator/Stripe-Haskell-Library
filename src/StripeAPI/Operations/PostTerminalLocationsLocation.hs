-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTerminalLocationsLocation
module StripeAPI.Operations.PostTerminalLocationsLocation where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/terminal/locations/{location}
-- 
-- \<p>Updates a \<code>Location\<\/code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\<\/p>
postTerminalLocationsLocation :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ location | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostTerminalLocationsLocationRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTerminalLocationsLocationResponse) -- ^ Monadic computation which returns the result of the operation
postTerminalLocationsLocation location
                              body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTerminalLocationsLocationResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTerminalLocationsLocationResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                          PostTerminalLocationsLocationResponseBody200)
                                                                                                                                                                                             | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTerminalLocationsLocationResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                            Error)
                                                                                                                                                                                             | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/terminal/locations/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel location)) GHC.Base.++ ""))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/terminal\/locations\/{location}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTerminalLocationsLocationRequestBody = PostTerminalLocationsLocationRequestBody {
  -- | address: The full address of the location.
  postTerminalLocationsLocationRequestBodyAddress :: (GHC.Maybe.Maybe PostTerminalLocationsLocationRequestBodyAddress')
  -- | configuration_overrides: The ID of a configuration that will be used to customize all readers in this location.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1000
  , postTerminalLocationsLocationRequestBodyConfigurationOverrides :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | display_name: A name for the location.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1000
  , postTerminalLocationsLocationRequestBodyDisplayName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expand: Specifies which fields in the response should be expanded.
  , postTerminalLocationsLocationRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postTerminalLocationsLocationRequestBodyMetadata :: (GHC.Maybe.Maybe PostTerminalLocationsLocationRequestBodyMetadata'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalLocationsLocationRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configuration_overrides" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyConfigurationOverrides obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyDisplayName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyMetadata obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configuration_overrides" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyConfigurationOverrides obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyDisplayName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyMetadata obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalLocationsLocationRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalLocationsLocationRequestBody" (\obj -> ((((GHC.Base.pure PostTerminalLocationsLocationRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configuration_overrides")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata"))
-- | Create a new 'PostTerminalLocationsLocationRequestBody' with all required fields.
mkPostTerminalLocationsLocationRequestBody :: PostTerminalLocationsLocationRequestBody
mkPostTerminalLocationsLocationRequestBody = PostTerminalLocationsLocationRequestBody{postTerminalLocationsLocationRequestBodyAddress = GHC.Maybe.Nothing,
                                                                                      postTerminalLocationsLocationRequestBodyConfigurationOverrides = GHC.Maybe.Nothing,
                                                                                      postTerminalLocationsLocationRequestBodyDisplayName = GHC.Maybe.Nothing,
                                                                                      postTerminalLocationsLocationRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                      postTerminalLocationsLocationRequestBodyMetadata = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/terminal\/locations\/{location}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address@ in the specification.
-- 
-- The full address of the location.
data PostTerminalLocationsLocationRequestBodyAddress' = PostTerminalLocationsLocationRequestBodyAddress' {
  -- | city
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  postTerminalLocationsLocationRequestBodyAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationRequestBodyAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line1
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationRequestBodyAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | line2
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationRequestBodyAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | postal_code
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationRequestBodyAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | state
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationRequestBodyAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalLocationsLocationRequestBodyAddress'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'State obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationRequestBodyAddress'State obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalLocationsLocationRequestBodyAddress'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalLocationsLocationRequestBodyAddress'" (\obj -> (((((GHC.Base.pure PostTerminalLocationsLocationRequestBodyAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'PostTerminalLocationsLocationRequestBodyAddress'' with all required fields.
mkPostTerminalLocationsLocationRequestBodyAddress' :: PostTerminalLocationsLocationRequestBodyAddress'
mkPostTerminalLocationsLocationRequestBodyAddress' = PostTerminalLocationsLocationRequestBodyAddress'{postTerminalLocationsLocationRequestBodyAddress'City = GHC.Maybe.Nothing,
                                                                                                      postTerminalLocationsLocationRequestBodyAddress'Country = GHC.Maybe.Nothing,
                                                                                                      postTerminalLocationsLocationRequestBodyAddress'Line1 = GHC.Maybe.Nothing,
                                                                                                      postTerminalLocationsLocationRequestBodyAddress'Line2 = GHC.Maybe.Nothing,
                                                                                                      postTerminalLocationsLocationRequestBodyAddress'PostalCode = GHC.Maybe.Nothing,
                                                                                                      postTerminalLocationsLocationRequestBodyAddress'State = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/terminal\/locations\/{location}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostTerminalLocationsLocationRequestBodyMetadata'Variants =
   PostTerminalLocationsLocationRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostTerminalLocationsLocationRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalLocationsLocationRequestBodyMetadata'Variants
    where toJSON (PostTerminalLocationsLocationRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostTerminalLocationsLocationRequestBodyMetadata'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalLocationsLocationRequestBodyMetadata'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostTerminalLocationsLocationRequestBodyMetadata'EmptyString
                             | GHC.Base.otherwise -> case (PostTerminalLocationsLocationRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Represents a response of the operation 'postTerminalLocationsLocation'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTerminalLocationsLocationResponseError' is used.
data PostTerminalLocationsLocationResponse =
   PostTerminalLocationsLocationResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTerminalLocationsLocationResponse200 PostTerminalLocationsLocationResponseBody200 -- ^ Successful response.
  | PostTerminalLocationsLocationResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/terminal\/locations\/{location}.POST.responses.200.content.application\/json.schema.anyOf@ in the specification.
-- 
-- 
data PostTerminalLocationsLocationResponseBody200 = PostTerminalLocationsLocationResponseBody200 {
  -- | address: 
  postTerminalLocationsLocationResponseBody200Address :: (GHC.Maybe.Maybe Address)
  -- | configuration_overrides: The ID of a configuration that will be used to customize all readers in this location.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationResponseBody200ConfigurationOverrides :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | deleted: Always true for a deleted object
  , postTerminalLocationsLocationResponseBody200Deleted :: (GHC.Maybe.Maybe PostTerminalLocationsLocationResponseBody200Deleted')
  -- | display_name: The display name of the location.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationResponseBody200DisplayName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalLocationsLocationResponseBody200Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , postTerminalLocationsLocationResponseBody200Livemode :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , postTerminalLocationsLocationResponseBody200Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | object: String representing the object\'s type. Objects of the same type share the same value.
  , postTerminalLocationsLocationResponseBody200Object :: (GHC.Maybe.Maybe PostTerminalLocationsLocationResponseBody200Object')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalLocationsLocationResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configuration_overrides" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200ConfigurationOverrides obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Deleted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200DisplayName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Object obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("configuration_overrides" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200ConfigurationOverrides obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Deleted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200DisplayName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (postTerminalLocationsLocationResponseBody200Object obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalLocationsLocationResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalLocationsLocationResponseBody200" (\obj -> (((((((GHC.Base.pure PostTerminalLocationsLocationResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "configuration_overrides")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "deleted")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object"))
-- | Create a new 'PostTerminalLocationsLocationResponseBody200' with all required fields.
mkPostTerminalLocationsLocationResponseBody200 :: PostTerminalLocationsLocationResponseBody200
mkPostTerminalLocationsLocationResponseBody200 = PostTerminalLocationsLocationResponseBody200{postTerminalLocationsLocationResponseBody200Address = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200ConfigurationOverrides = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200Deleted = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200DisplayName = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200Id = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200Livemode = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200Metadata = GHC.Maybe.Nothing,
                                                                                              postTerminalLocationsLocationResponseBody200Object = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/terminal\/locations\/{location}.POST.responses.200.content.application\/json.schema.anyOf.properties.deleted@ in the specification.
-- 
-- Always true for a deleted object
data PostTerminalLocationsLocationResponseBody200Deleted' =
   PostTerminalLocationsLocationResponseBody200Deleted'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTerminalLocationsLocationResponseBody200Deleted'Typed GHC.Types.Bool -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTerminalLocationsLocationResponseBody200Deleted'EnumTrue -- ^ Represents the JSON value @true@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalLocationsLocationResponseBody200Deleted'
    where toJSON (PostTerminalLocationsLocationResponseBody200Deleted'Other val) = val
          toJSON (PostTerminalLocationsLocationResponseBody200Deleted'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTerminalLocationsLocationResponseBody200Deleted'EnumTrue) = Data.Aeson.Types.Internal.Bool GHC.Types.True
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalLocationsLocationResponseBody200Deleted'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== Data.Aeson.Types.Internal.Bool GHC.Types.True -> PostTerminalLocationsLocationResponseBody200Deleted'EnumTrue
                                            | GHC.Base.otherwise -> PostTerminalLocationsLocationResponseBody200Deleted'Other val)
-- | Defines the enum schema located at @paths.\/v1\/terminal\/locations\/{location}.POST.responses.200.content.application\/json.schema.anyOf.properties.object@ in the specification.
-- 
-- String representing the object\'s type. Objects of the same type share the same value.
data PostTerminalLocationsLocationResponseBody200Object' =
   PostTerminalLocationsLocationResponseBody200Object'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTerminalLocationsLocationResponseBody200Object'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTerminalLocationsLocationResponseBody200Object'EnumTerminal'location -- ^ Represents the JSON value @"terminal.location"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalLocationsLocationResponseBody200Object'
    where toJSON (PostTerminalLocationsLocationResponseBody200Object'Other val) = val
          toJSON (PostTerminalLocationsLocationResponseBody200Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTerminalLocationsLocationResponseBody200Object'EnumTerminal'location) = "terminal.location"
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalLocationsLocationResponseBody200Object'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "terminal.location" -> PostTerminalLocationsLocationResponseBody200Object'EnumTerminal'location
                                            | GHC.Base.otherwise -> PostTerminalLocationsLocationResponseBody200Object'Other val)
