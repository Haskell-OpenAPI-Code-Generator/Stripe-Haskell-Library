{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postAccountsAccountPersonsPerson
module StripeAPI.Operations.PostAccountsAccountPersonsPerson where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/accounts/{account}/persons/{person}
--
-- \<p>Updates an existing person.\<\/p>
postAccountsAccountPersonsPerson ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostAccountsAccountPersonsPersonParameters ->
  -- | The request body to send
  GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostAccountsAccountPersonsPersonResponse)
postAccountsAccountPersonsPerson
  parameters
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostAccountsAccountPersonsPersonResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountsAccountPersonsPersonResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Person
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountsAccountPersonsPersonResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/accounts/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel (postAccountsAccountPersonsPersonParametersPathAccount parameters))) GHC.Base.++ ("/persons/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel (postAccountsAccountPersonsPersonParametersPathPerson parameters))) GHC.Base.++ ""))))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.parameters@ in the specification.
data PostAccountsAccountPersonsPersonParameters = PostAccountsAccountPersonsPersonParameters
  { -- | pathAccount: Represents the parameter named \'account\'
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonParametersPathAccount :: Data.Text.Internal.Text,
    -- | pathPerson: Represents the parameter named \'person\'
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonParametersPathPerson :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathAccount" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonParametersPathAccount obj] : ["pathPerson" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonParametersPathPerson obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathAccount" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonParametersPathAccount obj] : ["pathPerson" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonParametersPathPerson obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonParameters" (\obj -> (GHC.Base.pure PostAccountsAccountPersonsPersonParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathAccount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathPerson"))

-- | Create a new 'PostAccountsAccountPersonsPersonParameters' with all required fields.
mkPostAccountsAccountPersonsPersonParameters ::
  -- | 'postAccountsAccountPersonsPersonParametersPathAccount'
  Data.Text.Internal.Text ->
  -- | 'postAccountsAccountPersonsPersonParametersPathPerson'
  Data.Text.Internal.Text ->
  PostAccountsAccountPersonsPersonParameters
mkPostAccountsAccountPersonsPersonParameters postAccountsAccountPersonsPersonParametersPathAccount postAccountsAccountPersonsPersonParametersPathPerson =
  PostAccountsAccountPersonsPersonParameters
    { postAccountsAccountPersonsPersonParametersPathAccount = postAccountsAccountPersonsPersonParametersPathAccount,
      postAccountsAccountPersonsPersonParametersPathPerson = postAccountsAccountPersonsPersonParametersPathPerson
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostAccountsAccountPersonsPersonRequestBody = PostAccountsAccountPersonsPersonRequestBody
  { -- | address: The person\'s address.
    postAccountsAccountPersonsPersonRequestBodyAddress :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyAddress'),
    -- | address_kana: The Kana variation of the person\'s address (Japan only).
    postAccountsAccountPersonsPersonRequestBodyAddressKana :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyAddressKana'),
    -- | address_kanji: The Kanji variation of the person\'s address (Japan only).
    postAccountsAccountPersonsPersonRequestBodyAddressKanji :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyAddressKanji'),
    -- | dob: The person\'s date of birth.
    postAccountsAccountPersonsPersonRequestBodyDob :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyDob'Variants),
    -- | documents: Documents that may be submitted to satisfy various informational requests.
    postAccountsAccountPersonsPersonRequestBodyDocuments :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyDocuments'),
    -- | email: The person\'s email address.
    postAccountsAccountPersonsPersonRequestBodyEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expand: Specifies which fields in the response should be expanded.
    postAccountsAccountPersonsPersonRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | first_name: The person\'s first name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyFirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name_kana: The Kana variation of the person\'s first name (Japan only).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyFirstNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name_kanji: The Kanji variation of the person\'s first name (Japan only).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyFirstNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | full_name_aliases: A list of alternate names or aliases that the person is known by.
    postAccountsAccountPersonsPersonRequestBodyFullNameAliases :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'Variants),
    -- | gender: The person\'s gender (International regulations require either \"male\" or \"female\").
    postAccountsAccountPersonsPersonRequestBodyGender :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | id_number: The person\'s ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https:\/\/stripe.com\/docs\/js\/tokens_sources\/create_token?type=pii).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyIdNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | id_number_secondary: The person\'s secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https:\/\/stripe.com\/docs\/js\/tokens_sources\/create_token?type=pii).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyIdNumberSecondary :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name: The person\'s last name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyLastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name_kana: The Kana variation of the person\'s last name (Japan only).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyLastNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name_kanji: The Kanji variation of the person\'s last name (Japan only).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyLastNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | maiden_name: The person\'s maiden name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyMaidenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postAccountsAccountPersonsPersonRequestBodyMetadata :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyMetadata'Variants),
    -- | nationality: The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyNationality :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | person_token: A [person token](https:\/\/stripe.com\/docs\/connect\/account-tokens), used to securely provide details to the person.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyPersonToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | phone: The person\'s phone number.
    postAccountsAccountPersonsPersonRequestBodyPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | political_exposure: Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyPoliticalExposure :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | registered_address: The person\'s registered address.
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress'),
    -- | relationship: The relationship that this person has with the account\'s legal entity.
    postAccountsAccountPersonsPersonRequestBodyRelationship :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyRelationship'),
    -- | ssn_last_4: The last four digits of the person\'s Social Security number (U.S. only).
    postAccountsAccountPersonsPersonRequestBodySsnLast_4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | verification: The person\'s verification status.
    postAccountsAccountPersonsPersonRequestBodyVerification :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyVerification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyGender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyIdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyLastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyLastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyLastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyMaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nationality" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyNationality obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("person_token" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyPersonToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyPoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("relationship" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodySsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyFullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyGender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyIdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyIdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyLastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyLastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyLastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyMaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nationality" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyNationality obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("person_token" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyPersonToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyPoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("relationship" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodySsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBody" (\obj -> ((((((((((((((((((((((((((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "full_name_aliases")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gender")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number_secondary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maiden_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nationality")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "person_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "political_exposure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registered_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "relationship")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ssn_last_4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBody' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBody :: PostAccountsAccountPersonsPersonRequestBody
mkPostAccountsAccountPersonsPersonRequestBody =
  PostAccountsAccountPersonsPersonRequestBody
    { postAccountsAccountPersonsPersonRequestBodyAddress = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyDob = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyDocuments = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyEmail = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyExpand = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyFirstName = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyFirstNameKana = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyFirstNameKanji = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyFullNameAliases = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyGender = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyIdNumber = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyIdNumberSecondary = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyLastName = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyLastNameKana = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyLastNameKanji = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyMaidenName = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyMetadata = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyNationality = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyPersonToken = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyPhone = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyPoliticalExposure = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRegisteredAddress = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRelationship = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodySsnLast_4 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyVerification = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address@ in the specification.
--
-- The person\'s address.
data PostAccountsAccountPersonsPersonRequestBodyAddress' = PostAccountsAccountPersonsPersonRequestBodyAddress'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountPersonsPersonRequestBodyAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountPersonsPersonRequestBodyAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountPersonsPersonRequestBodyAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyAddress' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'State obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddress'State obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyAddress' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyAddress'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyAddress' :: PostAccountsAccountPersonsPersonRequestBodyAddress'
mkPostAccountsAccountPersonsPersonRequestBodyAddress' =
  PostAccountsAccountPersonsPersonRequestBodyAddress'
    { postAccountsAccountPersonsPersonRequestBodyAddress'City = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddress'Country = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddress'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddress'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddress'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddress'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address_kana@ in the specification.
--
-- The Kana variation of the person\'s address (Japan only).
data PostAccountsAccountPersonsPersonRequestBodyAddressKana' = PostAccountsAccountPersonsPersonRequestBodyAddressKana'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyAddressKana' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Town obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKana'Town obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyAddressKana' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyAddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyAddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyAddressKana'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyAddressKana' :: PostAccountsAccountPersonsPersonRequestBodyAddressKana'
mkPostAccountsAccountPersonsPersonRequestBodyAddressKana' =
  PostAccountsAccountPersonsPersonRequestBodyAddressKana'
    { postAccountsAccountPersonsPersonRequestBodyAddressKana'City = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana'Country = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana'State = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKana'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.address_kanji@ in the specification.
--
-- The Kanji variation of the person\'s address (Japan only).
data PostAccountsAccountPersonsPersonRequestBodyAddressKanji' = PostAccountsAccountPersonsPersonRequestBodyAddressKanji'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyAddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyAddressKanji' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Town obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyAddressKanji'Town obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyAddressKanji' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyAddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyAddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyAddressKanji'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyAddressKanji' :: PostAccountsAccountPersonsPersonRequestBodyAddressKanji'
mkPostAccountsAccountPersonsPersonRequestBodyAddressKanji' =
  PostAccountsAccountPersonsPersonRequestBodyAddressKanji'
    { postAccountsAccountPersonsPersonRequestBodyAddressKanji'City = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji'Country = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji'State = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyAddressKanji'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.dob.anyOf@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 = PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1
  { -- | day
    postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day :: GHC.Types.Int,
    -- | month
    postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month :: GHC.Types.Int,
    -- | year
    postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1" (\obj -> ((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 ::
  -- | 'postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day'
  GHC.Types.Int ->
  -- | 'postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month'
  GHC.Types.Int ->
  -- | 'postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year'
  GHC.Types.Int ->
  PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1
mkPostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year =
  PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1
    { postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day = postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Day,
      postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month = postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Month,
      postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year = postAccountsAccountPersonsPersonRequestBodyDob'OneOf1Year
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.dob.anyOf@ in the specification.
--
-- The person\'s date of birth.
data PostAccountsAccountPersonsPersonRequestBodyDob'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountPersonsPersonRequestBodyDob'EmptyString
  | PostAccountsAccountPersonsPersonRequestBodyDob'PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyDob'Variants where
  toJSON (PostAccountsAccountPersonsPersonRequestBodyDob'PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountPersonsPersonRequestBodyDob'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyDob'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyDob'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountPersonsPersonRequestBodyDob'PostAccountsAccountPersonsPersonRequestBodyDob'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents@ in the specification.
--
-- Documents that may be submitted to satisfy various informational requests.
data PostAccountsAccountPersonsPersonRequestBodyDocuments' = PostAccountsAccountPersonsPersonRequestBodyDocuments'
  { -- | company_authorization
    postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'),
    -- | passport
    postAccountsAccountPersonsPersonRequestBodyDocuments'Passport :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport'),
    -- | visa
    postAccountsAccountPersonsPersonRequestBodyDocuments'Visa :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyDocuments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_authorization" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passport" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Passport obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Visa obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_authorization" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passport" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Passport obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("visa" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Visa obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyDocuments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyDocuments'" (\obj -> ((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyDocuments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_authorization")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "passport")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "visa"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyDocuments'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyDocuments' :: PostAccountsAccountPersonsPersonRequestBodyDocuments'
mkPostAccountsAccountPersonsPersonRequestBodyDocuments' =
  PostAccountsAccountPersonsPersonRequestBodyDocuments'
    { postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyDocuments'Passport = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyDocuments'Visa = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_authorization@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' = PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'
  { -- | files
    postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'" (\obj -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' :: PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'
mkPostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' = PostAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization' {postAccountsAccountPersonsPersonRequestBodyDocuments'CompanyAuthorization'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.passport@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' = PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport'
  { -- | files
    postAccountsAccountPersonsPersonRequestBodyDocuments'Passport'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Passport'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Passport'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport'" (\obj -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' :: PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport'
mkPostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' = PostAccountsAccountPersonsPersonRequestBodyDocuments'Passport' {postAccountsAccountPersonsPersonRequestBodyDocuments'Passport'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.visa@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' = PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa'
  { -- | files
    postAccountsAccountPersonsPersonRequestBodyDocuments'Visa'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Visa'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyDocuments'Visa'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa'" (\obj -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' :: PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa'
mkPostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' = PostAccountsAccountPersonsPersonRequestBodyDocuments'Visa' {postAccountsAccountPersonsPersonRequestBodyDocuments'Visa'Files = GHC.Maybe.Nothing}

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.full_name_aliases.anyOf@ in the specification.
--
-- A list of alternate names or aliases that the person is known by.
data PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'EmptyString
  | PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'Variants where
  toJSON (PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountPersonsPersonRequestBodyFullNameAliases'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostAccountsAccountPersonsPersonRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountPersonsPersonRequestBodyMetadata'EmptyString
  | PostAccountsAccountPersonsPersonRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyMetadata'Variants where
  toJSON (PostAccountsAccountPersonsPersonRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountPersonsPersonRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountPersonsPersonRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.registered_address@ in the specification.
--
-- The person\'s registered address.
data PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress' = PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'State obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'State obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyRegisteredAddress' :: PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress'
mkPostAccountsAccountPersonsPersonRequestBodyRegisteredAddress' =
  PostAccountsAccountPersonsPersonRequestBodyRegisteredAddress'
    { postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'City = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Country = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRegisteredAddress'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.relationship@ in the specification.
--
-- The relationship that this person has with the account\'s legal entity.
data PostAccountsAccountPersonsPersonRequestBodyRelationship' = PostAccountsAccountPersonsPersonRequestBodyRelationship'
  { -- | director
    postAccountsAccountPersonsPersonRequestBodyRelationship'Director :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | executive
    postAccountsAccountPersonsPersonRequestBodyRelationship'Executive :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | owner
    postAccountsAccountPersonsPersonRequestBodyRelationship'Owner :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | percent_ownership
    postAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Variants),
    -- | representative
    postAccountsAccountPersonsPersonRequestBodyRelationship'Representative :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | title
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountPersonsPersonRequestBodyRelationship'Title :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyRelationship' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("director" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Director obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executive" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Executive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percent_ownership" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("representative" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Representative obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Title obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("director" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Director obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executive" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Executive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("percent_ownership" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("representative" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Representative obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("title" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyRelationship'Title obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyRelationship' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyRelationship'" (\obj -> (((((GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyRelationship' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "director")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "percent_ownership")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "representative")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "title"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyRelationship'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyRelationship' :: PostAccountsAccountPersonsPersonRequestBodyRelationship'
mkPostAccountsAccountPersonsPersonRequestBodyRelationship' =
  PostAccountsAccountPersonsPersonRequestBodyRelationship'
    { postAccountsAccountPersonsPersonRequestBodyRelationship'Director = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRelationship'Executive = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRelationship'Owner = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRelationship'Representative = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyRelationship'Title = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.relationship.properties.percent_ownership.anyOf@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'EmptyString
  | PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Double GHC.Types.Double
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Variants where
  toJSON (PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Double a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountPersonsPersonRequestBodyRelationship'PercentOwnership'Double Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification@ in the specification.
--
-- The person\'s verification status.
data PostAccountsAccountPersonsPersonRequestBodyVerification' = PostAccountsAccountPersonsPersonRequestBodyVerification'
  { -- | additional_document
    postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'),
    -- | document
    postAccountsAccountPersonsPersonRequestBodyVerification'Document :: (GHC.Maybe.Maybe PostAccountsAccountPersonsPersonRequestBodyVerification'Document')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'Document obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'Document obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyVerification'" (\obj -> (GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyVerification'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyVerification' :: PostAccountsAccountPersonsPersonRequestBodyVerification'
mkPostAccountsAccountPersonsPersonRequestBodyVerification' =
  PostAccountsAccountPersonsPersonRequestBodyVerification'
    { postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyVerification'Document = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification.properties.additional_document@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument' = PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Front obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Front obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'" (\obj -> (GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument' :: PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'
mkPostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument' =
  PostAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'
    { postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Back = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyVerification'AdditionalDocument'Front = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/persons\/{person}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification.properties.document@ in the specification.
data PostAccountsAccountPersonsPersonRequestBodyVerification'Document' = PostAccountsAccountPersonsPersonRequestBodyVerification'Document'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountPersonsPersonRequestBodyVerification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountPersonsPersonRequestBodyVerification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountPersonsPersonRequestBodyVerification'Document' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'Document'Front obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsAccountPersonsPersonRequestBodyVerification'Document'Front obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountPersonsPersonRequestBodyVerification'Document' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountPersonsPersonRequestBodyVerification'Document'" (\obj -> (GHC.Base.pure PostAccountsAccountPersonsPersonRequestBodyVerification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))

-- | Create a new 'PostAccountsAccountPersonsPersonRequestBodyVerification'Document'' with all required fields.
mkPostAccountsAccountPersonsPersonRequestBodyVerification'Document' :: PostAccountsAccountPersonsPersonRequestBodyVerification'Document'
mkPostAccountsAccountPersonsPersonRequestBodyVerification'Document' =
  PostAccountsAccountPersonsPersonRequestBodyVerification'Document'
    { postAccountsAccountPersonsPersonRequestBodyVerification'Document'Back = GHC.Maybe.Nothing,
      postAccountsAccountPersonsPersonRequestBodyVerification'Document'Front = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postAccountsAccountPersonsPerson'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountsAccountPersonsPersonResponseError' is used.
data PostAccountsAccountPersonsPersonResponse
  = -- | Means either no matching case available or a parse error
    PostAccountsAccountPersonsPersonResponseError GHC.Base.String
  | -- | Successful response.
    PostAccountsAccountPersonsPersonResponse200 Person
  | -- | Error response.
    PostAccountsAccountPersonsPersonResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
