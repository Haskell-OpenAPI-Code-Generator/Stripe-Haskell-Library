{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postInvoicesInvoiceLinesLineItemId
module StripeAPI.Operations.PostInvoicesInvoiceLinesLineItemId where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/invoices/{invoice}/lines/{line_item_id}
--
-- \<p>Updates an invoice’s line item. Some fields, such as \<code>tax_amounts\<\/code>, only live on the invoice line item,
-- so they can only be updated through this endpoint. Other fields, such as \<code>amount\<\/code>, live on both the invoice
-- item and the invoice line item, so updates on this endpoint will propagate to the invoice item as well.
-- Updating an invoice’s line item is only possible before the invoice is finalized.\<\/p>
postInvoicesInvoiceLinesLineItemId ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  PostInvoicesInvoiceLinesLineItemIdParameters ->
  -- | The request body to send
  GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostInvoicesInvoiceLinesLineItemIdResponse)
postInvoicesInvoiceLinesLineItemId
  parameters
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostInvoicesInvoiceLinesLineItemIdResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostInvoicesInvoiceLinesLineItemIdResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                LineItem
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostInvoicesInvoiceLinesLineItemIdResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/invoices/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (postInvoicesInvoiceLinesLineItemIdParametersPathInvoice parameters))) GHC.Base.<> ("/lines/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId parameters))) GHC.Base.<> "")))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.parameters@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdParameters = PostInvoicesInvoiceLinesLineItemIdParameters
  { -- | pathInvoice: Represents the parameter named \'invoice\'
    --
    -- Invoice ID of line item
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdParametersPathInvoice :: Data.Text.Internal.Text,
    -- | pathLine_item_id: Represents the parameter named \'line_item_id\'
    --
    -- Invoice line item ID
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathInvoice" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdParametersPathInvoice obj] : ["pathLine_item_id" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathInvoice" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdParametersPathInvoice obj] : ["pathLine_item_id" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdParameters" (\obj -> (GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathInvoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathLine_item_id"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdParameters' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdParameters ::
  -- | 'postInvoicesInvoiceLinesLineItemIdParametersPathInvoice'
  Data.Text.Internal.Text ->
  -- | 'postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId'
  Data.Text.Internal.Text ->
  PostInvoicesInvoiceLinesLineItemIdParameters
mkPostInvoicesInvoiceLinesLineItemIdParameters postInvoicesInvoiceLinesLineItemIdParametersPathInvoice postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId =
  PostInvoicesInvoiceLinesLineItemIdParameters
    { postInvoicesInvoiceLinesLineItemIdParametersPathInvoice = postInvoicesInvoiceLinesLineItemIdParametersPathInvoice,
      postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId = postInvoicesInvoiceLinesLineItemIdParametersPathLineItemId
    }

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBody = PostInvoicesInvoiceLinesLineItemIdRequestBody
  { -- | amount: The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer\'s account, pass a negative amount.
    postInvoicesInvoiceLinesLineItemIdRequestBodyAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | description: An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | discountable: Controls whether discounts apply to this line item. Defaults to false for prorations or negative line items, and true for all other line items. Cannot be set to true for prorations.
    postInvoicesInvoiceLinesLineItemIdRequestBodyDiscountable :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | discounts: The coupons & existing discounts which apply to the line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.
    postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'Variants),
    -- | expand: Specifies which fields in the response should be expanded.
    postInvoicesInvoiceLinesLineItemIdRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postInvoicesInvoiceLinesLineItemIdRequestBodyMetadata :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Variants),
    -- | period: The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https:\/\/stripe.com\/docs\/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https:\/\/stripe.com\/docs\/revenue-recognition\/methodology\/subscriptions-and-invoicing) for details.
    postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'),
    -- | price: The ID of the price object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyPrice :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | price_data: Data used to generate a new [Price](https:\/\/stripe.com\/docs\/api\/prices) object inline.
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'),
    -- | quantity: Non-negative integer. The quantity of units for the line item.
    postInvoicesInvoiceLinesLineItemIdRequestBodyQuantity :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | tax_amounts: A list of up to 10 tax amounts for this line item. This can be useful if you calculate taxes on your own or use a third-party to calculate them. You cannot set tax amounts if any line item has [tax_rates](https:\/\/stripe.com\/docs\/api\/invoices\/line_item\#invoice_line_item_object-tax_rates) or if the invoice has [default_tax_rates](https:\/\/stripe.com\/docs\/api\/invoices\/object\#invoice_object-default_tax_rates) or uses [automatic tax](https:\/\/stripe.com\/docs\/tax\/invoicing). Pass an empty string to remove previously defined tax amounts.
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'Variants),
    -- | tax_rates: The tax rates which apply to the line item. When set, the \`default_tax_rates\` on the invoice do not apply to this line item. Pass an empty string to remove previously-defined tax rates.
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discountable" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscountable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("period" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPrice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_amounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discountable" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscountable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("period" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPrice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_amounts" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBody" (\obj -> (((((((((((GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discountable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "period")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_rates"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBody' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBody :: PostInvoicesInvoiceLinesLineItemIdRequestBody
mkPostInvoicesInvoiceLinesLineItemIdRequestBody =
  PostInvoicesInvoiceLinesLineItemIdRequestBody
    { postInvoicesInvoiceLinesLineItemIdRequestBodyAmount = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyDescription = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyDiscountable = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyExpand = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyMetadata = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPrice = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyQuantity = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.discounts.anyOf.items@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 = PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1
  { -- | coupon
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Coupon :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | discount
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Discount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Coupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Discount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Coupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Discount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1" (\obj -> (GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 :: PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 =
  PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1
    { postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Coupon = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1Discount = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.discounts.anyOf@ in the specification.
--
-- The coupons & existing discounts which apply to the line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'EmptyString
  | PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'ListTPostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 ([PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'Variants where
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'ListTPostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'ListTPostInvoicesInvoiceLinesLineItemIdRequestBodyDiscounts'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'EmptyString
  | PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Variants where
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesInvoiceLinesLineItemIdRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.period@ in the specification.
--
-- The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https:\/\/stripe.com\/docs\/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https:\/\/stripe.com\/docs\/revenue-recognition\/methodology\/subscriptions-and-invoicing) for details.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod' = PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'
  { -- | end
    postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End :: GHC.Types.Int,
    -- | start
    postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["end" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End obj] : ["start" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["end" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End obj] : ["start" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'" (\obj -> (GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "start"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod' ::
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End'
  GHC.Types.Int ->
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start'
  GHC.Types.Int ->
  PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod' postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start =
  PostInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'
    { postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End = postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'End,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start = postInvoicesInvoiceLinesLineItemIdRequestBodyPeriod'Start
    }

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.price_data@ in the specification.
--
-- Data used to generate a new [Price](https:\/\/stripe.com\/docs\/api\/prices) object inline.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData' = PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'
  { -- | currency
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency :: Data.Text.Internal.Text,
    -- | product
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Product :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_data
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'),
    -- | tax_behavior
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'),
    -- | unit_amount
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | unit_amount_decimal
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmountDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Product obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Product obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_data" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'" (\obj -> (((((GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount_decimal"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData' ::
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency'
  Data.Text.Internal.Text ->
  PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData' postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency =
  PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'
    { postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency = postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Currency,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'Product = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmount = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'UnitAmountDecimal = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.price_data.properties.product_data@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData' = PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'
  { -- | description
    --
    -- Constraints:
    --
    -- * Maximum length of 40000
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | images
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Images :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | metadata
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name :: Data.Text.Internal.Text,
    -- | tax_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'TaxCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("images" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Images obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Metadata obj) : ["name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'TaxCode obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("images" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Images obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Metadata obj) : ["name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_code" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'TaxCode obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'" (\obj -> ((((GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "images")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_code"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData' ::
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name'
  Data.Text.Internal.Text ->
  PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData' postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name =
  PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'
    { postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Description = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Images = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Metadata = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name = postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'Name,
      postInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'ProductData'TaxCode = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.price_data.properties.tax_behavior@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"exclusive"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumExclusive
  | -- | Represents the JSON value @"inclusive"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumInclusive
  | -- | Represents the JSON value @"unspecified"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumUnspecified
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior' where
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'Other val) = val
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumExclusive) = "exclusive"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumInclusive) = "inclusive"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumUnspecified) = "unspecified"

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "exclusive" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumExclusive
            | val GHC.Classes.== "inclusive" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumInclusive
            | val GHC.Classes.== "unspecified" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'EnumUnspecified
            | GHC.Base.otherwise -> PostInvoicesInvoiceLinesLineItemIdRequestBodyPriceData'TaxBehavior'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tax_amounts.anyOf.items@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 = PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1
  { -- | amount
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount :: GHC.Types.Int,
    -- | tax_rate_data
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData :: PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData',
    -- | taxable_amount
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount obj] : ["tax_rate_data" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData obj] : ["taxable_amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount obj] : ["tax_rate_data" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData obj] : ["taxable_amount" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1" (\obj -> ((GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tax_rate_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "taxable_amount"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 ::
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount'
  GHC.Types.Int ->
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'
  PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' ->
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount'
  GHC.Types.Int ->
  PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount =
  PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1
    { postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount = postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1Amount,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData = postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount = postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxableAmount
    }

-- | Defines the object schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tax_amounts.anyOf.items.properties.tax_rate_data@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' = PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'
  { -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | description
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | display_name
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName :: Data.Text.Internal.Text,
    -- | inclusive
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive :: GHC.Types.Bool,
    -- | jurisdiction
    --
    -- Constraints:
    --
    -- * Maximum length of 50
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Jurisdiction :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | percentage
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage :: GHC.Types.Double,
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 2
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | tax_type
    postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType :: (GHC.Maybe.Maybe PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Description obj) : ["display_name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName obj] : ["inclusive" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jurisdiction" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Jurisdiction obj) : ["percentage" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_type" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Description obj) : ["display_name" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName obj] : ["inclusive" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jurisdiction" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Jurisdiction obj) : ["percentage" Data.Aeson.Types.ToJSON..= postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_type" Data.Aeson.Types.ToJSON..=)) (postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'" (\obj -> (((((((GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "display_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "inclusive")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jurisdiction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "percentage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_type"))

-- | Create a new 'PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'' with all required fields.
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' ::
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName'
  Data.Text.Internal.Text ->
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive'
  GHC.Types.Bool ->
  -- | 'postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage'
  GHC.Types.Double ->
  PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'
mkPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData' postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage =
  PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'
    { postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Country = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Description = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName = postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'DisplayName,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive = postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Inclusive,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Jurisdiction = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage = postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'Percentage,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'State = GHC.Maybe.Nothing,
      postInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tax_amounts.anyOf.items.properties.tax_rate_data.properties.tax_type@ in the specification.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"amusement_tax"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumAmusementTax
  | -- | Represents the JSON value @"communications_tax"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumCommunicationsTax
  | -- | Represents the JSON value @"gst"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumGst
  | -- | Represents the JSON value @"hst"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumHst
  | -- | Represents the JSON value @"igst"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumIgst
  | -- | Represents the JSON value @"jct"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumJct
  | -- | Represents the JSON value @"lease_tax"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumLeaseTax
  | -- | Represents the JSON value @"pst"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumPst
  | -- | Represents the JSON value @"qst"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumQst
  | -- | Represents the JSON value @"rst"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumRst
  | -- | Represents the JSON value @"sales_tax"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumSalesTax
  | -- | Represents the JSON value @"service_tax"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumServiceTax
  | -- | Represents the JSON value @"vat"@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumVat
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType' where
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'Other val) = val
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumAmusementTax) = "amusement_tax"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumCommunicationsTax) = "communications_tax"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumGst) = "gst"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumHst) = "hst"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumIgst) = "igst"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumJct) = "jct"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumLeaseTax) = "lease_tax"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumPst) = "pst"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumQst) = "qst"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumRst) = "rst"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumSalesTax) = "sales_tax"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumServiceTax) = "service_tax"
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumVat) = "vat"

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "amusement_tax" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumAmusementTax
            | val GHC.Classes.== "communications_tax" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumCommunicationsTax
            | val GHC.Classes.== "gst" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumGst
            | val GHC.Classes.== "hst" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumHst
            | val GHC.Classes.== "igst" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumIgst
            | val GHC.Classes.== "jct" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumJct
            | val GHC.Classes.== "lease_tax" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumLeaseTax
            | val GHC.Classes.== "pst" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumPst
            | val GHC.Classes.== "qst" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumQst
            | val GHC.Classes.== "rst" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumRst
            | val GHC.Classes.== "sales_tax" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumSalesTax
            | val GHC.Classes.== "service_tax" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumServiceTax
            | val GHC.Classes.== "vat" -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'EnumVat
            | GHC.Base.otherwise -> PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1TaxRateData'TaxType'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tax_amounts.anyOf@ in the specification.
--
-- A list of up to 10 tax amounts for this line item. This can be useful if you calculate taxes on your own or use a third-party to calculate them. You cannot set tax amounts if any line item has [tax_rates](https:\/\/stripe.com\/docs\/api\/invoices\/line_item\#invoice_line_item_object-tax_rates) or if the invoice has [default_tax_rates](https:\/\/stripe.com\/docs\/api\/invoices\/object\#invoice_object-default_tax_rates) or uses [automatic tax](https:\/\/stripe.com\/docs\/tax\/invoicing). Pass an empty string to remove previously defined tax amounts.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'EmptyString
  | PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'ListTPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 ([PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'Variants where
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'ListTPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'ListTPostInvoicesInvoiceLinesLineItemIdRequestBodyTaxAmounts'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/invoices\/{invoice}\/lines\/{line_item_id}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tax_rates.anyOf@ in the specification.
--
-- The tax rates which apply to the line item. When set, the \`default_tax_rates\` on the invoice do not apply to this line item. Pass an empty string to remove previously-defined tax rates.
data PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'EmptyString
  | PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'Variants where
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesInvoiceLinesLineItemIdRequestBodyTaxRates'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'postInvoicesInvoiceLinesLineItemId'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostInvoicesInvoiceLinesLineItemIdResponseError' is used.
data PostInvoicesInvoiceLinesLineItemIdResponse
  = -- | Means either no matching case available or a parse error
    PostInvoicesInvoiceLinesLineItemIdResponseError GHC.Base.String
  | -- | Successful response.
    PostInvoicesInvoiceLinesLineItemIdResponse200 LineItem
  | -- | Error response.
    PostInvoicesInvoiceLinesLineItemIdResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
