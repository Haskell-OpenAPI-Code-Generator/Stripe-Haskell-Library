{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getIdentityVerificationSessions
module StripeAPI.Operations.GetIdentityVerificationSessions where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/identity/verification_sessions
--
-- \<p>Returns a list of VerificationSessions\<\/p>
getIdentityVerificationSessions ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetIdentityVerificationSessionsParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetIdentityVerificationSessionsResponse)
getIdentityVerificationSessions parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetIdentityVerificationSessionsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetIdentityVerificationSessionsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetIdentityVerificationSessionsResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetIdentityVerificationSessionsResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/identity/verification_sessions")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationSessionsParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationSessionsParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationSessionsParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationSessionsParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationSessionsParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationSessionsParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_sessions.GET.parameters@ in the specification.
data GetIdentityVerificationSessionsParameters = GetIdentityVerificationSessionsParameters
  { -- | queryCreated: Represents the parameter named \'created\'
    getIdentityVerificationSessionsParametersQueryCreated :: (GHC.Maybe.Maybe GetIdentityVerificationSessionsParametersQueryCreated'Variants),
    -- | queryEnding_before: Represents the parameter named \'ending_before\'
    --
    -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getIdentityVerificationSessionsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getIdentityVerificationSessionsParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    getIdentityVerificationSessionsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryStarting_after: Represents the parameter named \'starting_after\'
    --
    -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getIdentityVerificationSessionsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStatus: Represents the parameter named \'status\'
    --
    -- Only return VerificationSessions with this status. [Learn more about the lifecycle of sessions](https:\/\/stripe.com\/docs\/identity\/how-sessions-work).
    getIdentityVerificationSessionsParametersQueryStatus :: (GHC.Maybe.Maybe GetIdentityVerificationSessionsParametersQueryStatus')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationSessionsParameters where
  toJSON obj = Data.Aeson.Types.Internal.object ("queryCreated" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated obj : "queryEnding_before" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryEndingBefore obj : "queryExpand" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryExpand obj : "queryLimit" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryLimit obj : "queryStarting_after" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryStartingAfter obj : "queryStatus" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryStatus obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("queryCreated" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated obj) GHC.Base.<> (("queryEnding_before" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryEndingBefore obj) GHC.Base.<> (("queryExpand" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryExpand obj) GHC.Base.<> (("queryLimit" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryLimit obj) GHC.Base.<> (("queryStarting_after" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryStartingAfter obj) GHC.Base.<> ("queryStatus" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryStatus obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationSessionsParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIdentityVerificationSessionsParameters" (\obj -> (((((GHC.Base.pure GetIdentityVerificationSessionsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStatus"))

-- | Create a new 'GetIdentityVerificationSessionsParameters' with all required fields.
mkGetIdentityVerificationSessionsParameters :: GetIdentityVerificationSessionsParameters
mkGetIdentityVerificationSessionsParameters =
  GetIdentityVerificationSessionsParameters
    { getIdentityVerificationSessionsParametersQueryCreated = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryEndingBefore = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryExpand = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryLimit = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryStartingAfter = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryStatus = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_sessions.GET.parameters.properties.queryCreated.anyOf@ in the specification.
data GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 = GetIdentityVerificationSessionsParametersQueryCreated'OneOf1
  { -- | gt
    getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | gte
    getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | lt
    getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | lte
    getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("gt" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gt obj : "gte" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gte obj : "lt" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lt obj : "lte" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lte obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("gt" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gt obj) GHC.Base.<> (("gte" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gte obj) GHC.Base.<> (("lt" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lt obj) GHC.Base.<> ("lte" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lte obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIdentityVerificationSessionsParametersQueryCreated'OneOf1" (\obj -> (((GHC.Base.pure GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lte"))

-- | Create a new 'GetIdentityVerificationSessionsParametersQueryCreated'OneOf1' with all required fields.
mkGetIdentityVerificationSessionsParametersQueryCreated'OneOf1 :: GetIdentityVerificationSessionsParametersQueryCreated'OneOf1
mkGetIdentityVerificationSessionsParametersQueryCreated'OneOf1 =
  GetIdentityVerificationSessionsParametersQueryCreated'OneOf1
    { getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gt = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryCreated'OneOf1Gte = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lt = GHC.Maybe.Nothing,
      getIdentityVerificationSessionsParametersQueryCreated'OneOf1Lte = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/identity\/verification_sessions.GET.parameters.properties.queryCreated.anyOf@ in the specification.
--
-- Represents the parameter named \'created\'
data GetIdentityVerificationSessionsParametersQueryCreated'Variants
  = GetIdentityVerificationSessionsParametersQueryCreated'GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 GetIdentityVerificationSessionsParametersQueryCreated'OneOf1
  | GetIdentityVerificationSessionsParametersQueryCreated'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationSessionsParametersQueryCreated'Variants where
  toJSON (GetIdentityVerificationSessionsParametersQueryCreated'GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetIdentityVerificationSessionsParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationSessionsParametersQueryCreated'Variants where
  parseJSON val = case (GetIdentityVerificationSessionsParametersQueryCreated'GetIdentityVerificationSessionsParametersQueryCreated'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetIdentityVerificationSessionsParametersQueryCreated'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/identity\/verification_sessions.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
--
-- Only return VerificationSessions with this status. [Learn more about the lifecycle of sessions](https:\/\/stripe.com\/docs\/identity\/how-sessions-work).
data GetIdentityVerificationSessionsParametersQueryStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetIdentityVerificationSessionsParametersQueryStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetIdentityVerificationSessionsParametersQueryStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"canceled"@
    GetIdentityVerificationSessionsParametersQueryStatus'EnumCanceled
  | -- | Represents the JSON value @"processing"@
    GetIdentityVerificationSessionsParametersQueryStatus'EnumProcessing
  | -- | Represents the JSON value @"requires_input"@
    GetIdentityVerificationSessionsParametersQueryStatus'EnumRequiresInput
  | -- | Represents the JSON value @"verified"@
    GetIdentityVerificationSessionsParametersQueryStatus'EnumVerified
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationSessionsParametersQueryStatus' where
  toJSON (GetIdentityVerificationSessionsParametersQueryStatus'Other val) = val
  toJSON (GetIdentityVerificationSessionsParametersQueryStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetIdentityVerificationSessionsParametersQueryStatus'EnumCanceled) = "canceled"
  toJSON (GetIdentityVerificationSessionsParametersQueryStatus'EnumProcessing) = "processing"
  toJSON (GetIdentityVerificationSessionsParametersQueryStatus'EnumRequiresInput) = "requires_input"
  toJSON (GetIdentityVerificationSessionsParametersQueryStatus'EnumVerified) = "verified"

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationSessionsParametersQueryStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "canceled" -> GetIdentityVerificationSessionsParametersQueryStatus'EnumCanceled
            | val GHC.Classes.== "processing" -> GetIdentityVerificationSessionsParametersQueryStatus'EnumProcessing
            | val GHC.Classes.== "requires_input" -> GetIdentityVerificationSessionsParametersQueryStatus'EnumRequiresInput
            | val GHC.Classes.== "verified" -> GetIdentityVerificationSessionsParametersQueryStatus'EnumVerified
            | GHC.Base.otherwise -> GetIdentityVerificationSessionsParametersQueryStatus'Other val
      )

-- | Represents a response of the operation 'getIdentityVerificationSessions'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetIdentityVerificationSessionsResponseError' is used.
data GetIdentityVerificationSessionsResponse
  = -- | Means either no matching case available or a parse error
    GetIdentityVerificationSessionsResponseError GHC.Base.String
  | -- | Successful response.
    GetIdentityVerificationSessionsResponse200 GetIdentityVerificationSessionsResponseBody200
  | -- | Error response.
    GetIdentityVerificationSessionsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_sessions.GET.responses.200.content.application\/json.schema@ in the specification.
data GetIdentityVerificationSessionsResponseBody200 = GetIdentityVerificationSessionsResponseBody200
  { -- | data
    getIdentityVerificationSessionsResponseBody200Data :: ([Identity'verificationSession]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getIdentityVerificationSessionsResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    -- * Must match pattern \'^\/v1\/identity\/verification_sessions\'
    getIdentityVerificationSessionsResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationSessionsResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object ("data" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsResponseBody200Data obj : "has_more" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsResponseBody200HasMore obj : "url" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsResponseBody200Url obj : "object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list" : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("data" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsResponseBody200Data obj) GHC.Base.<> (("has_more" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsResponseBody200HasMore obj) GHC.Base.<> (("url" Data.Aeson.Types.ToJSON..= getIdentityVerificationSessionsResponseBody200Url obj) GHC.Base.<> ("object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"))))

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationSessionsResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIdentityVerificationSessionsResponseBody200" (\obj -> ((GHC.Base.pure GetIdentityVerificationSessionsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetIdentityVerificationSessionsResponseBody200' with all required fields.
mkGetIdentityVerificationSessionsResponseBody200 ::
  -- | 'getIdentityVerificationSessionsResponseBody200Data'
  [Identity'verificationSession] ->
  -- | 'getIdentityVerificationSessionsResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getIdentityVerificationSessionsResponseBody200Url'
  Data.Text.Internal.Text ->
  GetIdentityVerificationSessionsResponseBody200
mkGetIdentityVerificationSessionsResponseBody200 getIdentityVerificationSessionsResponseBody200Data getIdentityVerificationSessionsResponseBody200HasMore getIdentityVerificationSessionsResponseBody200Url =
  GetIdentityVerificationSessionsResponseBody200
    { getIdentityVerificationSessionsResponseBody200Data = getIdentityVerificationSessionsResponseBody200Data,
      getIdentityVerificationSessionsResponseBody200HasMore = getIdentityVerificationSessionsResponseBody200HasMore,
      getIdentityVerificationSessionsResponseBody200Url = getIdentityVerificationSessionsResponseBody200Url
    }
