{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postInvoices
module StripeAPI.Operations.PostInvoices where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/invoices
--
-- \<p>This endpoint creates a draft invoice for a given customer. The draft invoice created pulls in all pending invoice items on that customer, including prorations. The invoice remains a draft until you \<a href=\"\#finalize_invoice\">finalize\<\/a> the invoice, which allows you to \<a href=\"\#pay_invoice\">pay\<\/a> or \<a href=\"\#send_invoice\">send\<\/a> the invoice to your customers.\<\/p>
postInvoices ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostInvoicesRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostInvoicesResponse)
postInvoices body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostInvoicesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostInvoicesResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Invoice
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostInvoicesResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/invoices") GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostInvoicesRequestBody = PostInvoicesRequestBody
  { -- | account_tax_ids: The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
    postInvoicesRequestBodyAccountTaxIds :: (GHC.Maybe.Maybe PostInvoicesRequestBodyAccountTaxIds'Variants),
    -- | application_fee_amount: A fee in %s that will be applied to the invoice and transferred to the application owner\'s Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https:\/\/stripe.com\/docs\/billing\/invoices\/connect\#collecting-fees).
    postInvoicesRequestBodyApplicationFeeAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | auto_advance: Controls whether Stripe will perform [automatic collection](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\/\#auto_advance) of the invoice. When \`false\`, the invoice\'s state will not automatically advance without an explicit action.
    postInvoicesRequestBodyAutoAdvance :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | automatic_tax: Settings for automatic tax lookup for this invoice.
    postInvoicesRequestBodyAutomaticTax :: (GHC.Maybe.Maybe PostInvoicesRequestBodyAutomaticTax'),
    -- | collection_method: Either \`charge_automatically\`, or \`send_invoice\`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to \`charge_automatically\`.
    postInvoicesRequestBodyCollectionMethod :: (GHC.Maybe.Maybe PostInvoicesRequestBodyCollectionMethod'),
    -- | custom_fields: A list of up to 4 custom fields to be displayed on the invoice.
    postInvoicesRequestBodyCustomFields :: (GHC.Maybe.Maybe PostInvoicesRequestBodyCustomFields'Variants),
    -- | customer: The ID of the customer who will be billed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodyCustomer :: Data.Text.Internal.Text,
    -- | days_until_due: The number of days from when the invoice is created until it is due. Valid only for invoices where \`collection_method=send_invoice\`.
    postInvoicesRequestBodyDaysUntilDue :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | default_payment_method: ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription\'s default payment method, if any, or to the default payment method in the customer\'s invoice settings.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodyDefaultPaymentMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_source: ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription\'s default source, if any, or to the customer\'s default source.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodyDefaultSource :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_tax_rates: The tax rates that will apply to any line item that does not have \`tax_rates\` set.
    postInvoicesRequestBodyDefaultTaxRates :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | description: An arbitrary string attached to the object. Often useful for displaying to users. Referenced as \'memo\' in the Dashboard.
    --
    -- Constraints:
    --
    -- * Maximum length of 1500
    postInvoicesRequestBodyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | discounts: The coupons to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice\'s customer. Pass an empty string to avoid inheriting any discounts.
    postInvoicesRequestBodyDiscounts :: (GHC.Maybe.Maybe PostInvoicesRequestBodyDiscounts'Variants),
    -- | due_date: The date on which payment for this invoice is due. Valid only for invoices where \`collection_method=send_invoice\`.
    postInvoicesRequestBodyDueDate :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | expand: Specifies which fields in the response should be expanded.
    postInvoicesRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | footer: Footer to be displayed on the invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodyFooter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postInvoicesRequestBodyMetadata :: (GHC.Maybe.Maybe PostInvoicesRequestBodyMetadata'Variants),
    -- | on_behalf_of: The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https:\/\/stripe.com\/docs\/billing\/invoices\/connect) documentation for details.
    postInvoicesRequestBodyOnBehalfOf :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | payment_settings: Configuration settings for the PaymentIntent that is generated when the invoice is finalized.
    postInvoicesRequestBodyPaymentSettings :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'),
    -- | statement_descriptor: Extra information about a charge for the customer\'s credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default \`statement_descriptor\` will be set to the first subscription item\'s product\'s \`statement_descriptor\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postInvoicesRequestBodyStatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | subscription: The ID of the subscription to invoice, if any. If not set, the created invoice will include all pending invoice items for the customer. If set, the created invoice will only include pending invoice items for that subscription and pending invoice items not associated with any subscription. The subscription\'s billing cycle and regular subscription events won\'t be affected.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodySubscription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | transfer_data: If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice\'s charge.
    postInvoicesRequestBodyTransferData :: (GHC.Maybe.Maybe PostInvoicesRequestBodyTransferData')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("account_tax_ids" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAccountTaxIds obj : "application_fee_amount" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyApplicationFeeAmount obj : "auto_advance" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAutoAdvance obj : "automatic_tax" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAutomaticTax obj : "collection_method" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCollectionMethod obj : "custom_fields" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomFields obj : "customer" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomer obj : "days_until_due" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDaysUntilDue obj : "default_payment_method" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDefaultPaymentMethod obj : "default_source" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDefaultSource obj : "default_tax_rates" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDefaultTaxRates obj : "description" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDescription obj : "discounts" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDiscounts obj : "due_date" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDueDate obj : "expand" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyExpand obj : "footer" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyFooter obj : "metadata" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyMetadata obj : "on_behalf_of" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyOnBehalfOf obj : "payment_settings" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings obj : "statement_descriptor" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyStatementDescriptor obj : "subscription" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodySubscription obj : "transfer_data" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyTransferData obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("account_tax_ids" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAccountTaxIds obj) GHC.Base.<> (("application_fee_amount" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyApplicationFeeAmount obj) GHC.Base.<> (("auto_advance" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAutoAdvance obj) GHC.Base.<> (("automatic_tax" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAutomaticTax obj) GHC.Base.<> (("collection_method" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCollectionMethod obj) GHC.Base.<> (("custom_fields" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomFields obj) GHC.Base.<> (("customer" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomer obj) GHC.Base.<> (("days_until_due" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDaysUntilDue obj) GHC.Base.<> (("default_payment_method" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDefaultPaymentMethod obj) GHC.Base.<> (("default_source" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDefaultSource obj) GHC.Base.<> (("default_tax_rates" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDefaultTaxRates obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDescription obj) GHC.Base.<> (("discounts" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDiscounts obj) GHC.Base.<> (("due_date" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDueDate obj) GHC.Base.<> (("expand" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyExpand obj) GHC.Base.<> (("footer" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyFooter obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyMetadata obj) GHC.Base.<> (("on_behalf_of" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyOnBehalfOf obj) GHC.Base.<> (("payment_settings" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings obj) GHC.Base.<> (("statement_descriptor" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyStatementDescriptor obj) GHC.Base.<> (("subscription" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodySubscription obj) GHC.Base.<> ("transfer_data" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyTransferData obj))))))))))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBody" (\obj -> (((((((((((((((((((((GHC.Base.pure PostInvoicesRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_tax_ids")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "application_fee_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "auto_advance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "automatic_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "collection_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "custom_fields")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "days_until_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_tax_rates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "discounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "due_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "footer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "on_behalf_of")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subscription")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transfer_data"))

-- | Create a new 'PostInvoicesRequestBody' with all required fields.
mkPostInvoicesRequestBody ::
  -- | 'postInvoicesRequestBodyCustomer'
  Data.Text.Internal.Text ->
  PostInvoicesRequestBody
mkPostInvoicesRequestBody postInvoicesRequestBodyCustomer =
  PostInvoicesRequestBody
    { postInvoicesRequestBodyAccountTaxIds = GHC.Maybe.Nothing,
      postInvoicesRequestBodyApplicationFeeAmount = GHC.Maybe.Nothing,
      postInvoicesRequestBodyAutoAdvance = GHC.Maybe.Nothing,
      postInvoicesRequestBodyAutomaticTax = GHC.Maybe.Nothing,
      postInvoicesRequestBodyCollectionMethod = GHC.Maybe.Nothing,
      postInvoicesRequestBodyCustomFields = GHC.Maybe.Nothing,
      postInvoicesRequestBodyCustomer = postInvoicesRequestBodyCustomer,
      postInvoicesRequestBodyDaysUntilDue = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDefaultPaymentMethod = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDefaultSource = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDefaultTaxRates = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDescription = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDiscounts = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDueDate = GHC.Maybe.Nothing,
      postInvoicesRequestBodyExpand = GHC.Maybe.Nothing,
      postInvoicesRequestBodyFooter = GHC.Maybe.Nothing,
      postInvoicesRequestBodyMetadata = GHC.Maybe.Nothing,
      postInvoicesRequestBodyOnBehalfOf = GHC.Maybe.Nothing,
      postInvoicesRequestBodyPaymentSettings = GHC.Maybe.Nothing,
      postInvoicesRequestBodyStatementDescriptor = GHC.Maybe.Nothing,
      postInvoicesRequestBodySubscription = GHC.Maybe.Nothing,
      postInvoicesRequestBodyTransferData = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.account_tax_ids.anyOf@ in the specification.
--
-- The account tax IDs associated with the invoice. Only editable when the invoice is a draft.
data PostInvoicesRequestBodyAccountTaxIds'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyAccountTaxIds'EmptyString
  | PostInvoicesRequestBodyAccountTaxIds'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyAccountTaxIds'Variants where
  toJSON (PostInvoicesRequestBodyAccountTaxIds'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyAccountTaxIds'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyAccountTaxIds'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyAccountTaxIds'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyAccountTaxIds'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.automatic_tax@ in the specification.
--
-- Settings for automatic tax lookup for this invoice.
data PostInvoicesRequestBodyAutomaticTax' = PostInvoicesRequestBodyAutomaticTax'
  { -- | enabled
    postInvoicesRequestBodyAutomaticTax'Enabled :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyAutomaticTax' where
  toJSON obj = Data.Aeson.Types.Internal.object ("enabled" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAutomaticTax'Enabled obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("enabled" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyAutomaticTax'Enabled obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyAutomaticTax' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyAutomaticTax'" (\obj -> GHC.Base.pure PostInvoicesRequestBodyAutomaticTax' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled"))

-- | Create a new 'PostInvoicesRequestBodyAutomaticTax'' with all required fields.
mkPostInvoicesRequestBodyAutomaticTax' ::
  -- | 'postInvoicesRequestBodyAutomaticTax'Enabled'
  GHC.Types.Bool ->
  PostInvoicesRequestBodyAutomaticTax'
mkPostInvoicesRequestBodyAutomaticTax' postInvoicesRequestBodyAutomaticTax'Enabled = PostInvoicesRequestBodyAutomaticTax' {postInvoicesRequestBodyAutomaticTax'Enabled = postInvoicesRequestBodyAutomaticTax'Enabled}

-- | Defines the enum schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.collection_method@ in the specification.
--
-- Either \`charge_automatically\`, or \`send_invoice\`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to \`charge_automatically\`.
data PostInvoicesRequestBodyCollectionMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostInvoicesRequestBodyCollectionMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostInvoicesRequestBodyCollectionMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"charge_automatically"@
    PostInvoicesRequestBodyCollectionMethod'EnumChargeAutomatically
  | -- | Represents the JSON value @"send_invoice"@
    PostInvoicesRequestBodyCollectionMethod'EnumSendInvoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyCollectionMethod' where
  toJSON (PostInvoicesRequestBodyCollectionMethod'Other val) = val
  toJSON (PostInvoicesRequestBodyCollectionMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostInvoicesRequestBodyCollectionMethod'EnumChargeAutomatically) = "charge_automatically"
  toJSON (PostInvoicesRequestBodyCollectionMethod'EnumSendInvoice) = "send_invoice"

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyCollectionMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "charge_automatically" -> PostInvoicesRequestBodyCollectionMethod'EnumChargeAutomatically
            | val GHC.Classes.== "send_invoice" -> PostInvoicesRequestBodyCollectionMethod'EnumSendInvoice
            | GHC.Base.otherwise -> PostInvoicesRequestBodyCollectionMethod'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.custom_fields.anyOf.items@ in the specification.
data PostInvoicesRequestBodyCustomFields'OneOf1 = PostInvoicesRequestBodyCustomFields'OneOf1
  { -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 30
    postInvoicesRequestBodyCustomFields'OneOf1Name :: Data.Text.Internal.Text,
    -- | value
    --
    -- Constraints:
    --
    -- * Maximum length of 30
    postInvoicesRequestBodyCustomFields'OneOf1Value :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyCustomFields'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("name" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomFields'OneOf1Name obj : "value" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomFields'OneOf1Value obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("name" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomFields'OneOf1Name obj) GHC.Base.<> ("value" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyCustomFields'OneOf1Value obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyCustomFields'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyCustomFields'OneOf1" (\obj -> (GHC.Base.pure PostInvoicesRequestBodyCustomFields'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "value"))

-- | Create a new 'PostInvoicesRequestBodyCustomFields'OneOf1' with all required fields.
mkPostInvoicesRequestBodyCustomFields'OneOf1 ::
  -- | 'postInvoicesRequestBodyCustomFields'OneOf1Name'
  Data.Text.Internal.Text ->
  -- | 'postInvoicesRequestBodyCustomFields'OneOf1Value'
  Data.Text.Internal.Text ->
  PostInvoicesRequestBodyCustomFields'OneOf1
mkPostInvoicesRequestBodyCustomFields'OneOf1 postInvoicesRequestBodyCustomFields'OneOf1Name postInvoicesRequestBodyCustomFields'OneOf1Value =
  PostInvoicesRequestBodyCustomFields'OneOf1
    { postInvoicesRequestBodyCustomFields'OneOf1Name = postInvoicesRequestBodyCustomFields'OneOf1Name,
      postInvoicesRequestBodyCustomFields'OneOf1Value = postInvoicesRequestBodyCustomFields'OneOf1Value
    }

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.custom_fields.anyOf@ in the specification.
--
-- A list of up to 4 custom fields to be displayed on the invoice.
data PostInvoicesRequestBodyCustomFields'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyCustomFields'EmptyString
  | PostInvoicesRequestBodyCustomFields'ListTPostInvoicesRequestBodyCustomFields'OneOf1 ([PostInvoicesRequestBodyCustomFields'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyCustomFields'Variants where
  toJSON (PostInvoicesRequestBodyCustomFields'ListTPostInvoicesRequestBodyCustomFields'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyCustomFields'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyCustomFields'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyCustomFields'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyCustomFields'ListTPostInvoicesRequestBodyCustomFields'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.discounts.anyOf.items@ in the specification.
data PostInvoicesRequestBodyDiscounts'OneOf1 = PostInvoicesRequestBodyDiscounts'OneOf1
  { -- | coupon
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodyDiscounts'OneOf1Coupon :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | discount
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postInvoicesRequestBodyDiscounts'OneOf1Discount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyDiscounts'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("coupon" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDiscounts'OneOf1Coupon obj : "discount" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDiscounts'OneOf1Discount obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("coupon" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDiscounts'OneOf1Coupon obj) GHC.Base.<> ("discount" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyDiscounts'OneOf1Discount obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyDiscounts'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyDiscounts'OneOf1" (\obj -> (GHC.Base.pure PostInvoicesRequestBodyDiscounts'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "discount"))

-- | Create a new 'PostInvoicesRequestBodyDiscounts'OneOf1' with all required fields.
mkPostInvoicesRequestBodyDiscounts'OneOf1 :: PostInvoicesRequestBodyDiscounts'OneOf1
mkPostInvoicesRequestBodyDiscounts'OneOf1 =
  PostInvoicesRequestBodyDiscounts'OneOf1
    { postInvoicesRequestBodyDiscounts'OneOf1Coupon = GHC.Maybe.Nothing,
      postInvoicesRequestBodyDiscounts'OneOf1Discount = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.discounts.anyOf@ in the specification.
--
-- The coupons to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice\'s customer. Pass an empty string to avoid inheriting any discounts.
data PostInvoicesRequestBodyDiscounts'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyDiscounts'EmptyString
  | PostInvoicesRequestBodyDiscounts'ListTPostInvoicesRequestBodyDiscounts'OneOf1 ([PostInvoicesRequestBodyDiscounts'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyDiscounts'Variants where
  toJSON (PostInvoicesRequestBodyDiscounts'ListTPostInvoicesRequestBodyDiscounts'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyDiscounts'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyDiscounts'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyDiscounts'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyDiscounts'ListTPostInvoicesRequestBodyDiscounts'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostInvoicesRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyMetadata'EmptyString
  | PostInvoicesRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyMetadata'Variants where
  toJSON (PostInvoicesRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings@ in the specification.
--
-- Configuration settings for the PaymentIntent that is generated when the invoice is finalized.
data PostInvoicesRequestBodyPaymentSettings' = PostInvoicesRequestBodyPaymentSettings'
  { -- | payment_method_options
    postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'),
    -- | payment_method_types
    postInvoicesRequestBodyPaymentSettings'PaymentMethodTypes :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings' where
  toJSON obj = Data.Aeson.Types.Internal.object ("payment_method_options" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions obj : "payment_method_types" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodTypes obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("payment_method_options" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions obj) GHC.Base.<> ("payment_method_types" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodTypes obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyPaymentSettings'" (\obj -> (GHC.Base.pure PostInvoicesRequestBodyPaymentSettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_method_types"))

-- | Create a new 'PostInvoicesRequestBodyPaymentSettings'' with all required fields.
mkPostInvoicesRequestBodyPaymentSettings' :: PostInvoicesRequestBodyPaymentSettings'
mkPostInvoicesRequestBodyPaymentSettings' =
  PostInvoicesRequestBodyPaymentSettings'
    { postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions = GHC.Maybe.Nothing,
      postInvoicesRequestBodyPaymentSettings'PaymentMethodTypes = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions' = PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'
  { -- | bancontact
    postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants),
    -- | card
    postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions' where
  toJSON obj = Data.Aeson.Types.Internal.object ("bancontact" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact obj : "card" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("bancontact" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact obj) GHC.Base.<> ("card" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'" (\obj -> (GHC.Base.pure PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card"))

-- | Create a new 'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'' with all required fields.
mkPostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions' :: PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'
mkPostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions' =
  PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'
    { postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact = GHC.Maybe.Nothing,
      postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.bancontact.anyOf@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 = PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1
  { -- | preferred_language
    postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("preferred_language" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("preferred_language" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1" (\obj -> GHC.Base.pure PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "preferred_language"))

-- | Create a new 'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1' with all required fields.
mkPostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 :: PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1
mkPostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 = PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 {postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.bancontact.anyOf.properties.preferred_language@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"de"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumDe
  | -- | Represents the JSON value @"en"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumEn
  | -- | Represents the JSON value @"fr"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumFr
  | -- | Represents the JSON value @"nl"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumNl
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage' where
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Other val) = val
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumDe) = "de"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumEn) = "en"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumFr) = "fr"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumNl) = "nl"

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "de" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumDe
            | val GHC.Classes.== "en" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumEn
            | val GHC.Classes.== "fr" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumFr
            | val GHC.Classes.== "nl" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumNl
            | GHC.Base.otherwise -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.bancontact.anyOf@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'EmptyString
  | PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants where
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 = PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
  { -- | request_three_d_secure
    postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure :: (GHC.Maybe.Maybe PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("request_three_d_secure" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("request_three_d_secure" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1" (\obj -> GHC.Base.pure PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "request_three_d_secure"))

-- | Create a new 'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1' with all required fields.
mkPostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 :: PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
mkPostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 = PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 {postInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf.properties.request_three_d_secure@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"any"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAny
  | -- | Represents the JSON value @"automatic"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAutomatic
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure' where
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Other val) = val
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAny) = "any"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAutomatic) = "automatic"

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "any" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAny
            | val GHC.Classes.== "automatic" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAutomatic
            | GHC.Base.otherwise -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'EmptyString
  | PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants where
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'PostInvoicesRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_types.anyOf.items@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"ach_credit_transfer"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchCreditTransfer
  | -- | Represents the JSON value @"ach_debit"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchDebit
  | -- | Represents the JSON value @"au_becs_debit"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAuBecsDebit
  | -- | Represents the JSON value @"bacs_debit"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBacsDebit
  | -- | Represents the JSON value @"bancontact"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBancontact
  | -- | Represents the JSON value @"card"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCard
  | -- | Represents the JSON value @"fpx"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumFpx
  | -- | Represents the JSON value @"giropay"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGiropay
  | -- | Represents the JSON value @"ideal"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumIdeal
  | -- | Represents the JSON value @"sepa_debit"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSepaDebit
  | -- | Represents the JSON value @"sofort"@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSofort
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 where
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Other val) = val
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchCreditTransfer) = "ach_credit_transfer"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchDebit) = "ach_debit"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAuBecsDebit) = "au_becs_debit"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBacsDebit) = "bacs_debit"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBancontact) = "bancontact"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCard) = "card"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumFpx) = "fpx"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGiropay) = "giropay"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumIdeal) = "ideal"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSepaDebit) = "sepa_debit"
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSofort) = "sofort"

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ach_credit_transfer" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchCreditTransfer
            | val GHC.Classes.== "ach_debit" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchDebit
            | val GHC.Classes.== "au_becs_debit" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAuBecsDebit
            | val GHC.Classes.== "bacs_debit" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBacsDebit
            | val GHC.Classes.== "bancontact" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBancontact
            | val GHC.Classes.== "card" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCard
            | val GHC.Classes.== "fpx" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumFpx
            | val GHC.Classes.== "giropay" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGiropay
            | val GHC.Classes.== "ideal" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumIdeal
            | val GHC.Classes.== "sepa_debit" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSepaDebit
            | val GHC.Classes.== "sofort" -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSofort
            | GHC.Base.otherwise -> PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_types.anyOf@ in the specification.
data PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'Variants
  = -- | Represents the JSON value @""@
    PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'EmptyString
  | PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'ListTPostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 ([PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'Variants where
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'ListTPostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'EmptyString
        | GHC.Base.otherwise -> case (PostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'ListTPostInvoicesRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/invoices.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.transfer_data@ in the specification.
--
-- If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice\'s charge.
data PostInvoicesRequestBodyTransferData' = PostInvoicesRequestBodyTransferData'
  { -- | amount
    postInvoicesRequestBodyTransferData'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | destination
    postInvoicesRequestBodyTransferData'Destination :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostInvoicesRequestBodyTransferData' where
  toJSON obj = Data.Aeson.Types.Internal.object ("amount" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyTransferData'Amount obj : "destination" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyTransferData'Destination obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amount" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyTransferData'Amount obj) GHC.Base.<> ("destination" Data.Aeson.Types.ToJSON..= postInvoicesRequestBodyTransferData'Destination obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostInvoicesRequestBodyTransferData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostInvoicesRequestBodyTransferData'" (\obj -> (GHC.Base.pure PostInvoicesRequestBodyTransferData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination"))

-- | Create a new 'PostInvoicesRequestBodyTransferData'' with all required fields.
mkPostInvoicesRequestBodyTransferData' ::
  -- | 'postInvoicesRequestBodyTransferData'Destination'
  Data.Text.Internal.Text ->
  PostInvoicesRequestBodyTransferData'
mkPostInvoicesRequestBodyTransferData' postInvoicesRequestBodyTransferData'Destination =
  PostInvoicesRequestBodyTransferData'
    { postInvoicesRequestBodyTransferData'Amount = GHC.Maybe.Nothing,
      postInvoicesRequestBodyTransferData'Destination = postInvoicesRequestBodyTransferData'Destination
    }

-- | Represents a response of the operation 'postInvoices'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostInvoicesResponseError' is used.
data PostInvoicesResponse
  = -- | Means either no matching case available or a parse error
    PostInvoicesResponseError GHC.Base.String
  | -- | Successful response.
    PostInvoicesResponse200 Invoice
  | -- | Error response.
    PostInvoicesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
