{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postFileLinksLink
module StripeAPI.Operations.PostFileLinksLink where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/file_links/{link}
--
-- \<p>Updates an existing file link object. Expired links can no longer be updated.\<\/p>
postFileLinksLink ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | link
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostFileLinksLinkRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostFileLinksLinkResponse)
postFileLinksLink
  link
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostFileLinksLinkResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostFileLinksLinkResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                FileLink
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostFileLinksLinkResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/file_links/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel link)) GHC.Base.<> "")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/file_links\/{link}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostFileLinksLinkRequestBody = PostFileLinksLinkRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postFileLinksLinkRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | expires_at: A future timestamp after which the link will no longer be usable, or \`now\` to expire the link immediately.
    postFileLinksLinkRequestBodyExpiresAt :: (GHC.Maybe.Maybe PostFileLinksLinkRequestBodyExpiresAt'Variants),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postFileLinksLinkRequestBodyMetadata :: (GHC.Maybe.Maybe PostFileLinksLinkRequestBodyMetadata'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostFileLinksLinkRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postFileLinksLinkRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (postFileLinksLinkRequestBodyExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postFileLinksLinkRequestBodyMetadata obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postFileLinksLinkRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expires_at" Data.Aeson.Types.ToJSON..=)) (postFileLinksLinkRequestBodyExpiresAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postFileLinksLinkRequestBodyMetadata obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostFileLinksLinkRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostFileLinksLinkRequestBody" (\obj -> ((GHC.Base.pure PostFileLinksLinkRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata"))

-- | Create a new 'PostFileLinksLinkRequestBody' with all required fields.
mkPostFileLinksLinkRequestBody :: PostFileLinksLinkRequestBody
mkPostFileLinksLinkRequestBody =
  PostFileLinksLinkRequestBody
    { postFileLinksLinkRequestBodyExpand = GHC.Maybe.Nothing,
      postFileLinksLinkRequestBodyExpiresAt = GHC.Maybe.Nothing,
      postFileLinksLinkRequestBodyMetadata = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/file_links\/{link}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.expires_at.anyOf@ in the specification.
--
-- A future timestamp after which the link will no longer be usable, or \`now\` to expire the link immediately.
data PostFileLinksLinkRequestBodyExpiresAt'Variants
  = -- | Represents the JSON value @"now"@
    PostFileLinksLinkRequestBodyExpiresAt'Now
  | -- | Represents the JSON value @""@
    PostFileLinksLinkRequestBodyExpiresAt'EmptyString
  | PostFileLinksLinkRequestBodyExpiresAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostFileLinksLinkRequestBodyExpiresAt'Variants where
  toJSON (PostFileLinksLinkRequestBodyExpiresAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostFileLinksLinkRequestBodyExpiresAt'Now) = "now"
  toJSON (PostFileLinksLinkRequestBodyExpiresAt'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostFileLinksLinkRequestBodyExpiresAt'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "now" -> GHC.Base.pure PostFileLinksLinkRequestBodyExpiresAt'Now
        | val GHC.Classes.== "" -> GHC.Base.pure PostFileLinksLinkRequestBodyExpiresAt'EmptyString
        | GHC.Base.otherwise -> case (PostFileLinksLinkRequestBodyExpiresAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/file_links\/{link}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostFileLinksLinkRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostFileLinksLinkRequestBodyMetadata'EmptyString
  | PostFileLinksLinkRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostFileLinksLinkRequestBodyMetadata'Variants where
  toJSON (PostFileLinksLinkRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostFileLinksLinkRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostFileLinksLinkRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostFileLinksLinkRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostFileLinksLinkRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'postFileLinksLink'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostFileLinksLinkResponseError' is used.
data PostFileLinksLinkResponse
  = -- | Means either no matching case available or a parse error
    PostFileLinksLinkResponseError GHC.Base.String
  | -- | Successful response.
    PostFileLinksLinkResponse200 FileLink
  | -- | Error response.
    PostFileLinksLinkResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
