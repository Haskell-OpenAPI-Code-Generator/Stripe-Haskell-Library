-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postIssuingDisputesDispute
module StripeAPI.Operations.PostIssuingDisputesDispute where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/issuing/disputes/{dispute}
-- 
-- \<p>Updates the specified Issuing \<code>Dispute\<\/code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the \<code>evidence\<\/code> object can be unset by passing in an empty string.\<\/p>
postIssuingDisputesDispute :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ dispute | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostIssuingDisputesDisputeResponse) -- ^ Monadic computation which returns the result of the operation
postIssuingDisputesDispute dispute
                           body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostIssuingDisputesDisputeResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostIssuingDisputesDisputeResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                 Issuing'dispute)
                                                                                                                                                                                       | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostIssuingDisputesDisputeResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                   Error)
                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/issuing/disputes/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel dispute)) GHC.Base.++ ""))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBody = PostIssuingDisputesDisputeRequestBody {
  -- | evidence: Evidence provided for the dispute.
  postIssuingDisputesDisputeRequestBodyEvidence :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence')
  -- | expand: Specifies which fields in the response should be expanded.
  , postIssuingDisputesDisputeRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postIssuingDisputesDisputeRequestBodyMetadata :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyMetadata'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evidence" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyMetadata obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evidence" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyMetadata obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBody" (\obj -> ((GHC.Base.pure PostIssuingDisputesDisputeRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "evidence")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBody' with all required fields.
mkPostIssuingDisputesDisputeRequestBody :: PostIssuingDisputesDisputeRequestBody
mkPostIssuingDisputesDisputeRequestBody = PostIssuingDisputesDisputeRequestBody{postIssuingDisputesDisputeRequestBodyEvidence = GHC.Maybe.Nothing,
                                                                                postIssuingDisputesDisputeRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                postIssuingDisputesDisputeRequestBodyMetadata = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence@ in the specification.
-- 
-- Evidence provided for the dispute.
data PostIssuingDisputesDisputeRequestBodyEvidence' = PostIssuingDisputesDisputeRequestBodyEvidence' {
  -- | canceled
  postIssuingDisputesDisputeRequestBodyEvidence'Canceled :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'Variants)
  -- | duplicate
  , postIssuingDisputesDisputeRequestBodyEvidence'Duplicate :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'Variants)
  -- | fraudulent
  , postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'Variants)
  -- | merchandise_not_as_described
  , postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'Variants)
  -- | not_received
  , postIssuingDisputesDisputeRequestBodyEvidence'NotReceived :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'Variants)
  -- | other
  , postIssuingDisputesDisputeRequestBodyEvidence'Other :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Other'Variants)
  -- | reason
  , postIssuingDisputesDisputeRequestBodyEvidence'Reason :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Reason')
  -- | service_not_as_described
  , postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("canceled" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fraudulent" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("merchandise_not_as_described" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("not_received" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("other" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reason" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Reason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_not_as_described" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("canceled" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fraudulent" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("merchandise_not_as_described" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("not_received" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("other" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reason" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Reason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_not_as_described" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'" (\obj -> (((((((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "canceled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fraudulent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "merchandise_not_as_described")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "not_received")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "other")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_not_as_described"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence' :: PostIssuingDisputesDisputeRequestBodyEvidence'
mkPostIssuingDisputesDisputeRequestBodyEvidence' = PostIssuingDisputesDisputeRequestBodyEvidence'{postIssuingDisputesDisputeRequestBodyEvidence'Canceled = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'NotReceived = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Other = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Reason = GHC.Maybe.Nothing,
                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants)
  -- | canceled_at
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants)
  -- | cancellation_policy_provided
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants)
  -- | cancellation_reason
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationReason :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | expected_at
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_type
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType')
  -- | return_status
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus')
  -- | returned_at
  , postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("canceled_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy_provided" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_reason" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expected_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_type" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_status" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("returned_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("canceled_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy_provided" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_reason" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expected_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_type" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_status" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("returned_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1" (\obj -> (((((((((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "canceled_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_policy_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expected_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "returned_at"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationReason = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1Explanation = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductDescription = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus = GHC.Maybe.Nothing,
                                                                                                                                postIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.canceled_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CanceledAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.cancellation_policy_provided.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Bool GHC.Types.Bool
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Bool a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1CancellationPolicyProvided'Bool Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.expected_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ExpectedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.product_type@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType' =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumEmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumMerchandise -- ^ Represents the JSON value @"merchandise"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumService -- ^ Represents the JSON value @"service"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'Other val) = val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumEmptyString) = ""
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumMerchandise) = "merchandise"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumService) = "service"
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "" -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumEmptyString
                                            | val GHC.Classes.== "merchandise" -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumMerchandise
                                            | val GHC.Classes.== "service" -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'EnumService
                                            | GHC.Base.otherwise -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ProductType'Other val)
-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.return_status@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus' =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumEmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumMerchantRejected -- ^ Represents the JSON value @"merchant_rejected"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumSuccessful -- ^ Represents the JSON value @"successful"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Other val) = val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumEmptyString) = ""
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumMerchantRejected) = "merchant_rejected"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumSuccessful) = "successful"
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "" -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumEmptyString
                                            | val GHC.Classes.== "merchant_rejected" -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumMerchantRejected
                                            | val GHC.Classes.== "successful" -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'EnumSuccessful
                                            | GHC.Base.otherwise -> PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnStatus'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf.properties.returned_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1ReturnedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.canceled.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'PostIssuingDisputesDisputeRequestBodyEvidence'Canceled'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants)
  -- | card_statement
  , postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants)
  -- | cash_receipt
  , postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants)
  -- | check_image
  , postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | original_transaction
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_statement" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cash_receipt" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_image" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_transaction" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_statement" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cash_receipt" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_image" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("original_transaction" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1" (\obj -> (((((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_statement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cash_receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "check_image")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "original_transaction"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement = GHC.Maybe.Nothing,
                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt = GHC.Maybe.Nothing,
                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage = GHC.Maybe.Nothing,
                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1Explanation = GHC.Maybe.Nothing,
                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1OriginalTransaction = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.card_statement.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CardStatement'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.cash_receipt.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CashReceipt'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf.properties.check_image.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1CheckImage'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.duplicate.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'PostIssuingDisputesDisputeRequestBodyEvidence'Duplicate'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.fraudulent.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1Explanation obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1Explanation obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1" (\obj -> (GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                                    postIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1Explanation = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.fraudulent.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.fraudulent.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'PostIssuingDisputesDisputeRequestBodyEvidence'Fraudulent'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | received_at
  , postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants)
  -- | return_description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | return_status
  , postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus')
  -- | returned_at
  , postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("received_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_status" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("returned_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("received_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("return_status" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("returned_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1" (\obj -> (((((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "received_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "return_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "returned_at"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1Explanation = GHC.Maybe.Nothing,
                                                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt = GHC.Maybe.Nothing,
                                                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnDescription = GHC.Maybe.Nothing,
                                                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus = GHC.Maybe.Nothing,
                                                                                                                                                                  postIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.received_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReceivedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.return_status@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus' =
   PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumEmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumMerchantRejected -- ^ Represents the JSON value @"merchant_rejected"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumSuccessful -- ^ Represents the JSON value @"successful"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Other val) = val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumEmptyString) = ""
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumMerchantRejected) = "merchant_rejected"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumSuccessful) = "successful"
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "" -> PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumEmptyString
                                            | val GHC.Classes.== "merchant_rejected" -> PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumMerchantRejected
                                            | val GHC.Classes.== "successful" -> PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'EnumSuccessful
                                            | GHC.Base.otherwise -> PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnStatus'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf.properties.returned_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1ReturnedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.merchandise_not_as_described.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'PostIssuingDisputesDisputeRequestBodyEvidence'MerchandiseNotAsDescribed'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants)
  -- | expected_at
  , postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_type
  , postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expected_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_type" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expected_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_type" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1" (\obj -> ((((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expected_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_type"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                                      postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt = GHC.Maybe.Nothing,
                                                                                                                                      postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1Explanation = GHC.Maybe.Nothing,
                                                                                                                                      postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductDescription = GHC.Maybe.Nothing,
                                                                                                                                      postIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf.properties.expected_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ExpectedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf.properties.product_type@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType' =
   PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumEmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumMerchandise -- ^ Represents the JSON value @"merchandise"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumService -- ^ Represents the JSON value @"service"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'Other val) = val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumEmptyString) = ""
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumMerchandise) = "merchandise"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumService) = "service"
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "" -> PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumEmptyString
                                            | val GHC.Classes.== "merchandise" -> PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumMerchandise
                                            | val GHC.Classes.== "service" -> PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'EnumService
                                            | GHC.Base.otherwise -> PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1ProductType'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.not_received.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'PostIssuingDisputesDisputeRequestBodyEvidence'NotReceived'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_description
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | product_type
  , postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_type" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_type" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1" (\obj -> (((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_type"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1Explanation = GHC.Maybe.Nothing,
                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductDescription = GHC.Maybe.Nothing,
                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf.properties.product_type@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType' =
   PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumEmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumMerchandise -- ^ Represents the JSON value @"merchandise"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumService -- ^ Represents the JSON value @"service"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'Other val) = val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumEmptyString) = ""
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumMerchandise) = "merchandise"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumService) = "service"
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "" -> PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumEmptyString
                                            | val GHC.Classes.== "merchandise" -> PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumMerchandise
                                            | val GHC.Classes.== "service" -> PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'EnumService
                                            | GHC.Base.otherwise -> PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1ProductType'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.other.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Other'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'Other'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Other'PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Other'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Other'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'Other'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'Other'PostIssuingDisputesDisputeRequestBodyEvidence'Other'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.reason@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'Reason' =
   PostIssuingDisputesDisputeRequestBodyEvidence'Reason'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumCanceled -- ^ Represents the JSON value @"canceled"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumDuplicate -- ^ Represents the JSON value @"duplicate"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumFraudulent -- ^ Represents the JSON value @"fraudulent"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumMerchandiseNotAsDescribed -- ^ Represents the JSON value @"merchandise_not_as_described"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumNotReceived -- ^ Represents the JSON value @"not_received"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumOther -- ^ Represents the JSON value @"other"@
  | PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumServiceNotAsDescribed -- ^ Represents the JSON value @"service_not_as_described"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'Reason'
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'Other val) = val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumCanceled) = "canceled"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumDuplicate) = "duplicate"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumFraudulent) = "fraudulent"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumMerchandiseNotAsDescribed) = "merchandise_not_as_described"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumNotReceived) = "not_received"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumOther) = "other"
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumServiceNotAsDescribed) = "service_not_as_described"
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'Reason'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "canceled" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumCanceled
                                            | val GHC.Classes.== "duplicate" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumDuplicate
                                            | val GHC.Classes.== "fraudulent" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumFraudulent
                                            | val GHC.Classes.== "merchandise_not_as_described" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumMerchandiseNotAsDescribed
                                            | val GHC.Classes.== "not_received" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumNotReceived
                                            | val GHC.Classes.== "other" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumOther
                                            | val GHC.Classes.== "service_not_as_described" -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'EnumServiceNotAsDescribed
                                            | GHC.Base.otherwise -> PostIssuingDisputesDisputeRequestBodyEvidence'Reason'Other val)
-- | Defines the object schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 {
  -- | additional_documentation
  postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants)
  -- | canceled_at
  , postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants)
  -- | cancellation_reason
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | explanation
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 1500
  , postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | received_at
  , postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt :: (GHC.Maybe.Maybe PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("canceled_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_reason" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("received_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_documentation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("canceled_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_reason" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("explanation" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("received_at" Data.Aeson.Types.ToJSON..=)) (postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1" (\obj -> ((((GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "canceled_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_reason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "received_at"))
-- | Create a new 'PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1' with all required fields.
mkPostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 :: PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
mkPostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 = PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1{postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation = GHC.Maybe.Nothing,
                                                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt = GHC.Maybe.Nothing,
                                                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CancellationReason = GHC.Maybe.Nothing,
                                                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1Explanation = GHC.Maybe.Nothing,
                                                                                                                                                          postIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf.properties.additional_documentation.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Text a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1AdditionalDocumentation'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf.properties.canceled_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1CanceledAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf.properties.received_at.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1ReceivedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence.properties.service_not_as_described.anyOf@ in the specification.
-- 
-- 
data PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'Variants =
   PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'PostIssuingDisputesDisputeRequestBodyEvidence'ServiceNotAsDescribed'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the oneOf schema located at @paths.\/v1\/issuing\/disputes\/{dispute}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
-- 
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostIssuingDisputesDisputeRequestBodyMetadata'Variants =
   PostIssuingDisputesDisputeRequestBodyMetadata'EmptyString -- ^ Represents the JSON value @""@
  | PostIssuingDisputesDisputeRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingDisputesDisputeRequestBodyMetadata'Variants
    where toJSON (PostIssuingDisputesDisputeRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (PostIssuingDisputesDisputeRequestBodyMetadata'EmptyString) = ""
instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingDisputesDisputeRequestBodyMetadata'Variants
    where parseJSON val = if | val GHC.Classes.== "" -> GHC.Base.pure PostIssuingDisputesDisputeRequestBodyMetadata'EmptyString
                             | GHC.Base.otherwise -> case (PostIssuingDisputesDisputeRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
                                                         Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                                                         Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Represents a response of the operation 'postIssuingDisputesDispute'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIssuingDisputesDisputeResponseError' is used.
data PostIssuingDisputesDisputeResponse =
   PostIssuingDisputesDisputeResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostIssuingDisputesDisputeResponse200 Issuing'dispute -- ^ Successful response.
  | PostIssuingDisputesDisputeResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
