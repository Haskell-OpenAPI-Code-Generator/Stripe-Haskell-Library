{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation postIssuingVerifications
module StripeAPI.Operations.PostIssuingVerifications where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/issuing/verifications
--
-- \<p>Some actions (eg: updating a PIN) need confirmation from the cardholder\<\/p>
postIssuingVerifications ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostIssuingVerificationsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostIssuingVerificationsResponse)
postIssuingVerifications body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostIssuingVerificationsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostIssuingVerificationsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Issuing'verification
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostIssuingVerificationsResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/issuing/verifications") [] (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/issuing\/verifications.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostIssuingVerificationsRequestBody = PostIssuingVerificationsRequestBody
  { -- | card: The \`Card\` for which a verification is requested
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postIssuingVerificationsRequestBodyCard :: Data.Text.Internal.Text,
    -- | expand: Specifies which fields in the response should be expanded.
    postIssuingVerificationsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | scope: The scope of the verification (one of \`card_pin_retrieve\` or \`card_pin_update\`)
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postIssuingVerificationsRequestBodyScope :: PostIssuingVerificationsRequestBodyScope',
    -- | verification_method: The method used to send the cardholder the verification (one of \`email\` or \`sms\`)
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postIssuingVerificationsRequestBodyVerificationMethod :: PostIssuingVerificationsRequestBodyVerificationMethod'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingVerificationsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("card" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyCard obj : "expand" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyExpand obj : "scope" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyScope obj : "verification_method" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyVerificationMethod obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("card" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyCard obj) GHC.Base.<> (("expand" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyExpand obj) GHC.Base.<> (("scope" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyScope obj) GHC.Base.<> ("verification_method" Data.Aeson.Types.ToJSON..= postIssuingVerificationsRequestBodyVerificationMethod obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingVerificationsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIssuingVerificationsRequestBody" (\obj -> (((GHC.Base.pure PostIssuingVerificationsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "scope")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "verification_method"))

-- | Create a new 'PostIssuingVerificationsRequestBody' with all required fields.
mkPostIssuingVerificationsRequestBody ::
  -- | 'postIssuingVerificationsRequestBodyCard'
  Data.Text.Internal.Text ->
  -- | 'postIssuingVerificationsRequestBodyScope'
  PostIssuingVerificationsRequestBodyScope' ->
  -- | 'postIssuingVerificationsRequestBodyVerificationMethod'
  PostIssuingVerificationsRequestBodyVerificationMethod' ->
  PostIssuingVerificationsRequestBody
mkPostIssuingVerificationsRequestBody postIssuingVerificationsRequestBodyCard postIssuingVerificationsRequestBodyScope postIssuingVerificationsRequestBodyVerificationMethod =
  PostIssuingVerificationsRequestBody
    { postIssuingVerificationsRequestBodyCard = postIssuingVerificationsRequestBodyCard,
      postIssuingVerificationsRequestBodyExpand = GHC.Maybe.Nothing,
      postIssuingVerificationsRequestBodyScope = postIssuingVerificationsRequestBodyScope,
      postIssuingVerificationsRequestBodyVerificationMethod = postIssuingVerificationsRequestBodyVerificationMethod
    }

-- | Defines the enum schema located at @paths.\/v1\/issuing\/verifications.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.scope@ in the specification.
--
-- The scope of the verification (one of \`card_pin_retrieve\` or \`card_pin_update\`)
data PostIssuingVerificationsRequestBodyScope'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingVerificationsRequestBodyScope'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingVerificationsRequestBodyScope'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"card_pin_retrieve"@
    PostIssuingVerificationsRequestBodyScope'EnumCardPinRetrieve
  | -- | Represents the JSON value @"card_pin_update"@
    PostIssuingVerificationsRequestBodyScope'EnumCardPinUpdate
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingVerificationsRequestBodyScope' where
  toJSON (PostIssuingVerificationsRequestBodyScope'Other val) = val
  toJSON (PostIssuingVerificationsRequestBodyScope'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingVerificationsRequestBodyScope'EnumCardPinRetrieve) = "card_pin_retrieve"
  toJSON (PostIssuingVerificationsRequestBodyScope'EnumCardPinUpdate) = "card_pin_update"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingVerificationsRequestBodyScope' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "card_pin_retrieve" -> PostIssuingVerificationsRequestBodyScope'EnumCardPinRetrieve
            | val GHC.Classes.== "card_pin_update" -> PostIssuingVerificationsRequestBodyScope'EnumCardPinUpdate
            | GHC.Base.otherwise -> PostIssuingVerificationsRequestBodyScope'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/issuing\/verifications.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.verification_method@ in the specification.
--
-- The method used to send the cardholder the verification (one of \`email\` or \`sms\`)
data PostIssuingVerificationsRequestBodyVerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostIssuingVerificationsRequestBodyVerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostIssuingVerificationsRequestBodyVerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"email"@
    PostIssuingVerificationsRequestBodyVerificationMethod'EnumEmail
  | -- | Represents the JSON value @"sms"@
    PostIssuingVerificationsRequestBodyVerificationMethod'EnumSms
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostIssuingVerificationsRequestBodyVerificationMethod' where
  toJSON (PostIssuingVerificationsRequestBodyVerificationMethod'Other val) = val
  toJSON (PostIssuingVerificationsRequestBodyVerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostIssuingVerificationsRequestBodyVerificationMethod'EnumEmail) = "email"
  toJSON (PostIssuingVerificationsRequestBodyVerificationMethod'EnumSms) = "sms"

instance Data.Aeson.Types.FromJSON.FromJSON PostIssuingVerificationsRequestBodyVerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "email" -> PostIssuingVerificationsRequestBodyVerificationMethod'EnumEmail
            | val GHC.Classes.== "sms" -> PostIssuingVerificationsRequestBodyVerificationMethod'EnumSms
            | GHC.Base.otherwise -> PostIssuingVerificationsRequestBodyVerificationMethod'Other val
      )

-- | Represents a response of the operation 'postIssuingVerifications'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIssuingVerificationsResponseError' is used.
data PostIssuingVerificationsResponse
  = -- | Means either no matching case available or a parse error
    PostIssuingVerificationsResponseError GHC.Base.String
  | -- | Successful response.
    PostIssuingVerificationsResponse200 Issuing'verification
  | -- | Error response.
    PostIssuingVerificationsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
