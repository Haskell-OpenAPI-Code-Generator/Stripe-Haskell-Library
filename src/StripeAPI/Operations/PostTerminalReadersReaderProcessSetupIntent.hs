-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTerminalReadersReaderProcessSetupIntent
module StripeAPI.Operations.PostTerminalReadersReaderProcessSetupIntent where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/terminal/readers/{reader}/process_setup_intent
-- 
-- \<p>Initiates a setup intent flow on a Reader.\<\/p>
postTerminalReadersReaderProcessSetupIntent :: forall m . StripeAPI.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ reader | Constraints: Maximum length of 5000
  -> PostTerminalReadersReaderProcessSetupIntentRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTerminalReadersReaderProcessSetupIntentResponse) -- ^ Monadic computation which returns the result of the operation
postTerminalReadersReaderProcessSetupIntent reader
                                            body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTerminalReadersReaderProcessSetupIntentResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTerminalReadersReaderProcessSetupIntentResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Terminal'reader)
                                                                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTerminalReadersReaderProcessSetupIntentResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                      Error)
                                                                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/terminal/readers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel reader)) GHC.Base.++ "/process_setup_intent"))) GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/terminal\/readers\/{reader}\/process_setup_intent.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTerminalReadersReaderProcessSetupIntentRequestBody = PostTerminalReadersReaderProcessSetupIntentRequestBody {
  -- | customer_consent_collected: Customer Consent Collected
  postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected :: GHC.Types.Bool
  -- | expand: Specifies which fields in the response should be expanded.
  , postTerminalReadersReaderProcessSetupIntentRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | setup_intent: SetupIntent ID
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTerminalReadersReaderProcessSetupIntentRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["customer_consent_collected" Data.Aeson.Types.ToJSON..= postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderProcessSetupIntentRequestBodyExpand obj) : ["setup_intent" Data.Aeson.Types.ToJSON..= postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["customer_consent_collected" Data.Aeson.Types.ToJSON..= postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTerminalReadersReaderProcessSetupIntentRequestBodyExpand obj) : ["setup_intent" Data.Aeson.Types.ToJSON..= postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTerminalReadersReaderProcessSetupIntentRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTerminalReadersReaderProcessSetupIntentRequestBody" (\obj -> ((GHC.Base.pure PostTerminalReadersReaderProcessSetupIntentRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "customer_consent_collected")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "setup_intent"))
-- | Create a new 'PostTerminalReadersReaderProcessSetupIntentRequestBody' with all required fields.
mkPostTerminalReadersReaderProcessSetupIntentRequestBody :: GHC.Types.Bool -- ^ 'postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected'
  -> Data.Text.Internal.Text -- ^ 'postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent'
  -> PostTerminalReadersReaderProcessSetupIntentRequestBody
mkPostTerminalReadersReaderProcessSetupIntentRequestBody postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent = PostTerminalReadersReaderProcessSetupIntentRequestBody{postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected = postTerminalReadersReaderProcessSetupIntentRequestBodyCustomerConsentCollected,
                                                                                                                                                                                                                                                                   postTerminalReadersReaderProcessSetupIntentRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                                   postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent = postTerminalReadersReaderProcessSetupIntentRequestBodySetupIntent}
-- | Represents a response of the operation 'postTerminalReadersReaderProcessSetupIntent'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTerminalReadersReaderProcessSetupIntentResponseError' is used.
data PostTerminalReadersReaderProcessSetupIntentResponse =
   PostTerminalReadersReaderProcessSetupIntentResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTerminalReadersReaderProcessSetupIntentResponse200 Terminal'reader -- ^ Successful response.
  | PostTerminalReadersReaderProcessSetupIntentResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
