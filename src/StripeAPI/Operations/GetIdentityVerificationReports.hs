{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getIdentityVerificationReports
module StripeAPI.Operations.GetIdentityVerificationReports where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/identity/verification_reports
--
-- \<p>List all verification reports.\<\/p>
getIdentityVerificationReports ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetIdentityVerificationReportsParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetIdentityVerificationReportsResponse)
getIdentityVerificationReports parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetIdentityVerificationReportsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetIdentityVerificationReportsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetIdentityVerificationReportsResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetIdentityVerificationReportsResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/identity/verification_reports")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryType parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "verification_session") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getIdentityVerificationReportsParametersQueryVerificationSession parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_reports.GET.parameters@ in the specification.
data GetIdentityVerificationReportsParameters = GetIdentityVerificationReportsParameters
  { -- | queryCreated: Represents the parameter named \'created\'
    getIdentityVerificationReportsParametersQueryCreated :: (GHC.Maybe.Maybe GetIdentityVerificationReportsParametersQueryCreated'Variants),
    -- | queryEnding_before: Represents the parameter named \'ending_before\'
    --
    -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getIdentityVerificationReportsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getIdentityVerificationReportsParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    getIdentityVerificationReportsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryStarting_after: Represents the parameter named \'starting_after\'
    --
    -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getIdentityVerificationReportsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryType: Represents the parameter named \'type\'
    --
    -- Only return VerificationReports of this type
    getIdentityVerificationReportsParametersQueryType :: (GHC.Maybe.Maybe GetIdentityVerificationReportsParametersQueryType'),
    -- | queryVerification_session: Represents the parameter named \'verification_session\'
    --
    -- Only return VerificationReports created by this VerificationSession ID. It is allowed to provide a VerificationIntent ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getIdentityVerificationReportsParametersQueryVerificationSession :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationReportsParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryVerification_session" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryVerificationSession obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryVerification_session" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryVerificationSession obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationReportsParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIdentityVerificationReportsParameters" (\obj -> ((((((GHC.Base.pure GetIdentityVerificationReportsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryVerification_session"))

-- | Create a new 'GetIdentityVerificationReportsParameters' with all required fields.
mkGetIdentityVerificationReportsParameters :: GetIdentityVerificationReportsParameters
mkGetIdentityVerificationReportsParameters =
  GetIdentityVerificationReportsParameters
    { getIdentityVerificationReportsParametersQueryCreated = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryEndingBefore = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryExpand = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryLimit = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryStartingAfter = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryType = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryVerificationSession = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_reports.GET.parameters.properties.queryCreated.anyOf@ in the specification.
data GetIdentityVerificationReportsParametersQueryCreated'OneOf1 = GetIdentityVerificationReportsParametersQueryCreated'OneOf1
  { -- | gt
    getIdentityVerificationReportsParametersQueryCreated'OneOf1Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | gte
    getIdentityVerificationReportsParametersQueryCreated'OneOf1Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | lt
    getIdentityVerificationReportsParametersQueryCreated'OneOf1Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | lte
    getIdentityVerificationReportsParametersQueryCreated'OneOf1Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationReportsParametersQueryCreated'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Lte obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getIdentityVerificationReportsParametersQueryCreated'OneOf1Lte obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationReportsParametersQueryCreated'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIdentityVerificationReportsParametersQueryCreated'OneOf1" (\obj -> (((GHC.Base.pure GetIdentityVerificationReportsParametersQueryCreated'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lte"))

-- | Create a new 'GetIdentityVerificationReportsParametersQueryCreated'OneOf1' with all required fields.
mkGetIdentityVerificationReportsParametersQueryCreated'OneOf1 :: GetIdentityVerificationReportsParametersQueryCreated'OneOf1
mkGetIdentityVerificationReportsParametersQueryCreated'OneOf1 =
  GetIdentityVerificationReportsParametersQueryCreated'OneOf1
    { getIdentityVerificationReportsParametersQueryCreated'OneOf1Gt = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryCreated'OneOf1Gte = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryCreated'OneOf1Lt = GHC.Maybe.Nothing,
      getIdentityVerificationReportsParametersQueryCreated'OneOf1Lte = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/identity\/verification_reports.GET.parameters.properties.queryCreated.anyOf@ in the specification.
--
-- Represents the parameter named \'created\'
data GetIdentityVerificationReportsParametersQueryCreated'Variants
  = GetIdentityVerificationReportsParametersQueryCreated'GetIdentityVerificationReportsParametersQueryCreated'OneOf1 GetIdentityVerificationReportsParametersQueryCreated'OneOf1
  | GetIdentityVerificationReportsParametersQueryCreated'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationReportsParametersQueryCreated'Variants where
  toJSON (GetIdentityVerificationReportsParametersQueryCreated'GetIdentityVerificationReportsParametersQueryCreated'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetIdentityVerificationReportsParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationReportsParametersQueryCreated'Variants where
  parseJSON val = case (GetIdentityVerificationReportsParametersQueryCreated'GetIdentityVerificationReportsParametersQueryCreated'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetIdentityVerificationReportsParametersQueryCreated'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/identity\/verification_reports.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- Only return VerificationReports of this type
data GetIdentityVerificationReportsParametersQueryType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetIdentityVerificationReportsParametersQueryType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetIdentityVerificationReportsParametersQueryType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"document"@
    GetIdentityVerificationReportsParametersQueryType'EnumDocument
  | -- | Represents the JSON value @"id_number"@
    GetIdentityVerificationReportsParametersQueryType'EnumIdNumber
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationReportsParametersQueryType' where
  toJSON (GetIdentityVerificationReportsParametersQueryType'Other val) = val
  toJSON (GetIdentityVerificationReportsParametersQueryType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetIdentityVerificationReportsParametersQueryType'EnumDocument) = "document"
  toJSON (GetIdentityVerificationReportsParametersQueryType'EnumIdNumber) = "id_number"

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationReportsParametersQueryType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "document" -> GetIdentityVerificationReportsParametersQueryType'EnumDocument
            | val GHC.Classes.== "id_number" -> GetIdentityVerificationReportsParametersQueryType'EnumIdNumber
            | GHC.Base.otherwise -> GetIdentityVerificationReportsParametersQueryType'Other val
      )

-- | Represents a response of the operation 'getIdentityVerificationReports'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetIdentityVerificationReportsResponseError' is used.
data GetIdentityVerificationReportsResponse
  = -- | Means either no matching case available or a parse error
    GetIdentityVerificationReportsResponseError GHC.Base.String
  | -- | Successful response.
    GetIdentityVerificationReportsResponse200 GetIdentityVerificationReportsResponseBody200
  | -- | Error response.
    GetIdentityVerificationReportsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_reports.GET.responses.200.content.application\/json.schema@ in the specification.
data GetIdentityVerificationReportsResponseBody200 = GetIdentityVerificationReportsResponseBody200
  { -- | data
    getIdentityVerificationReportsResponseBody200Data :: ([Identity'verificationReport]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getIdentityVerificationReportsResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    -- * Must match pattern \'^\/v1\/identity\/verification_reports\'
    getIdentityVerificationReportsResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetIdentityVerificationReportsResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getIdentityVerificationReportsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getIdentityVerificationReportsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getIdentityVerificationReportsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getIdentityVerificationReportsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getIdentityVerificationReportsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getIdentityVerificationReportsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetIdentityVerificationReportsResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIdentityVerificationReportsResponseBody200" (\obj -> ((GHC.Base.pure GetIdentityVerificationReportsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetIdentityVerificationReportsResponseBody200' with all required fields.
mkGetIdentityVerificationReportsResponseBody200 ::
  -- | 'getIdentityVerificationReportsResponseBody200Data'
  [Identity'verificationReport] ->
  -- | 'getIdentityVerificationReportsResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getIdentityVerificationReportsResponseBody200Url'
  Data.Text.Internal.Text ->
  GetIdentityVerificationReportsResponseBody200
mkGetIdentityVerificationReportsResponseBody200 getIdentityVerificationReportsResponseBody200Data getIdentityVerificationReportsResponseBody200HasMore getIdentityVerificationReportsResponseBody200Url =
  GetIdentityVerificationReportsResponseBody200
    { getIdentityVerificationReportsResponseBody200Data = getIdentityVerificationReportsResponseBody200Data,
      getIdentityVerificationReportsResponseBody200HasMore = getIdentityVerificationReportsResponseBody200HasMore,
      getIdentityVerificationReportsResponseBody200Url = getIdentityVerificationReportsResponseBody200Url
    }
