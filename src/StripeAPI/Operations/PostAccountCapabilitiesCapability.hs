{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postAccountCapabilitiesCapability
module StripeAPI.Operations.PostAccountCapabilitiesCapability where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/account/capabilities/{capability}
--
-- \<p>Updates an existing Account Capability.\<\/p>
postAccountCapabilitiesCapability ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | capability
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostAccountCapabilitiesCapabilityRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostAccountCapabilitiesCapabilityResponse)
postAccountCapabilitiesCapability
  capability
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostAccountCapabilitiesCapabilityResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountCapabilitiesCapabilityResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Capability
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountCapabilitiesCapabilityResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/account/capabilities/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel capability)) GHC.Base.++ ""))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/account\/capabilities\/{capability}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostAccountCapabilitiesCapabilityRequestBody = PostAccountCapabilitiesCapabilityRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postAccountCapabilitiesCapabilityRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | requested: Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the \`requirements\` arrays.
    postAccountCapabilitiesCapabilityRequestBodyRequested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountCapabilitiesCapabilityRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("expand" Data.Aeson.Types.ToJSON..= postAccountCapabilitiesCapabilityRequestBodyExpand obj : "requested" Data.Aeson.Types.ToJSON..= postAccountCapabilitiesCapabilityRequestBodyRequested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("expand" Data.Aeson.Types.ToJSON..= postAccountCapabilitiesCapabilityRequestBodyExpand obj) GHC.Base.<> ("requested" Data.Aeson.Types.ToJSON..= postAccountCapabilitiesCapabilityRequestBodyRequested obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountCapabilitiesCapabilityRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountCapabilitiesCapabilityRequestBody" (\obj -> (GHC.Base.pure PostAccountCapabilitiesCapabilityRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountCapabilitiesCapabilityRequestBody' with all required fields.
mkPostAccountCapabilitiesCapabilityRequestBody :: PostAccountCapabilitiesCapabilityRequestBody
mkPostAccountCapabilitiesCapabilityRequestBody =
  PostAccountCapabilitiesCapabilityRequestBody
    { postAccountCapabilitiesCapabilityRequestBodyExpand = GHC.Maybe.Nothing,
      postAccountCapabilitiesCapabilityRequestBodyRequested = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postAccountCapabilitiesCapability'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountCapabilitiesCapabilityResponseError' is used.
data PostAccountCapabilitiesCapabilityResponse
  = -- | Means either no matching case available or a parse error
    PostAccountCapabilitiesCapabilityResponseError GHC.Base.String
  | -- | Successful response.
    PostAccountCapabilitiesCapabilityResponse200 Capability
  | -- | Error response.
    PostAccountCapabilitiesCapabilityResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
