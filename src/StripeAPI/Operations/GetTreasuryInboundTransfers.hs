-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getTreasuryInboundTransfers
module StripeAPI.Operations.GetTreasuryInboundTransfers where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/treasury/inbound_transfers
-- 
-- \<p>Returns a list of InboundTransfers sent from the specified FinancialAccount.\<\/p>
getTreasuryInboundTransfers :: forall m . StripeAPI.Common.MonadHTTP m => GetTreasuryInboundTransfersParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetTreasuryInboundTransfersResponse) -- ^ Monadic computation which returns the result of the operation
getTreasuryInboundTransfers parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetTreasuryInboundTransfersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetTreasuryInboundTransfersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                          GetTreasuryInboundTransfersResponseBody200)
                                                                                                                                                                                               | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetTreasuryInboundTransfersResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                            Error)
                                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/v1/treasury/inbound_transfers") [StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryInboundTransfersParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                 StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryInboundTransfersParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                 StripeAPI.Common.QueryParameter (Data.Text.pack "financial_account") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getTreasuryInboundTransfersParametersQueryFinancialAccount parameters)) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                 StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryInboundTransfersParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                 StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryInboundTransfersParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                                 StripeAPI.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryInboundTransfersParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.True])
-- | Defines the object schema located at @paths.\/v1\/treasury\/inbound_transfers.GET.parameters@ in the specification.
-- 
-- 
data GetTreasuryInboundTransfersParameters = GetTreasuryInboundTransfersParameters {
  -- | queryEnding_before: Represents the parameter named \'ending_before\'
  -- 
  -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  getTreasuryInboundTransfersParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryExpand: Represents the parameter named \'expand\'
  -- 
  -- Specifies which fields in the response should be expanded.
  , getTreasuryInboundTransfersParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | queryFinancial_account: Represents the parameter named \'financial_account\'
  -- 
  -- Returns objects associated with this FinancialAccount.
  , getTreasuryInboundTransfersParametersQueryFinancialAccount :: Data.Text.Internal.Text
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  , getTreasuryInboundTransfersParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryStarting_after: Represents the parameter named \'starting_after\'
  -- 
  -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getTreasuryInboundTransfersParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryStatus: Represents the parameter named \'status\'
  -- 
  -- Only return InboundTransfers that have the given status: \`processing\`, \`succeeded\`, \`failed\` or \`canceled\`.
  , getTreasuryInboundTransfersParametersQueryStatus :: (GHC.Maybe.Maybe GetTreasuryInboundTransfersParametersQueryStatus')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryInboundTransfersParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryExpand obj) : ["queryFinancial_account" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersParametersQueryFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryStatus obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryExpand obj) : ["queryFinancial_account" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersParametersQueryFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getTreasuryInboundTransfersParametersQueryStatus obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryInboundTransfersParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryInboundTransfersParameters" (\obj -> (((((GHC.Base.pure GetTreasuryInboundTransfersParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryFinancial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus"))
-- | Create a new 'GetTreasuryInboundTransfersParameters' with all required fields.
mkGetTreasuryInboundTransfersParameters :: Data.Text.Internal.Text -- ^ 'getTreasuryInboundTransfersParametersQueryFinancialAccount'
  -> GetTreasuryInboundTransfersParameters
mkGetTreasuryInboundTransfersParameters getTreasuryInboundTransfersParametersQueryFinancialAccount = GetTreasuryInboundTransfersParameters{getTreasuryInboundTransfersParametersQueryEndingBefore = GHC.Maybe.Nothing,
                                                                                                                                           getTreasuryInboundTransfersParametersQueryExpand = GHC.Maybe.Nothing,
                                                                                                                                           getTreasuryInboundTransfersParametersQueryFinancialAccount = getTreasuryInboundTransfersParametersQueryFinancialAccount,
                                                                                                                                           getTreasuryInboundTransfersParametersQueryLimit = GHC.Maybe.Nothing,
                                                                                                                                           getTreasuryInboundTransfersParametersQueryStartingAfter = GHC.Maybe.Nothing,
                                                                                                                                           getTreasuryInboundTransfersParametersQueryStatus = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/treasury\/inbound_transfers.GET.parameters.properties.queryStatus@ in the specification.
-- 
-- Represents the parameter named \'status\'
-- 
-- Only return InboundTransfers that have the given status: \`processing\`, \`succeeded\`, \`failed\` or \`canceled\`.
data GetTreasuryInboundTransfersParametersQueryStatus' =
   GetTreasuryInboundTransfersParametersQueryStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | GetTreasuryInboundTransfersParametersQueryStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | GetTreasuryInboundTransfersParametersQueryStatus'EnumCanceled -- ^ Represents the JSON value @"canceled"@
  | GetTreasuryInboundTransfersParametersQueryStatus'EnumFailed -- ^ Represents the JSON value @"failed"@
  | GetTreasuryInboundTransfersParametersQueryStatus'EnumProcessing -- ^ Represents the JSON value @"processing"@
  | GetTreasuryInboundTransfersParametersQueryStatus'EnumSucceeded -- ^ Represents the JSON value @"succeeded"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryInboundTransfersParametersQueryStatus'
    where toJSON (GetTreasuryInboundTransfersParametersQueryStatus'Other val) = val
          toJSON (GetTreasuryInboundTransfersParametersQueryStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (GetTreasuryInboundTransfersParametersQueryStatus'EnumCanceled) = "canceled"
          toJSON (GetTreasuryInboundTransfersParametersQueryStatus'EnumFailed) = "failed"
          toJSON (GetTreasuryInboundTransfersParametersQueryStatus'EnumProcessing) = "processing"
          toJSON (GetTreasuryInboundTransfersParametersQueryStatus'EnumSucceeded) = "succeeded"
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryInboundTransfersParametersQueryStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "canceled" -> GetTreasuryInboundTransfersParametersQueryStatus'EnumCanceled
                                            | val GHC.Classes.== "failed" -> GetTreasuryInboundTransfersParametersQueryStatus'EnumFailed
                                            | val GHC.Classes.== "processing" -> GetTreasuryInboundTransfersParametersQueryStatus'EnumProcessing
                                            | val GHC.Classes.== "succeeded" -> GetTreasuryInboundTransfersParametersQueryStatus'EnumSucceeded
                                            | GHC.Base.otherwise -> GetTreasuryInboundTransfersParametersQueryStatus'Other val)
-- | Represents a response of the operation 'getTreasuryInboundTransfers'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetTreasuryInboundTransfersResponseError' is used.
data GetTreasuryInboundTransfersResponse =
   GetTreasuryInboundTransfersResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetTreasuryInboundTransfersResponse200 GetTreasuryInboundTransfersResponseBody200 -- ^ Successful response.
  | GetTreasuryInboundTransfersResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/treasury\/inbound_transfers.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetTreasuryInboundTransfersResponseBody200 = GetTreasuryInboundTransfersResponseBody200 {
  -- | data: Details about each object.
  getTreasuryInboundTransfersResponseBody200Data :: ([Treasury'inboundTransfer])
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getTreasuryInboundTransfersResponseBody200HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getTreasuryInboundTransfersResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryInboundTransfersResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getTreasuryInboundTransfersResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryInboundTransfersResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryInboundTransfersResponseBody200" (\obj -> ((GHC.Base.pure GetTreasuryInboundTransfersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Create a new 'GetTreasuryInboundTransfersResponseBody200' with all required fields.
mkGetTreasuryInboundTransfersResponseBody200 :: [Treasury'inboundTransfer] -- ^ 'getTreasuryInboundTransfersResponseBody200Data'
  -> GHC.Types.Bool -- ^ 'getTreasuryInboundTransfersResponseBody200HasMore'
  -> Data.Text.Internal.Text -- ^ 'getTreasuryInboundTransfersResponseBody200Url'
  -> GetTreasuryInboundTransfersResponseBody200
mkGetTreasuryInboundTransfersResponseBody200 getTreasuryInboundTransfersResponseBody200Data getTreasuryInboundTransfersResponseBody200HasMore getTreasuryInboundTransfersResponseBody200Url = GetTreasuryInboundTransfersResponseBody200{getTreasuryInboundTransfersResponseBody200Data = getTreasuryInboundTransfersResponseBody200Data,
                                                                                                                                                                                                                                         getTreasuryInboundTransfersResponseBody200HasMore = getTreasuryInboundTransfersResponseBody200HasMore,
                                                                                                                                                                                                                                         getTreasuryInboundTransfersResponseBody200Url = getTreasuryInboundTransfersResponseBody200Url}
