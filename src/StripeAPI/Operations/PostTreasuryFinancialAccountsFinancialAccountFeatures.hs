{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postTreasuryFinancialAccountsFinancialAccountFeatures
module StripeAPI.Operations.PostTreasuryFinancialAccountsFinancialAccountFeatures where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/treasury/financial_accounts/{financial_account}/features
--
-- \<p>Updates the Features associated with a FinancialAccount.\<\/p>
postTreasuryFinancialAccountsFinancialAccountFeatures ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | financial_account | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryFinancialAccountsFinancialAccountFeaturesResponse)
postTreasuryFinancialAccountsFinancialAccountFeatures
  financialAccount
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostTreasuryFinancialAccountsFinancialAccountFeaturesResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostTreasuryFinancialAccountsFinancialAccountFeaturesResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Treasury'financialAccountFeatures
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostTreasuryFinancialAccountsFinancialAccountFeaturesResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/treasury/financial_accounts/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel financialAccount)) GHC.Base.<> "/features")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody
  { -- | card_issuing: Encodes the FinancialAccount\'s ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'),
    -- | deposit_insurance: Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'),
    -- | expand: Specifies which fields in the response should be expanded.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | financial_addresses: Contains Features that add FinancialAddresses to the FinancialAccount.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'),
    -- | inbound_transfers: Contains settings related to adding funds to a FinancialAccount from another Account with the same owner.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'),
    -- | intra_stripe_flows: Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'),
    -- | outbound_payments: Includes Features related to initiating money movement out of the FinancialAccount to someone else\'s bucket of money.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'),
    -- | outbound_transfers: Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deposit_insurance" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_addresses" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("intra_stripe_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_payments" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deposit_insurance" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_addresses" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("intra_stripe_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_payments" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody" (\obj -> (((((((GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "deposit_insurance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_addresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_transfers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "intra_stripe_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_transfers"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody :: PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody =
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBody
    { postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyExpand = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card_issuing@ in the specification.
--
-- Encodes the FinancialAccount\'s ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyCardIssuing'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.deposit_insurance@ in the specification.
--
-- Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyDepositInsurance'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.financial_addresses@ in the specification.
--
-- Contains Features that add FinancialAddresses to the FinancialAccount.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'
  { -- | aba
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("aba" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("aba" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "aba"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' :: PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.financial_addresses.properties.aba@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyFinancialAddresses'Aba'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.inbound_transfers@ in the specification.
--
-- Contains settings related to adding funds to a FinancialAccount from another Account with the same owner.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'
  { -- | ach
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' :: PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.inbound_transfers.properties.ach@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyInboundTransfers'Ach'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.intra_stripe_flows@ in the specification.
--
-- Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyIntraStripeFlows'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.outbound_payments@ in the specification.
--
-- Includes Features related to initiating money movement out of the FinancialAccount to someone else\'s bucket of money.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'
  { -- | ach
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'),
    -- | us_domestic_wire
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments' :: PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments' =
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'
    { postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.outbound_payments.properties.ach@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'Ach'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.outbound_payments.properties.us_domestic_wire@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundPayments'UsDomesticWire'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.outbound_transfers@ in the specification.
--
-- Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'
  { -- | ach
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'),
    -- | us_domestic_wire
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers' :: PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers' =
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'
    { postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.outbound_transfers.properties.ach@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'Ach'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}\/features.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.outbound_transfers.properties.us_domestic_wire@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'
mkPostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested = PostTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire' {postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested = postTreasuryFinancialAccountsFinancialAccountFeaturesRequestBodyOutboundTransfers'UsDomesticWire'Requested}

-- | Represents a response of the operation 'postTreasuryFinancialAccountsFinancialAccountFeatures'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryFinancialAccountsFinancialAccountFeaturesResponseError' is used.
data PostTreasuryFinancialAccountsFinancialAccountFeaturesResponse
  = -- | Means either no matching case available or a parse error
    PostTreasuryFinancialAccountsFinancialAccountFeaturesResponseError GHC.Base.String
  | -- | Successful response.
    PostTreasuryFinancialAccountsFinancialAccountFeaturesResponse200 Treasury'financialAccountFeatures
  | -- | Error response.
    PostTreasuryFinancialAccountsFinancialAccountFeaturesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
