-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation getTreasuryTransactions
module StripeAPI.Operations.GetTreasuryTransactions where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/treasury/transactions
-- 
-- \<p>Retrieves a list of Transaction objects.\<\/p>
getTreasuryTransactions :: forall m . StripeAPI.Common.MonadHTTP m => GetTreasuryTransactionsParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetTreasuryTransactionsResponse) -- ^ Monadic computation which returns the result of the operation
getTreasuryTransactions parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetTreasuryTransactionsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetTreasuryTransactionsResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                              GetTreasuryTransactionsResponseBody200)
                                                                                                                                                                                       | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetTreasuryTransactionsResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                Error)
                                                                                                                                                                                       | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/v1/treasury/transactions") [StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "financial_account") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getTreasuryTransactionsParametersQueryFinancialAccount parameters)) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "order_by") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryOrderBy parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.True,
                                                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.QueryParameter (Data.Text.pack "status_transitions") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryTransactionsParametersQueryStatusTransitions parameters) (Data.Text.pack "deepObject") GHC.Types.True])
-- | Defines the object schema located at @paths.\/v1\/treasury\/transactions.GET.parameters@ in the specification.
-- 
-- 
data GetTreasuryTransactionsParameters = GetTreasuryTransactionsParameters {
  -- | queryCreated: Represents the parameter named \'created\'
  getTreasuryTransactionsParametersQueryCreated :: (GHC.Maybe.Maybe GetTreasuryTransactionsParametersQueryCreated'Variants)
  -- | queryEnding_before: Represents the parameter named \'ending_before\'
  -- 
  -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getTreasuryTransactionsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryExpand: Represents the parameter named \'expand\'
  -- 
  -- Specifies which fields in the response should be expanded.
  , getTreasuryTransactionsParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | queryFinancial_account: Represents the parameter named \'financial_account\'
  -- 
  -- Returns objects associated with this FinancialAccount.
  , getTreasuryTransactionsParametersQueryFinancialAccount :: Data.Text.Internal.Text
  -- | queryLimit: Represents the parameter named \'limit\'
  -- 
  -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  , getTreasuryTransactionsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | queryOrder_by: Represents the parameter named \'order_by\'
  -- 
  -- The results are in reverse chronological order by \`created\` or \`posted_at\`. The default is \`created\`.
  , getTreasuryTransactionsParametersQueryOrderBy :: (GHC.Maybe.Maybe GetTreasuryTransactionsParametersQueryOrderBy')
  -- | queryStarting_after: Represents the parameter named \'starting_after\'
  -- 
  -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getTreasuryTransactionsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryStatus: Represents the parameter named \'status\'
  -- 
  -- Only return Transactions that have the given status: \`open\`, \`posted\`, or \`void\`.
  , getTreasuryTransactionsParametersQueryStatus :: (GHC.Maybe.Maybe GetTreasuryTransactionsParametersQueryStatus')
  -- | queryStatus_transitions: Represents the parameter named \'status_transitions\'
  -- 
  -- A filter for the \`status_transitions.posted_at\` timestamp. When using this filter, \`status=posted\` and \`order_by=posted_at\` must also be specified.
  , getTreasuryTransactionsParametersQueryStatusTransitions :: (GHC.Maybe.Maybe GetTreasuryTransactionsParametersQueryStatusTransitions')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryExpand obj) : ["queryFinancial_account" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsParametersQueryFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder_by" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryOrderBy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus_transitions" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCreated" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryExpand obj) : ["queryFinancial_account" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsParametersQueryFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOrder_by" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryOrderBy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus_transitions" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryTransactionsParameters" (\obj -> ((((((((GHC.Base.pure GetTreasuryTransactionsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryFinancial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOrder_by")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus_transitions"))
-- | Create a new 'GetTreasuryTransactionsParameters' with all required fields.
mkGetTreasuryTransactionsParameters :: Data.Text.Internal.Text -- ^ 'getTreasuryTransactionsParametersQueryFinancialAccount'
  -> GetTreasuryTransactionsParameters
mkGetTreasuryTransactionsParameters getTreasuryTransactionsParametersQueryFinancialAccount = GetTreasuryTransactionsParameters{getTreasuryTransactionsParametersQueryCreated = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryEndingBefore = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryExpand = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryFinancialAccount = getTreasuryTransactionsParametersQueryFinancialAccount,
                                                                                                                               getTreasuryTransactionsParametersQueryLimit = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryOrderBy = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryStartingAfter = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryStatus = GHC.Maybe.Nothing,
                                                                                                                               getTreasuryTransactionsParametersQueryStatusTransitions = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryCreated.anyOf@ in the specification.
-- 
-- 
data GetTreasuryTransactionsParametersQueryCreated'OneOf1 = GetTreasuryTransactionsParametersQueryCreated'OneOf1 {
  -- | gt
  getTreasuryTransactionsParametersQueryCreated'OneOf1Gt :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | gte
  , getTreasuryTransactionsParametersQueryCreated'OneOf1Gte :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lt
  , getTreasuryTransactionsParametersQueryCreated'OneOf1Lt :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lte
  , getTreasuryTransactionsParametersQueryCreated'OneOf1Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryCreated'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Lte obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryCreated'OneOf1Lte obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryCreated'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryTransactionsParametersQueryCreated'OneOf1" (\obj -> (((GHC.Base.pure GetTreasuryTransactionsParametersQueryCreated'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lte"))
-- | Create a new 'GetTreasuryTransactionsParametersQueryCreated'OneOf1' with all required fields.
mkGetTreasuryTransactionsParametersQueryCreated'OneOf1 :: GetTreasuryTransactionsParametersQueryCreated'OneOf1
mkGetTreasuryTransactionsParametersQueryCreated'OneOf1 = GetTreasuryTransactionsParametersQueryCreated'OneOf1{getTreasuryTransactionsParametersQueryCreated'OneOf1Gt = GHC.Maybe.Nothing,
                                                                                                              getTreasuryTransactionsParametersQueryCreated'OneOf1Gte = GHC.Maybe.Nothing,
                                                                                                              getTreasuryTransactionsParametersQueryCreated'OneOf1Lt = GHC.Maybe.Nothing,
                                                                                                              getTreasuryTransactionsParametersQueryCreated'OneOf1Lte = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryCreated.anyOf@ in the specification.
-- 
-- Represents the parameter named \'created\'
data GetTreasuryTransactionsParametersQueryCreated'Variants =
   GetTreasuryTransactionsParametersQueryCreated'GetTreasuryTransactionsParametersQueryCreated'OneOf1 GetTreasuryTransactionsParametersQueryCreated'OneOf1
  | GetTreasuryTransactionsParametersQueryCreated'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryCreated'Variants
    where toJSON (GetTreasuryTransactionsParametersQueryCreated'GetTreasuryTransactionsParametersQueryCreated'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (GetTreasuryTransactionsParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryCreated'Variants
    where parseJSON val = case (GetTreasuryTransactionsParametersQueryCreated'GetTreasuryTransactionsParametersQueryCreated'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetTreasuryTransactionsParametersQueryCreated'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryOrder_by@ in the specification.
-- 
-- Represents the parameter named \'order_by\'
-- 
-- The results are in reverse chronological order by \`created\` or \`posted_at\`. The default is \`created\`.
data GetTreasuryTransactionsParametersQueryOrderBy' =
   GetTreasuryTransactionsParametersQueryOrderBy'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | GetTreasuryTransactionsParametersQueryOrderBy'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | GetTreasuryTransactionsParametersQueryOrderBy'EnumCreated -- ^ Represents the JSON value @"created"@
  | GetTreasuryTransactionsParametersQueryOrderBy'EnumPostedAt -- ^ Represents the JSON value @"posted_at"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryOrderBy'
    where toJSON (GetTreasuryTransactionsParametersQueryOrderBy'Other val) = val
          toJSON (GetTreasuryTransactionsParametersQueryOrderBy'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (GetTreasuryTransactionsParametersQueryOrderBy'EnumCreated) = "created"
          toJSON (GetTreasuryTransactionsParametersQueryOrderBy'EnumPostedAt) = "posted_at"
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryOrderBy'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "created" -> GetTreasuryTransactionsParametersQueryOrderBy'EnumCreated
                                            | val GHC.Classes.== "posted_at" -> GetTreasuryTransactionsParametersQueryOrderBy'EnumPostedAt
                                            | GHC.Base.otherwise -> GetTreasuryTransactionsParametersQueryOrderBy'Other val)
-- | Defines the enum schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryStatus@ in the specification.
-- 
-- Represents the parameter named \'status\'
-- 
-- Only return Transactions that have the given status: \`open\`, \`posted\`, or \`void\`.
data GetTreasuryTransactionsParametersQueryStatus' =
   GetTreasuryTransactionsParametersQueryStatus'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | GetTreasuryTransactionsParametersQueryStatus'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | GetTreasuryTransactionsParametersQueryStatus'EnumOpen -- ^ Represents the JSON value @"open"@
  | GetTreasuryTransactionsParametersQueryStatus'EnumPosted -- ^ Represents the JSON value @"posted"@
  | GetTreasuryTransactionsParametersQueryStatus'EnumVoid -- ^ Represents the JSON value @"void"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryStatus'
    where toJSON (GetTreasuryTransactionsParametersQueryStatus'Other val) = val
          toJSON (GetTreasuryTransactionsParametersQueryStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (GetTreasuryTransactionsParametersQueryStatus'EnumOpen) = "open"
          toJSON (GetTreasuryTransactionsParametersQueryStatus'EnumPosted) = "posted"
          toJSON (GetTreasuryTransactionsParametersQueryStatus'EnumVoid) = "void"
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryStatus'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "open" -> GetTreasuryTransactionsParametersQueryStatus'EnumOpen
                                            | val GHC.Classes.== "posted" -> GetTreasuryTransactionsParametersQueryStatus'EnumPosted
                                            | val GHC.Classes.== "void" -> GetTreasuryTransactionsParametersQueryStatus'EnumVoid
                                            | GHC.Base.otherwise -> GetTreasuryTransactionsParametersQueryStatus'Other val)
-- | Defines the object schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryStatus_transitions@ in the specification.
-- 
-- Represents the parameter named \'status_transitions\'
-- 
-- A filter for the \`status_transitions.posted_at\` timestamp. When using this filter, \`status=posted\` and \`order_by=posted_at\` must also be specified.
data GetTreasuryTransactionsParametersQueryStatusTransitions' = GetTreasuryTransactionsParametersQueryStatusTransitions' {
  -- | posted_at
  getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt :: (GHC.Maybe.Maybe GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Variants)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryStatusTransitions'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("posted_at" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("posted_at" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryStatusTransitions'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryTransactionsParametersQueryStatusTransitions'" (\obj -> GHC.Base.pure GetTreasuryTransactionsParametersQueryStatusTransitions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "posted_at"))
-- | Create a new 'GetTreasuryTransactionsParametersQueryStatusTransitions'' with all required fields.
mkGetTreasuryTransactionsParametersQueryStatusTransitions' :: GetTreasuryTransactionsParametersQueryStatusTransitions'
mkGetTreasuryTransactionsParametersQueryStatusTransitions' = GetTreasuryTransactionsParametersQueryStatusTransitions'{getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryStatus_transitions.properties.posted_at.anyOf@ in the specification.
-- 
-- 
data GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 = GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 {
  -- | gt
  getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gt :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | gte
  , getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gte :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lt
  , getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lt :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | lte
  , getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lte obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lt" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lte" Data.Aeson.Types.ToJSON..=)) (getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lte obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1" (\obj -> (((GHC.Base.pure GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lte"))
-- | Create a new 'GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1' with all required fields.
mkGetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 :: GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1
mkGetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 = GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1{getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gt = GHC.Maybe.Nothing,
                                                                                                                                                    getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Gte = GHC.Maybe.Nothing,
                                                                                                                                                    getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lt = GHC.Maybe.Nothing,
                                                                                                                                                    getTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1Lte = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/treasury\/transactions.GET.parameters.properties.queryStatus_transitions.properties.posted_at.anyOf@ in the specification.
-- 
-- 
data GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Variants =
   GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1
  | GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Variants
    where toJSON (GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Int a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Variants
    where parseJSON val = case (GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetTreasuryTransactionsParametersQueryStatusTransitions'PostedAt'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Represents a response of the operation 'getTreasuryTransactions'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetTreasuryTransactionsResponseError' is used.
data GetTreasuryTransactionsResponse =
   GetTreasuryTransactionsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | GetTreasuryTransactionsResponse200 GetTreasuryTransactionsResponseBody200 -- ^ Successful response.
  | GetTreasuryTransactionsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/treasury\/transactions.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data GetTreasuryTransactionsResponseBody200 = GetTreasuryTransactionsResponseBody200 {
  -- | data: Details about each object.
  getTreasuryTransactionsResponseBody200Data :: ([Treasury'transaction])
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getTreasuryTransactionsResponseBody200HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , getTreasuryTransactionsResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryTransactionsResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getTreasuryTransactionsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryTransactionsResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryTransactionsResponseBody200" (\obj -> ((GHC.Base.pure GetTreasuryTransactionsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Create a new 'GetTreasuryTransactionsResponseBody200' with all required fields.
mkGetTreasuryTransactionsResponseBody200 :: [Treasury'transaction] -- ^ 'getTreasuryTransactionsResponseBody200Data'
  -> GHC.Types.Bool -- ^ 'getTreasuryTransactionsResponseBody200HasMore'
  -> Data.Text.Internal.Text -- ^ 'getTreasuryTransactionsResponseBody200Url'
  -> GetTreasuryTransactionsResponseBody200
mkGetTreasuryTransactionsResponseBody200 getTreasuryTransactionsResponseBody200Data getTreasuryTransactionsResponseBody200HasMore getTreasuryTransactionsResponseBody200Url = GetTreasuryTransactionsResponseBody200{getTreasuryTransactionsResponseBody200Data = getTreasuryTransactionsResponseBody200Data,
                                                                                                                                                                                                                     getTreasuryTransactionsResponseBody200HasMore = getTreasuryTransactionsResponseBody200HasMore,
                                                                                                                                                                                                                     getTreasuryTransactionsResponseBody200Url = getTreasuryTransactionsResponseBody200Url}
