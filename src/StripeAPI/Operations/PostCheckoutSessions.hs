{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation postCheckoutSessions
module StripeAPI.Operations.PostCheckoutSessions where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/checkout/sessions
--
-- \<p>Creates a Session object.\<\/p>
postCheckoutSessions ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostCheckoutSessionsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostCheckoutSessionsResponse)
postCheckoutSessions body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostCheckoutSessionsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostCheckoutSessionsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Checkout'session
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostCheckoutSessionsResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/checkout/sessions") [] (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostCheckoutSessionsRequestBody
  = PostCheckoutSessionsRequestBody
      { -- | billing_address_collection: Specify whether Checkout should collect the customer\'s billing address.
        postCheckoutSessionsRequestBodyBillingAddressCollection :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyBillingAddressCollection'),
        -- | cancel_url: The URL the customer will be directed to if they decide to cancel payment and return to your website.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyCancelUrl :: Data.Text.Internal.Text,
        -- | client_reference_id: A unique string to reference the Checkout Session. This can be a
        -- customer ID, a cart ID, or similar, and can be used to reconcile the
        -- session with your internal systems.
        --
        -- Constraints:
        --
        -- * Maximum length of 200
        postCheckoutSessionsRequestBodyClientReferenceId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | customer: ID of an existing customer, if one exists. Only supported for Checkout
        -- Sessions in \`payment\` or \`subscription\` mode, but not Checkout Sessions
        -- in \`setup\` mode. The email stored on the customer will be used to prefill
        -- the email field on the Checkout page. If the customer changes their email
        -- on the Checkout page, the Customer object will be updated with the new
        -- email.
        -- If blank for Checkout Sessions in \`payment\` or \`subscription\` mode,
        -- Checkout will create a new customer object based on information
        -- provided during the session.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | customer_email: If provided, this value will be used when the Customer object is created.
        -- If not provided, customers will be asked to enter their email address.
        -- Use this parameter to prefill customer data if you already have an email
        -- on file. To access information about the customer once a session is
        -- complete, use the \`customer\` field.
        postCheckoutSessionsRequestBodyCustomerEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | expand: Specifies which fields in the response should be expanded.
        postCheckoutSessionsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | line_items: A list of items the customer is purchasing. Use this parameter for
        -- one-time payments or adding invoice line items to a subscription (used
        -- in conjunction with \`subscription_data\`).
        postCheckoutSessionsRequestBodyLineItems :: (GHC.Maybe.Maybe ([PostCheckoutSessionsRequestBodyLineItems'])),
        -- | locale: The IETF language tag of the locale Checkout is displayed in. If blank or \`auto\`, the browser\'s locale is used.
        postCheckoutSessionsRequestBodyLocale :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyLocale'),
        -- | metadata: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
        postCheckoutSessionsRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
        -- | mode: The mode of the Checkout Session, one of \`payment\`, \`setup\`, or \`subscription\`.
        postCheckoutSessionsRequestBodyMode :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyMode'),
        -- | payment_intent_data: A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in \`payment\` mode.
        postCheckoutSessionsRequestBodyPaymentIntentData :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyPaymentIntentData'),
        -- | payment_method_types: A list of the types of payment methods (e.g. card) this Checkout
        -- Session is allowed to accept. The only supported values today are \`card\` and \`ideal\`.
        postCheckoutSessionsRequestBodyPaymentMethodTypes :: ([PostCheckoutSessionsRequestBodyPaymentMethodTypes']),
        -- | setup_intent_data: A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in \`setup\` mode.
        postCheckoutSessionsRequestBodySetupIntentData :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodySetupIntentData'),
        -- | submit_type: Describes the type of transaction being performed by Checkout in order to customize
        -- relevant text on the page, such as the submit button. \`submit_type\` can only be
        -- specified on Checkout Sessions in \`payment\` mode, but not Checkout Sessions
        -- in \`subscription\` or \`setup\` mode.
        postCheckoutSessionsRequestBodySubmitType :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodySubmitType'),
        -- | subscription_data: A subset of parameters to be passed to subscription creation for Checkout Sessions in \`subscription\` mode.
        postCheckoutSessionsRequestBodySubscriptionData :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodySubscriptionData'),
        -- | success_url: The URL to which Stripe should send customers when payment or setup
        -- is complete.
        -- If youâ€™d like access to the Checkout Session for the successful
        -- payment, read more about it in our guide on [fulfilling your payments
        -- with webhooks](\/docs\/payments\/checkout\/fulfillment\#webhooks).
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodySuccessUrl :: Data.Text.Internal.Text
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("billing_address_collection" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyBillingAddressCollection obj : "cancel_url" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyCancelUrl obj : "client_reference_id" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyClientReferenceId obj : "customer" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyCustomer obj : "customer_email" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyCustomerEmail obj : "expand" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyExpand obj : "line_items" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems obj : "locale" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLocale obj : "metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyMetadata obj : "mode" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyMode obj : "payment_intent_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData obj : "payment_method_types" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentMethodTypes obj : "setup_intent_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData obj : "submit_type" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubmitType obj : "subscription_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData obj : "success_url" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySuccessUrl obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("billing_address_collection" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyBillingAddressCollection obj) GHC.Base.<> (("cancel_url" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyCancelUrl obj) GHC.Base.<> (("client_reference_id" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyClientReferenceId obj) GHC.Base.<> (("customer" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyCustomer obj) GHC.Base.<> (("customer_email" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyCustomerEmail obj) GHC.Base.<> (("expand" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyExpand obj) GHC.Base.<> (("line_items" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems obj) GHC.Base.<> (("locale" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLocale obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyMetadata obj) GHC.Base.<> (("mode" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyMode obj) GHC.Base.<> (("payment_intent_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData obj) GHC.Base.<> (("payment_method_types" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentMethodTypes obj) GHC.Base.<> (("setup_intent_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData obj) GHC.Base.<> (("submit_type" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubmitType obj) GHC.Base.<> (("subscription_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData obj) GHC.Base.<> ("success_url" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySuccessUrl obj))))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBody" (\obj -> (((((((((((((((GHC.Base.pure PostCheckoutSessionsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "billing_address_collection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "cancel_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "client_reference_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "customer_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "locale")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payment_intent_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "payment_method_types")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "setup_intent_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "submit_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "subscription_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "success_url"))

-- | Create a new 'PostCheckoutSessionsRequestBody' with all required fields.
mkPostCheckoutSessionsRequestBody ::
  -- | 'postCheckoutSessionsRequestBodyCancelUrl'
  Data.Text.Internal.Text ->
  -- | 'postCheckoutSessionsRequestBodyPaymentMethodTypes'
  [PostCheckoutSessionsRequestBodyPaymentMethodTypes'] ->
  -- | 'postCheckoutSessionsRequestBodySuccessUrl'
  Data.Text.Internal.Text ->
  PostCheckoutSessionsRequestBody
mkPostCheckoutSessionsRequestBody postCheckoutSessionsRequestBodyCancelUrl postCheckoutSessionsRequestBodyPaymentMethodTypes postCheckoutSessionsRequestBodySuccessUrl =
  PostCheckoutSessionsRequestBody
    { postCheckoutSessionsRequestBodyBillingAddressCollection = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyCancelUrl = postCheckoutSessionsRequestBodyCancelUrl,
      postCheckoutSessionsRequestBodyClientReferenceId = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyCustomer = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyCustomerEmail = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyExpand = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLineItems = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLocale = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyMetadata = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyMode = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentMethodTypes = postCheckoutSessionsRequestBodyPaymentMethodTypes,
      postCheckoutSessionsRequestBodySetupIntentData = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubmitType = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySuccessUrl = postCheckoutSessionsRequestBodySuccessUrl
    }

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.billing_address_collection@ in the specification.
--
-- Specify whether Checkout should collect the customer\'s billing address.
data PostCheckoutSessionsRequestBodyBillingAddressCollection'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodyBillingAddressCollection'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodyBillingAddressCollection'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    PostCheckoutSessionsRequestBodyBillingAddressCollection'EnumAuto
  | -- | Represents the JSON value @"required"@
    PostCheckoutSessionsRequestBodyBillingAddressCollection'EnumRequired
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyBillingAddressCollection' where
  toJSON (PostCheckoutSessionsRequestBodyBillingAddressCollection'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodyBillingAddressCollection'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodyBillingAddressCollection'EnumAuto) = "auto"
  toJSON (PostCheckoutSessionsRequestBodyBillingAddressCollection'EnumRequired) = "required"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyBillingAddressCollection' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "auto" -> PostCheckoutSessionsRequestBodyBillingAddressCollection'EnumAuto
            | val GHC.Classes.== "required" -> PostCheckoutSessionsRequestBodyBillingAddressCollection'EnumRequired
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodyBillingAddressCollection'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.line_items.items@ in the specification.
data PostCheckoutSessionsRequestBodyLineItems'
  = PostCheckoutSessionsRequestBodyLineItems'
      { -- | amount
        postCheckoutSessionsRequestBodyLineItems'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | currency
        postCheckoutSessionsRequestBodyLineItems'Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | description
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyLineItems'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | images
        postCheckoutSessionsRequestBodyLineItems'Images :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | name
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyLineItems'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | quantity
        postCheckoutSessionsRequestBodyLineItems'Quantity :: GHC.Types.Int,
        -- | tax_rates
        postCheckoutSessionsRequestBodyLineItems'TaxRates :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyLineItems' where
  toJSON obj = Data.Aeson.Types.Internal.object ("amount" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Amount obj : "currency" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Currency obj : "description" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Description obj : "images" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Images obj : "name" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Name obj : "quantity" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Quantity obj : "tax_rates" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'TaxRates obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amount" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Amount obj) GHC.Base.<> (("currency" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Currency obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Description obj) GHC.Base.<> (("images" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Images obj) GHC.Base.<> (("name" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Name obj) GHC.Base.<> (("quantity" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'Quantity obj) GHC.Base.<> ("tax_rates" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyLineItems'TaxRates obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyLineItems' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodyLineItems'" (\obj -> ((((((GHC.Base.pure PostCheckoutSessionsRequestBodyLineItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "images")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_rates"))

-- | Create a new 'PostCheckoutSessionsRequestBodyLineItems'' with all required fields.
mkPostCheckoutSessionsRequestBodyLineItems' ::
  -- | 'postCheckoutSessionsRequestBodyLineItems'Quantity'
  GHC.Types.Int ->
  PostCheckoutSessionsRequestBodyLineItems'
mkPostCheckoutSessionsRequestBodyLineItems' postCheckoutSessionsRequestBodyLineItems'Quantity =
  PostCheckoutSessionsRequestBodyLineItems'
    { postCheckoutSessionsRequestBodyLineItems'Amount = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLineItems'Currency = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLineItems'Description = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLineItems'Images = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLineItems'Name = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyLineItems'Quantity = postCheckoutSessionsRequestBodyLineItems'Quantity,
      postCheckoutSessionsRequestBodyLineItems'TaxRates = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.locale@ in the specification.
--
-- The IETF language tag of the locale Checkout is displayed in. If blank or \`auto\`, the browser\'s locale is used.
data PostCheckoutSessionsRequestBodyLocale'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodyLocale'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodyLocale'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    PostCheckoutSessionsRequestBodyLocale'EnumAuto
  | -- | Represents the JSON value @"da"@
    PostCheckoutSessionsRequestBodyLocale'EnumDa
  | -- | Represents the JSON value @"de"@
    PostCheckoutSessionsRequestBodyLocale'EnumDe
  | -- | Represents the JSON value @"en"@
    PostCheckoutSessionsRequestBodyLocale'EnumEn
  | -- | Represents the JSON value @"es"@
    PostCheckoutSessionsRequestBodyLocale'EnumEs
  | -- | Represents the JSON value @"fi"@
    PostCheckoutSessionsRequestBodyLocale'EnumFi
  | -- | Represents the JSON value @"fr"@
    PostCheckoutSessionsRequestBodyLocale'EnumFr
  | -- | Represents the JSON value @"it"@
    PostCheckoutSessionsRequestBodyLocale'EnumIt
  | -- | Represents the JSON value @"ja"@
    PostCheckoutSessionsRequestBodyLocale'EnumJa
  | -- | Represents the JSON value @"ms"@
    PostCheckoutSessionsRequestBodyLocale'EnumMs
  | -- | Represents the JSON value @"nb"@
    PostCheckoutSessionsRequestBodyLocale'EnumNb
  | -- | Represents the JSON value @"nl"@
    PostCheckoutSessionsRequestBodyLocale'EnumNl
  | -- | Represents the JSON value @"pl"@
    PostCheckoutSessionsRequestBodyLocale'EnumPl
  | -- | Represents the JSON value @"pt"@
    PostCheckoutSessionsRequestBodyLocale'EnumPt
  | -- | Represents the JSON value @"sv"@
    PostCheckoutSessionsRequestBodyLocale'EnumSv
  | -- | Represents the JSON value @"zh"@
    PostCheckoutSessionsRequestBodyLocale'EnumZh
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyLocale' where
  toJSON (PostCheckoutSessionsRequestBodyLocale'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodyLocale'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumAuto) = "auto"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumDa) = "da"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumDe) = "de"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumEn) = "en"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumEs) = "es"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumFi) = "fi"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumFr) = "fr"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumIt) = "it"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumJa) = "ja"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumMs) = "ms"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumNb) = "nb"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumNl) = "nl"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumPl) = "pl"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumPt) = "pt"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumSv) = "sv"
  toJSON (PostCheckoutSessionsRequestBodyLocale'EnumZh) = "zh"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyLocale' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "auto" -> PostCheckoutSessionsRequestBodyLocale'EnumAuto
            | val GHC.Classes.== "da" -> PostCheckoutSessionsRequestBodyLocale'EnumDa
            | val GHC.Classes.== "de" -> PostCheckoutSessionsRequestBodyLocale'EnumDe
            | val GHC.Classes.== "en" -> PostCheckoutSessionsRequestBodyLocale'EnumEn
            | val GHC.Classes.== "es" -> PostCheckoutSessionsRequestBodyLocale'EnumEs
            | val GHC.Classes.== "fi" -> PostCheckoutSessionsRequestBodyLocale'EnumFi
            | val GHC.Classes.== "fr" -> PostCheckoutSessionsRequestBodyLocale'EnumFr
            | val GHC.Classes.== "it" -> PostCheckoutSessionsRequestBodyLocale'EnumIt
            | val GHC.Classes.== "ja" -> PostCheckoutSessionsRequestBodyLocale'EnumJa
            | val GHC.Classes.== "ms" -> PostCheckoutSessionsRequestBodyLocale'EnumMs
            | val GHC.Classes.== "nb" -> PostCheckoutSessionsRequestBodyLocale'EnumNb
            | val GHC.Classes.== "nl" -> PostCheckoutSessionsRequestBodyLocale'EnumNl
            | val GHC.Classes.== "pl" -> PostCheckoutSessionsRequestBodyLocale'EnumPl
            | val GHC.Classes.== "pt" -> PostCheckoutSessionsRequestBodyLocale'EnumPt
            | val GHC.Classes.== "sv" -> PostCheckoutSessionsRequestBodyLocale'EnumSv
            | val GHC.Classes.== "zh" -> PostCheckoutSessionsRequestBodyLocale'EnumZh
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodyLocale'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.mode@ in the specification.
--
-- The mode of the Checkout Session, one of \`payment\`, \`setup\`, or \`subscription\`.
data PostCheckoutSessionsRequestBodyMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodyMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodyMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"payment"@
    PostCheckoutSessionsRequestBodyMode'EnumPayment
  | -- | Represents the JSON value @"setup"@
    PostCheckoutSessionsRequestBodyMode'EnumSetup
  | -- | Represents the JSON value @"subscription"@
    PostCheckoutSessionsRequestBodyMode'EnumSubscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyMode' where
  toJSON (PostCheckoutSessionsRequestBodyMode'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodyMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodyMode'EnumPayment) = "payment"
  toJSON (PostCheckoutSessionsRequestBodyMode'EnumSetup) = "setup"
  toJSON (PostCheckoutSessionsRequestBodyMode'EnumSubscription) = "subscription"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyMode' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "payment" -> PostCheckoutSessionsRequestBodyMode'EnumPayment
            | val GHC.Classes.== "setup" -> PostCheckoutSessionsRequestBodyMode'EnumSetup
            | val GHC.Classes.== "subscription" -> PostCheckoutSessionsRequestBodyMode'EnumSubscription
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodyMode'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_intent_data@ in the specification.
--
-- A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in \`payment\` mode.
data PostCheckoutSessionsRequestBodyPaymentIntentData'
  = PostCheckoutSessionsRequestBodyPaymentIntentData'
      { -- | application_fee_amount
        postCheckoutSessionsRequestBodyPaymentIntentData'ApplicationFeeAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | capture_method
        postCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'),
        -- | description
        --
        -- Constraints:
        --
        -- * Maximum length of 1000
        postCheckoutSessionsRequestBodyPaymentIntentData'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | metadata
        postCheckoutSessionsRequestBodyPaymentIntentData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
        -- | on_behalf_of
        postCheckoutSessionsRequestBodyPaymentIntentData'OnBehalfOf :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | receipt_email
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'ReceiptEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | setup_future_usage
        postCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'),
        -- | shipping
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'),
        -- | statement_descriptor
        --
        -- Constraints:
        --
        -- * Maximum length of 22
        postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | statement_descriptor_suffix
        --
        -- Constraints:
        --
        -- * Maximum length of 22
        postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptorSuffix :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | transfer_data
        postCheckoutSessionsRequestBodyPaymentIntentData'TransferData :: (GHC.Maybe.Maybe PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData')
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentIntentData' where
  toJSON obj = Data.Aeson.Types.Internal.object ("application_fee_amount" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'ApplicationFeeAmount obj : "capture_method" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod obj : "description" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Description obj : "metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Metadata obj : "on_behalf_of" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'OnBehalfOf obj : "receipt_email" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'ReceiptEmail obj : "setup_future_usage" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage obj : "shipping" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping obj : "statement_descriptor" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptor obj : "statement_descriptor_suffix" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptorSuffix obj : "transfer_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'TransferData obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("application_fee_amount" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'ApplicationFeeAmount obj) GHC.Base.<> (("capture_method" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Description obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Metadata obj) GHC.Base.<> (("on_behalf_of" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'OnBehalfOf obj) GHC.Base.<> (("receipt_email" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'ReceiptEmail obj) GHC.Base.<> (("setup_future_usage" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage obj) GHC.Base.<> (("shipping" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping obj) GHC.Base.<> (("statement_descriptor" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptor obj) GHC.Base.<> (("statement_descriptor_suffix" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptorSuffix obj) GHC.Base.<> ("transfer_data" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'TransferData obj)))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentIntentData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodyPaymentIntentData'" (\obj -> ((((((((((GHC.Base.pure PostCheckoutSessionsRequestBodyPaymentIntentData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "application_fee_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "capture_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "on_behalf_of")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "receipt_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "setup_future_usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor_suffix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transfer_data"))

-- | Create a new 'PostCheckoutSessionsRequestBodyPaymentIntentData'' with all required fields.
mkPostCheckoutSessionsRequestBodyPaymentIntentData' :: PostCheckoutSessionsRequestBodyPaymentIntentData'
mkPostCheckoutSessionsRequestBodyPaymentIntentData' =
  PostCheckoutSessionsRequestBodyPaymentIntentData'
    { postCheckoutSessionsRequestBodyPaymentIntentData'ApplicationFeeAmount = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Description = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Metadata = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'OnBehalfOf = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'ReceiptEmail = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptor = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'StatementDescriptorSuffix = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'TransferData = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_intent_data.properties.capture_method@ in the specification.
data PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'EnumAutomatic
  | -- | Represents the JSON value @"manual"@
    PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'EnumManual
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod' where
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'EnumAutomatic) = "automatic"
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'EnumManual) = "manual"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "automatic" -> PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'EnumAutomatic
            | val GHC.Classes.== "manual" -> PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'EnumManual
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodyPaymentIntentData'CaptureMethod'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_intent_data.properties.setup_future_usage@ in the specification.
data PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"off_session"@
    PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'EnumOffSession
  | -- | Represents the JSON value @"on_session"@
    PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'EnumOnSession
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage' where
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'EnumOffSession) = "off_session"
  toJSON (PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'EnumOnSession) = "on_session"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "off_session" -> PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'EnumOffSession
            | val GHC.Classes.== "on_session" -> PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'EnumOnSession
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodyPaymentIntentData'SetupFutureUsage'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_intent_data.properties.shipping@ in the specification.
data PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'
  = PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'
      { -- | address
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address :: PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address',
        -- | carrier
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Carrier :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | name
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name :: Data.Text.Internal.Text,
        -- | phone
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | tracking_number
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'TrackingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping' where
  toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address obj : "carrier" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Carrier obj : "name" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name obj : "phone" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Phone obj : "tracking_number" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'TrackingNumber obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address obj) GHC.Base.<> (("carrier" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Carrier obj) GHC.Base.<> (("name" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name obj) GHC.Base.<> (("phone" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Phone obj) GHC.Base.<> ("tracking_number" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'TrackingNumber obj)))))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'" (\obj -> ((((GHC.Base.pure PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tracking_number"))

-- | Create a new 'PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'' with all required fields.
mkPostCheckoutSessionsRequestBodyPaymentIntentData'Shipping' ::
  -- | 'postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'
  PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address' ->
  -- | 'postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name'
  Data.Text.Internal.Text ->
  PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'
mkPostCheckoutSessionsRequestBodyPaymentIntentData'Shipping' postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name =
  PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'
    { postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address = postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Carrier = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name = postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Name,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Phone = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'TrackingNumber = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_intent_data.properties.shipping.properties.address@ in the specification.
data PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'
  = PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'
      { -- | city
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | country
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | line1
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1 :: Data.Text.Internal.Text,
        -- | line2
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | postal_code
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | state
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'City obj : "country" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Country obj : "line1" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'State obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'PostalCode obj) GHC.Base.<> ("state" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'State obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'" (\obj -> (((((GHC.Base.pure PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state"))

-- | Create a new 'PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'' with all required fields.
mkPostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address' ::
  -- | 'postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1'
  Data.Text.Internal.Text ->
  PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'
mkPostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address' postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1 =
  PostCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'
    { postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'City = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Country = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1 = postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line1,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'Line2 = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'PostalCode = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'Shipping'Address'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_intent_data.properties.transfer_data@ in the specification.
data PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData'
  = PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData'
      { -- | amount
        postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | destination
        postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination :: Data.Text.Internal.Text
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData' where
  toJSON obj = Data.Aeson.Types.Internal.object ("amount" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Amount obj : "destination" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amount" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Amount obj) GHC.Base.<> ("destination" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData'" (\obj -> (GHC.Base.pure PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination"))

-- | Create a new 'PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData'' with all required fields.
mkPostCheckoutSessionsRequestBodyPaymentIntentData'TransferData' ::
  -- | 'postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination'
  Data.Text.Internal.Text ->
  PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData'
mkPostCheckoutSessionsRequestBodyPaymentIntentData'TransferData' postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination =
  PostCheckoutSessionsRequestBodyPaymentIntentData'TransferData'
    { postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Amount = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination = postCheckoutSessionsRequestBodyPaymentIntentData'TransferData'Destination
    }

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_method_types.items@ in the specification.
data PostCheckoutSessionsRequestBodyPaymentMethodTypes'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodyPaymentMethodTypes'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodyPaymentMethodTypes'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"card"@
    PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumCard
  | -- | Represents the JSON value @"fpx"@
    PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumFpx
  | -- | Represents the JSON value @"ideal"@
    PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumIdeal
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodyPaymentMethodTypes' where
  toJSON (PostCheckoutSessionsRequestBodyPaymentMethodTypes'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodyPaymentMethodTypes'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumCard) = "card"
  toJSON (PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumFpx) = "fpx"
  toJSON (PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumIdeal) = "ideal"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodyPaymentMethodTypes' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "card" -> PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumCard
            | val GHC.Classes.== "fpx" -> PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumFpx
            | val GHC.Classes.== "ideal" -> PostCheckoutSessionsRequestBodyPaymentMethodTypes'EnumIdeal
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodyPaymentMethodTypes'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.setup_intent_data@ in the specification.
--
-- A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in \`setup\` mode.
data PostCheckoutSessionsRequestBodySetupIntentData'
  = PostCheckoutSessionsRequestBodySetupIntentData'
      { -- | description
        --
        -- Constraints:
        --
        -- * Maximum length of 1000
        postCheckoutSessionsRequestBodySetupIntentData'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | metadata
        postCheckoutSessionsRequestBodySetupIntentData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
        -- | on_behalf_of
        postCheckoutSessionsRequestBodySetupIntentData'OnBehalfOf :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodySetupIntentData' where
  toJSON obj = Data.Aeson.Types.Internal.object ("description" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData'Description obj : "metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData'Metadata obj : "on_behalf_of" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData'OnBehalfOf obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("description" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData'Description obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData'Metadata obj) GHC.Base.<> ("on_behalf_of" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySetupIntentData'OnBehalfOf obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodySetupIntentData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodySetupIntentData'" (\obj -> ((GHC.Base.pure PostCheckoutSessionsRequestBodySetupIntentData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "on_behalf_of"))

-- | Create a new 'PostCheckoutSessionsRequestBodySetupIntentData'' with all required fields.
mkPostCheckoutSessionsRequestBodySetupIntentData' :: PostCheckoutSessionsRequestBodySetupIntentData'
mkPostCheckoutSessionsRequestBodySetupIntentData' =
  PostCheckoutSessionsRequestBodySetupIntentData'
    { postCheckoutSessionsRequestBodySetupIntentData'Description = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySetupIntentData'Metadata = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySetupIntentData'OnBehalfOf = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.submit_type@ in the specification.
--
-- Describes the type of transaction being performed by Checkout in order to customize
-- relevant text on the page, such as the submit button. \`submit_type\` can only be
-- specified on Checkout Sessions in \`payment\` mode, but not Checkout Sessions
-- in \`subscription\` or \`setup\` mode.
data PostCheckoutSessionsRequestBodySubmitType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCheckoutSessionsRequestBodySubmitType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCheckoutSessionsRequestBodySubmitType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    PostCheckoutSessionsRequestBodySubmitType'EnumAuto
  | -- | Represents the JSON value @"book"@
    PostCheckoutSessionsRequestBodySubmitType'EnumBook
  | -- | Represents the JSON value @"donate"@
    PostCheckoutSessionsRequestBodySubmitType'EnumDonate
  | -- | Represents the JSON value @"pay"@
    PostCheckoutSessionsRequestBodySubmitType'EnumPay
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodySubmitType' where
  toJSON (PostCheckoutSessionsRequestBodySubmitType'Other val) = val
  toJSON (PostCheckoutSessionsRequestBodySubmitType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCheckoutSessionsRequestBodySubmitType'EnumAuto) = "auto"
  toJSON (PostCheckoutSessionsRequestBodySubmitType'EnumBook) = "book"
  toJSON (PostCheckoutSessionsRequestBodySubmitType'EnumDonate) = "donate"
  toJSON (PostCheckoutSessionsRequestBodySubmitType'EnumPay) = "pay"

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodySubmitType' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "auto" -> PostCheckoutSessionsRequestBodySubmitType'EnumAuto
            | val GHC.Classes.== "book" -> PostCheckoutSessionsRequestBodySubmitType'EnumBook
            | val GHC.Classes.== "donate" -> PostCheckoutSessionsRequestBodySubmitType'EnumDonate
            | val GHC.Classes.== "pay" -> PostCheckoutSessionsRequestBodySubmitType'EnumPay
            | GHC.Base.otherwise -> PostCheckoutSessionsRequestBodySubmitType'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.subscription_data@ in the specification.
--
-- A subset of parameters to be passed to subscription creation for Checkout Sessions in \`subscription\` mode.
data PostCheckoutSessionsRequestBodySubscriptionData'
  = PostCheckoutSessionsRequestBodySubscriptionData'
      { -- | application_fee_percent
        postCheckoutSessionsRequestBodySubscriptionData'ApplicationFeePercent :: (GHC.Maybe.Maybe GHC.Types.Double),
        -- | default_tax_rates
        postCheckoutSessionsRequestBodySubscriptionData'DefaultTaxRates :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | items
        postCheckoutSessionsRequestBodySubscriptionData'Items :: (GHC.Maybe.Maybe ([PostCheckoutSessionsRequestBodySubscriptionData'Items'])),
        -- | metadata
        postCheckoutSessionsRequestBodySubscriptionData'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
        -- | trial_end
        postCheckoutSessionsRequestBodySubscriptionData'TrialEnd :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | trial_from_plan
        postCheckoutSessionsRequestBodySubscriptionData'TrialFromPlan :: (GHC.Maybe.Maybe GHC.Types.Bool),
        -- | trial_period_days
        postCheckoutSessionsRequestBodySubscriptionData'TrialPeriodDays :: (GHC.Maybe.Maybe GHC.Types.Int)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodySubscriptionData' where
  toJSON obj = Data.Aeson.Types.Internal.object ("application_fee_percent" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'ApplicationFeePercent obj : "default_tax_rates" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'DefaultTaxRates obj : "items" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items obj : "metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Metadata obj : "trial_end" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'TrialEnd obj : "trial_from_plan" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'TrialFromPlan obj : "trial_period_days" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'TrialPeriodDays obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("application_fee_percent" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'ApplicationFeePercent obj) GHC.Base.<> (("default_tax_rates" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'DefaultTaxRates obj) GHC.Base.<> (("items" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Metadata obj) GHC.Base.<> (("trial_end" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'TrialEnd obj) GHC.Base.<> (("trial_from_plan" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'TrialFromPlan obj) GHC.Base.<> ("trial_period_days" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'TrialPeriodDays obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodySubscriptionData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodySubscriptionData'" (\obj -> ((((((GHC.Base.pure PostCheckoutSessionsRequestBodySubscriptionData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "application_fee_percent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_tax_rates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_from_plan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "trial_period_days"))

-- | Create a new 'PostCheckoutSessionsRequestBodySubscriptionData'' with all required fields.
mkPostCheckoutSessionsRequestBodySubscriptionData' :: PostCheckoutSessionsRequestBodySubscriptionData'
mkPostCheckoutSessionsRequestBodySubscriptionData' =
  PostCheckoutSessionsRequestBodySubscriptionData'
    { postCheckoutSessionsRequestBodySubscriptionData'ApplicationFeePercent = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'DefaultTaxRates = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'Items = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'Metadata = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'TrialEnd = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'TrialFromPlan = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'TrialPeriodDays = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/checkout\/sessions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.subscription_data.properties.items.items@ in the specification.
data PostCheckoutSessionsRequestBodySubscriptionData'Items'
  = PostCheckoutSessionsRequestBodySubscriptionData'Items'
      { -- | plan
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postCheckoutSessionsRequestBodySubscriptionData'Items'Plan :: Data.Text.Internal.Text,
        -- | quantity
        postCheckoutSessionsRequestBodySubscriptionData'Items'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | tax_rates
        postCheckoutSessionsRequestBodySubscriptionData'Items'TaxRates :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCheckoutSessionsRequestBodySubscriptionData'Items' where
  toJSON obj = Data.Aeson.Types.Internal.object ("plan" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items'Plan obj : "quantity" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items'Quantity obj : "tax_rates" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items'TaxRates obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("plan" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items'Plan obj) GHC.Base.<> (("quantity" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items'Quantity obj) GHC.Base.<> ("tax_rates" Data.Aeson.Types.ToJSON..= postCheckoutSessionsRequestBodySubscriptionData'Items'TaxRates obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCheckoutSessionsRequestBodySubscriptionData'Items' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCheckoutSessionsRequestBodySubscriptionData'Items'" (\obj -> ((GHC.Base.pure PostCheckoutSessionsRequestBodySubscriptionData'Items' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "plan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_rates"))

-- | Create a new 'PostCheckoutSessionsRequestBodySubscriptionData'Items'' with all required fields.
mkPostCheckoutSessionsRequestBodySubscriptionData'Items' ::
  -- | 'postCheckoutSessionsRequestBodySubscriptionData'Items'Plan'
  Data.Text.Internal.Text ->
  PostCheckoutSessionsRequestBodySubscriptionData'Items'
mkPostCheckoutSessionsRequestBodySubscriptionData'Items' postCheckoutSessionsRequestBodySubscriptionData'Items'Plan =
  PostCheckoutSessionsRequestBodySubscriptionData'Items'
    { postCheckoutSessionsRequestBodySubscriptionData'Items'Plan = postCheckoutSessionsRequestBodySubscriptionData'Items'Plan,
      postCheckoutSessionsRequestBodySubscriptionData'Items'Quantity = GHC.Maybe.Nothing,
      postCheckoutSessionsRequestBodySubscriptionData'Items'TaxRates = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postCheckoutSessions'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostCheckoutSessionsResponseError' is used.
data PostCheckoutSessionsResponse
  = -- | Means either no matching case available or a parse error
    PostCheckoutSessionsResponseError GHC.Base.String
  | -- | Successful response.
    PostCheckoutSessionsResponse200 Checkout'session
  | -- | Error response.
    PostCheckoutSessionsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
