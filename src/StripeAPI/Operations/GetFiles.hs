{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation getFiles
module StripeAPI.Operations.GetFiles where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/files
--
-- \<p>Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.\<\/p>
getFiles ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetFilesParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response GetFilesResponse)
getFiles parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetFilesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetFilesResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            GetFilesResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetFilesResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/files")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "purpose") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryPurpose parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the data type for the schema getFilesParameters
data GetFilesParameters
  = GetFilesParameters
      { -- | queryCreated: Represents the parameter named \'created\'
        getFilesParametersQueryCreated :: (GHC.Maybe.Maybe GetFilesParametersQueryCreated'Variants),
        -- | queryEnding_before: Represents the parameter named \'ending_before\'
        --
        -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getFilesParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryExpand: Represents the parameter named \'expand\'
        --
        -- Specifies which fields in the response should be expanded.
        getFilesParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | queryLimit: Represents the parameter named \'limit\'
        --
        -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
        getFilesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | queryPurpose: Represents the parameter named \'purpose\'
        --
        -- The file purpose to filter queries by. If none is provided, files will not be filtered by purpose.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getFilesParametersQueryPurpose :: (GHC.Maybe.Maybe GetFilesParametersQueryPurpose'),
        -- | queryStarting_after: Represents the parameter named \'starting_after\'
        --
        -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getFilesParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParameters where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "queryCreated" (getFilesParametersQueryCreated obj) : (Data.Aeson..=) "queryEnding_before" (getFilesParametersQueryEndingBefore obj) : (Data.Aeson..=) "queryExpand" (getFilesParametersQueryExpand obj) : (Data.Aeson..=) "queryLimit" (getFilesParametersQueryLimit obj) : (Data.Aeson..=) "queryPurpose" (getFilesParametersQueryPurpose obj) : (Data.Aeson..=) "queryStarting_after" (getFilesParametersQueryStartingAfter obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "queryCreated" (getFilesParametersQueryCreated obj) GHC.Base.<> ((Data.Aeson..=) "queryEnding_before" (getFilesParametersQueryEndingBefore obj) GHC.Base.<> ((Data.Aeson..=) "queryExpand" (getFilesParametersQueryExpand obj) GHC.Base.<> ((Data.Aeson..=) "queryLimit" (getFilesParametersQueryLimit obj) GHC.Base.<> ((Data.Aeson..=) "queryPurpose" (getFilesParametersQueryPurpose obj) GHC.Base.<> (Data.Aeson..=) "queryStarting_after" (getFilesParametersQueryStartingAfter obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetFilesParameters" (\obj -> (((((GHC.Base.pure GetFilesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryPurpose")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStarting_after"))

-- | Defines the data type for the schema getFilesParametersQueryCreated\'OneOf2
data GetFilesParametersQueryCreated'OneOf2
  = GetFilesParametersQueryCreated'OneOf2
      { -- | gt
        getFilesParametersQueryCreated'OneOf2Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | gte
        getFilesParametersQueryCreated'OneOf2Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lt
        getFilesParametersQueryCreated'OneOf2Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lte
        getFilesParametersQueryCreated'OneOf2Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParametersQueryCreated'OneOf2 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "gt" (getFilesParametersQueryCreated'OneOf2Gt obj) : (Data.Aeson..=) "gte" (getFilesParametersQueryCreated'OneOf2Gte obj) : (Data.Aeson..=) "lt" (getFilesParametersQueryCreated'OneOf2Lt obj) : (Data.Aeson..=) "lte" (getFilesParametersQueryCreated'OneOf2Lte obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "gt" (getFilesParametersQueryCreated'OneOf2Gt obj) GHC.Base.<> ((Data.Aeson..=) "gte" (getFilesParametersQueryCreated'OneOf2Gte obj) GHC.Base.<> ((Data.Aeson..=) "lt" (getFilesParametersQueryCreated'OneOf2Lt obj) GHC.Base.<> (Data.Aeson..=) "lte" (getFilesParametersQueryCreated'OneOf2Lte obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParametersQueryCreated'OneOf2 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetFilesParametersQueryCreated'OneOf2" (\obj -> (((GHC.Base.pure GetFilesParametersQueryCreated'OneOf2 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lte"))

-- | Define the one-of schema getFilesParametersQueryCreated\'
--
-- Represents the parameter named \'created\'
data GetFilesParametersQueryCreated'Variants
  = GetFilesParametersQueryCreated'Int GHC.Types.Int
  | GetFilesParametersQueryCreated'GetFilesParametersQueryCreated'OneOf2 GetFilesParametersQueryCreated'OneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParametersQueryCreated'Variants where
  toJSON (GetFilesParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetFilesParametersQueryCreated'GetFilesParametersQueryCreated'OneOf2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParametersQueryCreated'Variants where
  parseJSON val = case Data.Aeson.Types.FromJSON.fromJSON val of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetFilesParametersQueryCreated'Int a
    Data.Aeson.Types.Internal.Error _ -> case Data.Aeson.Types.FromJSON.fromJSON val of
      Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetFilesParametersQueryCreated'GetFilesParametersQueryCreated'OneOf2 a
      Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema getFilesParametersQueryPurpose\'
--
-- Represents the parameter named \'purpose\'
--
-- The file purpose to filter queries by. If none is provided, files will not be filtered by purpose.
data GetFilesParametersQueryPurpose'
  = GetFilesParametersQueryPurpose'EnumOther Data.Aeson.Types.Internal.Value
  | GetFilesParametersQueryPurpose'EnumTyped Data.Text.Internal.Text
  | GetFilesParametersQueryPurpose'EnumStringAdditionalVerification
  | GetFilesParametersQueryPurpose'EnumStringBusinessIcon
  | GetFilesParametersQueryPurpose'EnumStringBusinessLogo
  | GetFilesParametersQueryPurpose'EnumStringCustomerSignature
  | GetFilesParametersQueryPurpose'EnumStringDisputeEvidence
  | GetFilesParametersQueryPurpose'EnumStringFinanceReportRun
  | GetFilesParametersQueryPurpose'EnumStringIdentityDocument
  | GetFilesParametersQueryPurpose'EnumStringPciDocument
  | GetFilesParametersQueryPurpose'EnumStringSigmaScheduledQuery
  | GetFilesParametersQueryPurpose'EnumStringTaxDocumentUserUpload
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParametersQueryPurpose' where
  toJSON (GetFilesParametersQueryPurpose'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetFilesParametersQueryPurpose'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetFilesParametersQueryPurpose'EnumStringAdditionalVerification) = "additional_verification"
  toJSON (GetFilesParametersQueryPurpose'EnumStringBusinessIcon) = "business_icon"
  toJSON (GetFilesParametersQueryPurpose'EnumStringBusinessLogo) = "business_logo"
  toJSON (GetFilesParametersQueryPurpose'EnumStringCustomerSignature) = "customer_signature"
  toJSON (GetFilesParametersQueryPurpose'EnumStringDisputeEvidence) = "dispute_evidence"
  toJSON (GetFilesParametersQueryPurpose'EnumStringFinanceReportRun) = "finance_report_run"
  toJSON (GetFilesParametersQueryPurpose'EnumStringIdentityDocument) = "identity_document"
  toJSON (GetFilesParametersQueryPurpose'EnumStringPciDocument) = "pci_document"
  toJSON (GetFilesParametersQueryPurpose'EnumStringSigmaScheduledQuery) = "sigma_scheduled_query"
  toJSON (GetFilesParametersQueryPurpose'EnumStringTaxDocumentUserUpload) = "tax_document_user_upload"

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParametersQueryPurpose' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "additional_verification" -> GetFilesParametersQueryPurpose'EnumStringAdditionalVerification
            | val GHC.Classes.== "business_icon" -> GetFilesParametersQueryPurpose'EnumStringBusinessIcon
            | val GHC.Classes.== "business_logo" -> GetFilesParametersQueryPurpose'EnumStringBusinessLogo
            | val GHC.Classes.== "customer_signature" -> GetFilesParametersQueryPurpose'EnumStringCustomerSignature
            | val GHC.Classes.== "dispute_evidence" -> GetFilesParametersQueryPurpose'EnumStringDisputeEvidence
            | val GHC.Classes.== "finance_report_run" -> GetFilesParametersQueryPurpose'EnumStringFinanceReportRun
            | val GHC.Classes.== "identity_document" -> GetFilesParametersQueryPurpose'EnumStringIdentityDocument
            | val GHC.Classes.== "pci_document" -> GetFilesParametersQueryPurpose'EnumStringPciDocument
            | val GHC.Classes.== "sigma_scheduled_query" -> GetFilesParametersQueryPurpose'EnumStringSigmaScheduledQuery
            | val GHC.Classes.== "tax_document_user_upload" -> GetFilesParametersQueryPurpose'EnumStringTaxDocumentUserUpload
            | GHC.Base.otherwise -> GetFilesParametersQueryPurpose'EnumOther val
      )

-- | Represents a response of the operation 'getFiles'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetFilesResponseError' is used.
data GetFilesResponse
  = -- | Means either no matching case available or a parse error
    GetFilesResponseError GHC.Base.String
  | -- | Successful response.
    GetFilesResponse200 GetFilesResponseBody200
  | -- | Error response.
    GetFilesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the data type for the schema GetFilesResponseBody200
data GetFilesResponseBody200
  = GetFilesResponseBody200
      { -- | data
        getFilesResponseBody200Data :: ([File]),
        -- | has_more: True if this list has another page of items after this one that can be fetched.
        getFilesResponseBody200HasMore :: GHC.Types.Bool,
        -- | object: String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
        getFilesResponseBody200Object :: GetFilesResponseBody200Object',
        -- | url: The URL where this list can be accessed.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        -- * Must match pattern \'^\/v1\/files\'
        getFilesResponseBody200Url :: Data.Text.Internal.Text
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesResponseBody200 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "data" (getFilesResponseBody200Data obj) : (Data.Aeson..=) "has_more" (getFilesResponseBody200HasMore obj) : (Data.Aeson..=) "object" (getFilesResponseBody200Object obj) : (Data.Aeson..=) "url" (getFilesResponseBody200Url obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "data" (getFilesResponseBody200Data obj) GHC.Base.<> ((Data.Aeson..=) "has_more" (getFilesResponseBody200HasMore obj) GHC.Base.<> ((Data.Aeson..=) "object" (getFilesResponseBody200Object obj) GHC.Base.<> (Data.Aeson..=) "url" (getFilesResponseBody200Url obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetFilesResponseBody200" (\obj -> (((GHC.Base.pure GetFilesResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Defines the enum schema GetFilesResponseBody200Object\'
--
-- String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
data GetFilesResponseBody200Object'
  = GetFilesResponseBody200Object'EnumOther Data.Aeson.Types.Internal.Value
  | GetFilesResponseBody200Object'EnumTyped Data.Text.Internal.Text
  | GetFilesResponseBody200Object'EnumStringList
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesResponseBody200Object' where
  toJSON (GetFilesResponseBody200Object'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetFilesResponseBody200Object'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetFilesResponseBody200Object'EnumStringList) = "list"

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesResponseBody200Object' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "list" -> GetFilesResponseBody200Object'EnumStringList
            | GHC.Base.otherwise -> GetFilesResponseBody200Object'EnumOther val
      )
