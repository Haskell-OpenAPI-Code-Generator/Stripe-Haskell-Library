{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getFiles
module StripeAPI.Operations.GetFiles where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/files
--
-- \<p>Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.\<\/p>
getFiles ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetFilesParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response GetFilesResponse)
getFiles parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetFilesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetFilesResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetFilesResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetFilesResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/files")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "purpose") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryPurpose parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getFilesParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the object schema located at @paths.\/v1\/files.GET.parameters@ in the specification.
data GetFilesParameters = GetFilesParameters
  { -- | queryCreated: Represents the parameter named \'created\'
    getFilesParametersQueryCreated :: (GHC.Maybe.Maybe GetFilesParametersQueryCreated'Variants),
    -- | queryEnding_before: Represents the parameter named \'ending_before\'
    --
    -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getFilesParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getFilesParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    getFilesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryPurpose: Represents the parameter named \'purpose\'
    --
    -- The file purpose to filter queries by. If none is provided, files will not be filtered by purpose.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getFilesParametersQueryPurpose :: (GHC.Maybe.Maybe GetFilesParametersQueryPurpose'),
    -- | queryStarting_after: Represents the parameter named \'starting_after\'
    --
    -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getFilesParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParameters where
  toJSON obj = Data.Aeson.Types.Internal.object ("queryCreated" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated obj : "queryEnding_before" Data.Aeson.Types.ToJSON..= getFilesParametersQueryEndingBefore obj : "queryExpand" Data.Aeson.Types.ToJSON..= getFilesParametersQueryExpand obj : "queryLimit" Data.Aeson.Types.ToJSON..= getFilesParametersQueryLimit obj : "queryPurpose" Data.Aeson.Types.ToJSON..= getFilesParametersQueryPurpose obj : "queryStarting_after" Data.Aeson.Types.ToJSON..= getFilesParametersQueryStartingAfter obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("queryCreated" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated obj) GHC.Base.<> (("queryEnding_before" Data.Aeson.Types.ToJSON..= getFilesParametersQueryEndingBefore obj) GHC.Base.<> (("queryExpand" Data.Aeson.Types.ToJSON..= getFilesParametersQueryExpand obj) GHC.Base.<> (("queryLimit" Data.Aeson.Types.ToJSON..= getFilesParametersQueryLimit obj) GHC.Base.<> (("queryPurpose" Data.Aeson.Types.ToJSON..= getFilesParametersQueryPurpose obj) GHC.Base.<> ("queryStarting_after" Data.Aeson.Types.ToJSON..= getFilesParametersQueryStartingAfter obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetFilesParameters" (\obj -> (((((GHC.Base.pure GetFilesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryPurpose")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStarting_after"))

-- | Create a new 'GetFilesParameters' with all required fields.
mkGetFilesParameters :: GetFilesParameters
mkGetFilesParameters =
  GetFilesParameters
    { getFilesParametersQueryCreated = GHC.Maybe.Nothing,
      getFilesParametersQueryEndingBefore = GHC.Maybe.Nothing,
      getFilesParametersQueryExpand = GHC.Maybe.Nothing,
      getFilesParametersQueryLimit = GHC.Maybe.Nothing,
      getFilesParametersQueryPurpose = GHC.Maybe.Nothing,
      getFilesParametersQueryStartingAfter = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/files.GET.parameters.properties.queryCreated.anyOf@ in the specification.
data GetFilesParametersQueryCreated'OneOf1 = GetFilesParametersQueryCreated'OneOf1
  { -- | gt
    getFilesParametersQueryCreated'OneOf1Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | gte
    getFilesParametersQueryCreated'OneOf1Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | lt
    getFilesParametersQueryCreated'OneOf1Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | lte
    getFilesParametersQueryCreated'OneOf1Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParametersQueryCreated'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("gt" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Gt obj : "gte" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Gte obj : "lt" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Lt obj : "lte" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Lte obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("gt" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Gt obj) GHC.Base.<> (("gte" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Gte obj) GHC.Base.<> (("lt" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Lt obj) GHC.Base.<> ("lte" Data.Aeson.Types.ToJSON..= getFilesParametersQueryCreated'OneOf1Lte obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParametersQueryCreated'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetFilesParametersQueryCreated'OneOf1" (\obj -> (((GHC.Base.pure GetFilesParametersQueryCreated'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lte"))

-- | Create a new 'GetFilesParametersQueryCreated'OneOf1' with all required fields.
mkGetFilesParametersQueryCreated'OneOf1 :: GetFilesParametersQueryCreated'OneOf1
mkGetFilesParametersQueryCreated'OneOf1 =
  GetFilesParametersQueryCreated'OneOf1
    { getFilesParametersQueryCreated'OneOf1Gt = GHC.Maybe.Nothing,
      getFilesParametersQueryCreated'OneOf1Gte = GHC.Maybe.Nothing,
      getFilesParametersQueryCreated'OneOf1Lt = GHC.Maybe.Nothing,
      getFilesParametersQueryCreated'OneOf1Lte = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/files.GET.parameters.properties.queryCreated.anyOf@ in the specification.
--
-- Represents the parameter named \'created\'
data GetFilesParametersQueryCreated'Variants
  = GetFilesParametersQueryCreated'GetFilesParametersQueryCreated'OneOf1 GetFilesParametersQueryCreated'OneOf1
  | GetFilesParametersQueryCreated'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParametersQueryCreated'Variants where
  toJSON (GetFilesParametersQueryCreated'GetFilesParametersQueryCreated'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetFilesParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParametersQueryCreated'Variants where
  parseJSON val = case (GetFilesParametersQueryCreated'GetFilesParametersQueryCreated'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetFilesParametersQueryCreated'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/files.GET.parameters.properties.queryPurpose@ in the specification.
--
-- Represents the parameter named \'purpose\'
--
-- The file purpose to filter queries by. If none is provided, files will not be filtered by purpose.
data GetFilesParametersQueryPurpose'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetFilesParametersQueryPurpose'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetFilesParametersQueryPurpose'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"account_requirement"@
    GetFilesParametersQueryPurpose'EnumAccountRequirement
  | -- | Represents the JSON value @"additional_verification"@
    GetFilesParametersQueryPurpose'EnumAdditionalVerification
  | -- | Represents the JSON value @"business_icon"@
    GetFilesParametersQueryPurpose'EnumBusinessIcon
  | -- | Represents the JSON value @"business_logo"@
    GetFilesParametersQueryPurpose'EnumBusinessLogo
  | -- | Represents the JSON value @"customer_signature"@
    GetFilesParametersQueryPurpose'EnumCustomerSignature
  | -- | Represents the JSON value @"dispute_evidence"@
    GetFilesParametersQueryPurpose'EnumDisputeEvidence
  | -- | Represents the JSON value @"document_provider_identity_document"@
    GetFilesParametersQueryPurpose'EnumDocumentProviderIdentityDocument
  | -- | Represents the JSON value @"finance_report_run"@
    GetFilesParametersQueryPurpose'EnumFinanceReportRun
  | -- | Represents the JSON value @"identity_document"@
    GetFilesParametersQueryPurpose'EnumIdentityDocument
  | -- | Represents the JSON value @"identity_document_downloadable"@
    GetFilesParametersQueryPurpose'EnumIdentityDocumentDownloadable
  | -- | Represents the JSON value @"pci_document"@
    GetFilesParametersQueryPurpose'EnumPciDocument
  | -- | Represents the JSON value @"selfie"@
    GetFilesParametersQueryPurpose'EnumSelfie
  | -- | Represents the JSON value @"sigma_scheduled_query"@
    GetFilesParametersQueryPurpose'EnumSigmaScheduledQuery
  | -- | Represents the JSON value @"tax_document_user_upload"@
    GetFilesParametersQueryPurpose'EnumTaxDocumentUserUpload
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesParametersQueryPurpose' where
  toJSON (GetFilesParametersQueryPurpose'Other val) = val
  toJSON (GetFilesParametersQueryPurpose'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetFilesParametersQueryPurpose'EnumAccountRequirement) = "account_requirement"
  toJSON (GetFilesParametersQueryPurpose'EnumAdditionalVerification) = "additional_verification"
  toJSON (GetFilesParametersQueryPurpose'EnumBusinessIcon) = "business_icon"
  toJSON (GetFilesParametersQueryPurpose'EnumBusinessLogo) = "business_logo"
  toJSON (GetFilesParametersQueryPurpose'EnumCustomerSignature) = "customer_signature"
  toJSON (GetFilesParametersQueryPurpose'EnumDisputeEvidence) = "dispute_evidence"
  toJSON (GetFilesParametersQueryPurpose'EnumDocumentProviderIdentityDocument) = "document_provider_identity_document"
  toJSON (GetFilesParametersQueryPurpose'EnumFinanceReportRun) = "finance_report_run"
  toJSON (GetFilesParametersQueryPurpose'EnumIdentityDocument) = "identity_document"
  toJSON (GetFilesParametersQueryPurpose'EnumIdentityDocumentDownloadable) = "identity_document_downloadable"
  toJSON (GetFilesParametersQueryPurpose'EnumPciDocument) = "pci_document"
  toJSON (GetFilesParametersQueryPurpose'EnumSelfie) = "selfie"
  toJSON (GetFilesParametersQueryPurpose'EnumSigmaScheduledQuery) = "sigma_scheduled_query"
  toJSON (GetFilesParametersQueryPurpose'EnumTaxDocumentUserUpload) = "tax_document_user_upload"

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesParametersQueryPurpose' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "account_requirement" -> GetFilesParametersQueryPurpose'EnumAccountRequirement
            | val GHC.Classes.== "additional_verification" -> GetFilesParametersQueryPurpose'EnumAdditionalVerification
            | val GHC.Classes.== "business_icon" -> GetFilesParametersQueryPurpose'EnumBusinessIcon
            | val GHC.Classes.== "business_logo" -> GetFilesParametersQueryPurpose'EnumBusinessLogo
            | val GHC.Classes.== "customer_signature" -> GetFilesParametersQueryPurpose'EnumCustomerSignature
            | val GHC.Classes.== "dispute_evidence" -> GetFilesParametersQueryPurpose'EnumDisputeEvidence
            | val GHC.Classes.== "document_provider_identity_document" -> GetFilesParametersQueryPurpose'EnumDocumentProviderIdentityDocument
            | val GHC.Classes.== "finance_report_run" -> GetFilesParametersQueryPurpose'EnumFinanceReportRun
            | val GHC.Classes.== "identity_document" -> GetFilesParametersQueryPurpose'EnumIdentityDocument
            | val GHC.Classes.== "identity_document_downloadable" -> GetFilesParametersQueryPurpose'EnumIdentityDocumentDownloadable
            | val GHC.Classes.== "pci_document" -> GetFilesParametersQueryPurpose'EnumPciDocument
            | val GHC.Classes.== "selfie" -> GetFilesParametersQueryPurpose'EnumSelfie
            | val GHC.Classes.== "sigma_scheduled_query" -> GetFilesParametersQueryPurpose'EnumSigmaScheduledQuery
            | val GHC.Classes.== "tax_document_user_upload" -> GetFilesParametersQueryPurpose'EnumTaxDocumentUserUpload
            | GHC.Base.otherwise -> GetFilesParametersQueryPurpose'Other val
      )

-- | Represents a response of the operation 'getFiles'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetFilesResponseError' is used.
data GetFilesResponse
  = -- | Means either no matching case available or a parse error
    GetFilesResponseError GHC.Base.String
  | -- | Successful response.
    GetFilesResponse200 GetFilesResponseBody200
  | -- | Error response.
    GetFilesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/files.GET.responses.200.content.application\/json.schema@ in the specification.
data GetFilesResponseBody200 = GetFilesResponseBody200
  { -- | data
    getFilesResponseBody200Data :: ([File]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getFilesResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    -- * Must match pattern \'^\/v1\/files\'
    getFilesResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetFilesResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object ("data" Data.Aeson.Types.ToJSON..= getFilesResponseBody200Data obj : "has_more" Data.Aeson.Types.ToJSON..= getFilesResponseBody200HasMore obj : "url" Data.Aeson.Types.ToJSON..= getFilesResponseBody200Url obj : "object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list" : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("data" Data.Aeson.Types.ToJSON..= getFilesResponseBody200Data obj) GHC.Base.<> (("has_more" Data.Aeson.Types.ToJSON..= getFilesResponseBody200HasMore obj) GHC.Base.<> (("url" Data.Aeson.Types.ToJSON..= getFilesResponseBody200Url obj) GHC.Base.<> ("object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"))))

instance Data.Aeson.Types.FromJSON.FromJSON GetFilesResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetFilesResponseBody200" (\obj -> ((GHC.Base.pure GetFilesResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetFilesResponseBody200' with all required fields.
mkGetFilesResponseBody200 ::
  -- | 'getFilesResponseBody200Data'
  [File] ->
  -- | 'getFilesResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getFilesResponseBody200Url'
  Data.Text.Internal.Text ->
  GetFilesResponseBody200
mkGetFilesResponseBody200 getFilesResponseBody200Data getFilesResponseBody200HasMore getFilesResponseBody200Url =
  GetFilesResponseBody200
    { getFilesResponseBody200Data = getFilesResponseBody200Data,
      getFilesResponseBody200HasMore = getFilesResponseBody200HasMore,
      getFilesResponseBody200Url = getFilesResponseBody200Url
    }
