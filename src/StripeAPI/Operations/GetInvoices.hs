{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation getInvoices
module StripeAPI.Operations.GetInvoices where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/invoices
--
-- \<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.\<\/p>
getInvoices ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetInvoicesParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response GetInvoicesResponse)
getInvoices parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetInvoicesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetInvoicesResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            GetInvoicesResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetInvoicesResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/invoices")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "collection_method") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryCollectionMethod parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "customer") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryCustomer parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "due_date") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryDueDate parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "subscription") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getInvoicesParametersQuerySubscription parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the data type for the schema getInvoicesParameters
data GetInvoicesParameters
  = GetInvoicesParameters
      { -- | queryCollection_method: Represents the parameter named \'collection_method\'
        --
        -- The collection method of the invoice to retrieve. Either \`charge_automatically\` or \`send_invoice\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getInvoicesParametersQueryCollectionMethod :: (GHC.Maybe.Maybe GetInvoicesParametersQueryCollectionMethod'),
        -- | queryCreated: Represents the parameter named \'created\'
        getInvoicesParametersQueryCreated :: (GHC.Maybe.Maybe GetInvoicesParametersQueryCreated'Variants),
        -- | queryCustomer: Represents the parameter named \'customer\'
        --
        -- Only return invoices for the customer specified by this customer ID.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getInvoicesParametersQueryCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryDue_date: Represents the parameter named \'due_date\'
        getInvoicesParametersQueryDueDate :: (GHC.Maybe.Maybe GetInvoicesParametersQueryDueDate'Variants),
        -- | queryEnding_before: Represents the parameter named \'ending_before\'
        --
        -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getInvoicesParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryExpand: Represents the parameter named \'expand\'
        --
        -- Specifies which fields in the response should be expanded.
        getInvoicesParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | queryLimit: Represents the parameter named \'limit\'
        --
        -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
        getInvoicesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | queryStarting_after: Represents the parameter named \'starting_after\'
        --
        -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getInvoicesParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryStatus: Represents the parameter named \'status\'
        --
        -- The status of the invoice, one of \`draft\`, \`open\`, \`paid\`, \`uncollectible\`, or \`void\`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\#workflow-overview)
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getInvoicesParametersQueryStatus :: (GHC.Maybe.Maybe GetInvoicesParametersQueryStatus'),
        -- | querySubscription: Represents the parameter named \'subscription\'
        --
        -- Only return invoices for the subscription specified by this subscription ID.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getInvoicesParametersQuerySubscription :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParameters where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "queryCollection_method" (getInvoicesParametersQueryCollectionMethod obj) : (Data.Aeson..=) "queryCreated" (getInvoicesParametersQueryCreated obj) : (Data.Aeson..=) "queryCustomer" (getInvoicesParametersQueryCustomer obj) : (Data.Aeson..=) "queryDue_date" (getInvoicesParametersQueryDueDate obj) : (Data.Aeson..=) "queryEnding_before" (getInvoicesParametersQueryEndingBefore obj) : (Data.Aeson..=) "queryExpand" (getInvoicesParametersQueryExpand obj) : (Data.Aeson..=) "queryLimit" (getInvoicesParametersQueryLimit obj) : (Data.Aeson..=) "queryStarting_after" (getInvoicesParametersQueryStartingAfter obj) : (Data.Aeson..=) "queryStatus" (getInvoicesParametersQueryStatus obj) : (Data.Aeson..=) "querySubscription" (getInvoicesParametersQuerySubscription obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "queryCollection_method" (getInvoicesParametersQueryCollectionMethod obj) GHC.Base.<> ((Data.Aeson..=) "queryCreated" (getInvoicesParametersQueryCreated obj) GHC.Base.<> ((Data.Aeson..=) "queryCustomer" (getInvoicesParametersQueryCustomer obj) GHC.Base.<> ((Data.Aeson..=) "queryDue_date" (getInvoicesParametersQueryDueDate obj) GHC.Base.<> ((Data.Aeson..=) "queryEnding_before" (getInvoicesParametersQueryEndingBefore obj) GHC.Base.<> ((Data.Aeson..=) "queryExpand" (getInvoicesParametersQueryExpand obj) GHC.Base.<> ((Data.Aeson..=) "queryLimit" (getInvoicesParametersQueryLimit obj) GHC.Base.<> ((Data.Aeson..=) "queryStarting_after" (getInvoicesParametersQueryStartingAfter obj) GHC.Base.<> ((Data.Aeson..=) "queryStatus" (getInvoicesParametersQueryStatus obj) GHC.Base.<> (Data.Aeson..=) "querySubscription" (getInvoicesParametersQuerySubscription obj))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetInvoicesParameters" (\obj -> (((((((((GHC.Base.pure GetInvoicesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCollection_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryDue_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "querySubscription"))

-- | Defines the enum schema getInvoicesParametersQueryCollection_method\'
--
-- Represents the parameter named \'collection_method\'
--
-- The collection method of the invoice to retrieve. Either \`charge_automatically\` or \`send_invoice\`.
data GetInvoicesParametersQueryCollectionMethod'
  = GetInvoicesParametersQueryCollectionMethod'EnumOther Data.Aeson.Types.Internal.Value
  | GetInvoicesParametersQueryCollectionMethod'EnumTyped Data.Text.Internal.Text
  | GetInvoicesParametersQueryCollectionMethod'EnumStringChargeAutomatically
  | GetInvoicesParametersQueryCollectionMethod'EnumStringSendInvoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParametersQueryCollectionMethod' where
  toJSON (GetInvoicesParametersQueryCollectionMethod'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetInvoicesParametersQueryCollectionMethod'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetInvoicesParametersQueryCollectionMethod'EnumStringChargeAutomatically) = "charge_automatically"
  toJSON (GetInvoicesParametersQueryCollectionMethod'EnumStringSendInvoice) = "send_invoice"

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParametersQueryCollectionMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "charge_automatically" -> GetInvoicesParametersQueryCollectionMethod'EnumStringChargeAutomatically
            | val GHC.Classes.== "send_invoice" -> GetInvoicesParametersQueryCollectionMethod'EnumStringSendInvoice
            | GHC.Base.otherwise -> GetInvoicesParametersQueryCollectionMethod'EnumOther val
      )

-- | Defines the data type for the schema getInvoicesParametersQueryCreated\'OneOf2
data GetInvoicesParametersQueryCreated'OneOf2
  = GetInvoicesParametersQueryCreated'OneOf2
      { -- | gt
        getInvoicesParametersQueryCreated'OneOf2Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | gte
        getInvoicesParametersQueryCreated'OneOf2Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lt
        getInvoicesParametersQueryCreated'OneOf2Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lte
        getInvoicesParametersQueryCreated'OneOf2Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParametersQueryCreated'OneOf2 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "gt" (getInvoicesParametersQueryCreated'OneOf2Gt obj) : (Data.Aeson..=) "gte" (getInvoicesParametersQueryCreated'OneOf2Gte obj) : (Data.Aeson..=) "lt" (getInvoicesParametersQueryCreated'OneOf2Lt obj) : (Data.Aeson..=) "lte" (getInvoicesParametersQueryCreated'OneOf2Lte obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "gt" (getInvoicesParametersQueryCreated'OneOf2Gt obj) GHC.Base.<> ((Data.Aeson..=) "gte" (getInvoicesParametersQueryCreated'OneOf2Gte obj) GHC.Base.<> ((Data.Aeson..=) "lt" (getInvoicesParametersQueryCreated'OneOf2Lt obj) GHC.Base.<> (Data.Aeson..=) "lte" (getInvoicesParametersQueryCreated'OneOf2Lte obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParametersQueryCreated'OneOf2 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetInvoicesParametersQueryCreated'OneOf2" (\obj -> (((GHC.Base.pure GetInvoicesParametersQueryCreated'OneOf2 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lte"))

-- | Define the one-of schema getInvoicesParametersQueryCreated\'
--
-- Represents the parameter named \'created\'
data GetInvoicesParametersQueryCreated'Variants
  = GetInvoicesParametersQueryCreated'Int GHC.Types.Int
  | GetInvoicesParametersQueryCreated'GetInvoicesParametersQueryCreated'OneOf2 GetInvoicesParametersQueryCreated'OneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParametersQueryCreated'Variants where
  toJSON (GetInvoicesParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetInvoicesParametersQueryCreated'GetInvoicesParametersQueryCreated'OneOf2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParametersQueryCreated'Variants where
  parseJSON val = case Data.Aeson.Types.FromJSON.fromJSON val of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetInvoicesParametersQueryCreated'Int a
    Data.Aeson.Types.Internal.Error _ -> case Data.Aeson.Types.FromJSON.fromJSON val of
      Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetInvoicesParametersQueryCreated'GetInvoicesParametersQueryCreated'OneOf2 a
      Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the data type for the schema getInvoicesParametersQueryDue_date\'OneOf2
data GetInvoicesParametersQueryDueDate'OneOf2
  = GetInvoicesParametersQueryDueDate'OneOf2
      { -- | gt
        getInvoicesParametersQueryDueDate'OneOf2Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | gte
        getInvoicesParametersQueryDueDate'OneOf2Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lt
        getInvoicesParametersQueryDueDate'OneOf2Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lte
        getInvoicesParametersQueryDueDate'OneOf2Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParametersQueryDueDate'OneOf2 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "gt" (getInvoicesParametersQueryDueDate'OneOf2Gt obj) : (Data.Aeson..=) "gte" (getInvoicesParametersQueryDueDate'OneOf2Gte obj) : (Data.Aeson..=) "lt" (getInvoicesParametersQueryDueDate'OneOf2Lt obj) : (Data.Aeson..=) "lte" (getInvoicesParametersQueryDueDate'OneOf2Lte obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "gt" (getInvoicesParametersQueryDueDate'OneOf2Gt obj) GHC.Base.<> ((Data.Aeson..=) "gte" (getInvoicesParametersQueryDueDate'OneOf2Gte obj) GHC.Base.<> ((Data.Aeson..=) "lt" (getInvoicesParametersQueryDueDate'OneOf2Lt obj) GHC.Base.<> (Data.Aeson..=) "lte" (getInvoicesParametersQueryDueDate'OneOf2Lte obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParametersQueryDueDate'OneOf2 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetInvoicesParametersQueryDueDate'OneOf2" (\obj -> (((GHC.Base.pure GetInvoicesParametersQueryDueDate'OneOf2 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lte"))

-- | Define the one-of schema getInvoicesParametersQueryDue_date\'
--
-- Represents the parameter named \'due_date\'
data GetInvoicesParametersQueryDueDate'Variants
  = GetInvoicesParametersQueryDueDate'Int GHC.Types.Int
  | GetInvoicesParametersQueryDueDate'GetInvoicesParametersQueryDueDate'OneOf2 GetInvoicesParametersQueryDueDate'OneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParametersQueryDueDate'Variants where
  toJSON (GetInvoicesParametersQueryDueDate'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetInvoicesParametersQueryDueDate'GetInvoicesParametersQueryDueDate'OneOf2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParametersQueryDueDate'Variants where
  parseJSON val = case Data.Aeson.Types.FromJSON.fromJSON val of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetInvoicesParametersQueryDueDate'Int a
    Data.Aeson.Types.Internal.Error _ -> case Data.Aeson.Types.FromJSON.fromJSON val of
      Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetInvoicesParametersQueryDueDate'GetInvoicesParametersQueryDueDate'OneOf2 a
      Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema getInvoicesParametersQueryStatus\'
--
-- Represents the parameter named \'status\'
--
-- The status of the invoice, one of \`draft\`, \`open\`, \`paid\`, \`uncollectible\`, or \`void\`. [Learn more](https:\/\/stripe.com\/docs\/billing\/invoices\/workflow\#workflow-overview)
data GetInvoicesParametersQueryStatus'
  = GetInvoicesParametersQueryStatus'EnumOther Data.Aeson.Types.Internal.Value
  | GetInvoicesParametersQueryStatus'EnumTyped Data.Text.Internal.Text
  | GetInvoicesParametersQueryStatus'EnumStringDraft
  | GetInvoicesParametersQueryStatus'EnumStringOpen
  | GetInvoicesParametersQueryStatus'EnumStringPaid
  | GetInvoicesParametersQueryStatus'EnumStringUncollectible
  | GetInvoicesParametersQueryStatus'EnumStringVoid
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesParametersQueryStatus' where
  toJSON (GetInvoicesParametersQueryStatus'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetInvoicesParametersQueryStatus'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetInvoicesParametersQueryStatus'EnumStringDraft) = "draft"
  toJSON (GetInvoicesParametersQueryStatus'EnumStringOpen) = "open"
  toJSON (GetInvoicesParametersQueryStatus'EnumStringPaid) = "paid"
  toJSON (GetInvoicesParametersQueryStatus'EnumStringUncollectible) = "uncollectible"
  toJSON (GetInvoicesParametersQueryStatus'EnumStringVoid) = "void"

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesParametersQueryStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "draft" -> GetInvoicesParametersQueryStatus'EnumStringDraft
            | val GHC.Classes.== "open" -> GetInvoicesParametersQueryStatus'EnumStringOpen
            | val GHC.Classes.== "paid" -> GetInvoicesParametersQueryStatus'EnumStringPaid
            | val GHC.Classes.== "uncollectible" -> GetInvoicesParametersQueryStatus'EnumStringUncollectible
            | val GHC.Classes.== "void" -> GetInvoicesParametersQueryStatus'EnumStringVoid
            | GHC.Base.otherwise -> GetInvoicesParametersQueryStatus'EnumOther val
      )

-- | Represents a response of the operation 'getInvoices'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetInvoicesResponseError' is used.
data GetInvoicesResponse
  = -- | Means either no matching case available or a parse error
    GetInvoicesResponseError GHC.Base.String
  | -- | Successful response.
    GetInvoicesResponse200 GetInvoicesResponseBody200
  | -- | Error response.
    GetInvoicesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the data type for the schema GetInvoicesResponseBody200
data GetInvoicesResponseBody200
  = GetInvoicesResponseBody200
      { -- | data
        getInvoicesResponseBody200Data :: ([Invoice]),
        -- | has_more: True if this list has another page of items after this one that can be fetched.
        getInvoicesResponseBody200HasMore :: GHC.Types.Bool,
        -- | object: String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
        getInvoicesResponseBody200Object :: GetInvoicesResponseBody200Object',
        -- | url: The URL where this list can be accessed.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        -- * Must match pattern \'^\/v1\/invoices\'
        getInvoicesResponseBody200Url :: Data.Text.Internal.Text
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesResponseBody200 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "data" (getInvoicesResponseBody200Data obj) : (Data.Aeson..=) "has_more" (getInvoicesResponseBody200HasMore obj) : (Data.Aeson..=) "object" (getInvoicesResponseBody200Object obj) : (Data.Aeson..=) "url" (getInvoicesResponseBody200Url obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "data" (getInvoicesResponseBody200Data obj) GHC.Base.<> ((Data.Aeson..=) "has_more" (getInvoicesResponseBody200HasMore obj) GHC.Base.<> ((Data.Aeson..=) "object" (getInvoicesResponseBody200Object obj) GHC.Base.<> (Data.Aeson..=) "url" (getInvoicesResponseBody200Url obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetInvoicesResponseBody200" (\obj -> (((GHC.Base.pure GetInvoicesResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Defines the enum schema GetInvoicesResponseBody200Object\'
--
-- String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
data GetInvoicesResponseBody200Object'
  = GetInvoicesResponseBody200Object'EnumOther Data.Aeson.Types.Internal.Value
  | GetInvoicesResponseBody200Object'EnumTyped Data.Text.Internal.Text
  | GetInvoicesResponseBody200Object'EnumStringList
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetInvoicesResponseBody200Object' where
  toJSON (GetInvoicesResponseBody200Object'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetInvoicesResponseBody200Object'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetInvoicesResponseBody200Object'EnumStringList) = "list"

instance Data.Aeson.Types.FromJSON.FromJSON GetInvoicesResponseBody200Object' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "list" -> GetInvoicesResponseBody200Object'EnumStringList
            | GHC.Base.otherwise -> GetInvoicesResponseBody200Object'EnumOther val
      )
