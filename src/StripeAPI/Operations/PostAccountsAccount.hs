{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postAccountsAccount
module StripeAPI.Operations.PostAccountsAccount where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/accounts/{account}
--
-- \<p>Updates a \<a href=\"\/docs\/connect\/accounts\">connected account\<\/a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked \<strong>Custom Only\<\/strong> below.) Parameters marked \<strong>Custom and Express\<\/strong> are not supported for Standard accounts.\<\/p>
--
-- \<p>To update your own account, use the \<a href=\"https:\/\/dashboard.stripe.com\/account\">Dashboard\<\/a>. Refer to our \<a href=\"\/docs\/connect\/updating-accounts\">Connect\<\/a> documentation to learn more about updating accounts.\<\/p>
postAccountsAccount ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | account | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostAccountsAccountRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostAccountsAccountResponse)
postAccountsAccount
  account
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostAccountsAccountResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountsAccountResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Account
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountsAccountResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/accounts/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel account)) GHC.Base.++ ""))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostAccountsAccountRequestBody = PostAccountsAccountRequestBody
  { -- | account_token: An [account token](https:\/\/stripe.com\/docs\/api\#create_account_token), used to securely provide details to the account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyAccountToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | bank_account: Either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/stripe.js), or a dictionary containing a user\'s bank account details.
    postAccountsAccountRequestBodyBankAccount :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyBankAccount'Variants),
    -- | business_profile: Business information about the account.
    postAccountsAccountRequestBodyBusinessProfile :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyBusinessProfile'),
    -- | business_type: The business type.
    postAccountsAccountRequestBodyBusinessType :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyBusinessType'),
    -- | capabilities: Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
    postAccountsAccountRequestBodyCapabilities :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'),
    -- | company: Information about the company or business. This field is available for any \`business_type\`.
    postAccountsAccountRequestBodyCompany :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'),
    -- | default_currency: Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account\'s country](https:\/\/stripe.com\/docs\/payouts).
    postAccountsAccountRequestBodyDefaultCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | documents: Documents that may be submitted to satisfy various informational requests.
    postAccountsAccountRequestBodyDocuments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'),
    -- | email: The email address of the account holder. This is only to make the account easier to identify to you. Stripe will never directly email Custom accounts.
    postAccountsAccountRequestBodyEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expand: Specifies which fields in the response should be expanded.
    postAccountsAccountRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | external_account: A card or bank account to attach to the account for receiving [payouts](https:\/\/stripe.com\/docs\/connect\/bank-debit-card-payouts) (you wonâ€™t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/stripe.js), or a dictionary, as documented in the \`external_account\` parameter for [bank account](https:\/\/stripe.com\/docs\/api\#account_create_bank_account) creation. \<br>\<br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the bank account or card creation API.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyExternalAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | individual: Information about the person represented by the account. This field is null unless \`business_type\` is set to \`individual\`.
    postAccountsAccountRequestBodyIndividual :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postAccountsAccountRequestBodyMetadata :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyMetadata'Variants),
    -- | settings: Options for customizing how the account functions within Stripe.
    postAccountsAccountRequestBodySettings :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'),
    -- | tos_acceptance: Details on the account\'s acceptance of the [Stripe Services Agreement](https:\/\/stripe.com\/docs\/connect\/updating-accounts\#tos-acceptance).
    postAccountsAccountRequestBodyTosAcceptance :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyTosAcceptance')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("account_token" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyAccountToken obj : "bank_account" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount obj : "business_profile" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile obj : "business_type" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessType obj : "capabilities" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities obj : "company" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany obj : "default_currency" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDefaultCurrency obj : "documents" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments obj : "email" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyEmail obj : "expand" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyExpand obj : "external_account" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyExternalAccount obj : "individual" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual obj : "metadata" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyMetadata obj : "settings" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings obj : "tos_acceptance" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("account_token" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyAccountToken obj) GHC.Base.<> (("bank_account" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount obj) GHC.Base.<> (("business_profile" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile obj) GHC.Base.<> (("business_type" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessType obj) GHC.Base.<> (("capabilities" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities obj) GHC.Base.<> (("company" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany obj) GHC.Base.<> (("default_currency" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDefaultCurrency obj) GHC.Base.<> (("documents" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments obj) GHC.Base.<> (("email" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyEmail obj) GHC.Base.<> (("expand" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyExpand obj) GHC.Base.<> (("external_account" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyExternalAccount obj) GHC.Base.<> (("individual" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyMetadata obj) GHC.Base.<> (("settings" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings obj) GHC.Base.<> ("tos_acceptance" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance obj)))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBody" (\obj -> ((((((((((((((GHC.Base.pure PostAccountsAccountRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_profile")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "business_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "capabilities")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "default_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "external_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "individual")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tos_acceptance"))

-- | Create a new 'PostAccountsAccountRequestBody' with all required fields.
mkPostAccountsAccountRequestBody :: PostAccountsAccountRequestBody
mkPostAccountsAccountRequestBody =
  PostAccountsAccountRequestBody
    { postAccountsAccountRequestBodyAccountToken = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBankAccount = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessType = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDefaultCurrency = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDocuments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyEmail = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyExpand = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyExternalAccount = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyMetadata = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyTosAcceptance = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf@ in the specification.
data PostAccountsAccountRequestBodyBankAccount'OneOf1 = PostAccountsAccountRequestBodyBankAccount'OneOf1
  { -- | account_holder_name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | account_holder_type
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'),
    -- | account_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber :: Data.Text.Internal.Text,
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBankAccount'OneOf1Country :: Data.Text.Internal.Text,
    -- | currency
    postAccountsAccountRequestBodyBankAccount'OneOf1Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | routing_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBankAccount'OneOf1RoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBankAccount'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("account_holder_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderName obj : "account_holder_type" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType obj : "account_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1Country obj : "currency" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1Currency obj : "routing_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1RoutingNumber obj : "object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "bank_account" : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("account_holder_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderName obj) GHC.Base.<> (("account_holder_type" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType obj) GHC.Base.<> (("account_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1Country obj) GHC.Base.<> (("currency" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1Currency obj) GHC.Base.<> (("routing_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBankAccount'OneOf1RoutingNumber obj) GHC.Base.<> ("object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "bank_account")))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBankAccount'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyBankAccount'OneOf1" (\obj -> (((((GHC.Base.pure PostAccountsAccountRequestBodyBankAccount'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "routing_number"))

-- | Create a new 'PostAccountsAccountRequestBodyBankAccount'OneOf1' with all required fields.
mkPostAccountsAccountRequestBodyBankAccount'OneOf1 ::
  -- | 'postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber'
  Data.Text.Internal.Text ->
  -- | 'postAccountsAccountRequestBodyBankAccount'OneOf1Country'
  Data.Text.Internal.Text ->
  PostAccountsAccountRequestBodyBankAccount'OneOf1
mkPostAccountsAccountRequestBodyBankAccount'OneOf1 postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber postAccountsAccountRequestBodyBankAccount'OneOf1Country =
  PostAccountsAccountRequestBodyBankAccount'OneOf1
    { postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderName = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber = postAccountsAccountRequestBodyBankAccount'OneOf1AccountNumber,
      postAccountsAccountRequestBodyBankAccount'OneOf1Country = postAccountsAccountRequestBodyBankAccount'OneOf1Country,
      postAccountsAccountRequestBodyBankAccount'OneOf1Currency = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBankAccount'OneOf1RoutingNumber = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.account_holder_type@ in the specification.
data PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"company"@
    PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany
  | -- | Represents the JSON value @"individual"@
    PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType' where
  toJSON (PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'Other val) = val
  toJSON (PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany) = "company"
  toJSON (PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual) = "individual"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "company" -> PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany
            | val GHC.Classes.== "individual" -> PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual
            | GHC.Base.otherwise -> PostAccountsAccountRequestBodyBankAccount'OneOf1AccountHolderType'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf@ in the specification.
--
-- Either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/stripe.js), or a dictionary containing a user\'s bank account details.
data PostAccountsAccountRequestBodyBankAccount'Variants
  = PostAccountsAccountRequestBodyBankAccount'PostAccountsAccountRequestBodyBankAccount'OneOf1 PostAccountsAccountRequestBodyBankAccount'OneOf1
  | PostAccountsAccountRequestBodyBankAccount'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBankAccount'Variants where
  toJSON (PostAccountsAccountRequestBodyBankAccount'PostAccountsAccountRequestBodyBankAccount'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountRequestBodyBankAccount'Text a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBankAccount'Variants where
  parseJSON val = case (PostAccountsAccountRequestBodyBankAccount'PostAccountsAccountRequestBodyBankAccount'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostAccountsAccountRequestBodyBankAccount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile@ in the specification.
--
-- Business information about the account.
data PostAccountsAccountRequestBodyBusinessProfile' = PostAccountsAccountRequestBodyBusinessProfile'
  { -- | mcc
    --
    -- Constraints:
    --
    -- * Maximum length of 4
    postAccountsAccountRequestBodyBusinessProfile'Mcc :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBusinessProfile'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_description
    --
    -- Constraints:
    --
    -- * Maximum length of 40000
    postAccountsAccountRequestBodyBusinessProfile'ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | support_address
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyBusinessProfile'SupportAddress'),
    -- | support_email
    postAccountsAccountRequestBodyBusinessProfile'SupportEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | support_phone
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBusinessProfile'SupportPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | support_url
    postAccountsAccountRequestBodyBusinessProfile'SupportUrl :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Variants),
    -- | url
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBusinessProfile'Url :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBusinessProfile' where
  toJSON obj = Data.Aeson.Types.Internal.object ("mcc" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'Mcc obj : "name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'Name obj : "product_description" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'ProductDescription obj : "support_address" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress obj : "support_email" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportEmail obj : "support_phone" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportPhone obj : "support_url" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportUrl obj : "url" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'Url obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("mcc" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'Mcc obj) GHC.Base.<> (("name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'Name obj) GHC.Base.<> (("product_description" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'ProductDescription obj) GHC.Base.<> (("support_address" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress obj) GHC.Base.<> (("support_email" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportEmail obj) GHC.Base.<> (("support_phone" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportPhone obj) GHC.Base.<> (("support_url" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportUrl obj) GHC.Base.<> ("url" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'Url obj))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBusinessProfile' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyBusinessProfile'" (\obj -> (((((((GHC.Base.pure PostAccountsAccountRequestBodyBusinessProfile' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "mcc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "support_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "support_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "support_phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "support_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "url"))

-- | Create a new 'PostAccountsAccountRequestBodyBusinessProfile'' with all required fields.
mkPostAccountsAccountRequestBodyBusinessProfile' :: PostAccountsAccountRequestBodyBusinessProfile'
mkPostAccountsAccountRequestBodyBusinessProfile' =
  PostAccountsAccountRequestBodyBusinessProfile'
    { postAccountsAccountRequestBodyBusinessProfile'Mcc = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'Name = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'ProductDescription = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportAddress = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportEmail = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportPhone = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportUrl = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'Url = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.support_address@ in the specification.
data PostAccountsAccountRequestBodyBusinessProfile'SupportAddress' = PostAccountsAccountRequestBodyBusinessProfile'SupportAddress'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyBusinessProfile'SupportAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBusinessProfile'SupportAddress' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'State obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'PostalCode obj) GHC.Base.<> ("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyBusinessProfile'SupportAddress'State obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBusinessProfile'SupportAddress' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyBusinessProfile'SupportAddress'" (\obj -> (((((GHC.Base.pure PostAccountsAccountRequestBodyBusinessProfile'SupportAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state"))

-- | Create a new 'PostAccountsAccountRequestBodyBusinessProfile'SupportAddress'' with all required fields.
mkPostAccountsAccountRequestBodyBusinessProfile'SupportAddress' :: PostAccountsAccountRequestBodyBusinessProfile'SupportAddress'
mkPostAccountsAccountRequestBodyBusinessProfile'SupportAddress' =
  PostAccountsAccountRequestBodyBusinessProfile'SupportAddress'
    { postAccountsAccountRequestBodyBusinessProfile'SupportAddress'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportAddress'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportAddress'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyBusinessProfile'SupportAddress'State = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.support_url.anyOf@ in the specification.
data PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'EmptyString
  | PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Variants where
  toJSON (PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountRequestBodyBusinessProfile'SupportUrl'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_type@ in the specification.
--
-- The business type.
data PostAccountsAccountRequestBodyBusinessType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsAccountRequestBodyBusinessType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsAccountRequestBodyBusinessType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"company"@
    PostAccountsAccountRequestBodyBusinessType'EnumCompany
  | -- | Represents the JSON value @"government_entity"@
    PostAccountsAccountRequestBodyBusinessType'EnumGovernmentEntity
  | -- | Represents the JSON value @"individual"@
    PostAccountsAccountRequestBodyBusinessType'EnumIndividual
  | -- | Represents the JSON value @"non_profit"@
    PostAccountsAccountRequestBodyBusinessType'EnumNonProfit
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyBusinessType' where
  toJSON (PostAccountsAccountRequestBodyBusinessType'Other val) = val
  toJSON (PostAccountsAccountRequestBodyBusinessType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsAccountRequestBodyBusinessType'EnumCompany) = "company"
  toJSON (PostAccountsAccountRequestBodyBusinessType'EnumGovernmentEntity) = "government_entity"
  toJSON (PostAccountsAccountRequestBodyBusinessType'EnumIndividual) = "individual"
  toJSON (PostAccountsAccountRequestBodyBusinessType'EnumNonProfit) = "non_profit"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyBusinessType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "company" -> PostAccountsAccountRequestBodyBusinessType'EnumCompany
            | val GHC.Classes.== "government_entity" -> PostAccountsAccountRequestBodyBusinessType'EnumGovernmentEntity
            | val GHC.Classes.== "individual" -> PostAccountsAccountRequestBodyBusinessType'EnumIndividual
            | val GHC.Classes.== "non_profit" -> PostAccountsAccountRequestBodyBusinessType'EnumNonProfit
            | GHC.Base.otherwise -> PostAccountsAccountRequestBodyBusinessType'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities@ in the specification.
--
-- Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
data PostAccountsAccountRequestBodyCapabilities' = PostAccountsAccountRequestBodyCapabilities'
  { -- | acss_debit_payments
    postAccountsAccountRequestBodyCapabilities'AcssDebitPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments'),
    -- | afterpay_clearpay_payments
    postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'),
    -- | au_becs_debit_payments
    postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'),
    -- | bacs_debit_payments
    postAccountsAccountRequestBodyCapabilities'BacsDebitPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments'),
    -- | bancontact_payments
    postAccountsAccountRequestBodyCapabilities'BancontactPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'BancontactPayments'),
    -- | card_issuing
    postAccountsAccountRequestBodyCapabilities'CardIssuing :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'CardIssuing'),
    -- | card_payments
    postAccountsAccountRequestBodyCapabilities'CardPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'CardPayments'),
    -- | cartes_bancaires_payments
    postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'),
    -- | eps_payments
    postAccountsAccountRequestBodyCapabilities'EpsPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'EpsPayments'),
    -- | fpx_payments
    postAccountsAccountRequestBodyCapabilities'FpxPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'FpxPayments'),
    -- | giropay_payments
    postAccountsAccountRequestBodyCapabilities'GiropayPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'GiropayPayments'),
    -- | grabpay_payments
    postAccountsAccountRequestBodyCapabilities'GrabpayPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'GrabpayPayments'),
    -- | ideal_payments
    postAccountsAccountRequestBodyCapabilities'IdealPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'IdealPayments'),
    -- | jcb_payments
    postAccountsAccountRequestBodyCapabilities'JcbPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'JcbPayments'),
    -- | legacy_payments
    postAccountsAccountRequestBodyCapabilities'LegacyPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'LegacyPayments'),
    -- | oxxo_payments
    postAccountsAccountRequestBodyCapabilities'OxxoPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'OxxoPayments'),
    -- | p24_payments
    postAccountsAccountRequestBodyCapabilities'P24Payments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'P24Payments'),
    -- | sepa_debit_payments
    postAccountsAccountRequestBodyCapabilities'SepaDebitPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments'),
    -- | sofort_payments
    postAccountsAccountRequestBodyCapabilities'SofortPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'SofortPayments'),
    -- | tax_reporting_us_1099_k
    postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'),
    -- | tax_reporting_us_1099_misc
    postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'),
    -- | transfers
    postAccountsAccountRequestBodyCapabilities'Transfers :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCapabilities'Transfers')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities' where
  toJSON obj = Data.Aeson.Types.Internal.object ("acss_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AcssDebitPayments obj : "afterpay_clearpay_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments obj : "au_becs_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments obj : "bacs_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BacsDebitPayments obj : "bancontact_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BancontactPayments obj : "card_issuing" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardIssuing obj : "card_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardPayments obj : "cartes_bancaires_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments obj : "eps_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'EpsPayments obj : "fpx_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'FpxPayments obj : "giropay_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GiropayPayments obj : "grabpay_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GrabpayPayments obj : "ideal_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'IdealPayments obj : "jcb_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'JcbPayments obj : "legacy_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'LegacyPayments obj : "oxxo_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'OxxoPayments obj : "p24_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'P24Payments obj : "sepa_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SepaDebitPayments obj : "sofort_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SofortPayments obj : "tax_reporting_us_1099_k" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K obj : "tax_reporting_us_1099_misc" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc obj : "transfers" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'Transfers obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("acss_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AcssDebitPayments obj) GHC.Base.<> (("afterpay_clearpay_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments obj) GHC.Base.<> (("au_becs_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments obj) GHC.Base.<> (("bacs_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BacsDebitPayments obj) GHC.Base.<> (("bancontact_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BancontactPayments obj) GHC.Base.<> (("card_issuing" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardIssuing obj) GHC.Base.<> (("card_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardPayments obj) GHC.Base.<> (("cartes_bancaires_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments obj) GHC.Base.<> (("eps_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'EpsPayments obj) GHC.Base.<> (("fpx_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'FpxPayments obj) GHC.Base.<> (("giropay_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GiropayPayments obj) GHC.Base.<> (("grabpay_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GrabpayPayments obj) GHC.Base.<> (("ideal_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'IdealPayments obj) GHC.Base.<> (("jcb_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'JcbPayments obj) GHC.Base.<> (("legacy_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'LegacyPayments obj) GHC.Base.<> (("oxxo_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'OxxoPayments obj) GHC.Base.<> (("p24_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'P24Payments obj) GHC.Base.<> (("sepa_debit_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SepaDebitPayments obj) GHC.Base.<> (("sofort_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SofortPayments obj) GHC.Base.<> (("tax_reporting_us_1099_k" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K obj) GHC.Base.<> (("tax_reporting_us_1099_misc" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc obj) GHC.Base.<> ("transfers" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'Transfers obj))))))))))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'" (\obj -> (((((((((((((((((((((GHC.Base.pure PostAccountsAccountRequestBodyCapabilities' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "acss_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "afterpay_clearpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "au_becs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bacs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bancontact_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cartes_bancaires_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "eps_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "fpx_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "giropay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "grabpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ideal_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "jcb_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "legacy_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "oxxo_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "p24_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sepa_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "sofort_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_reporting_us_1099_k")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_reporting_us_1099_misc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "transfers"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities' :: PostAccountsAccountRequestBodyCapabilities'
mkPostAccountsAccountRequestBodyCapabilities' =
  PostAccountsAccountRequestBodyCapabilities'
    { postAccountsAccountRequestBodyCapabilities'AcssDebitPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'BacsDebitPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'BancontactPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'CardIssuing = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'CardPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'EpsPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'FpxPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'GiropayPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'GrabpayPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'IdealPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'JcbPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'LegacyPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'OxxoPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'P24Payments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'SepaDebitPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'SofortPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCapabilities'Transfers = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.acss_debit_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' = PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'AcssDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AcssDebitPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AcssDebitPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' :: PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments'
mkPostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' = PostAccountsAccountRequestBodyCapabilities'AcssDebitPayments' {postAccountsAccountRequestBodyCapabilities'AcssDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.afterpay_clearpay_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' = PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' :: PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'
mkPostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' = PostAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments' {postAccountsAccountRequestBodyCapabilities'AfterpayClearpayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.au_becs_debit_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' = PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' :: PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'
mkPostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' = PostAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments' {postAccountsAccountRequestBodyCapabilities'AuBecsDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bacs_debit_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' = PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'BacsDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BacsDebitPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BacsDebitPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' :: PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments'
mkPostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' = PostAccountsAccountRequestBodyCapabilities'BacsDebitPayments' {postAccountsAccountRequestBodyCapabilities'BacsDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bancontact_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'BancontactPayments' = PostAccountsAccountRequestBodyCapabilities'BancontactPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'BancontactPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'BancontactPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BancontactPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'BancontactPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'BancontactPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'BancontactPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'BancontactPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'BancontactPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'BancontactPayments' :: PostAccountsAccountRequestBodyCapabilities'BancontactPayments'
mkPostAccountsAccountRequestBodyCapabilities'BancontactPayments' = PostAccountsAccountRequestBodyCapabilities'BancontactPayments' {postAccountsAccountRequestBodyCapabilities'BancontactPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.card_issuing@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'CardIssuing' = PostAccountsAccountRequestBodyCapabilities'CardIssuing'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'CardIssuing'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'CardIssuing' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardIssuing'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardIssuing'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'CardIssuing' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'CardIssuing'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'CardIssuing'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'CardIssuing' :: PostAccountsAccountRequestBodyCapabilities'CardIssuing'
mkPostAccountsAccountRequestBodyCapabilities'CardIssuing' = PostAccountsAccountRequestBodyCapabilities'CardIssuing' {postAccountsAccountRequestBodyCapabilities'CardIssuing'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.card_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'CardPayments' = PostAccountsAccountRequestBodyCapabilities'CardPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'CardPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'CardPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CardPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'CardPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'CardPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'CardPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'CardPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'CardPayments' :: PostAccountsAccountRequestBodyCapabilities'CardPayments'
mkPostAccountsAccountRequestBodyCapabilities'CardPayments' = PostAccountsAccountRequestBodyCapabilities'CardPayments' {postAccountsAccountRequestBodyCapabilities'CardPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.cartes_bancaires_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' = PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' :: PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'
mkPostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' = PostAccountsAccountRequestBodyCapabilities'CartesBancairesPayments' {postAccountsAccountRequestBodyCapabilities'CartesBancairesPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.eps_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'EpsPayments' = PostAccountsAccountRequestBodyCapabilities'EpsPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'EpsPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'EpsPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'EpsPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'EpsPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'EpsPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'EpsPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'EpsPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'EpsPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'EpsPayments' :: PostAccountsAccountRequestBodyCapabilities'EpsPayments'
mkPostAccountsAccountRequestBodyCapabilities'EpsPayments' = PostAccountsAccountRequestBodyCapabilities'EpsPayments' {postAccountsAccountRequestBodyCapabilities'EpsPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.fpx_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'FpxPayments' = PostAccountsAccountRequestBodyCapabilities'FpxPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'FpxPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'FpxPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'FpxPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'FpxPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'FpxPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'FpxPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'FpxPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'FpxPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'FpxPayments' :: PostAccountsAccountRequestBodyCapabilities'FpxPayments'
mkPostAccountsAccountRequestBodyCapabilities'FpxPayments' = PostAccountsAccountRequestBodyCapabilities'FpxPayments' {postAccountsAccountRequestBodyCapabilities'FpxPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.giropay_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'GiropayPayments' = PostAccountsAccountRequestBodyCapabilities'GiropayPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'GiropayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'GiropayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GiropayPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GiropayPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'GiropayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'GiropayPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'GiropayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'GiropayPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'GiropayPayments' :: PostAccountsAccountRequestBodyCapabilities'GiropayPayments'
mkPostAccountsAccountRequestBodyCapabilities'GiropayPayments' = PostAccountsAccountRequestBodyCapabilities'GiropayPayments' {postAccountsAccountRequestBodyCapabilities'GiropayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.grabpay_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'GrabpayPayments' = PostAccountsAccountRequestBodyCapabilities'GrabpayPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'GrabpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'GrabpayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GrabpayPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'GrabpayPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'GrabpayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'GrabpayPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'GrabpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'GrabpayPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'GrabpayPayments' :: PostAccountsAccountRequestBodyCapabilities'GrabpayPayments'
mkPostAccountsAccountRequestBodyCapabilities'GrabpayPayments' = PostAccountsAccountRequestBodyCapabilities'GrabpayPayments' {postAccountsAccountRequestBodyCapabilities'GrabpayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.ideal_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'IdealPayments' = PostAccountsAccountRequestBodyCapabilities'IdealPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'IdealPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'IdealPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'IdealPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'IdealPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'IdealPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'IdealPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'IdealPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'IdealPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'IdealPayments' :: PostAccountsAccountRequestBodyCapabilities'IdealPayments'
mkPostAccountsAccountRequestBodyCapabilities'IdealPayments' = PostAccountsAccountRequestBodyCapabilities'IdealPayments' {postAccountsAccountRequestBodyCapabilities'IdealPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.jcb_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'JcbPayments' = PostAccountsAccountRequestBodyCapabilities'JcbPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'JcbPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'JcbPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'JcbPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'JcbPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'JcbPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'JcbPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'JcbPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'JcbPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'JcbPayments' :: PostAccountsAccountRequestBodyCapabilities'JcbPayments'
mkPostAccountsAccountRequestBodyCapabilities'JcbPayments' = PostAccountsAccountRequestBodyCapabilities'JcbPayments' {postAccountsAccountRequestBodyCapabilities'JcbPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.legacy_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'LegacyPayments' = PostAccountsAccountRequestBodyCapabilities'LegacyPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'LegacyPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'LegacyPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'LegacyPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'LegacyPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'LegacyPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'LegacyPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'LegacyPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'LegacyPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'LegacyPayments' :: PostAccountsAccountRequestBodyCapabilities'LegacyPayments'
mkPostAccountsAccountRequestBodyCapabilities'LegacyPayments' = PostAccountsAccountRequestBodyCapabilities'LegacyPayments' {postAccountsAccountRequestBodyCapabilities'LegacyPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.oxxo_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'OxxoPayments' = PostAccountsAccountRequestBodyCapabilities'OxxoPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'OxxoPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'OxxoPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'OxxoPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'OxxoPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'OxxoPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'OxxoPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'OxxoPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'OxxoPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'OxxoPayments' :: PostAccountsAccountRequestBodyCapabilities'OxxoPayments'
mkPostAccountsAccountRequestBodyCapabilities'OxxoPayments' = PostAccountsAccountRequestBodyCapabilities'OxxoPayments' {postAccountsAccountRequestBodyCapabilities'OxxoPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.p24_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'P24Payments' = PostAccountsAccountRequestBodyCapabilities'P24Payments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'P24Payments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'P24Payments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'P24Payments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'P24Payments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'P24Payments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'P24Payments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'P24Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'P24Payments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'P24Payments' :: PostAccountsAccountRequestBodyCapabilities'P24Payments'
mkPostAccountsAccountRequestBodyCapabilities'P24Payments' = PostAccountsAccountRequestBodyCapabilities'P24Payments' {postAccountsAccountRequestBodyCapabilities'P24Payments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.sepa_debit_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' = PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'SepaDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SepaDebitPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SepaDebitPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' :: PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments'
mkPostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' = PostAccountsAccountRequestBodyCapabilities'SepaDebitPayments' {postAccountsAccountRequestBodyCapabilities'SepaDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.sofort_payments@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'SofortPayments' = PostAccountsAccountRequestBodyCapabilities'SofortPayments'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'SofortPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'SofortPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SofortPayments'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'SofortPayments'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'SofortPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'SofortPayments'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'SofortPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'SofortPayments'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'SofortPayments' :: PostAccountsAccountRequestBodyCapabilities'SofortPayments'
mkPostAccountsAccountRequestBodyCapabilities'SofortPayments' = PostAccountsAccountRequestBodyCapabilities'SofortPayments' {postAccountsAccountRequestBodyCapabilities'SofortPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.tax_reporting_us_1099_k@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' = PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' :: PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'
mkPostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' = PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K' {postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099K'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.tax_reporting_us_1099_misc@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' = PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' :: PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'
mkPostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' = PostAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc' {postAccountsAccountRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.transfers@ in the specification.
data PostAccountsAccountRequestBodyCapabilities'Transfers' = PostAccountsAccountRequestBodyCapabilities'Transfers'
  { -- | requested
    postAccountsAccountRequestBodyCapabilities'Transfers'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCapabilities'Transfers' where
  toJSON obj = Data.Aeson.Types.Internal.object ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'Transfers'Requested obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("requested" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCapabilities'Transfers'Requested obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCapabilities'Transfers' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCapabilities'Transfers'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCapabilities'Transfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "requested"))

-- | Create a new 'PostAccountsAccountRequestBodyCapabilities'Transfers'' with all required fields.
mkPostAccountsAccountRequestBodyCapabilities'Transfers' :: PostAccountsAccountRequestBodyCapabilities'Transfers'
mkPostAccountsAccountRequestBodyCapabilities'Transfers' = PostAccountsAccountRequestBodyCapabilities'Transfers' {postAccountsAccountRequestBodyCapabilities'Transfers'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company@ in the specification.
--
-- Information about the company or business. This field is available for any \`business_type\`.
data PostAccountsAccountRequestBodyCompany' = PostAccountsAccountRequestBodyCompany'
  { -- | address
    postAccountsAccountRequestBodyCompany'Address :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'Address'),
    -- | address_kana
    postAccountsAccountRequestBodyCompany'AddressKana :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'AddressKana'),
    -- | address_kanji
    postAccountsAccountRequestBodyCompany'AddressKanji :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'AddressKanji'),
    -- | directors_provided
    postAccountsAccountRequestBodyCompany'DirectorsProvided :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | executives_provided
    postAccountsAccountRequestBodyCompany'ExecutivesProvided :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyCompany'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyCompany'NameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyCompany'NameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | owners_provided
    postAccountsAccountRequestBodyCompany'OwnersProvided :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | phone
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | registration_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'RegistrationNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | structure
    postAccountsAccountRequestBodyCompany'Structure :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'Structure'),
    -- | tax_id
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'TaxId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | tax_id_registrar
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'TaxIdRegistrar :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | vat_id
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'VatId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | verification
    postAccountsAccountRequestBodyCompany'Verification :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'Verification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany' where
  toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address obj : "address_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana obj : "address_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji obj : "directors_provided" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'DirectorsProvided obj : "executives_provided" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'ExecutivesProvided obj : "name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Name obj : "name_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'NameKana obj : "name_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'NameKanji obj : "owners_provided" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'OwnersProvided obj : "phone" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Phone obj : "registration_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'RegistrationNumber obj : "structure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Structure obj : "tax_id" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'TaxId obj : "tax_id_registrar" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'TaxIdRegistrar obj : "vat_id" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'VatId obj : "verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address obj) GHC.Base.<> (("address_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana obj) GHC.Base.<> (("address_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji obj) GHC.Base.<> (("directors_provided" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'DirectorsProvided obj) GHC.Base.<> (("executives_provided" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'ExecutivesProvided obj) GHC.Base.<> (("name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Name obj) GHC.Base.<> (("name_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'NameKana obj) GHC.Base.<> (("name_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'NameKanji obj) GHC.Base.<> (("owners_provided" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'OwnersProvided obj) GHC.Base.<> (("phone" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Phone obj) GHC.Base.<> (("registration_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'RegistrationNumber obj) GHC.Base.<> (("structure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Structure obj) GHC.Base.<> (("tax_id" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'TaxId obj) GHC.Base.<> (("tax_id_registrar" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'TaxIdRegistrar obj) GHC.Base.<> (("vat_id" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'VatId obj) GHC.Base.<> ("verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification obj))))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCompany'" (\obj -> (((((((((((((((GHC.Base.pure PostAccountsAccountRequestBodyCompany' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "directors_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "executives_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "owners_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "registration_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "structure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_id_registrar")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "vat_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "verification"))

-- | Create a new 'PostAccountsAccountRequestBodyCompany'' with all required fields.
mkPostAccountsAccountRequestBodyCompany' :: PostAccountsAccountRequestBodyCompany'
mkPostAccountsAccountRequestBodyCompany' =
  PostAccountsAccountRequestBodyCompany'
    { postAccountsAccountRequestBodyCompany'Address = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'DirectorsProvided = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'ExecutivesProvided = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Name = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'NameKana = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'NameKanji = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'OwnersProvided = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Phone = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'RegistrationNumber = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Structure = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'TaxId = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'TaxIdRegistrar = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'VatId = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Verification = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address@ in the specification.
data PostAccountsAccountRequestBodyCompany'Address' = PostAccountsAccountRequestBodyCompany'Address'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyCompany'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountRequestBodyCompany'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountRequestBodyCompany'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany'Address' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'State obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'PostalCode obj) GHC.Base.<> ("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Address'State obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany'Address' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCompany'Address'" (\obj -> (((((GHC.Base.pure PostAccountsAccountRequestBodyCompany'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state"))

-- | Create a new 'PostAccountsAccountRequestBodyCompany'Address'' with all required fields.
mkPostAccountsAccountRequestBodyCompany'Address' :: PostAccountsAccountRequestBodyCompany'Address'
mkPostAccountsAccountRequestBodyCompany'Address' =
  PostAccountsAccountRequestBodyCompany'Address'
    { postAccountsAccountRequestBodyCompany'Address'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Address'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Address'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Address'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Address'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Address'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address_kana@ in the specification.
data PostAccountsAccountRequestBodyCompany'AddressKana' = PostAccountsAccountRequestBodyCompany'AddressKana'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany'AddressKana' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'State obj : "town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Town obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'PostalCode obj) GHC.Base.<> (("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'State obj) GHC.Base.<> ("town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKana'Town obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany'AddressKana' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCompany'AddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountRequestBodyCompany'AddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "town"))

-- | Create a new 'PostAccountsAccountRequestBodyCompany'AddressKana'' with all required fields.
mkPostAccountsAccountRequestBodyCompany'AddressKana' :: PostAccountsAccountRequestBodyCompany'AddressKana'
mkPostAccountsAccountRequestBodyCompany'AddressKana' =
  PostAccountsAccountRequestBodyCompany'AddressKana'
    { postAccountsAccountRequestBodyCompany'AddressKana'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana'State = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKana'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address_kanji@ in the specification.
data PostAccountsAccountRequestBodyCompany'AddressKanji' = PostAccountsAccountRequestBodyCompany'AddressKanji'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyCompany'AddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany'AddressKanji' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'State obj : "town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Town obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'PostalCode obj) GHC.Base.<> (("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'State obj) GHC.Base.<> ("town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'AddressKanji'Town obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany'AddressKanji' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCompany'AddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountRequestBodyCompany'AddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "town"))

-- | Create a new 'PostAccountsAccountRequestBodyCompany'AddressKanji'' with all required fields.
mkPostAccountsAccountRequestBodyCompany'AddressKanji' :: PostAccountsAccountRequestBodyCompany'AddressKanji'
mkPostAccountsAccountRequestBodyCompany'AddressKanji' =
  PostAccountsAccountRequestBodyCompany'AddressKanji'
    { postAccountsAccountRequestBodyCompany'AddressKanji'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji'State = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'AddressKanji'Town = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.structure@ in the specification.
data PostAccountsAccountRequestBodyCompany'Structure'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsAccountRequestBodyCompany'Structure'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsAccountRequestBodyCompany'Structure'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostAccountsAccountRequestBodyCompany'Structure'EnumEmptyString
  | -- | Represents the JSON value @"free_zone_establishment"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumFreeZoneEstablishment
  | -- | Represents the JSON value @"free_zone_llc"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumFreeZoneLlc
  | -- | Represents the JSON value @"government_instrumentality"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumGovernmentInstrumentality
  | -- | Represents the JSON value @"governmental_unit"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumGovernmentalUnit
  | -- | Represents the JSON value @"incorporated_non_profit"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumIncorporatedNonProfit
  | -- | Represents the JSON value @"limited_liability_partnership"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership
  | -- | Represents the JSON value @"llc"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumLlc
  | -- | Represents the JSON value @"multi_member_llc"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumMultiMemberLlc
  | -- | Represents the JSON value @"private_company"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumPrivateCompany
  | -- | Represents the JSON value @"private_corporation"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumPrivateCorporation
  | -- | Represents the JSON value @"private_partnership"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumPrivatePartnership
  | -- | Represents the JSON value @"public_company"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumPublicCompany
  | -- | Represents the JSON value @"public_corporation"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumPublicCorporation
  | -- | Represents the JSON value @"public_partnership"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumPublicPartnership
  | -- | Represents the JSON value @"single_member_llc"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumSingleMemberLlc
  | -- | Represents the JSON value @"sole_establishment"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumSoleEstablishment
  | -- | Represents the JSON value @"sole_proprietorship"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumSoleProprietorship
  | -- | Represents the JSON value @"tax_exempt_government_instrumentality"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality
  | -- | Represents the JSON value @"unincorporated_association"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumUnincorporatedAssociation
  | -- | Represents the JSON value @"unincorporated_non_profit"@
    PostAccountsAccountRequestBodyCompany'Structure'EnumUnincorporatedNonProfit
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany'Structure' where
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'Other val) = val
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumEmptyString) = ""
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumFreeZoneEstablishment) = "free_zone_establishment"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumFreeZoneLlc) = "free_zone_llc"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumGovernmentInstrumentality) = "government_instrumentality"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumGovernmentalUnit) = "governmental_unit"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumIncorporatedNonProfit) = "incorporated_non_profit"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership) = "limited_liability_partnership"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumLlc) = "llc"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumMultiMemberLlc) = "multi_member_llc"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumPrivateCompany) = "private_company"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumPrivateCorporation) = "private_corporation"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumPrivatePartnership) = "private_partnership"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumPublicCompany) = "public_company"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumPublicCorporation) = "public_corporation"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumPublicPartnership) = "public_partnership"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumSingleMemberLlc) = "single_member_llc"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumSoleEstablishment) = "sole_establishment"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumSoleProprietorship) = "sole_proprietorship"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality) = "tax_exempt_government_instrumentality"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumUnincorporatedAssociation) = "unincorporated_association"
  toJSON (PostAccountsAccountRequestBodyCompany'Structure'EnumUnincorporatedNonProfit) = "unincorporated_non_profit"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany'Structure' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostAccountsAccountRequestBodyCompany'Structure'EnumEmptyString
            | val GHC.Classes.== "free_zone_establishment" -> PostAccountsAccountRequestBodyCompany'Structure'EnumFreeZoneEstablishment
            | val GHC.Classes.== "free_zone_llc" -> PostAccountsAccountRequestBodyCompany'Structure'EnumFreeZoneLlc
            | val GHC.Classes.== "government_instrumentality" -> PostAccountsAccountRequestBodyCompany'Structure'EnumGovernmentInstrumentality
            | val GHC.Classes.== "governmental_unit" -> PostAccountsAccountRequestBodyCompany'Structure'EnumGovernmentalUnit
            | val GHC.Classes.== "incorporated_non_profit" -> PostAccountsAccountRequestBodyCompany'Structure'EnumIncorporatedNonProfit
            | val GHC.Classes.== "limited_liability_partnership" -> PostAccountsAccountRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership
            | val GHC.Classes.== "llc" -> PostAccountsAccountRequestBodyCompany'Structure'EnumLlc
            | val GHC.Classes.== "multi_member_llc" -> PostAccountsAccountRequestBodyCompany'Structure'EnumMultiMemberLlc
            | val GHC.Classes.== "private_company" -> PostAccountsAccountRequestBodyCompany'Structure'EnumPrivateCompany
            | val GHC.Classes.== "private_corporation" -> PostAccountsAccountRequestBodyCompany'Structure'EnumPrivateCorporation
            | val GHC.Classes.== "private_partnership" -> PostAccountsAccountRequestBodyCompany'Structure'EnumPrivatePartnership
            | val GHC.Classes.== "public_company" -> PostAccountsAccountRequestBodyCompany'Structure'EnumPublicCompany
            | val GHC.Classes.== "public_corporation" -> PostAccountsAccountRequestBodyCompany'Structure'EnumPublicCorporation
            | val GHC.Classes.== "public_partnership" -> PostAccountsAccountRequestBodyCompany'Structure'EnumPublicPartnership
            | val GHC.Classes.== "single_member_llc" -> PostAccountsAccountRequestBodyCompany'Structure'EnumSingleMemberLlc
            | val GHC.Classes.== "sole_establishment" -> PostAccountsAccountRequestBodyCompany'Structure'EnumSoleEstablishment
            | val GHC.Classes.== "sole_proprietorship" -> PostAccountsAccountRequestBodyCompany'Structure'EnumSoleProprietorship
            | val GHC.Classes.== "tax_exempt_government_instrumentality" -> PostAccountsAccountRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality
            | val GHC.Classes.== "unincorporated_association" -> PostAccountsAccountRequestBodyCompany'Structure'EnumUnincorporatedAssociation
            | val GHC.Classes.== "unincorporated_non_profit" -> PostAccountsAccountRequestBodyCompany'Structure'EnumUnincorporatedNonProfit
            | GHC.Base.otherwise -> PostAccountsAccountRequestBodyCompany'Structure'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.verification@ in the specification.
data PostAccountsAccountRequestBodyCompany'Verification' = PostAccountsAccountRequestBodyCompany'Verification'
  { -- | document
    postAccountsAccountRequestBodyCompany'Verification'Document :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyCompany'Verification'Document')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany'Verification' where
  toJSON obj = Data.Aeson.Types.Internal.object ("document" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification'Document obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("document" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification'Document obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany'Verification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCompany'Verification'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyCompany'Verification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "document"))

-- | Create a new 'PostAccountsAccountRequestBodyCompany'Verification'' with all required fields.
mkPostAccountsAccountRequestBodyCompany'Verification' :: PostAccountsAccountRequestBodyCompany'Verification'
mkPostAccountsAccountRequestBodyCompany'Verification' = PostAccountsAccountRequestBodyCompany'Verification' {postAccountsAccountRequestBodyCompany'Verification'Document = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.verification.properties.document@ in the specification.
data PostAccountsAccountRequestBodyCompany'Verification'Document' = PostAccountsAccountRequestBodyCompany'Verification'Document'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountRequestBodyCompany'Verification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountRequestBodyCompany'Verification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyCompany'Verification'Document' where
  toJSON obj = Data.Aeson.Types.Internal.object ("back" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification'Document'Back obj : "front" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification'Document'Front obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("back" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification'Document'Back obj) GHC.Base.<> ("front" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyCompany'Verification'Document'Front obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyCompany'Verification'Document' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyCompany'Verification'Document'" (\obj -> (GHC.Base.pure PostAccountsAccountRequestBodyCompany'Verification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "front"))

-- | Create a new 'PostAccountsAccountRequestBodyCompany'Verification'Document'' with all required fields.
mkPostAccountsAccountRequestBodyCompany'Verification'Document' :: PostAccountsAccountRequestBodyCompany'Verification'Document'
mkPostAccountsAccountRequestBodyCompany'Verification'Document' =
  PostAccountsAccountRequestBodyCompany'Verification'Document'
    { postAccountsAccountRequestBodyCompany'Verification'Document'Back = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyCompany'Verification'Document'Front = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents@ in the specification.
--
-- Documents that may be submitted to satisfy various informational requests.
data PostAccountsAccountRequestBodyDocuments' = PostAccountsAccountRequestBodyDocuments'
  { -- | bank_account_ownership_verification
    postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'),
    -- | company_license
    postAccountsAccountRequestBodyDocuments'CompanyLicense :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'CompanyLicense'),
    -- | company_memorandum_of_association
    postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'),
    -- | company_ministerial_decree
    postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'),
    -- | company_registration_verification
    postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'),
    -- | company_tax_id_verification
    postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification obj : "company_license" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyLicense obj : "company_memorandum_of_association" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation obj : "company_ministerial_decree" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree obj : "company_registration_verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification obj : "company_tax_id_verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification obj) GHC.Base.<> (("company_license" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyLicense obj) GHC.Base.<> (("company_memorandum_of_association" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation obj) GHC.Base.<> (("company_ministerial_decree" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree obj) GHC.Base.<> (("company_registration_verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification obj) GHC.Base.<> ("company_tax_id_verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'" (\obj -> (((((GHC.Base.pure PostAccountsAccountRequestBodyDocuments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "bank_account_ownership_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company_license")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company_memorandum_of_association")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company_ministerial_decree")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company_registration_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "company_tax_id_verification"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments' :: PostAccountsAccountRequestBodyDocuments'
mkPostAccountsAccountRequestBodyDocuments' =
  PostAccountsAccountRequestBodyDocuments'
    { postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDocuments'CompanyLicense = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.bank_account_ownership_verification@ in the specification.
data PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' = PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'
  { -- | files
    postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "files"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' :: PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'
mkPostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' = PostAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification' {postAccountsAccountRequestBodyDocuments'BankAccountOwnershipVerification'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_license@ in the specification.
data PostAccountsAccountRequestBodyDocuments'CompanyLicense' = PostAccountsAccountRequestBodyDocuments'CompanyLicense'
  { -- | files
    postAccountsAccountRequestBodyDocuments'CompanyLicense'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments'CompanyLicense' where
  toJSON obj = Data.Aeson.Types.Internal.object ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyLicense'Files obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyLicense'Files obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments'CompanyLicense' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'CompanyLicense'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyDocuments'CompanyLicense' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "files"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'CompanyLicense'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments'CompanyLicense' :: PostAccountsAccountRequestBodyDocuments'CompanyLicense'
mkPostAccountsAccountRequestBodyDocuments'CompanyLicense' = PostAccountsAccountRequestBodyDocuments'CompanyLicense' {postAccountsAccountRequestBodyDocuments'CompanyLicense'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_memorandum_of_association@ in the specification.
data PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' = PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'
  { -- | files
    postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' where
  toJSON obj = Data.Aeson.Types.Internal.object ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "files"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' :: PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'
mkPostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' = PostAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation' {postAccountsAccountRequestBodyDocuments'CompanyMemorandumOfAssociation'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_ministerial_decree@ in the specification.
data PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' = PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'
  { -- | files
    postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' where
  toJSON obj = Data.Aeson.Types.Internal.object ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'Files obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'Files obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "files"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' :: PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'
mkPostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' = PostAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree' {postAccountsAccountRequestBodyDocuments'CompanyMinisterialDecree'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_registration_verification@ in the specification.
data PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' = PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'
  { -- | files
    postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'Files obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'Files obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "files"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' :: PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'
mkPostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' = PostAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification' {postAccountsAccountRequestBodyDocuments'CompanyRegistrationVerification'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_tax_id_verification@ in the specification.
data PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' = PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'
  { -- | files
    postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'Files obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("files" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'Files obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "files"))

-- | Create a new 'PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'' with all required fields.
mkPostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' :: PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'
mkPostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' = PostAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification' {postAccountsAccountRequestBodyDocuments'CompanyTaxIdVerification'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual@ in the specification.
--
-- Information about the person represented by the account. This field is null unless \`business_type\` is set to \`individual\`.
data PostAccountsAccountRequestBodyIndividual' = PostAccountsAccountRequestBodyIndividual'
  { -- | address
    postAccountsAccountRequestBodyIndividual'Address :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'Address'),
    -- | address_kana
    postAccountsAccountRequestBodyIndividual'AddressKana :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'AddressKana'),
    -- | address_kanji
    postAccountsAccountRequestBodyIndividual'AddressKanji :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'AddressKanji'),
    -- | dob
    postAccountsAccountRequestBodyIndividual'Dob :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'Dob'Variants),
    -- | email
    postAccountsAccountRequestBodyIndividual'Email :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyIndividual'FirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'FirstNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'FirstNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | gender
    postAccountsAccountRequestBodyIndividual'Gender :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | id_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'IdNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyIndividual'LastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'LastNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'LastNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | maiden_name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'MaidenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | metadata
    postAccountsAccountRequestBodyIndividual'Metadata :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'Metadata'Variants),
    -- | phone
    postAccountsAccountRequestBodyIndividual'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | political_exposure
    postAccountsAccountRequestBodyIndividual'PoliticalExposure :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'PoliticalExposure'),
    -- | ssn_last_4
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'SsnLast_4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | verification
    postAccountsAccountRequestBodyIndividual'Verification :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'Verification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual' where
  toJSON obj = Data.Aeson.Types.Internal.object ("address" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address obj : "address_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana obj : "address_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji obj : "dob" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob obj : "email" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Email obj : "first_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'FirstName obj : "first_name_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'FirstNameKana obj : "first_name_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'FirstNameKanji obj : "gender" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Gender obj : "id_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'IdNumber obj : "last_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'LastName obj : "last_name_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'LastNameKana obj : "last_name_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'LastNameKanji obj : "maiden_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'MaidenName obj : "metadata" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Metadata obj : "phone" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Phone obj : "political_exposure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'PoliticalExposure obj : "ssn_last_4" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'SsnLast_4 obj : "verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("address" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address obj) GHC.Base.<> (("address_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana obj) GHC.Base.<> (("address_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji obj) GHC.Base.<> (("dob" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob obj) GHC.Base.<> (("email" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Email obj) GHC.Base.<> (("first_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'FirstName obj) GHC.Base.<> (("first_name_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'FirstNameKana obj) GHC.Base.<> (("first_name_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'FirstNameKanji obj) GHC.Base.<> (("gender" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Gender obj) GHC.Base.<> (("id_number" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'IdNumber obj) GHC.Base.<> (("last_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'LastName obj) GHC.Base.<> (("last_name_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'LastNameKana obj) GHC.Base.<> (("last_name_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'LastNameKanji obj) GHC.Base.<> (("maiden_name" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'MaidenName obj) GHC.Base.<> (("metadata" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Metadata obj) GHC.Base.<> (("phone" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Phone obj) GHC.Base.<> (("political_exposure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'PoliticalExposure obj) GHC.Base.<> (("ssn_last_4" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'SsnLast_4 obj) GHC.Base.<> ("verification" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification obj)))))))))))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'" (\obj -> ((((((((((((((((((GHC.Base.pure PostAccountsAccountRequestBodyIndividual' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "first_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gender")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "last_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "maiden_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "political_exposure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ssn_last_4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "verification"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual' :: PostAccountsAccountRequestBodyIndividual'
mkPostAccountsAccountRequestBodyIndividual' =
  PostAccountsAccountRequestBodyIndividual'
    { postAccountsAccountRequestBodyIndividual'Address = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Dob = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Email = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'FirstName = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'FirstNameKana = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'FirstNameKanji = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Gender = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'IdNumber = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'LastName = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'LastNameKana = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'LastNameKanji = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'MaidenName = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Metadata = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Phone = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'PoliticalExposure = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'SsnLast_4 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Verification = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Address' = PostAccountsAccountRequestBodyIndividual'Address'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsAccountRequestBodyIndividual'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountRequestBodyIndividual'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsAccountRequestBodyIndividual'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Address' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'State obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'PostalCode obj) GHC.Base.<> ("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Address'State obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Address' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'Address'" (\obj -> (((((GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'Address'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'Address' :: PostAccountsAccountRequestBodyIndividual'Address'
mkPostAccountsAccountRequestBodyIndividual'Address' =
  PostAccountsAccountRequestBodyIndividual'Address'
    { postAccountsAccountRequestBodyIndividual'Address'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Address'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Address'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Address'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Address'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Address'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address_kana@ in the specification.
data PostAccountsAccountRequestBodyIndividual'AddressKana' = PostAccountsAccountRequestBodyIndividual'AddressKana'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'AddressKana' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'State obj : "town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Town obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'PostalCode obj) GHC.Base.<> (("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'State obj) GHC.Base.<> ("town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKana'Town obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'AddressKana' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'AddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountRequestBodyIndividual'AddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "town"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'AddressKana'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'AddressKana' :: PostAccountsAccountRequestBodyIndividual'AddressKana'
mkPostAccountsAccountRequestBodyIndividual'AddressKana' =
  PostAccountsAccountRequestBodyIndividual'AddressKana'
    { postAccountsAccountRequestBodyIndividual'AddressKana'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana'State = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKana'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address_kanji@ in the specification.
data PostAccountsAccountRequestBodyIndividual'AddressKanji' = PostAccountsAccountRequestBodyIndividual'AddressKanji'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyIndividual'AddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'AddressKanji' where
  toJSON obj = Data.Aeson.Types.Internal.object ("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'City obj : "country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Country obj : "line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Line1 obj : "line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Line2 obj : "postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'PostalCode obj : "state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'State obj : "town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Town obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("city" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'City obj) GHC.Base.<> (("country" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Country obj) GHC.Base.<> (("line1" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Line1 obj) GHC.Base.<> (("line2" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Line2 obj) GHC.Base.<> (("postal_code" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'PostalCode obj) GHC.Base.<> (("state" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'State obj) GHC.Base.<> ("town" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'AddressKanji'Town obj)))))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'AddressKanji' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'AddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsAccountRequestBodyIndividual'AddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "town"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'AddressKanji'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'AddressKanji' :: PostAccountsAccountRequestBodyIndividual'AddressKanji'
mkPostAccountsAccountRequestBodyIndividual'AddressKanji' =
  PostAccountsAccountRequestBodyIndividual'AddressKanji'
    { postAccountsAccountRequestBodyIndividual'AddressKanji'City = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji'Country = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji'Line1 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji'Line2 = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji'PostalCode = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji'State = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'AddressKanji'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.dob.anyOf@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 = PostAccountsAccountRequestBodyIndividual'Dob'OneOf1
  { -- | day
    postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day :: GHC.Types.Int,
    -- | month
    postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month :: GHC.Types.Int,
    -- | year
    postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("day" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day obj : "month" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month obj : "year" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("day" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day obj) GHC.Base.<> (("month" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month obj) GHC.Base.<> ("year" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'Dob'OneOf1" (\obj -> ((GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'Dob'OneOf1' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'Dob'OneOf1 ::
  -- | 'postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day'
  GHC.Types.Int ->
  -- | 'postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month'
  GHC.Types.Int ->
  -- | 'postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year'
  GHC.Types.Int ->
  PostAccountsAccountRequestBodyIndividual'Dob'OneOf1
mkPostAccountsAccountRequestBodyIndividual'Dob'OneOf1 postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year =
  PostAccountsAccountRequestBodyIndividual'Dob'OneOf1
    { postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day = postAccountsAccountRequestBodyIndividual'Dob'OneOf1Day,
      postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month = postAccountsAccountRequestBodyIndividual'Dob'OneOf1Month,
      postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year = postAccountsAccountRequestBodyIndividual'Dob'OneOf1Year
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.dob.anyOf@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Dob'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountRequestBodyIndividual'Dob'EmptyString
  | PostAccountsAccountRequestBodyIndividual'Dob'PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 PostAccountsAccountRequestBodyIndividual'Dob'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Dob'Variants where
  toJSON (PostAccountsAccountRequestBodyIndividual'Dob'PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountRequestBodyIndividual'Dob'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Dob'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Dob'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountRequestBodyIndividual'Dob'PostAccountsAccountRequestBodyIndividual'Dob'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.metadata.anyOf@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Metadata'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountRequestBodyIndividual'Metadata'EmptyString
  | PostAccountsAccountRequestBodyIndividual'Metadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Metadata'Variants where
  toJSON (PostAccountsAccountRequestBodyIndividual'Metadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountRequestBodyIndividual'Metadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Metadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Metadata'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountRequestBodyIndividual'Metadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.political_exposure@ in the specification.
data PostAccountsAccountRequestBodyIndividual'PoliticalExposure'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsAccountRequestBodyIndividual'PoliticalExposure'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsAccountRequestBodyIndividual'PoliticalExposure'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"existing"@
    PostAccountsAccountRequestBodyIndividual'PoliticalExposure'EnumExisting
  | -- | Represents the JSON value @"none"@
    PostAccountsAccountRequestBodyIndividual'PoliticalExposure'EnumNone
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'PoliticalExposure' where
  toJSON (PostAccountsAccountRequestBodyIndividual'PoliticalExposure'Other val) = val
  toJSON (PostAccountsAccountRequestBodyIndividual'PoliticalExposure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsAccountRequestBodyIndividual'PoliticalExposure'EnumExisting) = "existing"
  toJSON (PostAccountsAccountRequestBodyIndividual'PoliticalExposure'EnumNone) = "none"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'PoliticalExposure' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "existing" -> PostAccountsAccountRequestBodyIndividual'PoliticalExposure'EnumExisting
            | val GHC.Classes.== "none" -> PostAccountsAccountRequestBodyIndividual'PoliticalExposure'EnumNone
            | GHC.Base.otherwise -> PostAccountsAccountRequestBodyIndividual'PoliticalExposure'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Verification' = PostAccountsAccountRequestBodyIndividual'Verification'
  { -- | additional_document
    postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'),
    -- | document
    postAccountsAccountRequestBodyIndividual'Verification'Document :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodyIndividual'Verification'Document')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Verification' where
  toJSON obj = Data.Aeson.Types.Internal.object ("additional_document" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument obj : "document" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'Document obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("additional_document" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument obj) GHC.Base.<> ("document" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'Document obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Verification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'Verification'" (\obj -> (GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Verification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "additional_document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "document"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'Verification'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'Verification' :: PostAccountsAccountRequestBodyIndividual'Verification'
mkPostAccountsAccountRequestBodyIndividual'Verification' =
  PostAccountsAccountRequestBodyIndividual'Verification'
    { postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Verification'Document = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification.properties.additional_document@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument' = PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument' where
  toJSON obj = Data.Aeson.Types.Internal.object ("back" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Back obj : "front" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Front obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("back" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Back obj) GHC.Base.<> ("front" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Front obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'" (\obj -> (GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "front"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument' :: PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'
mkPostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument' =
  PostAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'
    { postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Back = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Verification'AdditionalDocument'Front = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification.properties.document@ in the specification.
data PostAccountsAccountRequestBodyIndividual'Verification'Document' = PostAccountsAccountRequestBodyIndividual'Verification'Document'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountRequestBodyIndividual'Verification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsAccountRequestBodyIndividual'Verification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyIndividual'Verification'Document' where
  toJSON obj = Data.Aeson.Types.Internal.object ("back" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'Document'Back obj : "front" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'Document'Front obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("back" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'Document'Back obj) GHC.Base.<> ("front" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyIndividual'Verification'Document'Front obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyIndividual'Verification'Document' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyIndividual'Verification'Document'" (\obj -> (GHC.Base.pure PostAccountsAccountRequestBodyIndividual'Verification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "front"))

-- | Create a new 'PostAccountsAccountRequestBodyIndividual'Verification'Document'' with all required fields.
mkPostAccountsAccountRequestBodyIndividual'Verification'Document' :: PostAccountsAccountRequestBodyIndividual'Verification'Document'
mkPostAccountsAccountRequestBodyIndividual'Verification'Document' =
  PostAccountsAccountRequestBodyIndividual'Verification'Document'
    { postAccountsAccountRequestBodyIndividual'Verification'Document'Back = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyIndividual'Verification'Document'Front = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostAccountsAccountRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostAccountsAccountRequestBodyMetadata'EmptyString
  | PostAccountsAccountRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyMetadata'Variants where
  toJSON (PostAccountsAccountRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsAccountRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsAccountRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings@ in the specification.
--
-- Options for customizing how the account functions within Stripe.
data PostAccountsAccountRequestBodySettings' = PostAccountsAccountRequestBodySettings'
  { -- | branding
    postAccountsAccountRequestBodySettings'Branding :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Branding'),
    -- | card_issuing
    postAccountsAccountRequestBodySettings'CardIssuing :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'CardIssuing'),
    -- | card_payments
    postAccountsAccountRequestBodySettings'CardPayments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'CardPayments'),
    -- | payments
    postAccountsAccountRequestBodySettings'Payments :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Payments'),
    -- | payouts
    postAccountsAccountRequestBodySettings'Payouts :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Payouts')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings' where
  toJSON obj = Data.Aeson.Types.Internal.object ("branding" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding obj : "card_issuing" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing obj : "card_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments obj : "payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments obj : "payouts" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("branding" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding obj) GHC.Base.<> (("card_issuing" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing obj) GHC.Base.<> (("card_payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments obj) GHC.Base.<> (("payments" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments obj) GHC.Base.<> ("payouts" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts obj)))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'" (\obj -> ((((GHC.Base.pure PostAccountsAccountRequestBodySettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "branding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "payouts"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'' with all required fields.
mkPostAccountsAccountRequestBodySettings' :: PostAccountsAccountRequestBodySettings'
mkPostAccountsAccountRequestBodySettings' =
  PostAccountsAccountRequestBodySettings'
    { postAccountsAccountRequestBodySettings'Branding = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'CardIssuing = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'CardPayments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payments = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payouts = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.branding@ in the specification.
data PostAccountsAccountRequestBodySettings'Branding' = PostAccountsAccountRequestBodySettings'Branding'
  { -- | icon
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'Branding'Icon :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | logo
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'Branding'Logo :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | primary_color
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'Branding'PrimaryColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | secondary_color
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'Branding'SecondaryColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Branding' where
  toJSON obj = Data.Aeson.Types.Internal.object ("icon" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'Icon obj : "logo" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'Logo obj : "primary_color" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'PrimaryColor obj : "secondary_color" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'SecondaryColor obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("icon" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'Icon obj) GHC.Base.<> (("logo" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'Logo obj) GHC.Base.<> (("primary_color" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'PrimaryColor obj) GHC.Base.<> ("secondary_color" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Branding'SecondaryColor obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Branding' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'Branding'" (\obj -> (((GHC.Base.pure PostAccountsAccountRequestBodySettings'Branding' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "icon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "primary_color")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "secondary_color"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'Branding'' with all required fields.
mkPostAccountsAccountRequestBodySettings'Branding' :: PostAccountsAccountRequestBodySettings'Branding'
mkPostAccountsAccountRequestBodySettings'Branding' =
  PostAccountsAccountRequestBodySettings'Branding'
    { postAccountsAccountRequestBodySettings'Branding'Icon = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Branding'Logo = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Branding'PrimaryColor = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Branding'SecondaryColor = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing@ in the specification.
data PostAccountsAccountRequestBodySettings'CardIssuing' = PostAccountsAccountRequestBodySettings'CardIssuing'
  { -- | tos_acceptance
    postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'CardIssuing' where
  toJSON obj = Data.Aeson.Types.Internal.object ("tos_acceptance" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("tos_acceptance" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'CardIssuing' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'CardIssuing'" (\obj -> GHC.Base.pure PostAccountsAccountRequestBodySettings'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tos_acceptance"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'CardIssuing'' with all required fields.
mkPostAccountsAccountRequestBodySettings'CardIssuing' :: PostAccountsAccountRequestBodySettings'CardIssuing'
mkPostAccountsAccountRequestBodySettings'CardIssuing' = PostAccountsAccountRequestBodySettings'CardIssuing' {postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing.properties.tos_acceptance@ in the specification.
data PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance' = PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'
  { -- | date
    postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | ip
    postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_agent
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance' where
  toJSON obj = Data.Aeson.Types.Internal.object ("date" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Date obj : "ip" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip obj : "user_agent" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("date" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Date obj) GHC.Base.<> (("ip" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip obj) GHC.Base.<> ("user_agent" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'" (\obj -> ((GHC.Base.pure PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "user_agent"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'' with all required fields.
mkPostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance' :: PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'
mkPostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance' =
  PostAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'
    { postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Date = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'Ip = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'CardIssuing'TosAcceptance'UserAgent = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments@ in the specification.
data PostAccountsAccountRequestBodySettings'CardPayments' = PostAccountsAccountRequestBodySettings'CardPayments'
  { -- | decline_on
    postAccountsAccountRequestBodySettings'CardPayments'DeclineOn :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn'),
    -- | statement_descriptor_prefix
    --
    -- Constraints:
    --
    -- * Maximum length of 10
    postAccountsAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'CardPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("decline_on" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'DeclineOn obj : "statement_descriptor_prefix" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("decline_on" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'DeclineOn obj) GHC.Base.<> ("statement_descriptor_prefix" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'CardPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'CardPayments'" (\obj -> (GHC.Base.pure PostAccountsAccountRequestBodySettings'CardPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "decline_on")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor_prefix"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'CardPayments'' with all required fields.
mkPostAccountsAccountRequestBodySettings'CardPayments' :: PostAccountsAccountRequestBodySettings'CardPayments'
mkPostAccountsAccountRequestBodySettings'CardPayments' =
  PostAccountsAccountRequestBodySettings'CardPayments'
    { postAccountsAccountRequestBodySettings'CardPayments'DeclineOn = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'CardPayments'StatementDescriptorPrefix = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.decline_on@ in the specification.
data PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn' = PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn'
  { -- | avs_failure
    postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | cvc_failure
    postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn' where
  toJSON obj = Data.Aeson.Types.Internal.object ("avs_failure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure obj : "cvc_failure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("avs_failure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure obj) GHC.Base.<> ("cvc_failure" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn'" (\obj -> (GHC.Base.pure PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "avs_failure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "cvc_failure"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn'' with all required fields.
mkPostAccountsAccountRequestBodySettings'CardPayments'DeclineOn' :: PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn'
mkPostAccountsAccountRequestBodySettings'CardPayments'DeclineOn' =
  PostAccountsAccountRequestBodySettings'CardPayments'DeclineOn'
    { postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'AvsFailure = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'CardPayments'DeclineOn'CvcFailure = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payments@ in the specification.
data PostAccountsAccountRequestBodySettings'Payments' = PostAccountsAccountRequestBodySettings'Payments'
  { -- | statement_descriptor
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsAccountRequestBodySettings'Payments'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | statement_descriptor_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | statement_descriptor_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Payments' where
  toJSON obj = Data.Aeson.Types.Internal.object ("statement_descriptor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments'StatementDescriptor obj : "statement_descriptor_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKana obj : "statement_descriptor_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKanji obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("statement_descriptor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments'StatementDescriptor obj) GHC.Base.<> (("statement_descriptor_kana" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKana obj) GHC.Base.<> ("statement_descriptor_kanji" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKanji obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Payments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'Payments'" (\obj -> ((GHC.Base.pure PostAccountsAccountRequestBodySettings'Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor_kanji"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'Payments'' with all required fields.
mkPostAccountsAccountRequestBodySettings'Payments' :: PostAccountsAccountRequestBodySettings'Payments'
mkPostAccountsAccountRequestBodySettings'Payments' =
  PostAccountsAccountRequestBodySettings'Payments'
    { postAccountsAccountRequestBodySettings'Payments'StatementDescriptor = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKana = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payments'StatementDescriptorKanji = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts@ in the specification.
data PostAccountsAccountRequestBodySettings'Payouts' = PostAccountsAccountRequestBodySettings'Payouts'
  { -- | debit_negative_balances
    postAccountsAccountRequestBodySettings'Payouts'DebitNegativeBalances :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | schedule
    postAccountsAccountRequestBodySettings'Payouts'Schedule :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Payouts'Schedule'),
    -- | statement_descriptor
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsAccountRequestBodySettings'Payouts'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Payouts' where
  toJSON obj = Data.Aeson.Types.Internal.object ("debit_negative_balances" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'DebitNegativeBalances obj : "schedule" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule obj : "statement_descriptor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'StatementDescriptor obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("debit_negative_balances" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'DebitNegativeBalances obj) GHC.Base.<> (("schedule" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule obj) GHC.Base.<> ("statement_descriptor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'StatementDescriptor obj)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Payouts' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'Payouts'" (\obj -> ((GHC.Base.pure PostAccountsAccountRequestBodySettings'Payouts' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "debit_negative_balances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "schedule")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "statement_descriptor"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'Payouts'' with all required fields.
mkPostAccountsAccountRequestBodySettings'Payouts' :: PostAccountsAccountRequestBodySettings'Payouts'
mkPostAccountsAccountRequestBodySettings'Payouts' =
  PostAccountsAccountRequestBodySettings'Payouts'
    { postAccountsAccountRequestBodySettings'Payouts'DebitNegativeBalances = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payouts'Schedule = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payouts'StatementDescriptor = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule@ in the specification.
data PostAccountsAccountRequestBodySettings'Payouts'Schedule' = PostAccountsAccountRequestBodySettings'Payouts'Schedule'
  { -- | delay_days
    postAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants),
    -- | interval
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'Payouts'Schedule'Interval :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'),
    -- | monthly_anchor
    postAccountsAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | weekly_anchor
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor :: (GHC.Maybe.Maybe PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule' where
  toJSON obj = Data.Aeson.Types.Internal.object ("delay_days" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays obj : "interval" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'Interval obj : "monthly_anchor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor obj : "weekly_anchor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("delay_days" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays obj) GHC.Base.<> (("interval" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'Interval obj) GHC.Base.<> (("monthly_anchor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor obj) GHC.Base.<> ("weekly_anchor" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodySettings'Payouts'Schedule'" (\obj -> (((GHC.Base.pure PostAccountsAccountRequestBodySettings'Payouts'Schedule' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "delay_days")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "monthly_anchor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "weekly_anchor"))

-- | Create a new 'PostAccountsAccountRequestBodySettings'Payouts'Schedule'' with all required fields.
mkPostAccountsAccountRequestBodySettings'Payouts'Schedule' :: PostAccountsAccountRequestBodySettings'Payouts'Schedule'
mkPostAccountsAccountRequestBodySettings'Payouts'Schedule' =
  PostAccountsAccountRequestBodySettings'Payouts'Schedule'
    { postAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payouts'Schedule'Interval = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payouts'Schedule'MonthlyAnchor = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.delay_days.anyOf@ in the specification.
data PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants
  = -- | Represents the JSON value @"minimum"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Minimum
  | PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants where
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Minimum) = "minimum"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "minimum" -> GHC.Base.pure PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Minimum
        | GHC.Base.otherwise -> case (PostAccountsAccountRequestBodySettings'Payouts'Schedule'DelayDays'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.interval@ in the specification.
data PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"daily"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumDaily
  | -- | Represents the JSON value @"manual"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumManual
  | -- | Represents the JSON value @"monthly"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly
  | -- | Represents the JSON value @"weekly"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval' where
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'Other val) = val
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumDaily) = "daily"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumManual) = "manual"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly) = "monthly"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly) = "weekly"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "daily" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumDaily
            | val GHC.Classes.== "manual" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumManual
            | val GHC.Classes.== "monthly" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly
            | val GHC.Classes.== "weekly" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly
            | GHC.Base.otherwise -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'Interval'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.weekly_anchor@ in the specification.
data PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"friday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday
  | -- | Represents the JSON value @"monday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday
  | -- | Represents the JSON value @"saturday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday
  | -- | Represents the JSON value @"sunday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday
  | -- | Represents the JSON value @"thursday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday
  | -- | Represents the JSON value @"tuesday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday
  | -- | Represents the JSON value @"wednesday"@
    PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor' where
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other val) = val
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday) = "friday"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday) = "monday"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday) = "saturday"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday) = "sunday"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday) = "thursday"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday) = "tuesday"
  toJSON (PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday) = "wednesday"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "friday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday
            | val GHC.Classes.== "monday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday
            | val GHC.Classes.== "saturday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday
            | val GHC.Classes.== "sunday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday
            | val GHC.Classes.== "thursday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday
            | val GHC.Classes.== "tuesday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday
            | val GHC.Classes.== "wednesday" -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday
            | GHC.Base.otherwise -> PostAccountsAccountRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tos_acceptance@ in the specification.
--
-- Details on the account\'s acceptance of the [Stripe Services Agreement](https:\/\/stripe.com\/docs\/connect\/updating-accounts\#tos-acceptance).
data PostAccountsAccountRequestBodyTosAcceptance' = PostAccountsAccountRequestBodyTosAcceptance'
  { -- | date
    postAccountsAccountRequestBodyTosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | ip
    postAccountsAccountRequestBodyTosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | service_agreement
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyTosAcceptance'ServiceAgreement :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_agent
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsAccountRequestBodyTosAcceptance'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsAccountRequestBodyTosAcceptance' where
  toJSON obj = Data.Aeson.Types.Internal.object ("date" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'Date obj : "ip" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'Ip obj : "service_agreement" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'ServiceAgreement obj : "user_agent" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'UserAgent obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("date" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'Date obj) GHC.Base.<> (("ip" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'Ip obj) GHC.Base.<> (("service_agreement" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'ServiceAgreement obj) GHC.Base.<> ("user_agent" Data.Aeson.Types.ToJSON..= postAccountsAccountRequestBodyTosAcceptance'UserAgent obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsAccountRequestBodyTosAcceptance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsAccountRequestBodyTosAcceptance'" (\obj -> (((GHC.Base.pure PostAccountsAccountRequestBodyTosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "service_agreement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "user_agent"))

-- | Create a new 'PostAccountsAccountRequestBodyTosAcceptance'' with all required fields.
mkPostAccountsAccountRequestBodyTosAcceptance' :: PostAccountsAccountRequestBodyTosAcceptance'
mkPostAccountsAccountRequestBodyTosAcceptance' =
  PostAccountsAccountRequestBodyTosAcceptance'
    { postAccountsAccountRequestBodyTosAcceptance'Date = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyTosAcceptance'Ip = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyTosAcceptance'ServiceAgreement = GHC.Maybe.Nothing,
      postAccountsAccountRequestBodyTosAcceptance'UserAgent = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postAccountsAccount'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountsAccountResponseError' is used.
data PostAccountsAccountResponse
  = -- | Means either no matching case available or a parse error
    PostAccountsAccountResponseError GHC.Base.String
  | -- | Successful response.
    PostAccountsAccountResponse200 Account
  | -- | Error response.
    PostAccountsAccountResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
