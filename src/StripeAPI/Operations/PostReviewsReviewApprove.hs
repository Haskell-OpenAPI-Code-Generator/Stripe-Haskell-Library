{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postReviewsReviewApprove
module StripeAPI.Operations.PostReviewsReviewApprove where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/reviews/{review}/approve
--
-- \<p>Approves a \<code>Review\<\/code> object, closing it and removing it from the list of reviews.\<\/p>
postReviewsReviewApprove ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | review | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostReviewsReviewApproveRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostReviewsReviewApproveResponse)
postReviewsReviewApprove
  review
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostReviewsReviewApproveResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostReviewsReviewApproveResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Review
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostReviewsReviewApproveResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/reviews/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel review)) GHC.Base.++ "/approve"))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/reviews\/{review}\/approve.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostReviewsReviewApproveRequestBody = PostReviewsReviewApproveRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postReviewsReviewApproveRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostReviewsReviewApproveRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("expand" Data.Aeson.Types.ToJSON..= postReviewsReviewApproveRequestBodyExpand obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("expand" Data.Aeson.Types.ToJSON..= postReviewsReviewApproveRequestBodyExpand obj)

instance Data.Aeson.Types.FromJSON.FromJSON PostReviewsReviewApproveRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostReviewsReviewApproveRequestBody" (\obj -> GHC.Base.pure PostReviewsReviewApproveRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand"))

-- | Create a new 'PostReviewsReviewApproveRequestBody' with all required fields.
mkPostReviewsReviewApproveRequestBody :: PostReviewsReviewApproveRequestBody
mkPostReviewsReviewApproveRequestBody = PostReviewsReviewApproveRequestBody {postReviewsReviewApproveRequestBodyExpand = GHC.Maybe.Nothing}

-- | Represents a response of the operation 'postReviewsReviewApprove'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostReviewsReviewApproveResponseError' is used.
data PostReviewsReviewApproveResponse
  = -- | Means either no matching case available or a parse error
    PostReviewsReviewApproveResponseError GHC.Base.String
  | -- | Successful response.
    PostReviewsReviewApproveResponse200 Review
  | -- | Error response.
    PostReviewsReviewApproveResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
