{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postOrdersIdReturns
module StripeAPI.Operations.PostOrdersIdReturns where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/orders/{id}/returns
--
-- \<p>Return all or part of an order. The order must have a status of \<code>paid\<\/code> or \<code>fulfilled\<\/code> before it can be returned. Once all items have been returned, the order will become \<code>canceled\<\/code> or \<code>returned\<\/code> depending on which status the order started in.\<\/p>
postOrdersIdReturns ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | id | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostOrdersIdReturnsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostOrdersIdReturnsResponse)
postOrdersIdReturns
  id
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostOrdersIdReturnsResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostOrdersIdReturnsResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              OrderReturn
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostOrdersIdReturnsResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/orders/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel id)) GHC.Base.++ "/returns"))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/orders\/{id}\/returns.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostOrdersIdReturnsRequestBody = PostOrdersIdReturnsRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postOrdersIdReturnsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | items: List of items to return.
    postOrdersIdReturnsRequestBodyItems :: (GHC.Maybe.Maybe PostOrdersIdReturnsRequestBodyItems'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostOrdersIdReturnsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("expand" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyExpand obj : "items" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("expand" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyExpand obj) GHC.Base.<> ("items" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostOrdersIdReturnsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostOrdersIdReturnsRequestBody" (\obj -> (GHC.Base.pure PostOrdersIdReturnsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "items"))

-- | Create a new 'PostOrdersIdReturnsRequestBody' with all required fields.
mkPostOrdersIdReturnsRequestBody :: PostOrdersIdReturnsRequestBody
mkPostOrdersIdReturnsRequestBody =
  PostOrdersIdReturnsRequestBody
    { postOrdersIdReturnsRequestBodyExpand = GHC.Maybe.Nothing,
      postOrdersIdReturnsRequestBodyItems = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/orders\/{id}\/returns.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.anyOf.items@ in the specification.
data PostOrdersIdReturnsRequestBodyItems'OneOf1 = PostOrdersIdReturnsRequestBodyItems'OneOf1
  { -- | amount
    postOrdersIdReturnsRequestBodyItems'OneOf1Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | description
    --
    -- Constraints:
    --
    -- * Maximum length of 1000
    postOrdersIdReturnsRequestBodyItems'OneOf1Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | parent
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postOrdersIdReturnsRequestBodyItems'OneOf1Parent :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | quantity
    postOrdersIdReturnsRequestBodyItems'OneOf1Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | type
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postOrdersIdReturnsRequestBodyItems'OneOf1Type :: (GHC.Maybe.Maybe PostOrdersIdReturnsRequestBodyItems'OneOf1Type')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostOrdersIdReturnsRequestBodyItems'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object ("amount" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Amount obj : "description" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Description obj : "parent" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Parent obj : "quantity" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Quantity obj : "type" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Type obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("amount" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Amount obj) GHC.Base.<> (("description" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Description obj) GHC.Base.<> (("parent" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Parent obj) GHC.Base.<> (("quantity" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Quantity obj) GHC.Base.<> ("type" Data.Aeson.Types.ToJSON..= postOrdersIdReturnsRequestBodyItems'OneOf1Type obj)))))

instance Data.Aeson.Types.FromJSON.FromJSON PostOrdersIdReturnsRequestBodyItems'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostOrdersIdReturnsRequestBodyItems'OneOf1" (\obj -> ((((GHC.Base.pure PostOrdersIdReturnsRequestBodyItems'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "parent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "type"))

-- | Create a new 'PostOrdersIdReturnsRequestBodyItems'OneOf1' with all required fields.
mkPostOrdersIdReturnsRequestBodyItems'OneOf1 :: PostOrdersIdReturnsRequestBodyItems'OneOf1
mkPostOrdersIdReturnsRequestBodyItems'OneOf1 =
  PostOrdersIdReturnsRequestBodyItems'OneOf1
    { postOrdersIdReturnsRequestBodyItems'OneOf1Amount = GHC.Maybe.Nothing,
      postOrdersIdReturnsRequestBodyItems'OneOf1Description = GHC.Maybe.Nothing,
      postOrdersIdReturnsRequestBodyItems'OneOf1Parent = GHC.Maybe.Nothing,
      postOrdersIdReturnsRequestBodyItems'OneOf1Quantity = GHC.Maybe.Nothing,
      postOrdersIdReturnsRequestBodyItems'OneOf1Type = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/orders\/{id}\/returns.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.anyOf.items.properties.type@ in the specification.
data PostOrdersIdReturnsRequestBodyItems'OneOf1Type'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostOrdersIdReturnsRequestBodyItems'OneOf1Type'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostOrdersIdReturnsRequestBodyItems'OneOf1Type'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"discount"@
    PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumDiscount
  | -- | Represents the JSON value @"shipping"@
    PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumShipping
  | -- | Represents the JSON value @"sku"@
    PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumSku
  | -- | Represents the JSON value @"tax"@
    PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumTax
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostOrdersIdReturnsRequestBodyItems'OneOf1Type' where
  toJSON (PostOrdersIdReturnsRequestBodyItems'OneOf1Type'Other val) = val
  toJSON (PostOrdersIdReturnsRequestBodyItems'OneOf1Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumDiscount) = "discount"
  toJSON (PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumShipping) = "shipping"
  toJSON (PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumSku) = "sku"
  toJSON (PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumTax) = "tax"

instance Data.Aeson.Types.FromJSON.FromJSON PostOrdersIdReturnsRequestBodyItems'OneOf1Type' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "discount" -> PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumDiscount
            | val GHC.Classes.== "shipping" -> PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumShipping
            | val GHC.Classes.== "sku" -> PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumSku
            | val GHC.Classes.== "tax" -> PostOrdersIdReturnsRequestBodyItems'OneOf1Type'EnumTax
            | GHC.Base.otherwise -> PostOrdersIdReturnsRequestBodyItems'OneOf1Type'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/orders\/{id}\/returns.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.anyOf@ in the specification.
--
-- List of items to return.
data PostOrdersIdReturnsRequestBodyItems'Variants
  = -- | Represents the JSON value @""@
    PostOrdersIdReturnsRequestBodyItems'EmptyString
  | PostOrdersIdReturnsRequestBodyItems'ListTPostOrdersIdReturnsRequestBodyItems'OneOf1 ([PostOrdersIdReturnsRequestBodyItems'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostOrdersIdReturnsRequestBodyItems'Variants where
  toJSON (PostOrdersIdReturnsRequestBodyItems'ListTPostOrdersIdReturnsRequestBodyItems'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostOrdersIdReturnsRequestBodyItems'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostOrdersIdReturnsRequestBodyItems'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostOrdersIdReturnsRequestBodyItems'EmptyString
        | GHC.Base.otherwise -> case (PostOrdersIdReturnsRequestBodyItems'ListTPostOrdersIdReturnsRequestBodyItems'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'postOrdersIdReturns'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostOrdersIdReturnsResponseError' is used.
data PostOrdersIdReturnsResponse
  = -- | Means either no matching case available or a parse error
    PostOrdersIdReturnsResponseError GHC.Base.String
  | -- | Successful response.
    PostOrdersIdReturnsResponse200 OrderReturn
  | -- | Error response.
    PostOrdersIdReturnsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
