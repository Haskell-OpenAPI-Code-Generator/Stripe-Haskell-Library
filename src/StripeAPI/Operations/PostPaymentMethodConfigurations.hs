{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postPaymentMethodConfigurations
module StripeAPI.Operations.PostPaymentMethodConfigurations where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/payment_method_configurations
--
-- \<p>Creates a payment method configuration\<\/p>
postPaymentMethodConfigurations ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostPaymentMethodConfigurationsResponse)
postPaymentMethodConfigurations body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostPaymentMethodConfigurationsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostPaymentMethodConfigurationsResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              PaymentMethodConfiguration
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostPaymentMethodConfigurationsResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/payment_method_configurations" GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostPaymentMethodConfigurationsRequestBody = PostPaymentMethodConfigurationsRequestBody
  { -- | acss_debit: Canadian pre-authorized debit payments, check this [page](https:\/\/stripe.com\/docs\/payments\/acss-debit) for more details like country availability.
    postPaymentMethodConfigurationsRequestBodyAcssDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAcssDebit'),
    -- | affirm: [Affirm](https:\/\/www.affirm.com\/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https:\/\/stripe.com\/docs\/payments\/affirm) for more details like country availability.
    postPaymentMethodConfigurationsRequestBodyAffirm :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAffirm'),
    -- | afterpay_clearpay: Afterpay gives your customers a way to pay for purchases in installments, check this [page](https:\/\/stripe.com\/docs\/payments\/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.
    postPaymentMethodConfigurationsRequestBodyAfterpayClearpay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'),
    -- | alipay: Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer\'s login credentials. Check this [page](https:\/\/stripe.com\/docs\/payments\/alipay) for more details.
    postPaymentMethodConfigurationsRequestBodyAlipay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAlipay'),
    -- | apple_pay: Stripe users can accept [Apple Pay](\/payments\/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](\/pricing) is the same as other card transactions. Check this [page](https:\/\/stripe.com\/docs\/apple-pay) for more details.
    postPaymentMethodConfigurationsRequestBodyApplePay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyApplePay'),
    -- | apple_pay_later: Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.
    postPaymentMethodConfigurationsRequestBodyApplePayLater :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyApplePayLater'),
    -- | au_becs_debit: Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https:\/\/stripe.com\/docs\/payments\/au-becs-debit) for more details.
    postPaymentMethodConfigurationsRequestBodyAuBecsDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'),
    -- | bacs_debit: Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https:\/\/stripe.com\/docs\/payments\/payment-methods\/bacs-debit) for more details.
    postPaymentMethodConfigurationsRequestBodyBacsDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBacsDebit'),
    -- | bancontact: Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https:\/\/stripe.com\/docs\/api\/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https:\/\/stripe.com\/docs\/payments\/bancontact) for more details.
    postPaymentMethodConfigurationsRequestBodyBancontact :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBancontact'),
    -- | blik: BLIK is a [single use](https:\/\/stripe.com\/docs\/payments\/payment-methods\#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https:\/\/stripe.com\/docs\/payments\/blik) for more details.
    postPaymentMethodConfigurationsRequestBodyBlik :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBlik'),
    -- | boleto: Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https:\/\/stripe.com\/docs\/payments\/boleto) for more details.
    postPaymentMethodConfigurationsRequestBodyBoleto :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBoleto'),
    -- | card: Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.
    postPaymentMethodConfigurationsRequestBodyCard :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCard'),
    -- | cartes_bancaires: Cartes Bancaires is France\'s local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https:\/\/stripe.com\/docs\/payments\/cartes-bancaires) for more details.
    postPaymentMethodConfigurationsRequestBodyCartesBancaires :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCartesBancaires'),
    -- | cashapp: Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https:\/\/stripe.com\/docs\/payments\/cash-app-pay) for more details.
    postPaymentMethodConfigurationsRequestBodyCashapp :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCashapp'),
    -- | eps: EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https:\/\/stripe.com\/docs\/payments\/eps) for more details.
    postPaymentMethodConfigurationsRequestBodyEps :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyEps'),
    -- | expand: Specifies which fields in the response should be expanded.
    postPaymentMethodConfigurationsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | fpx: Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https:\/\/stripe.com\/docs\/payments\/fpx) for more details.
    postPaymentMethodConfigurationsRequestBodyFpx :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyFpx'),
    -- | giropay: giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https:\/\/stripe.com\/docs\/payments\/giropay) for more details.
    postPaymentMethodConfigurationsRequestBodyGiropay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGiropay'),
    -- | google_pay: Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer\'s Google account. Check this [page](https:\/\/stripe.com\/docs\/google-pay) for more details.
    postPaymentMethodConfigurationsRequestBodyGooglePay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGooglePay'),
    -- | grabpay: GrabPay is a payment method developed by [Grab](https:\/\/www.grab.com\/sg\/consumer\/finance\/pay\/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https:\/\/stripe.com\/docs\/payments\/grabpay) for more details.
    postPaymentMethodConfigurationsRequestBodyGrabpay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGrabpay'),
    -- | ideal: iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https:\/\/stripe.com\/docs\/payments\/ideal) for more details.
    postPaymentMethodConfigurationsRequestBodyIdeal :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyIdeal'),
    -- | jcb: JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https:\/\/support.stripe.com\/questions\/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.
    postPaymentMethodConfigurationsRequestBodyJcb :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyJcb'),
    -- | klarna: Klarna gives customers a range of [payment options](https:\/\/stripe.com\/docs\/payments\/klarna\#payment-options) during checkout. Available payment options vary depending on the customer\'s billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https:\/\/stripe.com\/docs\/payments\/klarna) for more details.
    postPaymentMethodConfigurationsRequestBodyKlarna :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyKlarna'),
    -- | konbini: Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/konbini) for more details.
    postPaymentMethodConfigurationsRequestBodyKonbini :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyKonbini'),
    -- | link: [Link](https:\/\/stripe.com\/docs\/payments\/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.
    postPaymentMethodConfigurationsRequestBodyLink :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyLink'),
    -- | name: Configuration name.
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postPaymentMethodConfigurationsRequestBodyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | oxxo: OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/oxxo) for more details.
    postPaymentMethodConfigurationsRequestBodyOxxo :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyOxxo'),
    -- | p24: Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/p24) for more details.
    postPaymentMethodConfigurationsRequestBodyP24 :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyP24'),
    -- | parent: Configuration\'s parent configuration. Specify to create a child configuration.
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postPaymentMethodConfigurationsRequestBodyParent :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | paynow: PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https:\/\/stripe.com\/docs\/payments\/paynow) for more details.
    postPaymentMethodConfigurationsRequestBodyPaynow :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPaynow'),
    -- | paypal: PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https:\/\/stripe.com\/docs\/payments\/paypal) for more details.
    postPaymentMethodConfigurationsRequestBodyPaypal :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPaypal'),
    -- | promptpay: PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/promptpay) for more details.
    postPaymentMethodConfigurationsRequestBodyPromptpay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPromptpay'),
    -- | revolut_pay: Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.
    postPaymentMethodConfigurationsRequestBodyRevolutPay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyRevolutPay'),
    -- | sepa_debit: The [Single Euro Payments Area (SEPA)](https:\/\/en.wikipedia.org\/wiki\/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https:\/\/stripe.com\/docs\/payments\/sepa-debit) for more details.
    postPaymentMethodConfigurationsRequestBodySepaDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodySepaDebit'),
    -- | sofort: Stripe users in Europe and the United States can use the [Payment Intents API](https:\/\/stripe.com\/docs\/payments\/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https:\/\/www.sofort.com\/) payments from customers. Check this [page](https:\/\/stripe.com\/docs\/payments\/sofort) for more details.
    postPaymentMethodConfigurationsRequestBodySofort :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodySofort'),
    -- | us_bank_account: Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https:\/\/stripe.com\/docs\/payments\/ach-debit) for more details.
    postPaymentMethodConfigurationsRequestBodyUsBankAccount :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyUsBankAccount'),
    -- | wechat_pay: WeChat, owned by Tencent, is China\'s leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses\' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food\/nutrition. Check this [page](https:\/\/stripe.com\/docs\/payments\/wechat-pay) for more details.
    postPaymentMethodConfigurationsRequestBodyWechatPay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyWechatPay')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay_later" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePayLater obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCartesBancaires obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("google_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGooglePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyJcb obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyParent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyWechatPay obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay_later" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePayLater obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCartesBancaires obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("google_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGooglePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyJcb obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("parent" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyParent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyWechatPay obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBody" (\obj -> ((((((((((((((((((((((((((((((((((((GHC.Base.pure PostPaymentMethodConfigurationsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "apple_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "apple_pay_later")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "blik")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cartes_bancaires")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "google_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jcb")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "parent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat_pay"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBody' with all required fields.
mkPostPaymentMethodConfigurationsRequestBody :: PostPaymentMethodConfigurationsRequestBody
mkPostPaymentMethodConfigurationsRequestBody =
  PostPaymentMethodConfigurationsRequestBody
    { postPaymentMethodConfigurationsRequestBodyAcssDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyAffirm = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyAfterpayClearpay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyAlipay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyApplePay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyApplePayLater = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyAuBecsDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyBacsDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyBancontact = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyBlik = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyBoleto = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyCard = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyCartesBancaires = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyCashapp = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyEps = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyExpand = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyFpx = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyGiropay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyGooglePay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyGrabpay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyIdeal = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyJcb = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyKlarna = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyKonbini = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyLink = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyName = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyOxxo = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyP24 = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyParent = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyPaynow = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyPaypal = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyPromptpay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyRevolutPay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodySepaDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodySofort = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyUsBankAccount = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsRequestBodyWechatPay = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.acss_debit@ in the specification.
--
-- Canadian pre-authorized debit payments, check this [page](https:\/\/stripe.com\/docs\/payments\/acss-debit) for more details like country availability.
data PostPaymentMethodConfigurationsRequestBodyAcssDebit' = PostPaymentMethodConfigurationsRequestBodyAcssDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAcssDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAcssDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAcssDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAcssDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAcssDebit'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAcssDebit' :: PostPaymentMethodConfigurationsRequestBodyAcssDebit'
mkPostPaymentMethodConfigurationsRequestBodyAcssDebit' = PostPaymentMethodConfigurationsRequestBodyAcssDebit' {postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.acss_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.acss_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyAcssDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.affirm@ in the specification.
--
-- [Affirm](https:\/\/www.affirm.com\/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https:\/\/stripe.com\/docs\/payments\/affirm) for more details like country availability.
data PostPaymentMethodConfigurationsRequestBodyAffirm' = PostPaymentMethodConfigurationsRequestBodyAffirm'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAffirm' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAffirm' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAffirm'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAffirm' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAffirm'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAffirm' :: PostPaymentMethodConfigurationsRequestBodyAffirm'
mkPostPaymentMethodConfigurationsRequestBodyAffirm' = PostPaymentMethodConfigurationsRequestBodyAffirm' {postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.affirm.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.affirm.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyAffirm'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.afterpay_clearpay@ in the specification.
--
-- Afterpay gives your customers a way to pay for purchases in installments, check this [page](https:\/\/stripe.com\/docs\/payments\/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.
data PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' = PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' :: PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'
mkPostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' = PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay' {postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.afterpay_clearpay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.afterpay_clearpay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyAfterpayClearpay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.alipay@ in the specification.
--
-- Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer\'s login credentials. Check this [page](https:\/\/stripe.com\/docs\/payments\/alipay) for more details.
data PostPaymentMethodConfigurationsRequestBodyAlipay' = PostPaymentMethodConfigurationsRequestBodyAlipay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAlipay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAlipay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAlipay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAlipay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAlipay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAlipay' :: PostPaymentMethodConfigurationsRequestBodyAlipay'
mkPostPaymentMethodConfigurationsRequestBodyAlipay' = PostPaymentMethodConfigurationsRequestBodyAlipay' {postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.alipay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.alipay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyAlipay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay@ in the specification.
--
-- Stripe users can accept [Apple Pay](\/payments\/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](\/pricing) is the same as other card transactions. Check this [page](https:\/\/stripe.com\/docs\/apple-pay) for more details.
data PostPaymentMethodConfigurationsRequestBodyApplePay' = PostPaymentMethodConfigurationsRequestBodyApplePay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyApplePay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyApplePay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyApplePay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyApplePay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyApplePay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyApplePay' :: PostPaymentMethodConfigurationsRequestBodyApplePay'
mkPostPaymentMethodConfigurationsRequestBodyApplePay' = PostPaymentMethodConfigurationsRequestBodyApplePay' {postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyApplePay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay_later@ in the specification.
--
-- Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.
data PostPaymentMethodConfigurationsRequestBodyApplePayLater' = PostPaymentMethodConfigurationsRequestBodyApplePayLater'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyApplePayLater' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyApplePayLater' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyApplePayLater'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyApplePayLater' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyApplePayLater'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyApplePayLater' :: PostPaymentMethodConfigurationsRequestBodyApplePayLater'
mkPostPaymentMethodConfigurationsRequestBodyApplePayLater' = PostPaymentMethodConfigurationsRequestBodyApplePayLater' {postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay_later.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay_later.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyApplePayLater'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.au_becs_debit@ in the specification.
--
-- Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https:\/\/stripe.com\/docs\/payments\/au-becs-debit) for more details.
data PostPaymentMethodConfigurationsRequestBodyAuBecsDebit' = PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAuBecsDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAuBecsDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAuBecsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAuBecsDebit' :: PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'
mkPostPaymentMethodConfigurationsRequestBodyAuBecsDebit' = PostPaymentMethodConfigurationsRequestBodyAuBecsDebit' {postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.au_becs_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.au_becs_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyAuBecsDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bacs_debit@ in the specification.
--
-- Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https:\/\/stripe.com\/docs\/payments\/payment-methods\/bacs-debit) for more details.
data PostPaymentMethodConfigurationsRequestBodyBacsDebit' = PostPaymentMethodConfigurationsRequestBodyBacsDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBacsDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBacsDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBacsDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBacsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBacsDebit'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBacsDebit' :: PostPaymentMethodConfigurationsRequestBodyBacsDebit'
mkPostPaymentMethodConfigurationsRequestBodyBacsDebit' = PostPaymentMethodConfigurationsRequestBodyBacsDebit' {postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bacs_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bacs_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyBacsDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bancontact@ in the specification.
--
-- Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https:\/\/stripe.com\/docs\/api\/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https:\/\/stripe.com\/docs\/payments\/bancontact) for more details.
data PostPaymentMethodConfigurationsRequestBodyBancontact' = PostPaymentMethodConfigurationsRequestBodyBancontact'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBancontact' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBancontact' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBancontact'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBancontact' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBancontact'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBancontact' :: PostPaymentMethodConfigurationsRequestBodyBancontact'
mkPostPaymentMethodConfigurationsRequestBodyBancontact' = PostPaymentMethodConfigurationsRequestBodyBancontact' {postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bancontact.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bancontact.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyBancontact'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.blik@ in the specification.
--
-- BLIK is a [single use](https:\/\/stripe.com\/docs\/payments\/payment-methods\#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https:\/\/stripe.com\/docs\/payments\/blik) for more details.
data PostPaymentMethodConfigurationsRequestBodyBlik' = PostPaymentMethodConfigurationsRequestBodyBlik'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBlik' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBlik' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBlik'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBlik' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBlik'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBlik' :: PostPaymentMethodConfigurationsRequestBodyBlik'
mkPostPaymentMethodConfigurationsRequestBodyBlik' = PostPaymentMethodConfigurationsRequestBodyBlik' {postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.blik.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.blik.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyBlik'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.boleto@ in the specification.
--
-- Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https:\/\/stripe.com\/docs\/payments\/boleto) for more details.
data PostPaymentMethodConfigurationsRequestBodyBoleto' = PostPaymentMethodConfigurationsRequestBodyBoleto'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBoleto' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBoleto' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBoleto'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBoleto' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBoleto'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBoleto' :: PostPaymentMethodConfigurationsRequestBodyBoleto'
mkPostPaymentMethodConfigurationsRequestBodyBoleto' = PostPaymentMethodConfigurationsRequestBodyBoleto' {postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.boleto.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.boleto.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyBoleto'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card@ in the specification.
--
-- Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.
data PostPaymentMethodConfigurationsRequestBodyCard' = PostPaymentMethodConfigurationsRequestBodyCard'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCard' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCard' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyCard'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyCard' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyCard'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyCard' :: PostPaymentMethodConfigurationsRequestBodyCard'
mkPostPaymentMethodConfigurationsRequestBodyCard' = PostPaymentMethodConfigurationsRequestBodyCard' {postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyCard'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cartes_bancaires@ in the specification.
--
-- Cartes Bancaires is France\'s local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https:\/\/stripe.com\/docs\/payments\/cartes-bancaires) for more details.
data PostPaymentMethodConfigurationsRequestBodyCartesBancaires' = PostPaymentMethodConfigurationsRequestBodyCartesBancaires'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCartesBancaires' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCartesBancaires' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyCartesBancaires'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyCartesBancaires' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyCartesBancaires'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyCartesBancaires' :: PostPaymentMethodConfigurationsRequestBodyCartesBancaires'
mkPostPaymentMethodConfigurationsRequestBodyCartesBancaires' = PostPaymentMethodConfigurationsRequestBodyCartesBancaires' {postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cartes_bancaires.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cartes_bancaires.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyCartesBancaires'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cashapp@ in the specification.
--
-- Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https:\/\/stripe.com\/docs\/payments\/cash-app-pay) for more details.
data PostPaymentMethodConfigurationsRequestBodyCashapp' = PostPaymentMethodConfigurationsRequestBodyCashapp'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCashapp' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCashapp' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyCashapp'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyCashapp' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyCashapp'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyCashapp' :: PostPaymentMethodConfigurationsRequestBodyCashapp'
mkPostPaymentMethodConfigurationsRequestBodyCashapp' = PostPaymentMethodConfigurationsRequestBodyCashapp' {postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cashapp.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cashapp.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyCashapp'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.eps@ in the specification.
--
-- EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https:\/\/stripe.com\/docs\/payments\/eps) for more details.
data PostPaymentMethodConfigurationsRequestBodyEps' = PostPaymentMethodConfigurationsRequestBodyEps'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyEps' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyEps' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyEps'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyEps' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyEps'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyEps' :: PostPaymentMethodConfigurationsRequestBodyEps'
mkPostPaymentMethodConfigurationsRequestBodyEps' = PostPaymentMethodConfigurationsRequestBodyEps' {postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.eps.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.eps.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyEps'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.fpx@ in the specification.
--
-- Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https:\/\/stripe.com\/docs\/payments\/fpx) for more details.
data PostPaymentMethodConfigurationsRequestBodyFpx' = PostPaymentMethodConfigurationsRequestBodyFpx'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyFpx' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyFpx' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyFpx'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyFpx' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyFpx'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyFpx' :: PostPaymentMethodConfigurationsRequestBodyFpx'
mkPostPaymentMethodConfigurationsRequestBodyFpx' = PostPaymentMethodConfigurationsRequestBodyFpx' {postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.fpx.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.fpx.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyFpx'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.giropay@ in the specification.
--
-- giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https:\/\/stripe.com\/docs\/payments\/giropay) for more details.
data PostPaymentMethodConfigurationsRequestBodyGiropay' = PostPaymentMethodConfigurationsRequestBodyGiropay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGiropay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGiropay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyGiropay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyGiropay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyGiropay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyGiropay' :: PostPaymentMethodConfigurationsRequestBodyGiropay'
mkPostPaymentMethodConfigurationsRequestBodyGiropay' = PostPaymentMethodConfigurationsRequestBodyGiropay' {postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.giropay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.giropay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyGiropay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.google_pay@ in the specification.
--
-- Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer\'s Google account. Check this [page](https:\/\/stripe.com\/docs\/google-pay) for more details.
data PostPaymentMethodConfigurationsRequestBodyGooglePay' = PostPaymentMethodConfigurationsRequestBodyGooglePay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGooglePay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGooglePay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyGooglePay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyGooglePay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyGooglePay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyGooglePay' :: PostPaymentMethodConfigurationsRequestBodyGooglePay'
mkPostPaymentMethodConfigurationsRequestBodyGooglePay' = PostPaymentMethodConfigurationsRequestBodyGooglePay' {postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.google_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.google_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyGooglePay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.grabpay@ in the specification.
--
-- GrabPay is a payment method developed by [Grab](https:\/\/www.grab.com\/sg\/consumer\/finance\/pay\/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https:\/\/stripe.com\/docs\/payments\/grabpay) for more details.
data PostPaymentMethodConfigurationsRequestBodyGrabpay' = PostPaymentMethodConfigurationsRequestBodyGrabpay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGrabpay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGrabpay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyGrabpay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyGrabpay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyGrabpay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyGrabpay' :: PostPaymentMethodConfigurationsRequestBodyGrabpay'
mkPostPaymentMethodConfigurationsRequestBodyGrabpay' = PostPaymentMethodConfigurationsRequestBodyGrabpay' {postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.grabpay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.grabpay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyGrabpay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ideal@ in the specification.
--
-- iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https:\/\/stripe.com\/docs\/payments\/ideal) for more details.
data PostPaymentMethodConfigurationsRequestBodyIdeal' = PostPaymentMethodConfigurationsRequestBodyIdeal'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyIdeal' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyIdeal' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyIdeal'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyIdeal' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyIdeal'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyIdeal' :: PostPaymentMethodConfigurationsRequestBodyIdeal'
mkPostPaymentMethodConfigurationsRequestBodyIdeal' = PostPaymentMethodConfigurationsRequestBodyIdeal' {postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ideal.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ideal.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyIdeal'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.jcb@ in the specification.
--
-- JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https:\/\/support.stripe.com\/questions\/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.
data PostPaymentMethodConfigurationsRequestBodyJcb' = PostPaymentMethodConfigurationsRequestBodyJcb'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyJcb' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyJcb' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyJcb'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyJcb' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyJcb'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyJcb' :: PostPaymentMethodConfigurationsRequestBodyJcb'
mkPostPaymentMethodConfigurationsRequestBodyJcb' = PostPaymentMethodConfigurationsRequestBodyJcb' {postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.jcb.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.jcb.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyJcb'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.klarna@ in the specification.
--
-- Klarna gives customers a range of [payment options](https:\/\/stripe.com\/docs\/payments\/klarna\#payment-options) during checkout. Available payment options vary depending on the customer\'s billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https:\/\/stripe.com\/docs\/payments\/klarna) for more details.
data PostPaymentMethodConfigurationsRequestBodyKlarna' = PostPaymentMethodConfigurationsRequestBodyKlarna'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyKlarna' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyKlarna' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyKlarna'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyKlarna' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyKlarna'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyKlarna' :: PostPaymentMethodConfigurationsRequestBodyKlarna'
mkPostPaymentMethodConfigurationsRequestBodyKlarna' = PostPaymentMethodConfigurationsRequestBodyKlarna' {postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.klarna.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.klarna.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyKlarna'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.konbini@ in the specification.
--
-- Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/konbini) for more details.
data PostPaymentMethodConfigurationsRequestBodyKonbini' = PostPaymentMethodConfigurationsRequestBodyKonbini'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyKonbini' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyKonbini' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyKonbini'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyKonbini' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyKonbini'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyKonbini' :: PostPaymentMethodConfigurationsRequestBodyKonbini'
mkPostPaymentMethodConfigurationsRequestBodyKonbini' = PostPaymentMethodConfigurationsRequestBodyKonbini' {postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.konbini.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.konbini.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyKonbini'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.link@ in the specification.
--
-- [Link](https:\/\/stripe.com\/docs\/payments\/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.
data PostPaymentMethodConfigurationsRequestBodyLink' = PostPaymentMethodConfigurationsRequestBodyLink'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyLink' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyLink' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyLink'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyLink' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyLink'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyLink' :: PostPaymentMethodConfigurationsRequestBodyLink'
mkPostPaymentMethodConfigurationsRequestBodyLink' = PostPaymentMethodConfigurationsRequestBodyLink' {postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.link.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.link.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyLink'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.oxxo@ in the specification.
--
-- OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/oxxo) for more details.
data PostPaymentMethodConfigurationsRequestBodyOxxo' = PostPaymentMethodConfigurationsRequestBodyOxxo'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyOxxo' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyOxxo' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyOxxo'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyOxxo' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyOxxo'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyOxxo' :: PostPaymentMethodConfigurationsRequestBodyOxxo'
mkPostPaymentMethodConfigurationsRequestBodyOxxo' = PostPaymentMethodConfigurationsRequestBodyOxxo' {postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.oxxo.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.oxxo.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyOxxo'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.p24@ in the specification.
--
-- Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/p24) for more details.
data PostPaymentMethodConfigurationsRequestBodyP24' = PostPaymentMethodConfigurationsRequestBodyP24'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyP24' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyP24' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyP24'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyP24' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyP24'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyP24' :: PostPaymentMethodConfigurationsRequestBodyP24'
mkPostPaymentMethodConfigurationsRequestBodyP24' = PostPaymentMethodConfigurationsRequestBodyP24' {postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.p24.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.p24.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyP24'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paynow@ in the specification.
--
-- PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https:\/\/stripe.com\/docs\/payments\/paynow) for more details.
data PostPaymentMethodConfigurationsRequestBodyPaynow' = PostPaymentMethodConfigurationsRequestBodyPaynow'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPaynow' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPaynow' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyPaynow'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyPaynow' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyPaynow'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyPaynow' :: PostPaymentMethodConfigurationsRequestBodyPaynow'
mkPostPaymentMethodConfigurationsRequestBodyPaynow' = PostPaymentMethodConfigurationsRequestBodyPaynow' {postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paynow.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paynow.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyPaynow'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paypal@ in the specification.
--
-- PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https:\/\/stripe.com\/docs\/payments\/paypal) for more details.
data PostPaymentMethodConfigurationsRequestBodyPaypal' = PostPaymentMethodConfigurationsRequestBodyPaypal'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPaypal' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPaypal' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyPaypal'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyPaypal' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyPaypal'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyPaypal' :: PostPaymentMethodConfigurationsRequestBodyPaypal'
mkPostPaymentMethodConfigurationsRequestBodyPaypal' = PostPaymentMethodConfigurationsRequestBodyPaypal' {postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paypal.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paypal.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyPaypal'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.promptpay@ in the specification.
--
-- PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/promptpay) for more details.
data PostPaymentMethodConfigurationsRequestBodyPromptpay' = PostPaymentMethodConfigurationsRequestBodyPromptpay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPromptpay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPromptpay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyPromptpay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyPromptpay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyPromptpay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyPromptpay' :: PostPaymentMethodConfigurationsRequestBodyPromptpay'
mkPostPaymentMethodConfigurationsRequestBodyPromptpay' = PostPaymentMethodConfigurationsRequestBodyPromptpay' {postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.promptpay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.promptpay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyPromptpay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.revolut_pay@ in the specification.
--
-- Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.
data PostPaymentMethodConfigurationsRequestBodyRevolutPay' = PostPaymentMethodConfigurationsRequestBodyRevolutPay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyRevolutPay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyRevolutPay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyRevolutPay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyRevolutPay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyRevolutPay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyRevolutPay' :: PostPaymentMethodConfigurationsRequestBodyRevolutPay'
mkPostPaymentMethodConfigurationsRequestBodyRevolutPay' = PostPaymentMethodConfigurationsRequestBodyRevolutPay' {postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.revolut_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.revolut_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyRevolutPay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sepa_debit@ in the specification.
--
-- The [Single Euro Payments Area (SEPA)](https:\/\/en.wikipedia.org\/wiki\/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https:\/\/stripe.com\/docs\/payments\/sepa-debit) for more details.
data PostPaymentMethodConfigurationsRequestBodySepaDebit' = PostPaymentMethodConfigurationsRequestBodySepaDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodySepaDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodySepaDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodySepaDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodySepaDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodySepaDebit'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodySepaDebit' :: PostPaymentMethodConfigurationsRequestBodySepaDebit'
mkPostPaymentMethodConfigurationsRequestBodySepaDebit' = PostPaymentMethodConfigurationsRequestBodySepaDebit' {postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sepa_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference' {postPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sepa_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodySepaDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sofort@ in the specification.
--
-- Stripe users in Europe and the United States can use the [Payment Intents API](https:\/\/stripe.com\/docs\/payments\/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https:\/\/www.sofort.com\/) payments from customers. Check this [page](https:\/\/stripe.com\/docs\/payments\/sofort) for more details.
data PostPaymentMethodConfigurationsRequestBodySofort' = PostPaymentMethodConfigurationsRequestBodySofort'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodySofort' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodySofort' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodySofort'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodySofort' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodySofort'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodySofort' :: PostPaymentMethodConfigurationsRequestBodySofort'
mkPostPaymentMethodConfigurationsRequestBodySofort' = PostPaymentMethodConfigurationsRequestBodySofort' {postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sofort.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference' {postPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sofort.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodySofort'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_bank_account@ in the specification.
--
-- Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https:\/\/stripe.com\/docs\/payments\/ach-debit) for more details.
data PostPaymentMethodConfigurationsRequestBodyUsBankAccount' = PostPaymentMethodConfigurationsRequestBodyUsBankAccount'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyUsBankAccount' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyUsBankAccount' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyUsBankAccount'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyUsBankAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyUsBankAccount'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyUsBankAccount' :: PostPaymentMethodConfigurationsRequestBodyUsBankAccount'
mkPostPaymentMethodConfigurationsRequestBodyUsBankAccount' = PostPaymentMethodConfigurationsRequestBodyUsBankAccount' {postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_bank_account.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_bank_account.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyUsBankAccount'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.wechat_pay@ in the specification.
--
-- WeChat, owned by Tencent, is China\'s leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses\' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food\/nutrition. Check this [page](https:\/\/stripe.com\/docs\/payments\/wechat-pay) for more details.
data PostPaymentMethodConfigurationsRequestBodyWechatPay' = PostPaymentMethodConfigurationsRequestBodyWechatPay'
  { -- | display_preference
    postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyWechatPay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyWechatPay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyWechatPay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyWechatPay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyWechatPay'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyWechatPay' :: PostPaymentMethodConfigurationsRequestBodyWechatPay'
mkPostPaymentMethodConfigurationsRequestBodyWechatPay' = PostPaymentMethodConfigurationsRequestBodyWechatPay' {postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.wechat_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' :: PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'
mkPostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' = PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference' {postPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.wechat_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsRequestBodyWechatPay'DisplayPreference'Preference'Other val
      )

-- | Represents a response of the operation 'postPaymentMethodConfigurations'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostPaymentMethodConfigurationsResponseError' is used.
data PostPaymentMethodConfigurationsResponse
  = -- | Means either no matching case available or a parse error
    PostPaymentMethodConfigurationsResponseError GHC.Base.String
  | -- | Successful response.
    PostPaymentMethodConfigurationsResponse200 PaymentMethodConfiguration
  | -- | Error response.
    PostPaymentMethodConfigurationsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
