{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postCustomersCustomerSubscriptions
module StripeAPI.Operations.PostCustomersCustomerSubscriptions where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/customers/{customer}/subscriptions
--
-- \<p>Creates a new subscription on an existing customer.\<\/p>
postCustomersCustomerSubscriptions ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | customer | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostCustomersCustomerSubscriptionsResponse)
postCustomersCustomerSubscriptions
  customer
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostCustomersCustomerSubscriptionsResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostCustomersCustomerSubscriptionsResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Subscription
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostCustomersCustomerSubscriptionsResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/customers/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel customer)) GHC.Base.<> "/subscriptions")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBody = PostCustomersCustomerSubscriptionsRequestBody
  { -- | add_invoice_items: A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items.
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems :: (GHC.Maybe.Maybe ([PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'])),
    -- | application_fee_percent: A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice total that will be transferred to the application owner\'s Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https:\/\/stripe.com\/docs\/connect\/subscriptions\#collecting-fees-on-subscriptions).
    postCustomersCustomerSubscriptionsRequestBodyApplicationFeePercent :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | automatic_tax: Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.
    postCustomersCustomerSubscriptionsRequestBodyAutomaticTax :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax'),
    -- | backdate_start_date: For new subscriptions, a past timestamp to backdate the subscription\'s start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.
    postCustomersCustomerSubscriptionsRequestBodyBackdateStartDate :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | billing_cycle_anchor: A future timestamp in UTC format to anchor the subscription\'s [billing cycle](https:\/\/stripe.com\/docs\/subscriptions\/billing-cycle). The anchor is the reference point that aligns future billing cycle dates. It sets the day of week for \`week\` intervals, the day of month for \`month\` and \`year\` intervals, and the month of year for \`year\` intervals.
    postCustomersCustomerSubscriptionsRequestBodyBillingCycleAnchor :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | billing_thresholds: Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
    postCustomersCustomerSubscriptionsRequestBodyBillingThresholds :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'Variants),
    -- | cancel_at: A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using \`proration_behavior\`. If set during a future period, this will always cause a proration for that period.
    postCustomersCustomerSubscriptionsRequestBodyCancelAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | cancel_at_period_end: Boolean indicating whether this subscription should cancel at the end of the current period.
    postCustomersCustomerSubscriptionsRequestBodyCancelAtPeriodEnd :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | collection_method: Either \`charge_automatically\`, or \`send_invoice\`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as \`active\`. Defaults to \`charge_automatically\`.
    postCustomersCustomerSubscriptionsRequestBodyCollectionMethod :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'),
    -- | coupon: The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyCoupon :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    postCustomersCustomerSubscriptionsRequestBodyCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | days_until_due: Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where \`collection_method\` is set to \`send_invoice\`.
    postCustomersCustomerSubscriptionsRequestBodyDaysUntilDue :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | default_payment_method: ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over \`default_source\`. If neither are set, invoices will use the customer\'s [invoice_settings.default_payment_method](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-invoice_settings-default_payment_method) or [default_source](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-default_source).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyDefaultPaymentMethod :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_source: ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If \`default_payment_method\` is also set, \`default_payment_method\` will take precedence. If neither are set, invoices will use the customer\'s [invoice_settings.default_payment_method](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-invoice_settings-default_payment_method) or [default_source](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-default_source).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyDefaultSource :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_tax_rates: The tax rates that will apply to any subscription item that does not have \`tax_rates\` set. Invoices created will have their \`default_tax_rates\` populated from the subscription.
    postCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'Variants),
    -- | expand: Specifies which fields in the response should be expanded.
    postCustomersCustomerSubscriptionsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | items: A list of up to 20 subscription items, each with an attached price.
    postCustomersCustomerSubscriptionsRequestBodyItems :: (GHC.Maybe.Maybe ([PostCustomersCustomerSubscriptionsRequestBodyItems'])),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postCustomersCustomerSubscriptionsRequestBodyMetadata :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyMetadata'Variants),
    -- | off_session: Indicates if a customer is on or off-session while an invoice payment is attempted.
    postCustomersCustomerSubscriptionsRequestBodyOffSession :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | payment_behavior: Only applies to subscriptions with \`collection_method=charge_automatically\`.
    --
    -- Use \`allow_incomplete\` to create subscriptions with \`status=incomplete\` if the first invoice cannot be paid. Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay a subscription\'s invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https:\/\/stripe.com\/docs\/billing\/migration\/strong-customer-authentication) for Billing to learn more. This is the default behavior.
    --
    -- Use \`default_incomplete\` to create Subscriptions with \`status=incomplete\` when the first invoice requires payment, otherwise start as active. Subscriptions transition to \`status=active\` when successfully confirming the payment intent on the first invoice. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https:\/\/stripe.com\/docs\/billing\/migration\/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the payment intent is not confirmed within 23 hours subscriptions transition to \`status=incomplete_expired\`, which is a terminal state.
    --
    -- Use \`error_if_incomplete\` if you want Stripe to return an HTTP 402 status code if a subscription\'s first invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not create a subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https:\/\/stripe.com\/docs\/upgrades\#2019-03-14) to learn more.
    --
    -- \`pending_if_incomplete\` is only used with updates and cannot be passed when creating a subscription.
    --
    -- Subscriptions with \`collection_method=send_invoice\` are automatically activated regardless of the first invoice status.
    postCustomersCustomerSubscriptionsRequestBodyPaymentBehavior :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'),
    -- | payment_settings: Payment settings to pass to invoices created by the subscription.
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'),
    -- | pending_invoice_item_interval: Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https:\/\/stripe.com\/docs\/api\#create_invoice) for the given subscription at the specified interval.
    postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'Variants),
    -- | promotion_code: The API ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyPromotionCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | proration_behavior: Determines how to handle [prorations](https:\/\/stripe.com\/docs\/subscriptions\/billing-cycle\#prorations) resulting from the \`billing_cycle_anchor\`. If no value is passed, the default is \`create_prorations\`.
    postCustomersCustomerSubscriptionsRequestBodyProrationBehavior :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'),
    -- | transfer_data: If specified, the funds from the subscription\'s invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.
    postCustomersCustomerSubscriptionsRequestBodyTransferData :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyTransferData'),
    -- | trial_end: Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value \`now\` can be provided to end the customer\'s trial immediately. Can be at most two years from \`billing_cycle_anchor\`. See [Using trial periods on subscriptions](https:\/\/stripe.com\/docs\/billing\/subscriptions\/trials) to learn more.
    postCustomersCustomerSubscriptionsRequestBodyTrialEnd :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Variants),
    -- | trial_from_plan: Indicates if a plan\'s \`trial_period_days\` should be applied to the subscription. Setting \`trial_end\` per subscription is preferred, and this defaults to \`false\`. Setting this flag to \`true\` together with \`trial_end\` is not allowed. See [Using trial periods on subscriptions](https:\/\/stripe.com\/docs\/billing\/subscriptions\/trials) to learn more.
    postCustomersCustomerSubscriptionsRequestBodyTrialFromPlan :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | trial_period_days: Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https:\/\/stripe.com\/docs\/billing\/subscriptions\/trials) to learn more.
    postCustomersCustomerSubscriptionsRequestBodyTrialPeriodDays :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | trial_settings: Settings related to subscription trials.
    postCustomersCustomerSubscriptionsRequestBodyTrialSettings :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyTrialSettings')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_invoice_items" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application_fee_percent" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyApplicationFeePercent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("automatic_tax" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAutomaticTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("backdate_start_date" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBackdateStartDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_cycle_anchor" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingCycleAnchor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_thresholds" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingThresholds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_at" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCancelAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_at_period_end" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCancelAtPeriodEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collection_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCollectionMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("days_until_due" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDaysUntilDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_payment_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDefaultPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_source" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDefaultSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_tax_rates" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("items" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("off_session" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyOffSession obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_settings" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_invoice_item_interval" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPromotionCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyProrationBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_data" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTransferData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_end" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_from_plan" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialFromPlan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_period_days" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialPeriodDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_settings" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialSettings obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("add_invoice_items" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("application_fee_percent" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyApplicationFeePercent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("automatic_tax" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAutomaticTax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("backdate_start_date" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBackdateStartDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_cycle_anchor" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingCycleAnchor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_thresholds" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingThresholds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_at" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCancelAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancel_at_period_end" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCancelAtPeriodEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("collection_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCollectionMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("days_until_due" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDaysUntilDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_payment_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDefaultPaymentMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_source" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDefaultSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_tax_rates" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("items" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("off_session" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyOffSession obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_settings" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_invoice_item_interval" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPromotionCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proration_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyProrationBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfer_data" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTransferData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_end" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_from_plan" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialFromPlan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_period_days" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialPeriodDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("trial_settings" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTrialSettings obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBody" (\obj -> ((((((((((((((((((((((((((((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "add_invoice_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "application_fee_percent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "automatic_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "backdate_start_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_cycle_anchor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_thresholds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancel_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancel_at_period_end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "collection_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "days_until_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_tax_rates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "off_session")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pending_invoice_item_interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotion_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proration_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfer_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "trial_end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "trial_from_plan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "trial_period_days")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "trial_settings"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBody' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBody :: PostCustomersCustomerSubscriptionsRequestBody
mkPostCustomersCustomerSubscriptionsRequestBody =
  PostCustomersCustomerSubscriptionsRequestBody
    { postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyApplicationFeePercent = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyAutomaticTax = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyBackdateStartDate = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyBillingCycleAnchor = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyBillingThresholds = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyCancelAt = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyCancelAtPeriodEnd = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyCollectionMethod = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyCoupon = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyCurrency = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyDaysUntilDue = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyDefaultPaymentMethod = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyDefaultSource = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyExpand = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyMetadata = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyOffSession = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentBehavior = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPromotionCode = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyProrationBehavior = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyTransferData = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyTrialEnd = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyTrialFromPlan = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyTrialPeriodDays = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyTrialSettings = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.add_invoice_items.items@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems' = PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'
  { -- | price
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Price :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | price_data
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'),
    -- | quantity
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | tax_rates
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Price obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Price obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'" (\obj -> (((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_rates"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems' :: PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'
mkPostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems' =
  PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'
    { postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Price = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'Quantity = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.add_invoice_items.items.properties.price_data@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData' = PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'
  { -- | currency
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency :: Data.Text.Internal.Text,
    -- | product
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product :: Data.Text.Internal.Text,
    -- | tax_behavior
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'),
    -- | unit_amount
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | unit_amount_decimal
    postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmountDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency obj] : ["product" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency obj] : ["product" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'" (\obj -> ((((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "product")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount_decimal"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency'
  Data.Text.Internal.Text ->
  -- | 'postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product'
  Data.Text.Internal.Text ->
  PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'
mkPostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData' postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product =
  PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'
    { postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency = postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Currency,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product = postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'Product,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmount = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'UnitAmountDecimal = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.add_invoice_items.items.properties.price_data.properties.tax_behavior@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"exclusive"@
    PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumExclusive
  | -- | Represents the JSON value @"inclusive"@
    PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumInclusive
  | -- | Represents the JSON value @"unspecified"@
    PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumUnspecified
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumExclusive) = "exclusive"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumInclusive) = "inclusive"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumUnspecified) = "unspecified"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "exclusive" -> PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumExclusive
            | val GHC.Classes.== "inclusive" -> PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumInclusive
            | val GHC.Classes.== "unspecified" -> PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'EnumUnspecified
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'PriceData'TaxBehavior'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.add_invoice_items.items.properties.tax_rates.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyAddInvoiceItems'TaxRates'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.automatic_tax@ in the specification.
--
-- Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.
data PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' = PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax'
  { -- | enabled
    postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["enabled" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax'" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "enabled"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled'
  GHC.Types.Bool ->
  PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax'
mkPostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled = PostCustomersCustomerSubscriptionsRequestBodyAutomaticTax' {postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled = postCustomersCustomerSubscriptionsRequestBodyAutomaticTax'Enabled}

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.billing_thresholds.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1
  { -- | amount_gte
    postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1AmountGte :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | reset_billing_cycle_anchor
    postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1ResetBillingCycleAnchor :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_gte" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1AmountGte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reset_billing_cycle_anchor" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1ResetBillingCycleAnchor obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_gte" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1AmountGte obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reset_billing_cycle_anchor" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1ResetBillingCycleAnchor obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reset_billing_cycle_anchor"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 :: PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 =
  PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1
    { postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1AmountGte = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1ResetBillingCycleAnchor = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.billing_thresholds.anyOf@ in the specification.
--
-- Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds.
data PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'PostCustomersCustomerSubscriptionsRequestBodyBillingThresholds'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.collection_method@ in the specification.
--
-- Either \`charge_automatically\`, or \`send_invoice\`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as \`active\`. Defaults to \`charge_automatically\`.
data PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"charge_automatically"@
    PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'EnumChargeAutomatically
  | -- | Represents the JSON value @"send_invoice"@
    PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'EnumSendInvoice
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'EnumChargeAutomatically) = "charge_automatically"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'EnumSendInvoice) = "send_invoice"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "charge_automatically" -> PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'EnumChargeAutomatically
            | val GHC.Classes.== "send_invoice" -> PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'EnumSendInvoice
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyCollectionMethod'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.default_tax_rates.anyOf@ in the specification.
--
-- The tax rates that will apply to any subscription item that does not have \`tax_rates\` set. Invoices created will have their \`default_tax_rates\` populated from the subscription.
data PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyDefaultTaxRates'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems' = PostCustomersCustomerSubscriptionsRequestBodyItems'
  { -- | billing_thresholds
    postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'Variants),
    -- | metadata
    postCustomersCustomerSubscriptionsRequestBodyItems'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | price
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyItems'Price :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | price_data
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'),
    -- | quantity
    postCustomersCustomerSubscriptionsRequestBodyItems'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | tax_rates
    postCustomersCustomerSubscriptionsRequestBodyItems'TaxRates :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_thresholds" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'Price obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'TaxRates obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_thresholds" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'Price obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price_data" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'TaxRates obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyItems'" (\obj -> (((((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_thresholds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price_data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_rates"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyItems'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyItems' :: PostCustomersCustomerSubscriptionsRequestBodyItems'
mkPostCustomersCustomerSubscriptionsRequestBodyItems' =
  PostCustomersCustomerSubscriptionsRequestBodyItems'
    { postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'Metadata = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'Price = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'Quantity = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'TaxRates = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.billing_thresholds.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1
  { -- | usage_gte
    postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["usage_gte" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["usage_gte" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "usage_gte"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte'
  GHC.Types.Int ->
  PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte = PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 {postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte = postCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1UsageGte}

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.billing_thresholds.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'PostCustomersCustomerSubscriptionsRequestBodyItems'BillingThresholds'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.price_data@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData' = PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'
  { -- | currency
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency :: Data.Text.Internal.Text,
    -- | product
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product :: Data.Text.Internal.Text,
    -- | recurring
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring :: PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring',
    -- | tax_behavior
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'),
    -- | unit_amount
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | unit_amount_decimal
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmountDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency obj] : ["product" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product obj] : ["recurring" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["currency" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency obj] : ["product" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product obj] : ["recurring" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_behavior" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'" (\obj -> (((((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "product")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "recurring")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_behavior")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount_decimal"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyItems'PriceData' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency'
  Data.Text.Internal.Text ->
  -- | 'postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product'
  Data.Text.Internal.Text ->
  -- | 'postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'
  PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' ->
  PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'
mkPostCustomersCustomerSubscriptionsRequestBodyItems'PriceData' postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring =
  PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'
    { postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency = postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Currency,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product = postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Product,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring = postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmount = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'UnitAmountDecimal = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.price_data.properties.recurring@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' = PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'
  { -- | interval
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval :: PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval',
    -- | interval_count
    postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'IntervalCount :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["interval" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval_count" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'IntervalCount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["interval" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval_count" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'IntervalCount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval_count"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'
  PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval' ->
  PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'
mkPostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring' postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval =
  PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'
    { postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval = postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval,
      postCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'IntervalCount = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.price_data.properties.recurring.properties.interval@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"day"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumDay
  | -- | Represents the JSON value @"month"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumMonth
  | -- | Represents the JSON value @"week"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumWeek
  | -- | Represents the JSON value @"year"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumYear
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumDay) = "day"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumMonth) = "month"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumWeek) = "week"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumYear) = "year"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "day" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumDay
            | val GHC.Classes.== "month" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumMonth
            | val GHC.Classes.== "week" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumWeek
            | val GHC.Classes.== "year" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'EnumYear
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'Recurring'Interval'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.price_data.properties.tax_behavior@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"exclusive"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumExclusive
  | -- | Represents the JSON value @"inclusive"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumInclusive
  | -- | Represents the JSON value @"unspecified"@
    PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumUnspecified
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumExclusive) = "exclusive"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumInclusive) = "inclusive"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumUnspecified) = "unspecified"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "exclusive" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumExclusive
            | val GHC.Classes.== "inclusive" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumInclusive
            | val GHC.Classes.== "unspecified" -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'EnumUnspecified
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyItems'PriceData'TaxBehavior'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.items.items.properties.tax_rates.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyItems'TaxRates'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostCustomersCustomerSubscriptionsRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyMetadata'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyMetadata'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_behavior@ in the specification.
--
-- Only applies to subscriptions with \`collection_method=charge_automatically\`.
--
-- Use \`allow_incomplete\` to create subscriptions with \`status=incomplete\` if the first invoice cannot be paid. Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay a subscription\'s invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https:\/\/stripe.com\/docs\/billing\/migration\/strong-customer-authentication) for Billing to learn more. This is the default behavior.
--
-- Use \`default_incomplete\` to create Subscriptions with \`status=incomplete\` when the first invoice requires payment, otherwise start as active. Subscriptions transition to \`status=active\` when successfully confirming the payment intent on the first invoice. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https:\/\/stripe.com\/docs\/billing\/migration\/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the payment intent is not confirmed within 23 hours subscriptions transition to \`status=incomplete_expired\`, which is a terminal state.
--
-- Use \`error_if_incomplete\` if you want Stripe to return an HTTP 402 status code if a subscription\'s first invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not create a subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https:\/\/stripe.com\/docs\/upgrades\#2019-03-14) to learn more.
--
-- \`pending_if_incomplete\` is only used with updates and cannot be passed when creating a subscription.
--
-- Subscriptions with \`collection_method=send_invoice\` are automatically activated regardless of the first invoice status.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"allow_incomplete"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumAllowIncomplete
  | -- | Represents the JSON value @"default_incomplete"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumDefaultIncomplete
  | -- | Represents the JSON value @"error_if_incomplete"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumErrorIfIncomplete
  | -- | Represents the JSON value @"pending_if_incomplete"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumPendingIfIncomplete
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumAllowIncomplete) = "allow_incomplete"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumDefaultIncomplete) = "default_incomplete"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumErrorIfIncomplete) = "error_if_incomplete"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumPendingIfIncomplete) = "pending_if_incomplete"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "allow_incomplete" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumAllowIncomplete
            | val GHC.Classes.== "default_incomplete" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumDefaultIncomplete
            | val GHC.Classes.== "error_if_incomplete" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumErrorIfIncomplete
            | val GHC.Classes.== "pending_if_incomplete" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'EnumPendingIfIncomplete
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentBehavior'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings@ in the specification.
--
-- Payment settings to pass to invoices created by the subscription.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'
  { -- | payment_method_options
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'),
    -- | payment_method_types
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'Variants),
    -- | save_default_payment_method
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_types" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("save_default_payment_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_options" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_method_types" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("save_default_payment_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'" (\obj -> ((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_method_types")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "save_default_payment_method"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings' :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings' =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'
  { -- | acss_debit
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'Variants),
    -- | bancontact
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants),
    -- | card
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants),
    -- | customer_balance
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'Variants),
    -- | konbini
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Variants),
    -- | us_bank_account
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_balance" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'" (\obj -> (((((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions' :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions' =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.acss_debit.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1
  { -- | mandate_options
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'),
    -- | verification_method
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.acss_debit.anyOf.properties.mandate_options@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'
  { -- | transaction_type
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transaction_type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transaction_type"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions' {postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.acss_debit.anyOf.properties.mandate_options.properties.transaction_type@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"business"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'EnumBusiness
  | -- | Represents the JSON value @"personal"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'EnumPersonal
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'EnumBusiness) = "business"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'EnumPersonal) = "personal"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "business" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'EnumBusiness
            | val GHC.Classes.== "personal" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'EnumPersonal
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1MandateOptions'TransactionType'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.acss_debit.anyOf.properties.verification_method@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumInstant) = "instant"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "automatic" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumAutomatic
            | val GHC.Classes.== "instant" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumInstant
            | val GHC.Classes.== "microdeposits" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'EnumMicrodeposits
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1VerificationMethod'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.acss_debit.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'AcssDebit'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.bancontact.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1
  { -- | preferred_language
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_language" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_language" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferred_language"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 {postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.bancontact.anyOf.properties.preferred_language@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"de"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumDe
  | -- | Represents the JSON value @"en"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumEn
  | -- | Represents the JSON value @"fr"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumFr
  | -- | Represents the JSON value @"nl"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumNl
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumDe) = "de"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumEn) = "en"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumFr) = "fr"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumNl) = "nl"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "de" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumDe
            | val GHC.Classes.== "en" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumEn
            | val GHC.Classes.== "fr" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumFr
            | val GHC.Classes.== "nl" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'EnumNl
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1PreferredLanguage'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.bancontact.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Bancontact'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
  { -- | mandate_options
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'),
    -- | network
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'),
    -- | request_three_d_secure
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_three_d_secure" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mandate_options" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("network" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("request_three_d_secure" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1" (\obj -> ((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mandate_options")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "network")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "request_three_d_secure"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf.properties.mandate_options@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'
  { -- | amount
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_type
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'),
    -- | description
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Description obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Description obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'" (\obj -> ((GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions' :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions' =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Amount = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'Description = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf.properties.mandate_options.properties.amount_type@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"fixed"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'EnumFixed
  | -- | Represents the JSON value @"maximum"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'EnumMaximum
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'EnumFixed) = "fixed"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'EnumMaximum) = "maximum"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "fixed" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'EnumFixed
            | val GHC.Classes.== "maximum" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'EnumMaximum
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1MandateOptions'AmountType'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf.properties.network@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"amex"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumAmex
  | -- | Represents the JSON value @"cartes_bancaires"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumCartesBancaires
  | -- | Represents the JSON value @"diners"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumDiners
  | -- | Represents the JSON value @"discover"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumDiscover
  | -- | Represents the JSON value @"eftpos_au"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumEftposAu
  | -- | Represents the JSON value @"interac"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumInterac
  | -- | Represents the JSON value @"jcb"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumJcb
  | -- | Represents the JSON value @"mastercard"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumMastercard
  | -- | Represents the JSON value @"unionpay"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumUnionpay
  | -- | Represents the JSON value @"unknown"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumUnknown
  | -- | Represents the JSON value @"visa"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumVisa
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumAmex) = "amex"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumCartesBancaires) = "cartes_bancaires"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumDiners) = "diners"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumDiscover) = "discover"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumEftposAu) = "eftpos_au"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumInterac) = "interac"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumJcb) = "jcb"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumMastercard) = "mastercard"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumUnionpay) = "unionpay"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumUnknown) = "unknown"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumVisa) = "visa"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "amex" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumAmex
            | val GHC.Classes.== "cartes_bancaires" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumCartesBancaires
            | val GHC.Classes.== "diners" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumDiners
            | val GHC.Classes.== "discover" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumDiscover
            | val GHC.Classes.== "eftpos_au" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumEftposAu
            | val GHC.Classes.== "interac" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumInterac
            | val GHC.Classes.== "jcb" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumJcb
            | val GHC.Classes.== "mastercard" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumMastercard
            | val GHC.Classes.== "unionpay" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumUnionpay
            | val GHC.Classes.== "unknown" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumUnknown
            | val GHC.Classes.== "visa" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'EnumVisa
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1Network'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf.properties.request_three_d_secure@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"any"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAny
  | -- | Represents the JSON value @"automatic"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAutomatic
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAny) = "any"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAutomatic) = "automatic"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "any" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAny
            | val GHC.Classes.== "automatic" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'EnumAutomatic
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1RequestThreeDSecure'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.card.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Card'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.customer_balance.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1
  { -- | bank_transfer
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'),
    -- | funding_type
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1FundingType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_transfer" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding_type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1FundingType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_transfer" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding_type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1FundingType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding_type"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1FundingType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.customer_balance.anyOf.properties.bank_transfer@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'
  { -- | eu_bank_transfer
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'),
    -- | type
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'Type :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eu_bank_transfer" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'Type obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eu_bank_transfer" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'Type obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eu_bank_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer' :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer' =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'Type = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.customer_balance.anyOf.properties.bank_transfer.properties.eu_bank_transfer@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'
  { -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["country" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["country" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country'
  Data.Text.Internal.Text ->
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer' {postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country = postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1BankTransfer'EuBankTransfer'Country}

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.customer_balance.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'CustomerBalance'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.konbini.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'Konbini'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.us_bank_account.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1
  { -- | financial_connections
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'),
    -- | verification_method
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod :: (GHC.Maybe.Maybe PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_connections" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification_method" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_connections")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification_method"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.us_bank_account.anyOf.properties.financial_connections@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections' = PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'
  { -- | permissions
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions :: (GHC.Maybe.Maybe ([PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'])),
    -- | prefetch
    postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch :: (GHC.Maybe.Maybe ([PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch']))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("permissions" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("prefetch" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("permissions" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("prefetch" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "permissions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "prefetch"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections' :: PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'
mkPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections' =
  PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'
    { postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.us_bank_account.anyOf.properties.financial_connections.properties.permissions.items@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"balances"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumBalances
  | -- | Represents the JSON value @"ownership"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumOwnership
  | -- | Represents the JSON value @"payment_method"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumPaymentMethod
  | -- | Represents the JSON value @"transactions"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumTransactions
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumBalances) = "balances"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumOwnership) = "ownership"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumPaymentMethod) = "payment_method"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumTransactions) = "transactions"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "balances" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumBalances
            | val GHC.Classes.== "ownership" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumOwnership
            | val GHC.Classes.== "payment_method" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumPaymentMethod
            | val GHC.Classes.== "transactions" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'EnumTransactions
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Permissions'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.us_bank_account.anyOf.properties.financial_connections.properties.prefetch.items@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"balances"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'EnumBalances
  | -- | Represents the JSON value @"transactions"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'EnumTransactions
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'EnumBalances) = "balances"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'EnumTransactions) = "transactions"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "balances" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'EnumBalances
            | val GHC.Classes.== "transactions" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'EnumTransactions
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1FinancialConnections'Prefetch'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.us_bank_account.anyOf.properties.verification_method@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"automatic"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumAutomatic
  | -- | Represents the JSON value @"instant"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumInstant
  | -- | Represents the JSON value @"microdeposits"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumMicrodeposits
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumAutomatic) = "automatic"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumInstant) = "instant"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumMicrodeposits) = "microdeposits"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "automatic" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumAutomatic
            | val GHC.Classes.== "instant" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumInstant
            | val GHC.Classes.== "microdeposits" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'EnumMicrodeposits
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1VerificationMethod'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_options.properties.us_bank_account.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodOptions'UsBankAccount'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_types.anyOf.items@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"ach_credit_transfer"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchCreditTransfer
  | -- | Represents the JSON value @"ach_debit"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchDebit
  | -- | Represents the JSON value @"acss_debit"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAcssDebit
  | -- | Represents the JSON value @"au_becs_debit"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAuBecsDebit
  | -- | Represents the JSON value @"bacs_debit"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBacsDebit
  | -- | Represents the JSON value @"bancontact"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBancontact
  | -- | Represents the JSON value @"boleto"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBoleto
  | -- | Represents the JSON value @"card"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCard
  | -- | Represents the JSON value @"cashapp"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCashapp
  | -- | Represents the JSON value @"customer_balance"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCustomerBalance
  | -- | Represents the JSON value @"fpx"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumFpx
  | -- | Represents the JSON value @"giropay"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGiropay
  | -- | Represents the JSON value @"grabpay"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGrabpay
  | -- | Represents the JSON value @"ideal"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumIdeal
  | -- | Represents the JSON value @"konbini"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumKonbini
  | -- | Represents the JSON value @"link"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumLink
  | -- | Represents the JSON value @"paynow"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPaynow
  | -- | Represents the JSON value @"paypal"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPaypal
  | -- | Represents the JSON value @"promptpay"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPromptpay
  | -- | Represents the JSON value @"sepa_debit"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSepaDebit
  | -- | Represents the JSON value @"sofort"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSofort
  | -- | Represents the JSON value @"us_bank_account"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumUsBankAccount
  | -- | Represents the JSON value @"wechat_pay"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumWechatPay
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchCreditTransfer) = "ach_credit_transfer"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchDebit) = "ach_debit"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAcssDebit) = "acss_debit"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAuBecsDebit) = "au_becs_debit"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBacsDebit) = "bacs_debit"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBancontact) = "bancontact"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBoleto) = "boleto"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCard) = "card"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCashapp) = "cashapp"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCustomerBalance) = "customer_balance"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumFpx) = "fpx"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGiropay) = "giropay"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGrabpay) = "grabpay"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumIdeal) = "ideal"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumKonbini) = "konbini"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumLink) = "link"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPaynow) = "paynow"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPaypal) = "paypal"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPromptpay) = "promptpay"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSepaDebit) = "sepa_debit"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSofort) = "sofort"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumUsBankAccount) = "us_bank_account"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumWechatPay) = "wechat_pay"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ach_credit_transfer" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchCreditTransfer
            | val GHC.Classes.== "ach_debit" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAchDebit
            | val GHC.Classes.== "acss_debit" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAcssDebit
            | val GHC.Classes.== "au_becs_debit" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumAuBecsDebit
            | val GHC.Classes.== "bacs_debit" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBacsDebit
            | val GHC.Classes.== "bancontact" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBancontact
            | val GHC.Classes.== "boleto" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumBoleto
            | val GHC.Classes.== "card" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCard
            | val GHC.Classes.== "cashapp" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCashapp
            | val GHC.Classes.== "customer_balance" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumCustomerBalance
            | val GHC.Classes.== "fpx" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumFpx
            | val GHC.Classes.== "giropay" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGiropay
            | val GHC.Classes.== "grabpay" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumGrabpay
            | val GHC.Classes.== "ideal" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumIdeal
            | val GHC.Classes.== "konbini" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumKonbini
            | val GHC.Classes.== "link" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumLink
            | val GHC.Classes.== "paynow" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPaynow
            | val GHC.Classes.== "paypal" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPaypal
            | val GHC.Classes.== "promptpay" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumPromptpay
            | val GHC.Classes.== "sepa_debit" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSepaDebit
            | val GHC.Classes.== "sofort" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumSofort
            | val GHC.Classes.== "us_bank_account" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumUsBankAccount
            | val GHC.Classes.== "wechat_pay" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1EnumWechatPay
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.payment_method_types.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'ListTPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 ([PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'ListTPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'ListTPostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'PaymentMethodTypes'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.payment_settings.properties.save_default_payment_method@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"off"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'EnumOff
  | -- | Represents the JSON value @"on_subscription"@
    PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'EnumOnSubscription
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'EnumOff) = "off"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'EnumOnSubscription) = "on_subscription"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "off" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'EnumOff
            | val GHC.Classes.== "on_subscription" -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'EnumOnSubscription
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPaymentSettings'SaveDefaultPaymentMethod'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.pending_invoice_item_interval.anyOf@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 = PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1
  { -- | interval
    postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval :: PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval',
    -- | interval_count
    postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1IntervalCount :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["interval" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval_count" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1IntervalCount obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["interval" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval_count" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1IntervalCount obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval_count"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'
  PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval' ->
  PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1
mkPostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval =
  PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1
    { postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval = postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval,
      postCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1IntervalCount = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.pending_invoice_item_interval.anyOf.properties.interval@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"day"@
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumDay
  | -- | Represents the JSON value @"month"@
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumMonth
  | -- | Represents the JSON value @"week"@
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumWeek
  | -- | Represents the JSON value @"year"@
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumYear
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumDay) = "day"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumMonth) = "month"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumWeek) = "week"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumYear) = "year"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "day" -> PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumDay
            | val GHC.Classes.== "month" -> PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumMonth
            | val GHC.Classes.== "week" -> PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumWeek
            | val GHC.Classes.== "year" -> PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'EnumYear
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1Interval'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.pending_invoice_item_interval.anyOf@ in the specification.
--
-- Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https:\/\/stripe.com\/docs\/api\#create_invoice) for the given subscription at the specified interval.
data PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'Variants
  = -- | Represents the JSON value @""@
    PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'EmptyString
  | PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'EmptyString
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'PostCustomersCustomerSubscriptionsRequestBodyPendingInvoiceItemInterval'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.proration_behavior@ in the specification.
--
-- Determines how to handle [prorations](https:\/\/stripe.com\/docs\/subscriptions\/billing-cycle\#prorations) resulting from the \`billing_cycle_anchor\`. If no value is passed, the default is \`create_prorations\`.
data PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"always_invoice"@
    PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumAlwaysInvoice
  | -- | Represents the JSON value @"create_prorations"@
    PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumCreateProrations
  | -- | Represents the JSON value @"none"@
    PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumNone
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumAlwaysInvoice) = "always_invoice"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumCreateProrations) = "create_prorations"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumNone) = "none"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "always_invoice" -> PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumAlwaysInvoice
            | val GHC.Classes.== "create_prorations" -> PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumCreateProrations
            | val GHC.Classes.== "none" -> PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'EnumNone
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyProrationBehavior'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.transfer_data@ in the specification.
--
-- If specified, the funds from the subscription\'s invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.
data PostCustomersCustomerSubscriptionsRequestBodyTransferData' = PostCustomersCustomerSubscriptionsRequestBodyTransferData'
  { -- | amount_percent
    postCustomersCustomerSubscriptionsRequestBodyTransferData'AmountPercent :: (GHC.Maybe.Maybe GHC.Types.Double),
    -- | destination
    postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyTransferData' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_percent" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTransferData'AmountPercent obj) : ["destination" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_percent" Data.Aeson.Types.ToJSON..=)) (postCustomersCustomerSubscriptionsRequestBodyTransferData'AmountPercent obj) : ["destination" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyTransferData' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyTransferData'" (\obj -> (GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyTransferData' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_percent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "destination"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyTransferData'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyTransferData' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination'
  Data.Text.Internal.Text ->
  PostCustomersCustomerSubscriptionsRequestBodyTransferData'
mkPostCustomersCustomerSubscriptionsRequestBodyTransferData' postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination =
  PostCustomersCustomerSubscriptionsRequestBodyTransferData'
    { postCustomersCustomerSubscriptionsRequestBodyTransferData'AmountPercent = GHC.Maybe.Nothing,
      postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination = postCustomersCustomerSubscriptionsRequestBodyTransferData'Destination
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.trial_end.anyOf@ in the specification.
--
-- Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value \`now\` can be provided to end the customer\'s trial immediately. Can be at most two years from \`billing_cycle_anchor\`. See [Using trial periods on subscriptions](https:\/\/stripe.com\/docs\/billing\/subscriptions\/trials) to learn more.
data PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Variants
  = -- | Represents the JSON value @"now"@
    PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Now
  | PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Variants where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Now) = "now"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "now" -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Now
        | GHC.Base.otherwise -> case (PostCustomersCustomerSubscriptionsRequestBodyTrialEnd'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.trial_settings@ in the specification.
--
-- Settings related to subscription trials.
data PostCustomersCustomerSubscriptionsRequestBodyTrialSettings' = PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'
  { -- | end_behavior
    postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior :: PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyTrialSettings' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["end_behavior" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["end_behavior" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyTrialSettings' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyTrialSettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "end_behavior"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyTrialSettings' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'
  PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' ->
  PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'
mkPostCustomersCustomerSubscriptionsRequestBodyTrialSettings' postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior = PostCustomersCustomerSubscriptionsRequestBodyTrialSettings' {postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior = postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior}

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.trial_settings.properties.end_behavior@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' = PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'
  { -- | missing_payment_method
    postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod :: PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["missing_payment_method" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["missing_payment_method" Data.Aeson.Types.ToJSON..= postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'" (\obj -> GHC.Base.pure PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "missing_payment_method"))

-- | Create a new 'PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'' with all required fields.
mkPostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' ::
  -- | 'postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'
  PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod' ->
  PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'
mkPostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod = PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior' {postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod = postCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod}

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/subscriptions.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.trial_settings.properties.end_behavior.properties.missing_payment_method@ in the specification.
data PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"cancel"@
    PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumCancel
  | -- | Represents the JSON value @"create_invoice"@
    PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumCreateInvoice
  | -- | Represents the JSON value @"pause"@
    PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumPause
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod' where
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'Other val) = val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumCancel) = "cancel"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumCreateInvoice) = "create_invoice"
  toJSON (PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumPause) = "pause"

instance Data.Aeson.Types.FromJSON.FromJSON PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "cancel" -> PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumCancel
            | val GHC.Classes.== "create_invoice" -> PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumCreateInvoice
            | val GHC.Classes.== "pause" -> PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'EnumPause
            | GHC.Base.otherwise -> PostCustomersCustomerSubscriptionsRequestBodyTrialSettings'EndBehavior'MissingPaymentMethod'Other val
      )

-- | Represents a response of the operation 'postCustomersCustomerSubscriptions'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostCustomersCustomerSubscriptionsResponseError' is used.
data PostCustomersCustomerSubscriptionsResponse
  = -- | Means either no matching case available or a parse error
    PostCustomersCustomerSubscriptionsResponseError GHC.Base.String
  | -- | Successful response.
    PostCustomersCustomerSubscriptionsResponse200 Subscription
  | -- | Error response.
    PostCustomersCustomerSubscriptionsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
