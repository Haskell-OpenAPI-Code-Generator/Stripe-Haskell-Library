{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postChargesChargeDispute
module StripeAPI.Operations.PostChargesChargeDispute where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/charges/{charge}/dispute
postChargesChargeDispute ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | charge | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostChargesChargeDisputeRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostChargesChargeDisputeResponse)
postChargesChargeDispute
  charge
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostChargesChargeDisputeResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostChargesChargeDisputeResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Dispute
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostChargesChargeDisputeResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/charges/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel charge)) GHC.Base.++ "/dispute"))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/charges\/{charge}\/dispute.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostChargesChargeDisputeRequestBody = PostChargesChargeDisputeRequestBody
  { -- | evidence: Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
    postChargesChargeDisputeRequestBodyEvidence :: (GHC.Maybe.Maybe PostChargesChargeDisputeRequestBodyEvidence'),
    -- | expand: Specifies which fields in the response should be expanded.
    postChargesChargeDisputeRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postChargesChargeDisputeRequestBodyMetadata :: (GHC.Maybe.Maybe PostChargesChargeDisputeRequestBodyMetadata'Variants),
    -- | submit: Whether to immediately submit evidence to the bank. If \`false\`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to \`true\` (the default).
    postChargesChargeDisputeRequestBodySubmit :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostChargesChargeDisputeRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evidence" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodySubmit obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("evidence" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("submit" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodySubmit obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostChargesChargeDisputeRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostChargesChargeDisputeRequestBody" (\obj -> (((GHC.Base.pure PostChargesChargeDisputeRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "evidence")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "submit"))

-- | Create a new 'PostChargesChargeDisputeRequestBody' with all required fields.
mkPostChargesChargeDisputeRequestBody :: PostChargesChargeDisputeRequestBody
mkPostChargesChargeDisputeRequestBody =
  PostChargesChargeDisputeRequestBody
    { postChargesChargeDisputeRequestBodyEvidence = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyExpand = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyMetadata = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodySubmit = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/charges\/{charge}\/dispute.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.evidence@ in the specification.
--
-- Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.
data PostChargesChargeDisputeRequestBodyEvidence' = PostChargesChargeDisputeRequestBodyEvidence'
  { -- | access_activity_log
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'AccessActivityLog :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | billing_address
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'BillingAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | cancellation_policy
    postChargesChargeDisputeRequestBodyEvidence'CancellationPolicy :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | cancellation_policy_disclosure
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'CancellationPolicyDisclosure :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | cancellation_rebuttal
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'CancellationRebuttal :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer_communication
    postChargesChargeDisputeRequestBodyEvidence'CustomerCommunication :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer_email_address
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'CustomerEmailAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer_name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'CustomerName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer_purchase_ip
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'CustomerPurchaseIp :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer_signature
    postChargesChargeDisputeRequestBodyEvidence'CustomerSignature :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | duplicate_charge_documentation
    postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeDocumentation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | duplicate_charge_explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeExplanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | duplicate_charge_id
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_description
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | receipt
    postChargesChargeDisputeRequestBodyEvidence'Receipt :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | refund_policy
    postChargesChargeDisputeRequestBodyEvidence'RefundPolicy :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | refund_policy_disclosure
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'RefundPolicyDisclosure :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | refund_refusal_explanation
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'RefundRefusalExplanation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | service_date
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'ServiceDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | service_documentation
    postChargesChargeDisputeRequestBodyEvidence'ServiceDocumentation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | shipping_address
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'ShippingAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | shipping_carrier
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'ShippingCarrier :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | shipping_date
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'ShippingDate :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | shipping_documentation
    postChargesChargeDisputeRequestBodyEvidence'ShippingDocumentation :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | shipping_tracking_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postChargesChargeDisputeRequestBodyEvidence'ShippingTrackingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | uncategorized_file
    postChargesChargeDisputeRequestBodyEvidence'UncategorizedFile :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | uncategorized_text
    --
    -- Constraints:
    --
    -- * Maximum length of 20000
    postChargesChargeDisputeRequestBodyEvidence'UncategorizedText :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostChargesChargeDisputeRequestBodyEvidence' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_activity_log" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'AccessActivityLog obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_address" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'BillingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CancellationPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CancellationPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_rebuttal" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CancellationRebuttal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_communication" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerCommunication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_name" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_signature" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerSignature obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_documentation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_explanation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_id" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'Receipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'RefundPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'RefundPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_refusal_explanation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'RefundRefusalExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_date" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ServiceDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_documentation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ServiceDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_carrier" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_date" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_documentation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_tracking_number" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingTrackingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_file" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'UncategorizedFile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_text" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'UncategorizedText obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("access_activity_log" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'AccessActivityLog obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("billing_address" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'BillingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CancellationPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CancellationPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cancellation_rebuttal" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CancellationRebuttal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_communication" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerCommunication obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_email_address" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerEmailAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_name" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_purchase_ip" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerPurchaseIp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer_signature" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'CustomerSignature obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_documentation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_explanation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("duplicate_charge_id" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'Receipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'RefundPolicy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_policy_disclosure" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'RefundPolicyDisclosure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_refusal_explanation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'RefundRefusalExplanation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_date" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ServiceDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_documentation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ServiceDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_address" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_carrier" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_date" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingDate obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_documentation" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingDocumentation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_tracking_number" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'ShippingTrackingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_file" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'UncategorizedFile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncategorized_text" Data.Aeson.Types.ToJSON..=)) (postChargesChargeDisputeRequestBodyEvidence'UncategorizedText obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostChargesChargeDisputeRequestBodyEvidence' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostChargesChargeDisputeRequestBodyEvidence'" (\obj -> ((((((((((((((((((((((((((GHC.Base.pure PostChargesChargeDisputeRequestBodyEvidence' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "access_activity_log")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "billing_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_policy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_policy_disclosure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cancellation_rebuttal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_communication")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_email_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_purchase_ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer_signature")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate_charge_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate_charge_explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "duplicate_charge_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_policy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_policy_disclosure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_refusal_explanation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_documentation")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_tracking_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uncategorized_file")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uncategorized_text"))

-- | Create a new 'PostChargesChargeDisputeRequestBodyEvidence'' with all required fields.
mkPostChargesChargeDisputeRequestBodyEvidence' :: PostChargesChargeDisputeRequestBodyEvidence'
mkPostChargesChargeDisputeRequestBodyEvidence' =
  PostChargesChargeDisputeRequestBodyEvidence'
    { postChargesChargeDisputeRequestBodyEvidence'AccessActivityLog = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'BillingAddress = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CancellationPolicy = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CancellationPolicyDisclosure = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CancellationRebuttal = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CustomerCommunication = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CustomerEmailAddress = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CustomerName = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CustomerPurchaseIp = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'CustomerSignature = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeDocumentation = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeExplanation = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'DuplicateChargeId = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ProductDescription = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'Receipt = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'RefundPolicy = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'RefundPolicyDisclosure = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'RefundRefusalExplanation = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ServiceDate = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ServiceDocumentation = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ShippingAddress = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ShippingCarrier = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ShippingDate = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ShippingDocumentation = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'ShippingTrackingNumber = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'UncategorizedFile = GHC.Maybe.Nothing,
      postChargesChargeDisputeRequestBodyEvidence'UncategorizedText = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/charges\/{charge}\/dispute.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostChargesChargeDisputeRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostChargesChargeDisputeRequestBodyMetadata'EmptyString
  | PostChargesChargeDisputeRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostChargesChargeDisputeRequestBodyMetadata'Variants where
  toJSON (PostChargesChargeDisputeRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostChargesChargeDisputeRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostChargesChargeDisputeRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostChargesChargeDisputeRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostChargesChargeDisputeRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
          Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
          Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'postChargesChargeDispute'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostChargesChargeDisputeResponseError' is used.
data PostChargesChargeDisputeResponse
  = -- | Means either no matching case available or a parse error
    PostChargesChargeDisputeResponseError GHC.Base.String
  | -- | Successful response.
    PostChargesChargeDisputeResponse200 Dispute
  | -- | Error response.
    PostChargesChargeDisputeResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
