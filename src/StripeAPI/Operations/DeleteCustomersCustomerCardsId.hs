{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation deleteCustomersCustomerCardsId
module StripeAPI.Operations.DeleteCustomersCustomerCardsId where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > DELETE /v1/customers/{customer}/cards/{id}
--
-- \<p>Delete a specified source for a given customer.\<\/p>
deleteCustomersCustomerCardsId ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  DeleteCustomersCustomerCardsIdParameters ->
  -- | The request body to send
  GHC.Maybe.Maybe DeleteCustomersCustomerCardsIdRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response DeleteCustomersCustomerCardsIdResponse)
deleteCustomersCustomerCardsId
  parameters
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either DeleteCustomersCustomerCardsIdResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       DeleteCustomersCustomerCardsIdResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                DeleteCustomersCustomerCardsIdResponseBody200
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       DeleteCustomersCustomerCardsIdResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "DELETE") ("/v1/customers/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (deleteCustomersCustomerCardsIdParametersPathCustomer parameters))) GHC.Base.<> ("/cards/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (deleteCustomersCustomerCardsIdParametersPathId parameters))) GHC.Base.<> "")))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.parameters@ in the specification.
data DeleteCustomersCustomerCardsIdParameters = DeleteCustomersCustomerCardsIdParameters
  { -- | pathCustomer: Represents the parameter named \'customer\'
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdParametersPathCustomer :: Data.Text.Internal.Text,
    -- | pathId: Represents the parameter named \'id\'
    deleteCustomersCustomerCardsIdParametersPathId :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdParametersPathCustomer obj] : ["pathId" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdParametersPathId obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdParametersPathCustomer obj] : ["pathId" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdParametersPathId obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdParameters" (\obj -> (GHC.Base.pure DeleteCustomersCustomerCardsIdParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathId"))

-- | Create a new 'DeleteCustomersCustomerCardsIdParameters' with all required fields.
mkDeleteCustomersCustomerCardsIdParameters ::
  -- | 'deleteCustomersCustomerCardsIdParametersPathCustomer'
  Data.Text.Internal.Text ->
  -- | 'deleteCustomersCustomerCardsIdParametersPathId'
  Data.Text.Internal.Text ->
  DeleteCustomersCustomerCardsIdParameters
mkDeleteCustomersCustomerCardsIdParameters deleteCustomersCustomerCardsIdParametersPathCustomer deleteCustomersCustomerCardsIdParametersPathId =
  DeleteCustomersCustomerCardsIdParameters
    { deleteCustomersCustomerCardsIdParametersPathCustomer = deleteCustomersCustomerCardsIdParametersPathCustomer,
      deleteCustomersCustomerCardsIdParametersPathId = deleteCustomersCustomerCardsIdParametersPathId
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data DeleteCustomersCustomerCardsIdRequestBody = DeleteCustomersCustomerCardsIdRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    deleteCustomersCustomerCardsIdRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdRequestBodyExpand obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdRequestBodyExpand obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdRequestBody" (\obj -> GHC.Base.pure DeleteCustomersCustomerCardsIdRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))

-- | Create a new 'DeleteCustomersCustomerCardsIdRequestBody' with all required fields.
mkDeleteCustomersCustomerCardsIdRequestBody :: DeleteCustomersCustomerCardsIdRequestBody
mkDeleteCustomersCustomerCardsIdRequestBody = DeleteCustomersCustomerCardsIdRequestBody {deleteCustomersCustomerCardsIdRequestBodyExpand = GHC.Maybe.Nothing}

-- | Represents a response of the operation 'deleteCustomersCustomerCardsId'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'DeleteCustomersCustomerCardsIdResponseError' is used.
data DeleteCustomersCustomerCardsIdResponse
  = -- | Means either no matching case available or a parse error
    DeleteCustomersCustomerCardsIdResponseError GHC.Base.String
  | -- | Successful response.
    DeleteCustomersCustomerCardsIdResponse200 DeleteCustomersCustomerCardsIdResponseBody200
  | -- | Error response.
    DeleteCustomersCustomerCardsIdResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf@ in the specification.
data DeleteCustomersCustomerCardsIdResponseBody200 = DeleteCustomersCustomerCardsIdResponseBody200
  { -- | account: The ID of the account that the bank account is associated with.
    deleteCustomersCustomerCardsIdResponseBody200Account :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableVariants)),
    -- | account_holder_name: The name of the person or business that owns the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AccountHolderName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | account_holder_type: The type of entity that holds the account. This can be either \`individual\` or \`company\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | account_type: The bank account type. This can only be \`checking\` or \`savings\` in most countries. In Japan, this can only be \`futsu\` or \`toza\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | ach_credit_transfer
    deleteCustomersCustomerCardsIdResponseBody200AchCreditTransfer :: (GHC.Maybe.Maybe SourceTypeAchCreditTransfer),
    -- | ach_debit
    deleteCustomersCustomerCardsIdResponseBody200AchDebit :: (GHC.Maybe.Maybe SourceTypeAchDebit),
    -- | acss_debit
    deleteCustomersCustomerCardsIdResponseBody200AcssDebit :: (GHC.Maybe.Maybe SourceTypeAcssDebit),
    -- | address_city: City\/District\/Suburb\/Town\/Village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_country: Billing address country, if provided when creating card.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line1: Address line 1 (Street address\/PO Box\/Company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line1_check: If \`address_line1\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressLine1Check :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line2: Address line 2 (Apartment\/Suite\/Unit\/Building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_state: State\/County\/Province\/Region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_zip: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressZip :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_zip_check: If \`address_zip\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200AddressZipCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | alipay
    deleteCustomersCustomerCardsIdResponseBody200Alipay :: (GHC.Maybe.Maybe SourceTypeAlipay),
    -- | amount: A positive integer in the smallest currency unit (that is, 100 cents for \$1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for \`single_use\` sources.
    deleteCustomersCustomerCardsIdResponseBody200Amount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | au_becs_debit
    deleteCustomersCustomerCardsIdResponseBody200AuBecsDebit :: (GHC.Maybe.Maybe SourceTypeAuBecsDebit),
    -- | available_payout_methods: A set of available payout methods for this bank account. Only values from this set should be passed as the \`method\` when creating a payout.
    deleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullable]))),
    -- | bancontact
    deleteCustomersCustomerCardsIdResponseBody200Bancontact :: (GHC.Maybe.Maybe SourceTypeBancontact),
    -- | bank_name: Name of the bank associated with the routing number (e.g., \`WELLS FARGO\`).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | brand: Card brand. Can be \`American Express\`, \`Diners Club\`, \`Discover\`, \`Eftpos Australia\`, \`JCB\`, \`MasterCard\`, \`UnionPay\`, \`Visa\`, or \`Unknown\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Brand :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | business_profile: Business information about the account.
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable)),
    -- | business_type: The business type.
    deleteCustomersCustomerCardsIdResponseBody200BusinessType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullable)),
    -- | capabilities:
    deleteCustomersCustomerCardsIdResponseBody200Capabilities :: (GHC.Maybe.Maybe AccountCapabilities),
    -- | card
    deleteCustomersCustomerCardsIdResponseBody200Card :: (GHC.Maybe.Maybe SourceTypeCard),
    -- | card_present
    deleteCustomersCustomerCardsIdResponseBody200CardPresent :: (GHC.Maybe.Maybe SourceTypeCardPresent),
    -- | charges_enabled: Whether the account can create live charges.
    deleteCustomersCustomerCardsIdResponseBody200ChargesEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | client_secret: The client secret of the source. Used for client-side retrieval using a publishable key.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ClientSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | code_verification:
    deleteCustomersCustomerCardsIdResponseBody200CodeVerification :: (GHC.Maybe.Maybe SourceCodeVerificationFlow),
    -- | company:
    deleteCustomersCustomerCardsIdResponseBody200Company :: (GHC.Maybe.Maybe LegalEntityCompany),
    -- | controller:
    deleteCustomersCustomerCardsIdResponseBody200Controller :: (GHC.Maybe.Maybe AccountUnificationAccountController),
    -- | country: The account\'s country.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | created: Time at which the account was connected. Measured in seconds since the Unix epoch.
    deleteCustomersCustomerCardsIdResponseBody200Created :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/payouts) paid out to the bank account.
    deleteCustomersCustomerCardsIdResponseBody200Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer: The ID of the customer that the bank account is associated with.
    deleteCustomersCustomerCardsIdResponseBody200Customer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableVariants)),
    -- | cvc_check: If a CVC was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`. A result of unchecked indicates that CVC was provided but hasn\'t been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https:\/\/support.stripe.com\/questions\/check-if-a-card-is-valid-without-a-charge).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200CvcCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | default_currency: Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account\'s country](https:\/\/stripe.com\/docs\/payouts).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200DefaultCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_for_currency: Whether this bank account is the default external account for its currency.
    deleteCustomersCustomerCardsIdResponseBody200DefaultForCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | details_submitted: Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.
    deleteCustomersCustomerCardsIdResponseBody200DetailsSubmitted :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200DynamicLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | email: An email address associated with the account. It\'s not used for authentication and Stripe doesn\'t market to this field without explicit approval from the platform.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Email :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | eps
    deleteCustomersCustomerCardsIdResponseBody200Eps :: (GHC.Maybe.Maybe SourceTypeEps),
    -- | exp_month: Two-digit number representing the card\'s expiration month.
    deleteCustomersCustomerCardsIdResponseBody200ExpMonth :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | exp_year: Four-digit number representing the card\'s expiration year.
    deleteCustomersCustomerCardsIdResponseBody200ExpYear :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | external_accounts: External accounts (bank accounts and debit cards) currently attached to this account
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts :: (GHC.Maybe.Maybe DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'),
    -- | fingerprint: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Fingerprint :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | flow: The authentication \`flow\` of the source. \`flow\` is one of \`redirect\`, \`receiver\`, \`code_verification\`, \`none\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Flow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | funding: Card funding type. Can be \`credit\`, \`debit\`, \`prepaid\`, or \`unknown\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Funding :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | future_requirements:
    deleteCustomersCustomerCardsIdResponseBody200FutureRequirements :: (GHC.Maybe.Maybe AccountFutureRequirements),
    -- | giropay
    deleteCustomersCustomerCardsIdResponseBody200Giropay :: (GHC.Maybe.Maybe SourceTypeGiropay),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | ideal
    deleteCustomersCustomerCardsIdResponseBody200Ideal :: (GHC.Maybe.Maybe SourceTypeIdeal),
    -- | individual: This is an object representing a person associated with a Stripe account.
    --
    -- A platform cannot access a Standard or Express account\'s persons after the account starts onboarding, such as after generating an account link for the account.
    -- See the [Standard onboarding](https:\/\/stripe.com\/docs\/connect\/standard-accounts) or [Express onboarding documentation](https:\/\/stripe.com\/docs\/connect\/express-accounts) for information about platform prefilling and account onboarding steps.
    --
    -- Related guide: [Handling identity verification with the API](https:\/\/stripe.com\/docs\/connect\/handling-api-verification\#person-information)
    deleteCustomersCustomerCardsIdResponseBody200Individual :: (GHC.Maybe.Maybe Person),
    -- | klarna
    deleteCustomersCustomerCardsIdResponseBody200Klarna :: (GHC.Maybe.Maybe SourceTypeKlarna),
    -- | last4: The last four digits of the bank account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Last4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    deleteCustomersCustomerCardsIdResponseBody200Livemode :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    deleteCustomersCustomerCardsIdResponseBody200Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | multibanco
    deleteCustomersCustomerCardsIdResponseBody200Multibanco :: (GHC.Maybe.Maybe SourceTypeMultibanco),
    -- | name: Cardholder name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | object: String representing the object\'s type. Objects of the same type share the same value.
    deleteCustomersCustomerCardsIdResponseBody200Object :: (GHC.Maybe.Maybe DeleteCustomersCustomerCardsIdResponseBody200Object'),
    -- | owner: Information about the owner of the payment instrument that may be used or required by particular source types.
    deleteCustomersCustomerCardsIdResponseBody200Owner :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable)),
    -- | p24
    deleteCustomersCustomerCardsIdResponseBody200P24 :: (GHC.Maybe.Maybe SourceTypeP24),
    -- | payouts_enabled: Whether Stripe can send payouts to this account.
    deleteCustomersCustomerCardsIdResponseBody200PayoutsEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | receiver:
    deleteCustomersCustomerCardsIdResponseBody200Receiver :: (GHC.Maybe.Maybe SourceReceiverFlow),
    -- | redirect:
    deleteCustomersCustomerCardsIdResponseBody200Redirect :: (GHC.Maybe.Maybe SourceRedirectFlow),
    -- | requirements:
    deleteCustomersCustomerCardsIdResponseBody200Requirements :: (GHC.Maybe.Maybe AccountRequirements),
    -- | routing_number: The routing transit number for the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200RoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | sepa_debit
    deleteCustomersCustomerCardsIdResponseBody200SepaDebit :: (GHC.Maybe.Maybe SourceTypeSepaDebit),
    -- | settings: Options for customizing how the account functions within Stripe.
    deleteCustomersCustomerCardsIdResponseBody200Settings :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable)),
    -- | sofort
    deleteCustomersCustomerCardsIdResponseBody200Sofort :: (GHC.Maybe.Maybe SourceTypeSofort),
    -- | source_order:
    deleteCustomersCustomerCardsIdResponseBody200SourceOrder :: (GHC.Maybe.Maybe SourceOrder),
    -- | statement_descriptor: Extra information about a source. This will appear on your customer\'s statement every time you charge the source.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200StatementDescriptor :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | status: For bank accounts, possible values are \`new\`, \`validated\`, \`verified\`, \`verification_failed\`, or \`errored\`. A bank account that hasn\'t had any activity or validation performed is \`new\`. If Stripe can determine that the bank account exists, its status will be \`validated\`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be \`verified\`. If the verification failed for any reason, such as microdeposit failure, the status will be \`verification_failed\`. If a payout sent to this bank account fails, we\'ll set the status to \`errored\` and will not continue to send [scheduled payouts](https:\/\/stripe.com\/docs\/payouts\#payout-schedule) until the bank details are updated.
    --
    -- For external accounts, possible values are \`new\`, \`errored\` and \`verification_failed\`. If a payouts fails, the status is set to \`errored\` and scheduled payouts are stopped until account details are updated. In India, if we can\'t [verify the owner of the bank account](https:\/\/support.stripe.com\/questions\/bank-account-ownership-verification), we\'ll set the status to \`verification_failed\`. Other validations aren\'t run against external accounts because they\'re only used for payouts. This means the other statuses don\'t apply.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | three_d_secure
    deleteCustomersCustomerCardsIdResponseBody200ThreeDSecure :: (GHC.Maybe.Maybe SourceTypeThreeDSecure),
    -- | tokenization_method: If the card number is tokenized, this is the method that was used. Can be \`android_pay\` (includes Google Pay), \`apple_pay\`, \`masterpass\`, \`visa_checkout\`, or null.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200TokenizationMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | tos_acceptance:
    deleteCustomersCustomerCardsIdResponseBody200TosAcceptance :: (GHC.Maybe.Maybe AccountTosAcceptance),
    -- | type: The Stripe account type. Can be \`standard\`, \`express\`, or \`custom\`.
    deleteCustomersCustomerCardsIdResponseBody200Type :: (GHC.Maybe.Maybe DeleteCustomersCustomerCardsIdResponseBody200Type'),
    -- | usage: Either \`reusable\` or \`single_use\`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Usage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | wechat
    deleteCustomersCustomerCardsIdResponseBody200Wechat :: (GHC.Maybe.Maybe SourceTypeWechat)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Capabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charges_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ChargesEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Company obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("controller" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Controller obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("details_submitted" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DetailsSubmitted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("future_requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200FutureRequirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Individual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200PayoutsEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Requirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200TosAcceptance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Wechat obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Capabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charges_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ChargesEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Company obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("controller" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Controller obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("details_submitted" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DetailsSubmitted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("future_requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200FutureRequirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Individual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200PayoutsEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Requirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200TosAcceptance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Wechat obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200" (\obj -> (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_credit_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available_payout_methods")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_profile")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capabilities")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charges_enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "code_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "controller")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_for_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "details_submitted")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_accounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "future_requirements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "individual")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "multibanco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts_enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receiver")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "redirect")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requirements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source_order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "three_d_secure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tokenization_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200 :: DeleteCustomersCustomerCardsIdResponseBody200
mkDeleteCustomersCustomerCardsIdResponseBody200 =
  DeleteCustomersCustomerCardsIdResponseBody200
    { deleteCustomersCustomerCardsIdResponseBody200Account = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AccountHolderName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AccountHolderType = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AccountType = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AchCreditTransfer = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AchDebit = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AcssDebit = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressCity = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressCountry = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressLine1 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressLine1Check = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressLine2 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressState = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressZip = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AddressZipCheck = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Alipay = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Amount = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AuBecsDebit = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Bancontact = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BankName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Brand = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessType = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Capabilities = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Card = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200CardPresent = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ChargesEnabled = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ClientSecret = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200CodeVerification = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Company = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Controller = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Country = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Created = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Currency = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Customer = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200CvcCheck = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200DefaultCurrency = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200DefaultForCurrency = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200DetailsSubmitted = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200DynamicLast4 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Email = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Eps = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExpMonth = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExpYear = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Fingerprint = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Flow = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Funding = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200FutureRequirements = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Giropay = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Id = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Ideal = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Individual = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Klarna = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Last4 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Livemode = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Metadata = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Multibanco = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Name = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Object = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200P24 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200PayoutsEnabled = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Receiver = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Redirect = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Requirements = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200RoutingNumber = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200SepaDebit = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Sofort = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200SourceOrder = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200StatementDescriptor = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Status = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ThreeDSecure = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200TokenizationMethod = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200TosAcceptance = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Type = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Usage = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Wechat = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.account.anyOf@ in the specification.
--
-- The ID of the account that the bank account is associated with.
data DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableVariants
  = DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableVariants where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableVariants where
  parseJSON val = case (DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerCardsIdResponseBody200Account'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.available_payout_methods.items@ in the specification.
data DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"instant"@
    DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableEnumInstant
  | -- | Represents the JSON value @"standard"@
    DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableEnumStandard
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullable where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableOther val) = val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableEnumInstant) = "instant"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableEnumStandard) = "standard"

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "instant" -> DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableEnumInstant
            | val GHC.Classes.== "standard" -> DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableEnumStandard
            | GHC.Base.otherwise -> DeleteCustomersCustomerCardsIdResponseBody200AvailablePayoutMethods'NonNullableOther val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.business_profile.anyOf@ in the specification.
--
-- Business information about the account.
data DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable
  { -- | mcc: [The merchant category code for the account](https:\/\/stripe.com\/docs\/connect\/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMcc :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | monthly_estimated_revenue:
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMonthlyEstimatedRevenue :: (GHC.Maybe.Maybe AccountMonthlyEstimatedRevenue),
    -- | name: The customer-facing business name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | product_description: Internal-only description of the product sold or service provided by the business. It\'s used by Stripe for risk and underwriting purposes.
    --
    -- Constraints:
    --
    -- * Maximum length of 40000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableProductDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | support_address: A publicly available mailing address for sending support issues to.
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable)),
    -- | support_email: A publicly available email address for sending support issues to.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | support_phone: A publicly available phone number to call with support issues.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | support_url: A publicly available website for handling support issues.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | url: The business\'s publicly available website.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_estimated_revenue" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMonthlyEstimatedRevenue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableUrl obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_estimated_revenue" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMonthlyEstimatedRevenue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableUrl obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable" (\obj -> ((((((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mcc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "monthly_estimated_revenue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMcc = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableMonthlyEstimatedRevenue = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableProductDescription = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportEmail = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportPhone = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportUrl = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableUrl = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.business_profile.anyOf.properties.support_address.anyOf@ in the specification.
--
-- A publicly available mailing address for sending support issues to.
data DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable" (\obj -> (((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.business_type@ in the specification.
--
-- The business type.
data DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"company"@
    DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumCompany
  | -- | Represents the JSON value @"government_entity"@
    DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumGovernmentEntity
  | -- | Represents the JSON value @"individual"@
    DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumIndividual
  | -- | Represents the JSON value @"non_profit"@
    DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumNonProfit
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullable where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableOther val) = val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumCompany) = "company"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumGovernmentEntity) = "government_entity"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumIndividual) = "individual"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumNonProfit) = "non_profit"

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "company" -> DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumCompany
            | val GHC.Classes.== "government_entity" -> DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumGovernmentEntity
            | val GHC.Classes.== "individual" -> DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumIndividual
            | val GHC.Classes.== "non_profit" -> DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableEnumNonProfit
            | GHC.Base.otherwise -> DeleteCustomersCustomerCardsIdResponseBody200BusinessType'NonNullableOther val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.customer.anyOf@ in the specification.
--
-- The ID of the customer that the bank account is associated with.
data DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableVariants
  = DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableCustomer Customer
  | DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableVariants where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableVariants where
  parseJSON val = case (DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerCardsIdResponseBody200Customer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts@ in the specification.
--
-- External accounts (bank accounts and debit cards) currently attached to this account
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts' = DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'
  { -- | data: The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data :: ([DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data']),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'" (\obj -> ((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts' ::
  -- | 'deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'
  [DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'] ->
  -- | 'deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore'
  GHC.Types.Bool ->
  -- | 'deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url'
  Data.Text.Internal.Text ->
  DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts' deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url =
  DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'
    { deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data = deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore = deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'HasMore,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url = deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Url
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf@ in the specification.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data' = DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'
  { -- | account: The ID of the account that the bank account is associated with.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants)),
    -- | account_holder_name: The name of the person or business that owns the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | account_holder_type: The type of entity that holds the account. This can be either \`individual\` or \`company\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | account_type: The bank account type. This can only be \`checking\` or \`savings\` in most countries. In Japan, this can only be \`futsu\` or \`toza\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_city: City\/District\/Suburb\/Town\/Village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_country: Billing address country, if provided when creating card.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line1: Address line 1 (Street address\/PO Box\/Company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line1_check: If \`address_line1\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1Check :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line2: Address line 2 (Apartment\/Suite\/Unit\/Building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_state: State\/County\/Province\/Region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_zip: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZip :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_zip_check: If \`address_zip\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZipCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | available_payout_methods: A set of available payout methods for this bank account. Only values from this set should be passed as the \`method\` when creating a payout.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable]))),
    -- | bank_name: Name of the bank associated with the routing number (e.g., \`WELLS FARGO\`).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'BankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | brand: Card brand. Can be \`American Express\`, \`Diners Club\`, \`Discover\`, \`Eftpos Australia\`, \`JCB\`, \`MasterCard\`, \`UnionPay\`, \`Visa\`, or \`Unknown\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Brand :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country: Two-letter ISO code representing the country the bank account is located in.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/payouts) paid out to the bank account.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer: The ID of the customer that the bank account is associated with.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants)),
    -- | cvc_check: If a CVC was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`. A result of unchecked indicates that CVC was provided but hasn\'t been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https:\/\/support.stripe.com\/questions\/check-if-a-card-is-valid-without-a-charge).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'CvcCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | default_for_currency: Whether this bank account is the default external account for its currency.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DynamicLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | exp_month: Two-digit number representing the card\'s expiration month.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpMonth :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | exp_year: Four-digit number representing the card\'s expiration year.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpYear :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | fingerprint: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Fingerprint :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | funding: Card funding type. Can be \`credit\`, \`debit\`, \`prepaid\`, or \`unknown\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Funding :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | future_requirements: Information about the [upcoming new requirements for the bank account](https:\/\/stripe.com\/docs\/connect\/custom-accounts\/future-requirements), including what information needs to be collected, and by when.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable)),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last4: The last four digits of the bank account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Last4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Metadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object)),
    -- | name: Cardholder name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | object: String representing the object\'s type. Objects of the same type share the same value.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object :: (GHC.Maybe.Maybe DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'),
    -- | requirements: Information about the requirements for the bank account, including what information needs to be collected.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable)),
    -- | routing_number: The routing transit number for the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'RoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | status: For bank accounts, possible values are \`new\`, \`validated\`, \`verified\`, \`verification_failed\`, or \`errored\`. A bank account that hasn\'t had any activity or validation performed is \`new\`. If Stripe can determine that the bank account exists, its status will be \`validated\`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be \`verified\`. If the verification failed for any reason, such as microdeposit failure, the status will be \`verification_failed\`. If a payout sent to this bank account fails, we\'ll set the status to \`errored\` and will not continue to send [scheduled payouts](https:\/\/stripe.com\/docs\/payouts\#payout-schedule) until the bank details are updated.
    --
    -- For external accounts, possible values are \`new\`, \`errored\` and \`verification_failed\`. If a payouts fails, the status is set to \`errored\` and scheduled payouts are stopped until account details are updated. In India, if we can\'t [verify the owner of the bank account](https:\/\/support.stripe.com\/questions\/bank-account-ownership-verification), we\'ll set the status to \`verification_failed\`. Other validations aren\'t run against external accounts because they\'re only used for payouts. This means the other statuses don\'t apply.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | tokenization_method: If the card number is tokenized, this is the method that was used. Can be \`android_pay\` (includes Google Pay), \`apple_pay\`, \`masterpass\`, \`visa_checkout\`, or null.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'TokenizationMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("future_requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'TokenizationMethod obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("future_requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'TokenizationMethod obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'" (\obj -> ((((((((((((((((((((((((((((((((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available_payout_methods")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_for_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "future_requirements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requirements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tokenization_method"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data' :: DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data' =
  DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'
    { deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountHolderType = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AccountType = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCity = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressCountry = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine1Check = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressLine2 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressState = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZip = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AddressZipCheck = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'BankName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Brand = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Country = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Currency = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'CvcCheck = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'DynamicLast4 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpMonth = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'ExpYear = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Fingerprint = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Funding = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Id = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Last4 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Metadata = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Name = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'RoutingNumber = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Status = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'TokenizationMethod = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.account.anyOf@ in the specification.
--
-- The ID of the account that the bank account is associated with.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants
  = DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants where
  parseJSON val = case (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Account'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.available_payout_methods.items@ in the specification.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"instant"@
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumInstant
  | -- | Represents the JSON value @"standard"@
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumStandard
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableOther val) = val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumInstant) = "instant"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumStandard) = "standard"

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "instant" -> DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumInstant
            | val GHC.Classes.== "standard" -> DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumStandard
            | GHC.Base.otherwise -> DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableOther val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.customer.anyOf@ in the specification.
--
-- The ID of the customer that the bank account is associated with.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants
  = DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableCustomer Customer
  | DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants where
  parseJSON val = case (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.future_requirements.anyOf@ in the specification.
--
-- Information about the [upcoming new requirements for the bank account](https:\\\/\\\/stripe.com\\\/docs\\\/connect\\\/custom-accounts\\\/future-requirements), including what information needs to be collected, and by when.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable
  { -- | currently_due: Fields that need to be collected to keep the external account enabled. If not collected by \`current_deadline\`, these fields appear in \`past_due\` as well, and the account is disabled.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableCurrentlyDue :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text]))),
    -- | errors: Fields that are \`currently_due\` and need to be collected again because validation or verification failed.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableErrors :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([AccountRequirementsError]))),
    -- | past_due: Fields that weren\'t collected by \`current_deadline\`. These fields need to be collected to enable the external account.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePastDue :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text]))),
    -- | pending_verification: Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to \`eventually_due\`, \`currently_due\`, or \`past_due\`.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePendingVerification :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text])))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currently_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableCurrentlyDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("errors" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableErrors obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("past_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePastDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePendingVerification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currently_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableCurrentlyDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("errors" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableErrors obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("past_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePastDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePendingVerification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable" (\obj -> (((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currently_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "errors")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "past_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pending_verification"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableCurrentlyDue = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullableErrors = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePastDue = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'FutureRequirements'NonNullablePendingVerification = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.object@ in the specification.
--
-- String representing the object\'s type. Objects of the same type share the same value.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"bank_account"@
    DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'EnumBankAccount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object' where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'Other val) = val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'EnumBankAccount) = "bank_account"

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "bank_account" -> DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'EnumBankAccount
            | GHC.Base.otherwise -> DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Object'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.requirements.anyOf@ in the specification.
--
-- Information about the requirements for the bank account, including what information needs to be collected.
data DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable
  { -- | currently_due: Fields that need to be collected to keep the external account enabled. If not collected by \`current_deadline\`, these fields appear in \`past_due\` as well, and the account is disabled.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableCurrentlyDue :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text]))),
    -- | errors: Fields that are \`currently_due\` and need to be collected again because validation or verification failed.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableErrors :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([AccountRequirementsError]))),
    -- | past_due: Fields that weren\'t collected by \`current_deadline\`. These fields need to be collected to enable the external account.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePastDue :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text]))),
    -- | pending_verification: Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to \`eventually_due\`, \`currently_due\`, or \`past_due\`.
    deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePendingVerification :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text])))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currently_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableCurrentlyDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("errors" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableErrors obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("past_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePastDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePendingVerification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currently_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableCurrentlyDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("errors" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableErrors obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("past_due" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePastDue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pending_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePendingVerification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable" (\obj -> (((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currently_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "errors")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "past_due")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pending_verification"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableCurrentlyDue = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullableErrors = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePastDue = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200ExternalAccounts'Data'Requirements'NonNullablePendingVerification = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.object@ in the specification.
--
-- String representing the object\'s type. Objects of the same type share the same value.
data DeleteCustomersCustomerCardsIdResponseBody200Object'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    DeleteCustomersCustomerCardsIdResponseBody200Object'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    DeleteCustomersCustomerCardsIdResponseBody200Object'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"account"@
    DeleteCustomersCustomerCardsIdResponseBody200Object'EnumAccount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Object' where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Object'Other val) = val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Object'EnumAccount) = "account"

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Object' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "account" -> DeleteCustomersCustomerCardsIdResponseBody200Object'EnumAccount
            | GHC.Base.otherwise -> DeleteCustomersCustomerCardsIdResponseBody200Object'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.owner.anyOf@ in the specification.
--
-- Information about the owner of the payment instrument that may be used or required by particular source types.
data DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable
  { -- | address: Owner\'s address.
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable)),
    -- | email: Owner\'s email address.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name: Owner\'s full name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | phone: Owner\'s phone number (including extension).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_address: Verified owner\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable)),
    -- | verified_email: Verified owner\'s email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_name: Verified owner\'s full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_phone: Verified owner\'s phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable" (\obj -> (((((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_phone"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableEmail = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullablePhone = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedEmail = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedName = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedPhone = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.owner.anyOf.properties.address.anyOf@ in the specification.
--
-- Owner\\\'s address.
data DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.owner.anyOf.properties.verified_address.anyOf@ in the specification.
--
-- Verified owner\\\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
data DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable" (\obj -> (((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.settings.anyOf@ in the specification.
--
-- Options for customizing how the account functions within Stripe.
data DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable = DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable
  { -- | bacs_debit_payments:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBacsDebitPayments :: (GHC.Maybe.Maybe AccountBacsDebitPaymentsSettings),
    -- | branding:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBranding :: (GHC.Maybe.Maybe AccountBrandingSettings),
    -- | card_issuing:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardIssuing :: (GHC.Maybe.Maybe AccountCardIssuingSettings),
    -- | card_payments:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardPayments :: (GHC.Maybe.Maybe AccountCardPaymentsSettings),
    -- | dashboard:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableDashboard :: (GHC.Maybe.Maybe AccountDashboardSettings),
    -- | payments:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayments :: (GHC.Maybe.Maybe AccountPaymentsSettings),
    -- | payouts:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayouts :: (GHC.Maybe.Maybe AccountPayoutSettings),
    -- | sepa_debit_payments:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableSepaDebitPayments :: (GHC.Maybe.Maybe AccountSepaDebitPaymentsSettings),
    -- | treasury:
    deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableTreasury :: (GHC.Maybe.Maybe AccountTreasurySettings)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBranding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dashboard" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableDashboard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableSepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableTreasury obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBranding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dashboard" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableDashboard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableSepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableTreasury obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable" (\obj -> ((((((((GHC.Base.pure DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dashboard")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "treasury"))

-- | Create a new 'DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable' with all required fields.
mkDeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable :: DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable
mkDeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable =
  DeleteCustomersCustomerCardsIdResponseBody200Settings'NonNullable
    { deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBacsDebitPayments = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableBranding = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardIssuing = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableCardPayments = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableDashboard = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayments = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullablePayouts = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableSepaDebitPayments = GHC.Maybe.Nothing,
      deleteCustomersCustomerCardsIdResponseBody200Settings'NonNullableTreasury = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/cards\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.type@ in the specification.
--
-- The Stripe account type. Can be \`standard\`, \`express\`, or \`custom\`.
data DeleteCustomersCustomerCardsIdResponseBody200Type'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    DeleteCustomersCustomerCardsIdResponseBody200Type'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    DeleteCustomersCustomerCardsIdResponseBody200Type'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"custom"@
    DeleteCustomersCustomerCardsIdResponseBody200Type'EnumCustom
  | -- | Represents the JSON value @"express"@
    DeleteCustomersCustomerCardsIdResponseBody200Type'EnumExpress
  | -- | Represents the JSON value @"standard"@
    DeleteCustomersCustomerCardsIdResponseBody200Type'EnumStandard
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerCardsIdResponseBody200Type' where
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Type'Other val) = val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Type'EnumCustom) = "custom"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Type'EnumExpress) = "express"
  toJSON (DeleteCustomersCustomerCardsIdResponseBody200Type'EnumStandard) = "standard"

instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerCardsIdResponseBody200Type' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "custom" -> DeleteCustomersCustomerCardsIdResponseBody200Type'EnumCustom
            | val GHC.Classes.== "express" -> DeleteCustomersCustomerCardsIdResponseBody200Type'EnumExpress
            | val GHC.Classes.== "standard" -> DeleteCustomersCustomerCardsIdResponseBody200Type'EnumStandard
            | GHC.Base.otherwise -> DeleteCustomersCustomerCardsIdResponseBody200Type'Other val
      )
