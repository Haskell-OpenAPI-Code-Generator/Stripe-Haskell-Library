-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation deleteCustomersCustomerBankAccountsId
module StripeAPI.Operations.DeleteCustomersCustomerBankAccountsId where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > DELETE /v1/customers/{customer}/bank_accounts/{id}
-- 
-- \<p>Delete a specified source for a given customer.\<\/p>
deleteCustomersCustomerBankAccountsId :: forall m . StripeAPI.Common.MonadHTTP m => DeleteCustomersCustomerBankAccountsIdParameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> GHC.Maybe.Maybe DeleteCustomersCustomerBankAccountsIdRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response DeleteCustomersCustomerBankAccountsIdResponse) -- ^ Monadic computation which returns the result of the operation
deleteCustomersCustomerBankAccountsId parameters
                                      body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either DeleteCustomersCustomerBankAccountsIdResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> DeleteCustomersCustomerBankAccountsIdResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  DeleteCustomersCustomerBankAccountsIdResponseBody200)
                                                                                                                                                                                                             | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> DeleteCustomersCustomerBankAccountsIdResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                    Error)
                                                                                                                                                                                                             | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "DELETE") (Data.Text.pack ("/v1/customers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel (deleteCustomersCustomerBankAccountsIdParametersPathCustomer parameters))) GHC.Base.++ ("/bank_accounts/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel (deleteCustomersCustomerBankAccountsIdParametersPathId parameters))) GHC.Base.++ ""))))) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.parameters@ in the specification.
-- 
-- 
data DeleteCustomersCustomerBankAccountsIdParameters = DeleteCustomersCustomerBankAccountsIdParameters {
  -- | pathCustomer: Represents the parameter named \'customer\'
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  deleteCustomersCustomerBankAccountsIdParametersPathCustomer :: Data.Text.Internal.Text
  -- | pathId: Represents the parameter named \'id\'
  , deleteCustomersCustomerBankAccountsIdParametersPathId :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdParameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdParametersPathCustomer obj] : ["pathId" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdParametersPathId obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdParametersPathCustomer obj] : ["pathId" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdParametersPathId obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdParameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdParameters" (\obj -> (GHC.Base.pure DeleteCustomersCustomerBankAccountsIdParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathId"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdParameters' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdParameters :: Data.Text.Internal.Text -- ^ 'deleteCustomersCustomerBankAccountsIdParametersPathCustomer'
  -> Data.Text.Internal.Text -- ^ 'deleteCustomersCustomerBankAccountsIdParametersPathId'
  -> DeleteCustomersCustomerBankAccountsIdParameters
mkDeleteCustomersCustomerBankAccountsIdParameters deleteCustomersCustomerBankAccountsIdParametersPathCustomer deleteCustomersCustomerBankAccountsIdParametersPathId = DeleteCustomersCustomerBankAccountsIdParameters{deleteCustomersCustomerBankAccountsIdParametersPathCustomer = deleteCustomersCustomerBankAccountsIdParametersPathCustomer,
                                                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdParametersPathId = deleteCustomersCustomerBankAccountsIdParametersPathId}
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data DeleteCustomersCustomerBankAccountsIdRequestBody = DeleteCustomersCustomerBankAccountsIdRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  deleteCustomersCustomerBankAccountsIdRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdRequestBodyExpand obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdRequestBodyExpand obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdRequestBody" (\obj -> GHC.Base.pure DeleteCustomersCustomerBankAccountsIdRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdRequestBody' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdRequestBody :: DeleteCustomersCustomerBankAccountsIdRequestBody
mkDeleteCustomersCustomerBankAccountsIdRequestBody = DeleteCustomersCustomerBankAccountsIdRequestBody{deleteCustomersCustomerBankAccountsIdRequestBodyExpand = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'deleteCustomersCustomerBankAccountsId'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'DeleteCustomersCustomerBankAccountsIdResponseError' is used.
data DeleteCustomersCustomerBankAccountsIdResponse =
   DeleteCustomersCustomerBankAccountsIdResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | DeleteCustomersCustomerBankAccountsIdResponse200 DeleteCustomersCustomerBankAccountsIdResponseBody200 -- ^ Successful response.
  | DeleteCustomersCustomerBankAccountsIdResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf@ in the specification.
-- 
-- 
data DeleteCustomersCustomerBankAccountsIdResponseBody200 = DeleteCustomersCustomerBankAccountsIdResponseBody200 {
  -- | account: The ID of the account that the bank account is associated with.
  deleteCustomersCustomerBankAccountsIdResponseBody200Account :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableVariants))
  -- | account_holder_name: The name of the person or business that owns the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_holder_type: The type of entity that holds the account. This can be either \`individual\` or \`company\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_type: The bank account type. This can only be \`checking\` or \`savings\` in most countries. In Japan, this can only be \`futsu\` or \`toza\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | ach_credit_transfer
  , deleteCustomersCustomerBankAccountsIdResponseBody200AchCreditTransfer :: (GHC.Maybe.Maybe SourceTypeAchCreditTransfer)
  -- | ach_debit
  , deleteCustomersCustomerBankAccountsIdResponseBody200AchDebit :: (GHC.Maybe.Maybe SourceTypeAchDebit)
  -- | acss_debit
  , deleteCustomersCustomerBankAccountsIdResponseBody200AcssDebit :: (GHC.Maybe.Maybe SourceTypeAcssDebit)
  -- | active: True when this bitcoin receiver has received a non-zero amount of bitcoin.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Active :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | address_city: City\/District\/Suburb\/Town\/Village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_country: Billing address country, if provided when creating card.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line1: Address line 1 (Street address\/PO Box\/Company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line1_check: If \`address_line1\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1Check :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line2: Address line 2 (Apartment\/Suite\/Unit\/Building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_state: State\/County\/Province\/Region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_zip: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressZip :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_zip_check: If \`address_zip\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200AddressZipCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | alipay
  , deleteCustomersCustomerBankAccountsIdResponseBody200Alipay :: (GHC.Maybe.Maybe SourceTypeAlipay)
  -- | amount: The amount of \`currency\` that you are collecting as payment.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Amount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | amount_received: The amount of \`currency\` to which \`bitcoin_amount_received\` has been converted.
  , deleteCustomersCustomerBankAccountsIdResponseBody200AmountReceived :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | au_becs_debit
  , deleteCustomersCustomerBankAccountsIdResponseBody200AuBecsDebit :: (GHC.Maybe.Maybe SourceTypeAuBecsDebit)
  -- | available_payout_methods: A set of available payout methods for this bank account. Only values from this set should be passed as the \`method\` when creating a payout.
  , deleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullable])))
  -- | bancontact
  , deleteCustomersCustomerBankAccountsIdResponseBody200Bancontact :: (GHC.Maybe.Maybe SourceTypeBancontact)
  -- | bank_name: Name of the bank associated with the routing number (e.g., \`WELLS FARGO\`).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | bitcoin_amount: The amount of bitcoin that the customer should send to fill the receiver. The \`bitcoin_amount\` is denominated in Satoshi: there are 10^8 Satoshi in one bitcoin.
  , deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmount :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | bitcoin_amount_received: The amount of bitcoin that has been sent by the customer to this receiver.
  , deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmountReceived :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | bitcoin_uri: This URI can be displayed to the customer as a clickable link (to activate their bitcoin client) or as a QR code (for mobile wallets).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinUri :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | brand: Card brand. Can be \`American Express\`, \`Diners Club\`, \`Discover\`, \`JCB\`, \`MasterCard\`, \`UnionPay\`, \`Visa\`, or \`Unknown\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Brand :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | business_profile: Business information about the account.
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable))
  -- | business_type: The business type.
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullable))
  -- | capabilities: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Capabilities :: (GHC.Maybe.Maybe AccountCapabilities)
  -- | card
  , deleteCustomersCustomerBankAccountsIdResponseBody200Card :: (GHC.Maybe.Maybe SourceTypeCard)
  -- | card_present
  , deleteCustomersCustomerBankAccountsIdResponseBody200CardPresent :: (GHC.Maybe.Maybe SourceTypeCardPresent)
  -- | charges_enabled: Whether the account can create live charges.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ChargesEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | client_secret: The client secret of the source. Used for client-side retrieval using a publishable key.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ClientSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | code_verification: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200CodeVerification :: (GHC.Maybe.Maybe SourceCodeVerificationFlow)
  -- | company: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Company :: (GHC.Maybe.Maybe LegalEntityCompany)
  -- | controller: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Controller :: (GHC.Maybe.Maybe AccountUnificationAccountController)
  -- | country: The account\'s country.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | created: Time at which the account was connected. Measured in seconds since the Unix epoch.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Created :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/payouts) paid out to the bank account.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer: The ID of the customer associated with this Alipay Account.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Customer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableVariants))
  -- | cvc_check: If a CVC was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`. A result of unchecked indicates that CVC was provided but hasn\'t been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https:\/\/support.stripe.com\/questions\/check-if-a-card-is-valid-without-a-charge).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200CvcCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | default_currency: Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account\'s country](https:\/\/stripe.com\/docs\/payouts).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200DefaultCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | default_for_currency: Whether this bank account is the default external account for its currency.
  , deleteCustomersCustomerBankAccountsIdResponseBody200DefaultForCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool))
  -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Description :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | details_submitted: Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.
  , deleteCustomersCustomerBankAccountsIdResponseBody200DetailsSubmitted :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200DynamicLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | email: An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Email :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | eps
  , deleteCustomersCustomerBankAccountsIdResponseBody200Eps :: (GHC.Maybe.Maybe SourceTypeEps)
  -- | exp_month: Two-digit number representing the card\'s expiration month.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExpMonth :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | exp_year: Four-digit number representing the card\'s expiration year.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExpYear :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | external_accounts: External accounts (bank accounts and debit cards) currently attached to this account
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts :: (GHC.Maybe.Maybe DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts')
  -- | filled: This flag is initially false and updates to true when the customer sends the \`bitcoin_amount\` to this receiver.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Filled :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | fingerprint: Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Fingerprint :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | flow: The authentication \`flow\` of the source. \`flow\` is one of \`redirect\`, \`receiver\`, \`code_verification\`, \`none\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Flow :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | funding: Card funding type. Can be \`credit\`, \`debit\`, \`prepaid\`, or \`unknown\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Funding :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | future_requirements: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200FutureRequirements :: (GHC.Maybe.Maybe AccountFutureRequirements)
  -- | giropay
  , deleteCustomersCustomerBankAccountsIdResponseBody200Giropay :: (GHC.Maybe.Maybe SourceTypeGiropay)
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | ideal
  , deleteCustomersCustomerBankAccountsIdResponseBody200Ideal :: (GHC.Maybe.Maybe SourceTypeIdeal)
  -- | inbound_address: A bitcoin address that is specific to this receiver. The customer can send bitcoin to this address to fill the receiver.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200InboundAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | individual: This is an object representing a person associated with a Stripe account.
  -- 
  -- A platform cannot access a Standard or Express account\'s persons after the account starts onboarding, such as after generating an account link for the account.
  -- See the [Standard onboarding](https:\/\/stripe.com\/docs\/connect\/standard-accounts) or [Express onboarding documentation](https:\/\/stripe.com\/docs\/connect\/express-accounts) for information about platform pre-filling and account onboarding steps.
  -- 
  -- Related guide: [Handling Identity Verification with the API](https:\/\/stripe.com\/docs\/connect\/identity-verification-api\#person-information).
  , deleteCustomersCustomerBankAccountsIdResponseBody200Individual :: (GHC.Maybe.Maybe Person)
  -- | klarna
  , deleteCustomersCustomerBankAccountsIdResponseBody200Klarna :: (GHC.Maybe.Maybe SourceTypeKlarna)
  -- | last4: The last four digits of the bank account number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Last4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Livemode :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | multibanco
  , deleteCustomersCustomerBankAccountsIdResponseBody200Multibanco :: (GHC.Maybe.Maybe SourceTypeMultibanco)
  -- | name: Cardholder name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | object: String representing the object\'s type. Objects of the same type share the same value.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Object :: (GHC.Maybe.Maybe DeleteCustomersCustomerBankAccountsIdResponseBody200Object')
  -- | owner: Information about the owner of the payment instrument that may be used or required by particular source types.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable))
  -- | p24
  , deleteCustomersCustomerBankAccountsIdResponseBody200P24 :: (GHC.Maybe.Maybe SourceTypeP24)
  -- | payment: The ID of the payment created from the receiver, if any. Hidden when viewing the receiver with a publishable key.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Payment :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | payment_amount: If the Alipay account object is not reusable, the exact amount that you can create a charge for.
  , deleteCustomersCustomerBankAccountsIdResponseBody200PaymentAmount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int))
  -- | payment_currency: If the Alipay account object is not reusable, the exact currency that you can create a charge for.
  , deleteCustomersCustomerBankAccountsIdResponseBody200PaymentCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | payouts_enabled: Whether Stripe can send payouts to this account.
  , deleteCustomersCustomerBankAccountsIdResponseBody200PayoutsEnabled :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | receiver: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Receiver :: (GHC.Maybe.Maybe SourceReceiverFlow)
  -- | recipient: The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Recipient :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableVariants))
  -- | redirect: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Redirect :: (GHC.Maybe.Maybe SourceRedirectFlow)
  -- | refund_address: The refund address of this bitcoin receiver.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200RefundAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | requirements: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Requirements :: (GHC.Maybe.Maybe AccountRequirements)
  -- | reusable: True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Reusable :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | routing_number: The routing transit number for the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200RoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | sepa_debit
  , deleteCustomersCustomerBankAccountsIdResponseBody200SepaDebit :: (GHC.Maybe.Maybe SourceTypeSepaDebit)
  -- | settings: Options for customizing how the account functions within Stripe.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable))
  -- | sofort
  , deleteCustomersCustomerBankAccountsIdResponseBody200Sofort :: (GHC.Maybe.Maybe SourceTypeSofort)
  -- | source_order: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200SourceOrder :: (GHC.Maybe.Maybe SourceOrder)
  -- | statement_descriptor: Extra information about a source. This will appear on your customer\'s statement every time you charge the source.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200StatementDescriptor :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | status: For bank accounts, possible values are \`new\`, \`validated\`, \`verified\`, \`verification_failed\`, or \`errored\`. A bank account that hasn\'t had any activity or validation performed is \`new\`. If Stripe can determine that the bank account exists, its status will be \`validated\`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be \`verified\`. If the verification failed for any reason, such as microdeposit failure, the status will be \`verification_failed\`. If a transfer sent to this bank account fails, we\'ll set the status to \`errored\` and will not continue to send transfers until the bank details are updated.
  -- 
  -- For external accounts, possible values are \`new\` and \`errored\`. Validations aren\'t run against external accounts because they\'re only used for payouts. This means the other statuses don\'t apply. If a transfer fails, the status is set to \`errored\` and transfers are stopped until account details are updated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | three_d_secure
  , deleteCustomersCustomerBankAccountsIdResponseBody200ThreeDSecure :: (GHC.Maybe.Maybe SourceTypeThreeDSecure)
  -- | tokenization_method: If the card number is tokenized, this is the method that was used. Can be \`android_pay\` (includes Google Pay), \`apple_pay\`, \`masterpass\`, \`visa_checkout\`, or null.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200TokenizationMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | tos_acceptance: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200TosAcceptance :: (GHC.Maybe.Maybe AccountTosAcceptance)
  -- | transactions: A list with one entry for each time that the customer sent bitcoin to the receiver. Hidden when viewing the receiver with a publishable key.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Transactions :: (GHC.Maybe.Maybe DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions')
  -- | type: The Stripe account type. Can be \`standard\`, \`express\`, or \`custom\`.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Type :: (GHC.Maybe.Maybe DeleteCustomersCustomerBankAccountsIdResponseBody200Type')
  -- | uncaptured_funds: This receiver contains uncaptured funds that can be used for a payment or refunded.
  , deleteCustomersCustomerBankAccountsIdResponseBody200UncapturedFunds :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | usage: Either \`reusable\` or \`single_use\`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Usage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | used: Whether this Alipay account object has ever been used for a payment.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Used :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | used_for_payment: Indicate if this source is used for payment.
  , deleteCustomersCustomerBankAccountsIdResponseBody200UsedForPayment :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool))
  -- | username: The username for the Alipay account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Username :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | wechat
  , deleteCustomersCustomerBankAccountsIdResponseBody200Wechat :: (GHC.Maybe.Maybe SourceTypeWechat)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Active obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_received" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount_received" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_uri" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinUri obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Capabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charges_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ChargesEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Company obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("controller" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Controller obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("details_submitted" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DetailsSubmitted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Filled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("future_requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200FutureRequirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200InboundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Individual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Payment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200PaymentAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200PaymentCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200PayoutsEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200RefundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Requirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reusable" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Reusable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200TosAcceptance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transactions" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Transactions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncaptured_funds" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200UncapturedFunds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Used obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used_for_payment" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200UsedForPayment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Username obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Wechat obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Active obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_received" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount_received" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_uri" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinUri obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Capabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("charges_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ChargesEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Company obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("controller" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Controller obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("details_submitted" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DetailsSubmitted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_accounts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Filled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("future_requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200FutureRequirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200InboundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Individual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Payment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_amount" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200PaymentAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200PaymentCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts_enabled" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200PayoutsEnabled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200RefundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requirements" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Requirements obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reusable" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Reusable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200TosAcceptance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transactions" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Transactions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncaptured_funds" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200UncapturedFunds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Used obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used_for_payment" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200UsedForPayment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Username obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Wechat obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200" (\obj -> ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_credit_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_received")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available_payout_methods")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bitcoin_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bitcoin_amount_received")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bitcoin_uri")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_profile")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capabilities")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "charges_enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "code_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "controller")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_for_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "details_submitted")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_accounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "filled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "future_requirements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "individual")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "multibanco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts_enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receiver")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "recipient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "redirect")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requirements")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reusable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source_order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "three_d_secure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tokenization_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transactions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uncaptured_funds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "used")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "used_for_payment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "username")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200 :: DeleteCustomersCustomerBankAccountsIdResponseBody200
mkDeleteCustomersCustomerBankAccountsIdResponseBody200 = DeleteCustomersCustomerBankAccountsIdResponseBody200{deleteCustomersCustomerBankAccountsIdResponseBody200Account = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderName = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AccountHolderType = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AccountType = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AchCreditTransfer = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AchDebit = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AcssDebit = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Active = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressCity = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressCountry = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1 = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine1Check = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressLine2 = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressState = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressZip = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AddressZipCheck = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Alipay = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Amount = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AmountReceived = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AuBecsDebit = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Bancontact = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200BankName = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmount = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinAmountReceived = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200BitcoinUri = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Brand = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200BusinessType = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Capabilities = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Card = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200CardPresent = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200ChargesEnabled = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200ClientSecret = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200CodeVerification = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Company = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Controller = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Country = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Created = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Currency = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Customer = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200CvcCheck = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200DefaultCurrency = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200DefaultForCurrency = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Description = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200DetailsSubmitted = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200DynamicLast4 = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Email = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Eps = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200ExpMonth = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200ExpYear = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Filled = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Fingerprint = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Flow = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Funding = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200FutureRequirements = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Giropay = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Id = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Ideal = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200InboundAddress = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Individual = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Klarna = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Last4 = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Livemode = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Metadata = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Multibanco = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Name = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Object = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Owner = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200P24 = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Payment = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200PaymentAmount = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200PaymentCurrency = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200PayoutsEnabled = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Receiver = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Recipient = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Redirect = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200RefundAddress = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Requirements = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Reusable = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200RoutingNumber = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200SepaDebit = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Settings = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Sofort = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200SourceOrder = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200StatementDescriptor = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Status = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200ThreeDSecure = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200TokenizationMethod = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200TosAcceptance = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Transactions = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Type = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200UncapturedFunds = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Usage = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Used = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200UsedForPayment = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Username = GHC.Maybe.Nothing,
                                                                                                              deleteCustomersCustomerBankAccountsIdResponseBody200Wechat = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.account.anyOf@ in the specification.
-- 
-- The ID of the account that the bank account is associated with.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableVariants =
   DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableVariants
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableVariants
    where parseJSON val = case (DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200Account'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.available_payout_methods.items@ in the specification.
-- 
-- 
data DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullable =
   DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableEnumInstant -- ^ Represents the JSON value @"instant"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableEnumStandard -- ^ Represents the JSON value @"standard"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullable
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableOther val) = val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableEnumInstant) = "instant"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableEnumStandard) = "standard"
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "instant" -> DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableEnumInstant
                                            | val GHC.Classes.== "standard" -> DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableEnumStandard
                                            | GHC.Base.otherwise -> DeleteCustomersCustomerBankAccountsIdResponseBody200AvailablePayoutMethods'NonNullableOther val)
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.business_profile.anyOf@ in the specification.
-- 
-- Business information about the account.
data DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable {
  -- | mcc: [The merchant category code for the account](https:\/\/stripe.com\/docs\/connect\/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableMcc :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | name: The customer-facing business name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | product_description: Internal-only description of the product sold or service provided by the business. It\'s used by Stripe for risk and underwriting purposes.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 40000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableProductDescription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | support_address: A publicly available mailing address for sending support issues to.
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable))
  -- | support_email: A publicly available email address for sending support issues to.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | support_phone: A publicly available phone number to call with support issues.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | support_url: A publicly available website for handling support issues.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | url: The business\'s publicly available website.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableUrl :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableMcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableUrl obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableMcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableUrl obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable" (\obj -> (((((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mcc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable :: DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable
mkDeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullable{deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableMcc = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableName = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableProductDescription = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportEmail = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportPhone = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportUrl = GHC.Maybe.Nothing,
                                                                                                                                                                    deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableUrl = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.business_profile.anyOf.properties.support_address.anyOf@ in the specification.
-- 
-- A publicly available mailing address for sending support issues to.
data DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable" (\obj -> (((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable :: DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable
mkDeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullable{deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                                                                                                                                        deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                                                                                                                                        deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                                                                                                                                        deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                                                                                                                                        deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                                                        deleteCustomersCustomerBankAccountsIdResponseBody200BusinessProfile'NonNullableSupportAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.business_type@ in the specification.
-- 
-- The business type.
data DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullable =
   DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumCompany -- ^ Represents the JSON value @"company"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumGovernmentEntity -- ^ Represents the JSON value @"government_entity"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumIndividual -- ^ Represents the JSON value @"individual"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumNonProfit -- ^ Represents the JSON value @"non_profit"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullable
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableOther val) = val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumCompany) = "company"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumGovernmentEntity) = "government_entity"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumIndividual) = "individual"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumNonProfit) = "non_profit"
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "company" -> DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumCompany
                                            | val GHC.Classes.== "government_entity" -> DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumGovernmentEntity
                                            | val GHC.Classes.== "individual" -> DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumIndividual
                                            | val GHC.Classes.== "non_profit" -> DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableEnumNonProfit
                                            | GHC.Base.otherwise -> DeleteCustomersCustomerBankAccountsIdResponseBody200BusinessType'NonNullableOther val)
-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.customer.anyOf@ in the specification.
-- 
-- The ID of the customer associated with this Alipay Account.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableVariants =
   DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableCustomer Customer
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableVariants
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableVariants
    where parseJSON val = case (DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200Customer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts@ in the specification.
-- 
-- External accounts (bank accounts and debit cards) currently attached to this account
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts' = DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts' {
  -- | data: The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.
  deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data :: ([DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'])
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'" (\obj -> ((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts' :: [DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'] -- ^ 'deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'
  -> GHC.Types.Bool -- ^ 'deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore'
  -> Data.Text.Internal.Text -- ^ 'deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url'
  -> DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'
mkDeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts' deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url = DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'{deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data = deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data,
                                                                                                                                                                                                                                                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore = deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'HasMore,
                                                                                                                                                                                                                                                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url = deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Url}
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf@ in the specification.
-- 
-- 
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data' = DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data' {
  -- | account: The ID of the account that the bank account is associated with.
  deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants))
  -- | account_holder_name: The name of the person or business that owns the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_holder_type: The type of entity that holds the account. This can be either \`individual\` or \`company\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | account_type: The bank account type. This can only be \`checking\` or \`savings\` in most countries. In Japan, this can only be \`futsu\` or \`toza\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_city: City\/District\/Suburb\/Town\/Village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_country: Billing address country, if provided when creating card.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line1: Address line 1 (Street address\/PO Box\/Company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line1_check: If \`address_line1\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1Check :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_line2: Address line 2 (Apartment\/Suite\/Unit\/Building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_state: State\/County\/Province\/Region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_zip: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZip :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | address_zip_check: If \`address_zip\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZipCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | available_payout_methods: A set of available payout methods for this bank account. Only values from this set should be passed as the \`method\` when creating a payout.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable])))
  -- | bank_name: Name of the bank associated with the routing number (e.g., \`WELLS FARGO\`).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'BankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | brand: Card brand. Can be \`American Express\`, \`Diners Club\`, \`Discover\`, \`JCB\`, \`MasterCard\`, \`UnionPay\`, \`Visa\`, or \`Unknown\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Brand :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | country: Two-letter ISO code representing the country the bank account is located in.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/payouts) paid out to the bank account.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | customer: The ID of the customer that the bank account is associated with.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants))
  -- | cvc_check: If a CVC was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`. A result of unchecked indicates that CVC was provided but hasn\'t been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https:\/\/support.stripe.com\/questions\/check-if-a-card-is-valid-without-a-charge).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'CvcCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | default_for_currency: Whether this bank account is the default external account for its currency.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool))
  -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DynamicLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | exp_month: Two-digit number representing the card\'s expiration month.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpMonth :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | exp_year: Four-digit number representing the card\'s expiration year.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpYear :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | fingerprint: Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Fingerprint :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | funding: Card funding type. Can be \`credit\`, \`debit\`, \`prepaid\`, or \`unknown\`.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Funding :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | id: Unique identifier for the object.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | last4: The last four digits of the bank account number.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Last4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Metadata :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object))
  -- | name: Cardholder name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | object: String representing the object\'s type. Objects of the same type share the same value.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object :: (GHC.Maybe.Maybe DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object')
  -- | recipient: The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableVariants))
  -- | routing_number: The routing transit number for the bank account.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'RoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | status: For bank accounts, possible values are \`new\`, \`validated\`, \`verified\`, \`verification_failed\`, or \`errored\`. A bank account that hasn\'t had any activity or validation performed is \`new\`. If Stripe can determine that the bank account exists, its status will be \`validated\`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be \`verified\`. If the verification failed for any reason, such as microdeposit failure, the status will be \`verification_failed\`. If a transfer sent to this bank account fails, we\'ll set the status to \`errored\` and will not continue to send transfers until the bank details are updated.
  -- 
  -- For external accounts, possible values are \`new\` and \`errored\`. Validations aren\'t run against external accounts because they\'re only used for payouts. This means the other statuses don\'t apply. If a transfer fails, the status is set to \`errored\` and transfers are stopped until account details are updated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tokenization_method: If the card number is tokenized, this is the method that was used. Can be \`android_pay\` (includes Google Pay), \`apple_pay\`, \`masterpass\`, \`visa_checkout\`, or null.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'TokenizationMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'TokenizationMethod obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'TokenizationMethod obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'" (\obj -> (((((((((((((((((((((((((((((((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available_payout_methods")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_for_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "recipient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tokenization_method"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data' :: DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'
mkDeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data' = DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'{deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderName = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountHolderType = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AccountType = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCity = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressCountry = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1 = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine1Check = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressLine2 = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressState = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZip = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AddressZipCheck = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'BankName = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Brand = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Country = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Currency = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'CvcCheck = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DefaultForCurrency = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'DynamicLast4 = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpMonth = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'ExpYear = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Fingerprint = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Funding = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Id = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Last4 = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Metadata = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Name = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'RoutingNumber = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Status = GHC.Maybe.Nothing,
                                                                                                                                                          deleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'TokenizationMethod = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.account.anyOf@ in the specification.
-- 
-- The ID of the account that the bank account is associated with.
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants =
   DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableVariants
    where parseJSON val = case (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Account'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.available_payout_methods.items@ in the specification.
-- 
-- 
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable =
   DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumInstant -- ^ Represents the JSON value @"instant"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumStandard -- ^ Represents the JSON value @"standard"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableOther val) = val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumInstant) = "instant"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumStandard) = "standard"
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullable
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "instant" -> DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumInstant
                                            | val GHC.Classes.== "standard" -> DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableEnumStandard
                                            | GHC.Base.otherwise -> DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'AvailablePayoutMethods'NonNullableOther val)
-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.customer.anyOf@ in the specification.
-- 
-- The ID of the customer that the bank account is associated with.
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants =
   DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableCustomer Customer
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableVariants
    where parseJSON val = case (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Customer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.object@ in the specification.
-- 
-- String representing the object\'s type. Objects of the same type share the same value.
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object' =
   DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'EnumBankAccount -- ^ Represents the JSON value @"bank_account"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'Other val) = val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'EnumBankAccount) = "bank_account"
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "bank_account" -> DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'EnumBankAccount
                                            | GHC.Base.otherwise -> DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Object'Other val)
-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.external_accounts.properties.data.items.anyOf.properties.recipient.anyOf@ in the specification.
-- 
-- The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
data DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableVariants =
   DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableRecipient Recipient
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableVariants
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableRecipient a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableVariants
    where parseJSON val = case (DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200ExternalAccounts'Data'Recipient'NonNullableRecipient Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.object@ in the specification.
-- 
-- String representing the object\'s type. Objects of the same type share the same value.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Object' =
   DeleteCustomersCustomerBankAccountsIdResponseBody200Object'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Object'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Object'EnumAccount -- ^ Represents the JSON value @"account"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Object'
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Object'Other val) = val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Object'EnumAccount) = "account"
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Object'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "account" -> DeleteCustomersCustomerBankAccountsIdResponseBody200Object'EnumAccount
                                            | GHC.Base.otherwise -> DeleteCustomersCustomerBankAccountsIdResponseBody200Object'Other val)
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.owner.anyOf@ in the specification.
-- 
-- Information about the owner of the payment instrument that may be used or required by particular source types.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable {
  -- | address: Owner\'s address.
  deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable))
  -- | email: Owner\'s email address.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | name: Owner\'s full name.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | phone: Owner\'s phone number (including extension).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | verified_address: Verified owner\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable))
  -- | verified_email: Verified owner\'s email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | verified_name: Verified owner\'s full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | verified_phone: Verified owner\'s phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable" (\obj -> (((((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_phone"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable :: DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullable{deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableEmail = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableName = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullablePhone = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedEmail = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedName = GHC.Maybe.Nothing,
                                                                                                                                                deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedPhone = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.owner.anyOf.properties.address.anyOf@ in the specification.
-- 
-- Owner\\\'s address.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable :: DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullable{deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.owner.anyOf.properties.verified_address.anyOf@ in the specification.
-- 
-- Verified owner\\\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable {
  -- | city: City, district, suburb, town, or village.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line1: Address line 1 (e.g., street, PO Box, or company name).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | postal_code: ZIP or postal code.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  -- | state: State, county, province, or region.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable" (\obj -> (((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable :: DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullable{deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCity = GHC.Maybe.Nothing,
                                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableCountry = GHC.Maybe.Nothing,
                                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine1 = GHC.Maybe.Nothing,
                                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableLine2 = GHC.Maybe.Nothing,
                                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
                                                                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Owner'NonNullableVerifiedAddress'NonNullableState = GHC.Maybe.Nothing}
-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.recipient.anyOf@ in the specification.
-- 
-- The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableVariants =
   DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableText Data.Text.Internal.Text
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableRecipient Recipient
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableVariants
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableRecipient a) = Data.Aeson.Types.ToJSON.toJSON a
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableVariants
    where parseJSON val = case (DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((DeleteCustomersCustomerBankAccountsIdResponseBody200Recipient'NonNullableRecipient Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
                              Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
                              Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.settings.anyOf@ in the specification.
-- 
-- Options for customizing how the account functions within Stripe.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable {
  -- | bacs_debit_payments: 
  deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBacsDebitPayments :: (GHC.Maybe.Maybe AccountBacsDebitPaymentsSettings)
  -- | branding: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBranding :: (GHC.Maybe.Maybe AccountBrandingSettings)
  -- | card_issuing: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardIssuing :: (GHC.Maybe.Maybe AccountCardIssuingSettings)
  -- | card_payments: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardPayments :: (GHC.Maybe.Maybe AccountCardPaymentsSettings)
  -- | dashboard: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableDashboard :: (GHC.Maybe.Maybe AccountDashboardSettings)
  -- | payments: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayments :: (GHC.Maybe.Maybe AccountPaymentsSettings)
  -- | payouts: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayouts :: (GHC.Maybe.Maybe AccountPayoutSettings)
  -- | sepa_debit_payments: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableSepaDebitPayments :: (GHC.Maybe.Maybe AccountSepaDebitPaymentsSettings)
  -- | treasury: 
  , deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableTreasury :: (GHC.Maybe.Maybe AccountTreasurySettings)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBranding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dashboard" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableDashboard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableSepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableTreasury obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBranding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dashboard" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableDashboard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableSepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableTreasury obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable" (\obj -> ((((((((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dashboard")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "treasury"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable :: DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable = DeleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullable{deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBacsDebitPayments = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableBranding = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardIssuing = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableCardPayments = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableDashboard = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayments = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullablePayouts = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableSepaDebitPayments = GHC.Maybe.Nothing,
                                                                                                                                                      deleteCustomersCustomerBankAccountsIdResponseBody200Settings'NonNullableTreasury = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.transactions@ in the specification.
-- 
-- A list with one entry for each time that the customer sent bitcoin to the receiver. Hidden when viewing the receiver with a publishable key.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions' = DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions' {
  -- | data: Details about each object.
  deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data :: ([BitcoinTransaction])
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore :: GHC.Types.Bool
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  , deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions'" (\obj -> ((GHC.Base.pure DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Create a new 'DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions'' with all required fields.
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Transactions' :: [BitcoinTransaction] -- ^ 'deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data'
  -> GHC.Types.Bool -- ^ 'deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore'
  -> Data.Text.Internal.Text -- ^ 'deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url'
  -> DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions'
mkDeleteCustomersCustomerBankAccountsIdResponseBody200Transactions' deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url = DeleteCustomersCustomerBankAccountsIdResponseBody200Transactions'{deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data = deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Data,
                                                                                                                                                                                                                                                                                                                                                            deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore = deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'HasMore,
                                                                                                                                                                                                                                                                                                                                                            deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url = deleteCustomersCustomerBankAccountsIdResponseBody200Transactions'Url}
-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/bank_accounts\/{id}.DELETE.responses.200.content.application\/json.schema.anyOf.anyOf.properties.type@ in the specification.
-- 
-- The Stripe account type. Can be \`standard\`, \`express\`, or \`custom\`.
data DeleteCustomersCustomerBankAccountsIdResponseBody200Type' =
   DeleteCustomersCustomerBankAccountsIdResponseBody200Type'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Type'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumCustom -- ^ Represents the JSON value @"custom"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumExpress -- ^ Represents the JSON value @"express"@
  | DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumStandard -- ^ Represents the JSON value @"standard"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Type'
    where toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Type'Other val) = val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumCustom) = "custom"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumExpress) = "express"
          toJSON (DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumStandard) = "standard"
instance Data.Aeson.Types.FromJSON.FromJSON DeleteCustomersCustomerBankAccountsIdResponseBody200Type'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "custom" -> DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumCustom
                                            | val GHC.Classes.== "express" -> DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumExpress
                                            | val GHC.Classes.== "standard" -> DeleteCustomersCustomerBankAccountsIdResponseBody200Type'EnumStandard
                                            | GHC.Base.otherwise -> DeleteCustomersCustomerBankAccountsIdResponseBody200Type'Other val)
