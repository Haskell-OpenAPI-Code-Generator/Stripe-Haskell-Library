{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getAccountsAccountCapabilities
module StripeAPI.Operations.GetAccountsAccountCapabilities where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/accounts/{account}/capabilities
--
-- \<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.\<\/p>
getAccountsAccountCapabilities ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetAccountsAccountCapabilitiesParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetAccountsAccountCapabilitiesResponse)
getAccountsAccountCapabilities parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetAccountsAccountCapabilitiesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetAccountsAccountCapabilitiesResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetAccountsAccountCapabilitiesResponseBody200
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetAccountsAccountCapabilitiesResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET") ("/v1/accounts/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (getAccountsAccountCapabilitiesParametersPathAccount parameters))) GHC.Base.<> "/capabilities")) [StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getAccountsAccountCapabilitiesParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True])

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/capabilities.GET.parameters@ in the specification.
data GetAccountsAccountCapabilitiesParameters = GetAccountsAccountCapabilitiesParameters
  { -- | pathAccount: Represents the parameter named \'account\'
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getAccountsAccountCapabilitiesParametersPathAccount :: Data.Text.Internal.Text,
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getAccountsAccountCapabilitiesParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetAccountsAccountCapabilitiesParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathAccount" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesParametersPathAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getAccountsAccountCapabilitiesParametersQueryExpand obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathAccount" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesParametersPathAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getAccountsAccountCapabilitiesParametersQueryExpand obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetAccountsAccountCapabilitiesParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetAccountsAccountCapabilitiesParameters" (\obj -> (GHC.Base.pure GetAccountsAccountCapabilitiesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathAccount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand"))

-- | Create a new 'GetAccountsAccountCapabilitiesParameters' with all required fields.
mkGetAccountsAccountCapabilitiesParameters ::
  -- | 'getAccountsAccountCapabilitiesParametersPathAccount'
  Data.Text.Internal.Text ->
  GetAccountsAccountCapabilitiesParameters
mkGetAccountsAccountCapabilitiesParameters getAccountsAccountCapabilitiesParametersPathAccount =
  GetAccountsAccountCapabilitiesParameters
    { getAccountsAccountCapabilitiesParametersPathAccount = getAccountsAccountCapabilitiesParametersPathAccount,
      getAccountsAccountCapabilitiesParametersQueryExpand = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getAccountsAccountCapabilities'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetAccountsAccountCapabilitiesResponseError' is used.
data GetAccountsAccountCapabilitiesResponse
  = -- | Means either no matching case available or a parse error
    GetAccountsAccountCapabilitiesResponseError GHC.Base.String
  | -- | Successful response.
    GetAccountsAccountCapabilitiesResponse200 GetAccountsAccountCapabilitiesResponseBody200
  | -- | Error response.
    GetAccountsAccountCapabilitiesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/accounts\/{account}\/capabilities.GET.responses.200.content.application\/json.schema@ in the specification.
data GetAccountsAccountCapabilitiesResponseBody200 = GetAccountsAccountCapabilitiesResponseBody200
  { -- | data
    getAccountsAccountCapabilitiesResponseBody200Data :: ([Capability]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getAccountsAccountCapabilitiesResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getAccountsAccountCapabilitiesResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetAccountsAccountCapabilitiesResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getAccountsAccountCapabilitiesResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetAccountsAccountCapabilitiesResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetAccountsAccountCapabilitiesResponseBody200" (\obj -> ((GHC.Base.pure GetAccountsAccountCapabilitiesResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetAccountsAccountCapabilitiesResponseBody200' with all required fields.
mkGetAccountsAccountCapabilitiesResponseBody200 ::
  -- | 'getAccountsAccountCapabilitiesResponseBody200Data'
  [Capability] ->
  -- | 'getAccountsAccountCapabilitiesResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getAccountsAccountCapabilitiesResponseBody200Url'
  Data.Text.Internal.Text ->
  GetAccountsAccountCapabilitiesResponseBody200
mkGetAccountsAccountCapabilitiesResponseBody200 getAccountsAccountCapabilitiesResponseBody200Data getAccountsAccountCapabilitiesResponseBody200HasMore getAccountsAccountCapabilitiesResponseBody200Url =
  GetAccountsAccountCapabilitiesResponseBody200
    { getAccountsAccountCapabilitiesResponseBody200Data = getAccountsAccountCapabilitiesResponseBody200Data,
      getAccountsAccountCapabilitiesResponseBody200HasMore = getAccountsAccountCapabilitiesResponseBody200HasMore,
      getAccountsAccountCapabilitiesResponseBody200Url = getAccountsAccountCapabilitiesResponseBody200Url
    }
