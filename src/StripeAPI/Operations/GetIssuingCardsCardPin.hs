{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the different functions to run the operation getIssuingCardsCardPin
module StripeAPI.Operations.GetIssuingCardsCardPin where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/issuing/cards/{card}/pin
-- 
-- \<p>Retrieves the PIN for a card object, subject to cardholder verification, see \<a href=\"\/docs\/issuing\/pin_management\">Retrieve and update cardholder PIN\<\/a>\<\/p>
getIssuingCardsCardPin :: forall m s . (StripeAPI.Common.MonadHTTP m, StripeAPI.Common.SecurityScheme s) => StripeAPI.Common.Configuration s  -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text                                                                                                            -- ^ card | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe Data.Text.Internal.Text                                                                                            -- ^ expand: Specifies which fields in the response should be expanded.
  -> Data.Text.Internal.Text                                                                                                            -- ^ verification: The id of the \`Verification\` that was sent and the code entered by the cardholder
  -> GHC.Maybe.Maybe GetIssuingCardsCardPinRequestBody                                                                                  -- ^ The request body to send
  -> m (Data.Either.Either Network.HTTP.Client.Types.HttpException (Network.HTTP.Client.Types.Response GetIssuingCardsCardPinResponse)) -- ^ Monad containing the result of the operation
getIssuingCardsCardPin config
                       card
                       expand
                       verification
                       body = GHC.Base.fmap (GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetIssuingCardsCardPinResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetIssuingCardsCardPinResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                    Issuing'cardPin)
                                                                                                                                                                                              | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetIssuingCardsCardPinResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                      Error)
                                                                                                                                                                                              | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0)) (StripeAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/v1/issuing/cards/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel card)) GHC.Base.++ "/pin"))) ((Data.Text.pack ['e',
x',
p',
a',
n',
d'],
tripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['v',
e',
r',
i',
f',
i',
c',
a',
t',
i',
o',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   'n'],
ase.Just GHC.Base.$ StripeAPI.Common.stringifyModel verification) : [])) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | > GET /v1/issuing/cards/{card}/pin
-- 
-- The same as 'getIssuingCardsCardPin' but returns the raw 'Data.ByteString.Char8.ByteString'
getIssuingCardsCardPinRaw :: forall m s . (StripeAPI.Common.MonadHTTP m,
                                           StripeAPI.Common.SecurityScheme s) =>
                             StripeAPI.Common.Configuration s ->
                             Data.Text.Internal.Text ->
                             GHC.Maybe.Maybe Data.Text.Internal.Text ->
                             Data.Text.Internal.Text ->
                             GHC.Maybe.Maybe GetIssuingCardsCardPinRequestBody ->
                             m (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                   (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
getIssuingCardsCardPinRaw config
                          card
                          expand
                          verification
                          body = GHC.Base.id (StripeAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/v1/issuing/cards/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel card)) GHC.Base.++ "/pin"))) ((Data.Text.pack ['e',
                                                                                                                                                                                                                                                                                                                                                                                                                    'x',
                                                                                                                                                                                                                                                                                                                                                                                                                    'p',
                                                                                                                                                                                                                                                                                                                                                                                                                    'a',
                                                                                                                                                                                                                                                                                                                                                                                                                    'n',
                                                                                                                                                                                                                                                                                                                                                                                                                    'd'],
                                                                                                                                                                                                                                                                                                                                                                                                    StripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['v',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'r',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'f',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'c',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'a',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               't',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'o',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                               'n'],
                                                                                                                                                                                                                                                                                                                                                                                                                                                               GHC.Base.Just GHC.Base.$ StripeAPI.Common.stringifyModel verification) : [])) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | > GET /v1/issuing/cards/{card}/pin
-- 
-- Monadic version of 'getIssuingCardsCardPin' (use with 'StripeAPI.Common.runWithConfiguration')
getIssuingCardsCardPinM :: forall m s . (StripeAPI.Common.MonadHTTP m,
                                         StripeAPI.Common.SecurityScheme s) =>
                           Data.Text.Internal.Text ->
                           GHC.Maybe.Maybe Data.Text.Internal.Text ->
                           Data.Text.Internal.Text ->
                           GHC.Maybe.Maybe GetIssuingCardsCardPinRequestBody ->
                           Control.Monad.Trans.Reader.ReaderT (StripeAPI.Common.Configuration s)
                                                              m
                                                              (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                  (Network.HTTP.Client.Types.Response GetIssuingCardsCardPinResponse))
getIssuingCardsCardPinM card
                        expand
                        verification
                        body = GHC.Base.fmap (GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either GetIssuingCardsCardPinResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetIssuingCardsCardPinResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                     Issuing'cardPin)
                                                                                                                                                                                               | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetIssuingCardsCardPinResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                       Error)
                                                                                                                                                                                               | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2)) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/v1/issuing/cards/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel card)) GHC.Base.++ "/pin"))) ((Data.Text.pack ['e',
x',
p',
a',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   'n',
d'],
tripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['v',
e',
r',
i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              'f',
i',
c',
a',
t',
i',
o',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              'n'],
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              GHC.Base.Just GHC.Base.$ StripeAPI.Common.stringifyModel verification) : [])) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | > GET /v1/issuing/cards/{card}/pin
-- 
-- Monadic version of 'getIssuingCardsCardPinRaw' (use with 'StripeAPI.Common.runWithConfiguration')
getIssuingCardsCardPinRawM :: forall m s . (StripeAPI.Common.MonadHTTP m,
                                            StripeAPI.Common.SecurityScheme s) =>
                              Data.Text.Internal.Text ->
                              GHC.Maybe.Maybe Data.Text.Internal.Text ->
                              Data.Text.Internal.Text ->
                              GHC.Maybe.Maybe GetIssuingCardsCardPinRequestBody ->
                              Control.Monad.Trans.Reader.ReaderT (StripeAPI.Common.Configuration s)
                                                                 m
                                                                 (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                     (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
getIssuingCardsCardPinRawM card
                           expand
                           verification
                           body = GHC.Base.id (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/v1/issuing/cards/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel card)) GHC.Base.++ "/pin"))) ((Data.Text.pack ['e',
                                                                                                                                                                                                                                                                                                                                                                                                               'x',
                                                                                                                                                                                                                                                                                                                                                                                                               'p',
                                                                                                                                                                                                                                                                                                                                                                                                               'a',
                                                                                                                                                                                                                                                                                                                                                                                                               'n',
                                                                                                                                                                                                                                                                                                                                                                                                               'd'],
                                                                                                                                                                                                                                                                                                                                                                                               StripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['v',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'r',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'f',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'c',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'a',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          't',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'o',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          'n'],
                                                                                                                                                                                                                                                                                                                                                                                                                                                          GHC.Base.Just GHC.Base.$ StripeAPI.Common.stringifyModel verification) : [])) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the data type for the schema getIssuingCardsCardPinRequestBody
-- 
-- 
data GetIssuingCardsCardPinRequestBody = GetIssuingCardsCardPinRequestBody {
  
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GetIssuingCardsCardPinRequestBody
    where toJSON obj = Data.Aeson.object []
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "string" ("string" :: GHC.Base.String))
instance Data.Aeson.Types.FromJSON.FromJSON GetIssuingCardsCardPinRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetIssuingCardsCardPinRequestBody" (\obj -> GHC.Base.pure GetIssuingCardsCardPinRequestBody)
-- | Represents a response of the operation 'getIssuingCardsCardPin'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetIssuingCardsCardPinResponseError' is used.
data GetIssuingCardsCardPinResponse =                   
   GetIssuingCardsCardPinResponseError GHC.Base.String  -- ^ Means either no matching case available or a parse error
  | GetIssuingCardsCardPinResponse200 Issuing'cardPin   -- ^ Successful response.
  | GetIssuingCardsCardPinResponseDefault Error         -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
