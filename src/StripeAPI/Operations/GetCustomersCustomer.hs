{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getCustomersCustomer
module StripeAPI.Operations.GetCustomersCustomer where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/customers/{customer}
--
-- \<p>Retrieves a Customer object.\<\/p>
getCustomersCustomer ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetCustomersCustomerParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetCustomersCustomerResponse)
getCustomersCustomer parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetCustomersCustomerResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetCustomersCustomerResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetCustomersCustomerResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetCustomersCustomerResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/v1/customers/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel (getCustomersCustomerParametersPathCustomer parameters))) GHC.Base.++ ""))) [StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCustomersCustomerParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True])

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.parameters@ in the specification.
data GetCustomersCustomerParameters = GetCustomersCustomerParameters
  { -- | pathCustomer: Represents the parameter named \'customer\'
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerParametersPathCustomer :: Data.Text.Internal.Text,
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getCustomersCustomerParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= getCustomersCustomerParametersPathCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerParametersQueryExpand obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= getCustomersCustomerParametersPathCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerParametersQueryExpand obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerParameters" (\obj -> (GHC.Base.pure GetCustomersCustomerParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand"))

-- | Create a new 'GetCustomersCustomerParameters' with all required fields.
mkGetCustomersCustomerParameters ::
  -- | 'getCustomersCustomerParametersPathCustomer'
  Data.Text.Internal.Text ->
  GetCustomersCustomerParameters
mkGetCustomersCustomerParameters getCustomersCustomerParametersPathCustomer =
  GetCustomersCustomerParameters
    { getCustomersCustomerParametersPathCustomer = getCustomersCustomerParametersPathCustomer,
      getCustomersCustomerParametersQueryExpand = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'getCustomersCustomer'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetCustomersCustomerResponseError' is used.
data GetCustomersCustomerResponse
  = -- | Means either no matching case available or a parse error
    GetCustomersCustomerResponseError GHC.Base.String
  | -- | Successful response.
    GetCustomersCustomerResponse200 GetCustomersCustomerResponseBody200
  | -- | Error response.
    GetCustomersCustomerResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf@ in the specification.
data GetCustomersCustomerResponseBody200 = GetCustomersCustomerResponseBody200
  { -- | address: The customer\'s address.
    getCustomersCustomerResponseBody200Address :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Address'NonNullable)),
    -- | balance: Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.
    getCustomersCustomerResponseBody200Balance :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | cash_balance: The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.
    getCustomersCustomerResponseBody200CashBalance :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200CashBalance'NonNullable)),
    -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    getCustomersCustomerResponseBody200Created :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/currencies) the customer can be charged in for recurring billing purposes.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Currency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | default_source: ID of the default payment source for the customer.
    --
    -- If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-invoice_settings-default_payment_method) field instead.
    getCustomersCustomerResponseBody200DefaultSource :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200DefaultSource'NonNullableVariants)),
    -- | deleted: Always true for a deleted object
    getCustomersCustomerResponseBody200Deleted :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Deleted'),
    -- | delinquent: When the customer\'s latest invoice is billed by charging automatically, \`delinquent\` is \`true\` if the invoice\'s latest charge failed. When the customer\'s latest invoice is billed by sending an invoice, \`delinquent\` is \`true\` if the invoice isn\'t paid by its due date.
    --
    -- If an invoice is marked uncollectible by [dunning](https:\/\/stripe.com\/docs\/billing\/automatic-collection), \`delinquent\` doesn\'t get reset to \`false\`.
    getCustomersCustomerResponseBody200Delinquent :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Description :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | discount: Describes the current discount active on the customer, if there is one.
    getCustomersCustomerResponseBody200Discount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Discount'NonNullable)),
    -- | email: The customer\'s email address.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Email :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | invoice_prefix: The prefix for the customer used to generate unique invoice numbers.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200InvoicePrefix :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | invoice_settings:
    getCustomersCustomerResponseBody200InvoiceSettings :: (GHC.Maybe.Maybe InvoiceSettingCustomerSetting),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    getCustomersCustomerResponseBody200Livemode :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    getCustomersCustomerResponseBody200Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | name: The customer\'s full name or business name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | next_invoice_sequence: The suffix of the customer\'s next invoice number, e.g., 0001.
    getCustomersCustomerResponseBody200NextInvoiceSequence :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | object: String representing the object\'s type. Objects of the same type share the same value.
    getCustomersCustomerResponseBody200Object :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Object'),
    -- | phone: The customer\'s phone number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Phone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | preferred_locales: The customer\'s preferred locales (languages), ordered by preference.
    getCustomersCustomerResponseBody200PreferredLocales :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([Data.Text.Internal.Text]))),
    -- | shipping: Mailing and shipping address for the customer. Appears on invoices emailed to this customer.
    getCustomersCustomerResponseBody200Shipping :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Shipping'NonNullable)),
    -- | sources: The customer\'s payment sources, if any.
    getCustomersCustomerResponseBody200Sources :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Sources'),
    -- | subscriptions: The customer\'s current subscriptions, if any.
    getCustomersCustomerResponseBody200Subscriptions :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Subscriptions'),
    -- | tax:
    getCustomersCustomerResponseBody200Tax :: (GHC.Maybe.Maybe CustomerTax),
    -- | tax_exempt: Describes the customer\'s tax exemption status. One of \`none\`, \`exempt\`, or \`reverse\`. When set to \`reverse\`, invoice and receipt PDFs include the text **\"Reverse charge\"**.
    getCustomersCustomerResponseBody200TaxExempt :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200TaxExempt'NonNullable)),
    -- | tax_ids: The customer\'s tax IDs.
    getCustomersCustomerResponseBody200TaxIds :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200TaxIds'),
    -- | test_clock: ID of the test clock this customer belongs to.
    getCustomersCustomerResponseBody200TestClock :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200TestClock'NonNullableVariants))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("balance" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Balance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cash_balance" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_source" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200DefaultSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Deleted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delinquent" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Delinquent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_prefix" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200InvoicePrefix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_settings" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200InvoiceSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_invoice_sequence" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200NextInvoiceSequence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locales" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200PreferredLocales obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sources" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscriptions" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Subscriptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Tax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200TaxExempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_ids" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200TaxIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200TestClock obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("balance" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Balance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cash_balance" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_source" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200DefaultSource obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deleted" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Deleted obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delinquent" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Delinquent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("discount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_prefix" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200InvoicePrefix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_settings" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200InvoiceSettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("next_invoice_sequence" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200NextInvoiceSequence obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preferred_locales" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200PreferredLocales obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sources" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscriptions" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Subscriptions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Tax obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_exempt" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200TaxExempt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_ids" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200TaxIds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("test_clock" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200TestClock obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200" (\obj -> (((((((((((((((((((((((((((GHC.Base.pure GetCustomersCustomerResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cash_balance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_source")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "deleted")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "delinquent")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "discount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_prefix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "next_invoice_sequence")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preferred_locales")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sources")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscriptions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_exempt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_ids")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "test_clock"))

-- | Create a new 'GetCustomersCustomerResponseBody200' with all required fields.
mkGetCustomersCustomerResponseBody200 :: GetCustomersCustomerResponseBody200
mkGetCustomersCustomerResponseBody200 =
  GetCustomersCustomerResponseBody200
    { getCustomersCustomerResponseBody200Address = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Balance = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200CashBalance = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Created = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Currency = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200DefaultSource = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Deleted = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Delinquent = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Description = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Email = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Id = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200InvoicePrefix = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200InvoiceSettings = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Livemode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Metadata = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Name = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200NextInvoiceSequence = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Object = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Phone = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200PreferredLocales = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Shipping = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Subscriptions = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Tax = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200TaxExempt = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200TaxIds = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200TestClock = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.address.anyOf@ in the specification.
--
-- The customer\\\'s address.
data GetCustomersCustomerResponseBody200Address'NonNullable = GetCustomersCustomerResponseBody200Address'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Address'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Address'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Address'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Address'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Address'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Address'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Address'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Address'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Address'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Address'NonNullable" (\obj -> (((((GHC.Base.pure GetCustomersCustomerResponseBody200Address'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'GetCustomersCustomerResponseBody200Address'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200Address'NonNullable :: GetCustomersCustomerResponseBody200Address'NonNullable
mkGetCustomersCustomerResponseBody200Address'NonNullable =
  GetCustomersCustomerResponseBody200Address'NonNullable
    { getCustomersCustomerResponseBody200Address'NonNullableCity = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Address'NonNullableCountry = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Address'NonNullableLine1 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Address'NonNullableLine2 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Address'NonNullablePostalCode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Address'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.cash_balance.anyOf@ in the specification.
--
-- The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \\\"cash_balance\\\".The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.
data GetCustomersCustomerResponseBody200CashBalance'NonNullable = GetCustomersCustomerResponseBody200CashBalance'NonNullable
  { -- | available: A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0.
    getCustomersCustomerResponseBody200CashBalance'NonNullableAvailable :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Aeson.Types.Internal.Object)),
    -- | customer: The ID of the customer whose cash balance this object represents.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200CashBalance'NonNullableCustomer :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    getCustomersCustomerResponseBody200CashBalance'NonNullableLivemode :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | object: String representing the object\'s type. Objects of the same type share the same value.
    getCustomersCustomerResponseBody200CashBalance'NonNullableObject :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'),
    -- | settings:
    getCustomersCustomerResponseBody200CashBalance'NonNullableSettings :: (GHC.Maybe.Maybe CustomerBalanceCustomerBalanceSettings)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200CashBalance'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableAvailable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableLivemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableSettings obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableAvailable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableLivemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200CashBalance'NonNullableSettings obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200CashBalance'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200CashBalance'NonNullable" (\obj -> ((((GHC.Base.pure GetCustomersCustomerResponseBody200CashBalance'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings"))

-- | Create a new 'GetCustomersCustomerResponseBody200CashBalance'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200CashBalance'NonNullable :: GetCustomersCustomerResponseBody200CashBalance'NonNullable
mkGetCustomersCustomerResponseBody200CashBalance'NonNullable =
  GetCustomersCustomerResponseBody200CashBalance'NonNullable
    { getCustomersCustomerResponseBody200CashBalance'NonNullableAvailable = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200CashBalance'NonNullableCustomer = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200CashBalance'NonNullableLivemode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200CashBalance'NonNullableObject = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200CashBalance'NonNullableSettings = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.cash_balance.anyOf.properties.object@ in the specification.
--
-- String representing the object\'s type. Objects of the same type share the same value.
data GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"cash_balance"@
    GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'EnumCashBalance
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200CashBalance'NonNullableObject' where
  toJSON (GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'Other val) = val
  toJSON (GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'EnumCashBalance) = "cash_balance"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200CashBalance'NonNullableObject' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "cash_balance" -> GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'EnumCashBalance
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200CashBalance'NonNullableObject'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.default_source.anyOf@ in the specification.
--
-- ID of the default payment source for the customer.
--
-- If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https:\/\/stripe.com\/docs\/api\/customers\/object\#customer_object-invoice_settings-default_payment_method) field instead.
data GetCustomersCustomerResponseBody200DefaultSource'NonNullableVariants
  = GetCustomersCustomerResponseBody200DefaultSource'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200DefaultSource'NonNullableAlipayAccount AlipayAccount
  | GetCustomersCustomerResponseBody200DefaultSource'NonNullableBankAccount BankAccount
  | GetCustomersCustomerResponseBody200DefaultSource'NonNullableBitcoinReceiver BitcoinReceiver
  | GetCustomersCustomerResponseBody200DefaultSource'NonNullableCard Card
  | GetCustomersCustomerResponseBody200DefaultSource'NonNullableSource Source
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200DefaultSource'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200DefaultSource'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200DefaultSource'NonNullableAlipayAccount a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200DefaultSource'NonNullableBankAccount a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200DefaultSource'NonNullableBitcoinReceiver a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200DefaultSource'NonNullableCard a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200DefaultSource'NonNullableSource a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200DefaultSource'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200DefaultSource'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200DefaultSource'NonNullableAlipayAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200DefaultSource'NonNullableBankAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200DefaultSource'NonNullableBitcoinReceiver Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200DefaultSource'NonNullableCard Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200DefaultSource'NonNullableSource Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched"))))) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.deleted@ in the specification.
--
-- Always true for a deleted object
data GetCustomersCustomerResponseBody200Deleted'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200Deleted'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200Deleted'Typed GHC.Types.Bool
  | -- | Represents the JSON value @true@
    GetCustomersCustomerResponseBody200Deleted'EnumTrue
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Deleted' where
  toJSON (GetCustomersCustomerResponseBody200Deleted'Other val) = val
  toJSON (GetCustomersCustomerResponseBody200Deleted'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200Deleted'EnumTrue) = Data.Aeson.Types.Internal.Bool GHC.Types.True

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Deleted' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== Data.Aeson.Types.Internal.Bool GHC.Types.True -> GetCustomersCustomerResponseBody200Deleted'EnumTrue
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200Deleted'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.discount.anyOf@ in the specification.
--
-- Describes the current discount active on the customer, if there is one.
data GetCustomersCustomerResponseBody200Discount'NonNullable = GetCustomersCustomerResponseBody200Discount'NonNullable
  { -- | checkout_session: The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Discount'NonNullableCheckoutSession :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | coupon: A coupon contains information about a percent-off or amount-off discount you
    -- might want to apply to a customer. Coupons may be applied to [subscriptions](https:\/\/stripe.com\/docs\/api\#subscriptions), [invoices](https:\/\/stripe.com\/docs\/api\#invoices),
    -- [checkout sessions](https:\/\/stripe.com\/docs\/api\/checkout\/sessions), [quotes](https:\/\/stripe.com\/docs\/api\#quotes), and more. Coupons do not work with conventional one-off [charges](https:\/\/stripe.com\/docs\/api\#create_charge) or [payment intents](https:\/\/stripe.com\/docs\/api\/payment_intents).
    getCustomersCustomerResponseBody200Discount'NonNullableCoupon :: (GHC.Maybe.Maybe Coupon),
    -- | customer: The ID of the customer associated with this discount.
    getCustomersCustomerResponseBody200Discount'NonNullableCustomer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableVariants)),
    -- | end: If the coupon has a duration of \`repeating\`, the date that this discount will end. If the coupon has a duration of \`once\` or \`forever\`, this attribute will be null.
    getCustomersCustomerResponseBody200Discount'NonNullableEnd :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | id: The ID of the discount object. Discounts cannot be fetched by ID. Use \`expand[]=discounts\` in API calls to expand discount IDs in an array.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Discount'NonNullableId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | invoice: The invoice that the discount\'s coupon was applied to, if it was applied directly to a particular invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Discount'NonNullableInvoice :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | invoice_item: The invoice item \`id\` (or invoice line item \`id\` for invoice line items of type=\'subscription\') that the discount\'s coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Discount'NonNullableInvoiceItem :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | object: String representing the object\'s type. Objects of the same type share the same value.
    getCustomersCustomerResponseBody200Discount'NonNullableObject :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Discount'NonNullableObject'),
    -- | promotion_code: The promotion code applied to create this discount.
    getCustomersCustomerResponseBody200Discount'NonNullablePromotionCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableVariants)),
    -- | start: Date that the coupon was applied.
    getCustomersCustomerResponseBody200Discount'NonNullableStart :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | subscription: The subscription that this coupon is applied to, if it is applied to a particular subscription.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Discount'NonNullableSubscription :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Discount'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("checkout_session" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableCheckoutSession obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullablePromotionCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableStart obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableSubscription obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("checkout_session" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableCheckoutSession obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("coupon" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableCoupon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableCustomer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("end" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableEnd obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableInvoice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_item" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableInvoiceItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableObject obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promotion_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullablePromotionCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("start" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableStart obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subscription" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Discount'NonNullableSubscription obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Discount'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Discount'NonNullable" (\obj -> ((((((((((GHC.Base.pure GetCustomersCustomerResponseBody200Discount'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "checkout_session")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "coupon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "end")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promotion_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "start")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subscription"))

-- | Create a new 'GetCustomersCustomerResponseBody200Discount'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200Discount'NonNullable :: GetCustomersCustomerResponseBody200Discount'NonNullable
mkGetCustomersCustomerResponseBody200Discount'NonNullable =
  GetCustomersCustomerResponseBody200Discount'NonNullable
    { getCustomersCustomerResponseBody200Discount'NonNullableCheckoutSession = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableCoupon = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableCustomer = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableEnd = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableId = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableInvoice = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableInvoiceItem = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableObject = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullablePromotionCode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableStart = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Discount'NonNullableSubscription = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.discount.anyOf.properties.customer.anyOf@ in the specification.
--
-- The ID of the customer associated with this discount.
data GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableVariants
  = GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableCustomer Customer
  | GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Discount'NonNullableCustomer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.discount.anyOf.properties.object@ in the specification.
--
-- String representing the object\'s type. Objects of the same type share the same value.
data GetCustomersCustomerResponseBody200Discount'NonNullableObject'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200Discount'NonNullableObject'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200Discount'NonNullableObject'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"discount"@
    GetCustomersCustomerResponseBody200Discount'NonNullableObject'EnumDiscount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Discount'NonNullableObject' where
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullableObject'Other val) = val
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullableObject'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullableObject'EnumDiscount) = "discount"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Discount'NonNullableObject' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "discount" -> GetCustomersCustomerResponseBody200Discount'NonNullableObject'EnumDiscount
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200Discount'NonNullableObject'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.discount.anyOf.properties.promotion_code.anyOf@ in the specification.
--
-- The promotion code applied to create this discount.
data GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableVariants
  = GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullablePromotionCode PromotionCode
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullablePromotionCode a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Discount'NonNullablePromotionCode'NonNullablePromotionCode Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.object@ in the specification.
--
-- String representing the object\'s type. Objects of the same type share the same value.
data GetCustomersCustomerResponseBody200Object'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200Object'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200Object'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"customer"@
    GetCustomersCustomerResponseBody200Object'EnumCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Object' where
  toJSON (GetCustomersCustomerResponseBody200Object'Other val) = val
  toJSON (GetCustomersCustomerResponseBody200Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200Object'EnumCustomer) = "customer"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Object' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "customer" -> GetCustomersCustomerResponseBody200Object'EnumCustomer
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200Object'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.shipping.anyOf@ in the specification.
--
-- Mailing and shipping address for the customer. Appears on invoices emailed to this customer.
data GetCustomersCustomerResponseBody200Shipping'NonNullable = GetCustomersCustomerResponseBody200Shipping'NonNullable
  { -- | address:
    getCustomersCustomerResponseBody200Shipping'NonNullableAddress :: (GHC.Maybe.Maybe Address),
    -- | carrier: The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Shipping'NonNullableCarrier :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name: Recipient name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Shipping'NonNullableName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | phone: Recipient phone (including extension).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Shipping'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | tracking_number: The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Shipping'NonNullableTrackingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Shipping'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tracking_number" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableTrackingNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableCarrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tracking_number" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Shipping'NonNullableTrackingNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Shipping'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Shipping'NonNullable" (\obj -> ((((GHC.Base.pure GetCustomersCustomerResponseBody200Shipping'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tracking_number"))

-- | Create a new 'GetCustomersCustomerResponseBody200Shipping'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200Shipping'NonNullable :: GetCustomersCustomerResponseBody200Shipping'NonNullable
mkGetCustomersCustomerResponseBody200Shipping'NonNullable =
  GetCustomersCustomerResponseBody200Shipping'NonNullable
    { getCustomersCustomerResponseBody200Shipping'NonNullableAddress = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Shipping'NonNullableCarrier = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Shipping'NonNullableName = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Shipping'NonNullablePhone = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Shipping'NonNullableTrackingNumber = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources@ in the specification.
--
-- The customer\'s payment sources, if any.
data GetCustomersCustomerResponseBody200Sources' = GetCustomersCustomerResponseBody200Sources'
  { -- | data: Details about each object.
    getCustomersCustomerResponseBody200Sources'Data :: ([GetCustomersCustomerResponseBody200Sources'Data']),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getCustomersCustomerResponseBody200Sources'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Sources'" (\obj -> ((GHC.Base.pure GetCustomersCustomerResponseBody200Sources' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetCustomersCustomerResponseBody200Sources'' with all required fields.
mkGetCustomersCustomerResponseBody200Sources' ::
  -- | 'getCustomersCustomerResponseBody200Sources'Data'
  [GetCustomersCustomerResponseBody200Sources'Data'] ->
  -- | 'getCustomersCustomerResponseBody200Sources'HasMore'
  GHC.Types.Bool ->
  -- | 'getCustomersCustomerResponseBody200Sources'Url'
  Data.Text.Internal.Text ->
  GetCustomersCustomerResponseBody200Sources'
mkGetCustomersCustomerResponseBody200Sources' getCustomersCustomerResponseBody200Sources'Data getCustomersCustomerResponseBody200Sources'HasMore getCustomersCustomerResponseBody200Sources'Url =
  GetCustomersCustomerResponseBody200Sources'
    { getCustomersCustomerResponseBody200Sources'Data = getCustomersCustomerResponseBody200Sources'Data,
      getCustomersCustomerResponseBody200Sources'HasMore = getCustomersCustomerResponseBody200Sources'HasMore,
      getCustomersCustomerResponseBody200Sources'Url = getCustomersCustomerResponseBody200Sources'Url
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf@ in the specification.
data GetCustomersCustomerResponseBody200Sources'Data' = GetCustomersCustomerResponseBody200Sources'Data'
  { -- | account: The ID of the account that the bank account is associated with.
    getCustomersCustomerResponseBody200Sources'Data'Account :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableVariants)),
    -- | account_holder_name: The name of the person or business that owns the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AccountHolderName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | account_holder_type: The type of entity that holds the account. This can be either \`individual\` or \`company\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AccountHolderType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | account_type: The bank account type. This can only be \`checking\` or \`savings\` in most countries. In Japan, this can only be \`futsu\` or \`toza\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AccountType :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | ach_credit_transfer
    getCustomersCustomerResponseBody200Sources'Data'AchCreditTransfer :: (GHC.Maybe.Maybe SourceTypeAchCreditTransfer),
    -- | ach_debit
    getCustomersCustomerResponseBody200Sources'Data'AchDebit :: (GHC.Maybe.Maybe SourceTypeAchDebit),
    -- | acss_debit
    getCustomersCustomerResponseBody200Sources'Data'AcssDebit :: (GHC.Maybe.Maybe SourceTypeAcssDebit),
    -- | active: True when this bitcoin receiver has received a non-zero amount of bitcoin.
    getCustomersCustomerResponseBody200Sources'Data'Active :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | address_city: City\/District\/Suburb\/Town\/Village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_country: Billing address country, if provided when creating card.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line1: Address line 1 (Street address\/PO Box\/Company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line1_check: If \`address_line1\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressLine1Check :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_line2: Address line 2 (Apartment\/Suite\/Unit\/Building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_state: State\/County\/Province\/Region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_zip: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressZip :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | address_zip_check: If \`address_zip\` was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'AddressZipCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | alipay
    getCustomersCustomerResponseBody200Sources'Data'Alipay :: (GHC.Maybe.Maybe SourceTypeAlipay),
    -- | amount: The amount of \`currency\` that you are collecting as payment.
    getCustomersCustomerResponseBody200Sources'Data'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | amount_received: The amount of \`currency\` to which \`bitcoin_amount_received\` has been converted.
    getCustomersCustomerResponseBody200Sources'Data'AmountReceived :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | au_becs_debit
    getCustomersCustomerResponseBody200Sources'Data'AuBecsDebit :: (GHC.Maybe.Maybe SourceTypeAuBecsDebit),
    -- | available_payout_methods: A set of available payout methods for this bank account. Only values from this set should be passed as the \`method\` when creating a payout.
    getCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable ([GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullable]))),
    -- | bancontact
    getCustomersCustomerResponseBody200Sources'Data'Bancontact :: (GHC.Maybe.Maybe SourceTypeBancontact),
    -- | bank_name: Name of the bank associated with the routing number (e.g., \`WELLS FARGO\`).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'BankName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | bitcoin_amount: The amount of bitcoin that the customer should send to fill the receiver. The \`bitcoin_amount\` is denominated in Satoshi: there are 10^8 Satoshi in one bitcoin.
    getCustomersCustomerResponseBody200Sources'Data'BitcoinAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | bitcoin_amount_received: The amount of bitcoin that has been sent by the customer to this receiver.
    getCustomersCustomerResponseBody200Sources'Data'BitcoinAmountReceived :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | bitcoin_uri: This URI can be displayed to the customer as a clickable link (to activate their bitcoin client) or as a QR code (for mobile wallets).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'BitcoinUri :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | brand: Card brand. Can be \`American Express\`, \`Diners Club\`, \`Discover\`, \`JCB\`, \`MasterCard\`, \`UnionPay\`, \`Visa\`, or \`Unknown\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Brand :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | card
    getCustomersCustomerResponseBody200Sources'Data'Card :: (GHC.Maybe.Maybe SourceTypeCard),
    -- | card_present
    getCustomersCustomerResponseBody200Sources'Data'CardPresent :: (GHC.Maybe.Maybe SourceTypeCardPresent),
    -- | client_secret: The client secret of the source. Used for client-side retrieval using a publishable key.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'ClientSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | code_verification:
    getCustomersCustomerResponseBody200Sources'Data'CodeVerification :: (GHC.Maybe.Maybe SourceCodeVerificationFlow),
    -- | country: Two-letter ISO code representing the country the bank account is located in.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | created: Time at which the object was created. Measured in seconds since the Unix epoch.
    getCustomersCustomerResponseBody200Sources'Data'Created :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | currency: Three-letter [ISO code for the currency](https:\/\/stripe.com\/docs\/payouts) paid out to the bank account.
    getCustomersCustomerResponseBody200Sources'Data'Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | customer: The ID of the customer associated with this Alipay Account.
    getCustomersCustomerResponseBody200Sources'Data'Customer :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableVariants)),
    -- | cvc_check: If a CVC was provided, results of the check: \`pass\`, \`fail\`, \`unavailable\`, or \`unchecked\`. A result of unchecked indicates that CVC was provided but hasn\'t been checked yet. Checks are typically performed when attaching a card to a Customer object, or when creating a charge. For more details, see [Check if a card is valid without a charge](https:\/\/support.stripe.com\/questions\/check-if-a-card-is-valid-without-a-charge).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'CvcCheck :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | default_for_currency: Whether this bank account is the default external account for its currency.
    getCustomersCustomerResponseBody200Sources'Data'DefaultForCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Description :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | dynamic_last4: (For tokenized numbers only.) The last four digits of the device account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'DynamicLast4 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | email: The customer\'s email address, set by the API call that creates the receiver.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Email :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | eps
    getCustomersCustomerResponseBody200Sources'Data'Eps :: (GHC.Maybe.Maybe SourceTypeEps),
    -- | exp_month: Two-digit number representing the card\'s expiration month.
    getCustomersCustomerResponseBody200Sources'Data'ExpMonth :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | exp_year: Four-digit number representing the card\'s expiration year.
    getCustomersCustomerResponseBody200Sources'Data'ExpYear :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | filled: This flag is initially false and updates to true when the customer sends the \`bitcoin_amount\` to this receiver.
    getCustomersCustomerResponseBody200Sources'Data'Filled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | fingerprint: Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Fingerprint :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flow: The authentication \`flow\` of the source. \`flow\` is one of \`redirect\`, \`receiver\`, \`code_verification\`, \`none\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Flow :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | funding: Card funding type. Can be \`credit\`, \`debit\`, \`prepaid\`, or \`unknown\`.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Funding :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | giropay
    getCustomersCustomerResponseBody200Sources'Data'Giropay :: (GHC.Maybe.Maybe SourceTypeGiropay),
    -- | id: Unique identifier for the object.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Id :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | ideal
    getCustomersCustomerResponseBody200Sources'Data'Ideal :: (GHC.Maybe.Maybe SourceTypeIdeal),
    -- | inbound_address: A bitcoin address that is specific to this receiver. The customer can send bitcoin to this address to fill the receiver.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'InboundAddress :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | klarna
    getCustomersCustomerResponseBody200Sources'Data'Klarna :: (GHC.Maybe.Maybe SourceTypeKlarna),
    -- | last4: The last four digits of the bank account number.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Last4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | livemode: Has the value \`true\` if the object exists in live mode or the value \`false\` if the object exists in test mode.
    getCustomersCustomerResponseBody200Sources'Data'Livemode :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    getCustomersCustomerResponseBody200Sources'Data'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | multibanco
    getCustomersCustomerResponseBody200Sources'Data'Multibanco :: (GHC.Maybe.Maybe SourceTypeMultibanco),
    -- | name: Cardholder name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Name :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | object: String representing the object\'s type. Objects of the same type share the same value.
    getCustomersCustomerResponseBody200Sources'Data'Object :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Sources'Data'Object'),
    -- | owner: Information about the owner of the payment instrument that may be used or required by particular source types.
    getCustomersCustomerResponseBody200Sources'Data'Owner :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable)),
    -- | p24
    getCustomersCustomerResponseBody200Sources'Data'P24 :: (GHC.Maybe.Maybe SourceTypeP24),
    -- | payment: The ID of the payment created from the receiver, if any. Hidden when viewing the receiver with a publishable key.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Payment :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | payment_amount: If the Alipay account object is not reusable, the exact amount that you can create a charge for.
    getCustomersCustomerResponseBody200Sources'Data'PaymentAmount :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Int)),
    -- | payment_currency: If the Alipay account object is not reusable, the exact currency that you can create a charge for.
    getCustomersCustomerResponseBody200Sources'Data'PaymentCurrency :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | receiver:
    getCustomersCustomerResponseBody200Sources'Data'Receiver :: (GHC.Maybe.Maybe SourceReceiverFlow),
    -- | recipient: The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
    getCustomersCustomerResponseBody200Sources'Data'Recipient :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableVariants)),
    -- | redirect:
    getCustomersCustomerResponseBody200Sources'Data'Redirect :: (GHC.Maybe.Maybe SourceRedirectFlow),
    -- | refund_address: The refund address of this bitcoin receiver.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'RefundAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | reusable: True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.
    getCustomersCustomerResponseBody200Sources'Data'Reusable :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | routing_number: The routing transit number for the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'RoutingNumber :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | sepa_debit
    getCustomersCustomerResponseBody200Sources'Data'SepaDebit :: (GHC.Maybe.Maybe SourceTypeSepaDebit),
    -- | sofort
    getCustomersCustomerResponseBody200Sources'Data'Sofort :: (GHC.Maybe.Maybe SourceTypeSofort),
    -- | source_order:
    getCustomersCustomerResponseBody200Sources'Data'SourceOrder :: (GHC.Maybe.Maybe SourceOrder),
    -- | statement_descriptor: Extra information about a source. This will appear on your customer\'s statement every time you charge the source.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'StatementDescriptor :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | status: For bank accounts, possible values are \`new\`, \`validated\`, \`verified\`, \`verification_failed\`, or \`errored\`. A bank account that hasn\'t had any activity or validation performed is \`new\`. If Stripe can determine that the bank account exists, its status will be \`validated\`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be \`verified\`. If the verification failed for any reason, such as microdeposit failure, the status will be \`verification_failed\`. If a transfer sent to this bank account fails, we\'ll set the status to \`errored\` and will not continue to send transfers until the bank details are updated.
    --
    -- For external accounts, possible values are \`new\` and \`errored\`. Validations aren\'t run against external accounts because they\'re only used for payouts. This means the other statuses don\'t apply. If a transfer fails, the status is set to \`errored\` and transfers are stopped until account details are updated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Status :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | three_d_secure
    getCustomersCustomerResponseBody200Sources'Data'ThreeDSecure :: (GHC.Maybe.Maybe SourceTypeThreeDSecure),
    -- | tokenization_method: If the card number is tokenized, this is the method that was used. Can be \`android_pay\` (includes Google Pay), \`apple_pay\`, \`masterpass\`, \`visa_checkout\`, or null.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'TokenizationMethod :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | transactions: A list with one entry for each time that the customer sent bitcoin to the receiver. Hidden when viewing the receiver with a publishable key.
    getCustomersCustomerResponseBody200Sources'Data'Transactions :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Sources'Data'Transactions'),
    -- | type: The \`type\` of the source. The \`type\` is a payment method, one of \`ach_credit_transfer\`, \`ach_debit\`, \`alipay\`, \`bancontact\`, \`card\`, \`card_present\`, \`eps\`, \`giropay\`, \`ideal\`, \`multibanco\`, \`klarna\`, \`p24\`, \`sepa_debit\`, \`sofort\`, \`three_d_secure\`, or \`wechat\`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https:\/\/stripe.com\/docs\/sources) used.
    getCustomersCustomerResponseBody200Sources'Data'Type :: (GHC.Maybe.Maybe GetCustomersCustomerResponseBody200Sources'Data'Type'),
    -- | uncaptured_funds: This receiver contains uncaptured funds that can be used for a payment or refunded.
    getCustomersCustomerResponseBody200Sources'Data'UncapturedFunds :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | usage: Either \`reusable\` or \`single_use\`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Usage :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | used: Whether this Alipay account object has ever been used for a payment.
    getCustomersCustomerResponseBody200Sources'Data'Used :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | used_for_payment: Indicate if this source is used for payment.
    getCustomersCustomerResponseBody200Sources'Data'UsedForPayment :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GHC.Types.Bool)),
    -- | username: The username for the Alipay account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Username :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | wechat
    getCustomersCustomerResponseBody200Sources'Data'Wechat :: (GHC.Maybe.Maybe SourceTypeWechat)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Active obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_received" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BitcoinAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount_received" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BitcoinAmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_uri" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BitcoinUri obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filled" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Filled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'InboundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Payment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_amount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'PaymentAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'PaymentCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'RefundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reusable" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Reusable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transactions" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Transactions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncaptured_funds" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'UncapturedFunds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Used obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used_for_payment" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'UsedForPayment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Username obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Wechat obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Account obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AccountHolderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AccountType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_credit_transfer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AchCreditTransfer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AchDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Active obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line1_check" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressLine1Check obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressState obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressZip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_zip_check" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AddressZipCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Alipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount_received" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("available_payout_methods" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Bancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BankName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BitcoinAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_amount_received" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BitcoinAmountReceived obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bitcoin_uri" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'BitcoinUri obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("brand" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Brand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Card obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_present" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'CardPresent obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("code_verification" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'CodeVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("created" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Created obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("customer" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Customer obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_check" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'CvcCheck obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_for_currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'DefaultForCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dynamic_last4" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'DynamicLast4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Eps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_month" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ExpMonth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("exp_year" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ExpYear obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filled" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Filled obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fingerprint" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Fingerprint obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flow" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Flow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("funding" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Funding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Giropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Ideal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'InboundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Klarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last4" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Last4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("livemode" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Livemode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("multibanco" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Multibanco obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owner" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'P24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Payment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_amount" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'PaymentAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payment_currency" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'PaymentCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receiver" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Receiver obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("recipient" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Recipient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("redirect" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Redirect obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refund_address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'RefundAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reusable" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Reusable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'RoutingNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'SepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Sofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("source_order" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'SourceOrder obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("three_d_secure" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'ThreeDSecure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tokenization_method" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'TokenizationMethod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transactions" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Transactions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("uncaptured_funds" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'UncapturedFunds obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("usage" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Usage obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Used obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("used_for_payment" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'UsedForPayment obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("username" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Username obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Wechat obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Sources'Data'" (\obj -> (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((GHC.Base.pure GetCustomersCustomerResponseBody200Sources'Data' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_credit_transfer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line1_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_zip_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount_received")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "available_payout_methods")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bitcoin_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bitcoin_amount_received")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bitcoin_uri")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "brand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_present")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "code_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "created")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "customer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_check")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_for_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dynamic_last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "exp_year")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "filled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fingerprint")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "funding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "livemode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "multibanco")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owner")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payment_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receiver")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "recipient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "redirect")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refund_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reusable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "source_order")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "three_d_secure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tokenization_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transactions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "uncaptured_funds")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "usage")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "used")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "used_for_payment")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "username")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat"))

-- | Create a new 'GetCustomersCustomerResponseBody200Sources'Data'' with all required fields.
mkGetCustomersCustomerResponseBody200Sources'Data' :: GetCustomersCustomerResponseBody200Sources'Data'
mkGetCustomersCustomerResponseBody200Sources'Data' =
  GetCustomersCustomerResponseBody200Sources'Data'
    { getCustomersCustomerResponseBody200Sources'Data'Account = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AccountHolderName = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AccountHolderType = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AccountType = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AchCreditTransfer = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AchDebit = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AcssDebit = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Active = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressCity = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressCountry = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressLine1 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressLine1Check = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressLine2 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressState = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressZip = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AddressZipCheck = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Alipay = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Amount = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AmountReceived = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AuBecsDebit = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Bancontact = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'BankName = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'BitcoinAmount = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'BitcoinAmountReceived = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'BitcoinUri = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Brand = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Card = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'CardPresent = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'ClientSecret = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'CodeVerification = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Country = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Created = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Currency = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Customer = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'CvcCheck = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'DefaultForCurrency = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Description = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'DynamicLast4 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Email = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Eps = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'ExpMonth = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'ExpYear = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Filled = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Fingerprint = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Flow = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Funding = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Giropay = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Id = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Ideal = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'InboundAddress = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Klarna = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Last4 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Livemode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Metadata = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Multibanco = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Name = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Object = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'P24 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Payment = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'PaymentAmount = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'PaymentCurrency = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Receiver = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Recipient = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Redirect = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'RefundAddress = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Reusable = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'RoutingNumber = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'SepaDebit = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Sofort = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'SourceOrder = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'StatementDescriptor = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Status = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'ThreeDSecure = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'TokenizationMethod = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Transactions = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Type = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'UncapturedFunds = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Usage = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Used = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'UsedForPayment = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Username = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Wechat = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.account.anyOf@ in the specification.
--
-- The ID of the account that the bank account is associated with.
data GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableVariants
  = GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableAccount Account
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableAccount a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Sources'Data'Account'NonNullableAccount Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.available_payout_methods.items@ in the specification.
data GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"instant"@
    GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableEnumInstant
  | -- | Represents the JSON value @"standard"@
    GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableEnumStandard
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullable where
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableOther val) = val
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableEnumInstant) = "instant"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableEnumStandard) = "standard"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "instant" -> GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableEnumInstant
            | val GHC.Classes.== "standard" -> GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableEnumStandard
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200Sources'Data'AvailablePayoutMethods'NonNullableOther val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.customer.anyOf@ in the specification.
--
-- The ID of the customer associated with this Alipay Account.
data GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableVariants
  = GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableCustomer Customer
  | GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableDeletedCustomer DeletedCustomer
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableCustomer a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableDeletedCustomer a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Sources'Data'Customer'NonNullableDeletedCustomer Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched")) of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.object@ in the specification.
--
-- String representing the object\'s type. Objects of the same type share the same value.
data GetCustomersCustomerResponseBody200Sources'Data'Object'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200Sources'Data'Object'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200Sources'Data'Object'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"alipay_account"@
    GetCustomersCustomerResponseBody200Sources'Data'Object'EnumAlipayAccount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Object' where
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Object'Other val) = val
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Object'EnumAlipayAccount) = "alipay_account"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Object' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "alipay_account" -> GetCustomersCustomerResponseBody200Sources'Data'Object'EnumAlipayAccount
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200Sources'Data'Object'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.owner.anyOf@ in the specification.
--
-- Information about the owner of the payment instrument that may be used or required by particular source types.
data GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable = GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable
  { -- | address: Owner\'s address.
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable)),
    -- | email: Owner\'s email address.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | name: Owner\'s full name.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | phone: Owner\'s phone number (including extension).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullablePhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_address: Verified owner\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable)),
    -- | verified_email: Verified owner\'s email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedEmail :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_name: Verified owner\'s full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedName :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | verified_phone: Verified owner\'s phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedPhone :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullablePhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_address" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_email" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_name" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verified_phone" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedPhone obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable" (\obj -> (((((((GHC.Base.pure GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verified_phone"))

-- | Create a new 'GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable :: GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable
mkGetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable =
  GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullable
    { getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableEmail = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableName = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullablePhone = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedEmail = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedName = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedPhone = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.owner.anyOf.properties.address.anyOf@ in the specification.
--
-- Owner\\\'s address.
data GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable = GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable" (\obj -> (((((GHC.Base.pure GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable :: GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable
mkGetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable =
  GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullable
    { getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCity = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableCountry = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.owner.anyOf.properties.verified_address.anyOf@ in the specification.
--
-- Verified owner\\\'s address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.
data GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable = GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable
  { -- | city: City, district, suburb, town, or village.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCity :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | country: Two-letter country code ([ISO 3166-1 alpha-2](https:\/\/en.wikipedia.org\/wiki\/ISO_3166-1_alpha-2)).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCountry :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line1: Address line 1 (e.g., street, PO Box, or company name).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine1 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | line2: Address line 2 (e.g., apartment, suite, unit, or building).
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine2 :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | postal_code: ZIP or postal code.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullablePostalCode :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text)),
    -- | state: State, county, province, or region.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableState :: (GHC.Maybe.Maybe (StripeAPI.Common.Nullable Data.Text.Internal.Text))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullablePostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableState obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable" (\obj -> (((((GHC.Base.pure GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable' with all required fields.
mkGetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable :: GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable
mkGetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable =
  GetCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullable
    { getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCity = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableCountry = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine1 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableLine2 = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullablePostalCode = GHC.Maybe.Nothing,
      getCustomersCustomerResponseBody200Sources'Data'Owner'NonNullableVerifiedAddress'NonNullableState = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.recipient.anyOf@ in the specification.
--
-- The recipient that this card belongs to. This attribute will not be in the card object if the card belongs to a customer or account instead.
data GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableVariants
  = GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableRecipient Recipient
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableRecipient a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200Sources'Data'Recipient'NonNullableRecipient Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.transactions@ in the specification.
--
-- A list with one entry for each time that the customer sent bitcoin to the receiver. Hidden when viewing the receiver with a publishable key.
data GetCustomersCustomerResponseBody200Sources'Data'Transactions' = GetCustomersCustomerResponseBody200Sources'Data'Transactions'
  { -- | data: Details about each object.
    getCustomersCustomerResponseBody200Sources'Data'Transactions'Data :: ([BitcoinTransaction]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Sources'Data'Transactions'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Transactions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data'Transactions'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data'Transactions'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data'Transactions'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Sources'Data'Transactions'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Transactions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Sources'Data'Transactions'" (\obj -> ((GHC.Base.pure GetCustomersCustomerResponseBody200Sources'Data'Transactions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetCustomersCustomerResponseBody200Sources'Data'Transactions'' with all required fields.
mkGetCustomersCustomerResponseBody200Sources'Data'Transactions' ::
  -- | 'getCustomersCustomerResponseBody200Sources'Data'Transactions'Data'
  [BitcoinTransaction] ->
  -- | 'getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore'
  GHC.Types.Bool ->
  -- | 'getCustomersCustomerResponseBody200Sources'Data'Transactions'Url'
  Data.Text.Internal.Text ->
  GetCustomersCustomerResponseBody200Sources'Data'Transactions'
mkGetCustomersCustomerResponseBody200Sources'Data'Transactions' getCustomersCustomerResponseBody200Sources'Data'Transactions'Data getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore getCustomersCustomerResponseBody200Sources'Data'Transactions'Url =
  GetCustomersCustomerResponseBody200Sources'Data'Transactions'
    { getCustomersCustomerResponseBody200Sources'Data'Transactions'Data = getCustomersCustomerResponseBody200Sources'Data'Transactions'Data,
      getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore = getCustomersCustomerResponseBody200Sources'Data'Transactions'HasMore,
      getCustomersCustomerResponseBody200Sources'Data'Transactions'Url = getCustomersCustomerResponseBody200Sources'Data'Transactions'Url
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.sources.properties.data.items.anyOf.properties.type@ in the specification.
--
-- The \`type\` of the source. The \`type\` is a payment method, one of \`ach_credit_transfer\`, \`ach_debit\`, \`alipay\`, \`bancontact\`, \`card\`, \`card_present\`, \`eps\`, \`giropay\`, \`ideal\`, \`multibanco\`, \`klarna\`, \`p24\`, \`sepa_debit\`, \`sofort\`, \`three_d_secure\`, or \`wechat\`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https:\/\/stripe.com\/docs\/sources) used.
data GetCustomersCustomerResponseBody200Sources'Data'Type'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200Sources'Data'Type'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200Sources'Data'Type'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"ach_credit_transfer"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAchCreditTransfer
  | -- | Represents the JSON value @"ach_debit"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAchDebit
  | -- | Represents the JSON value @"acss_debit"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAcssDebit
  | -- | Represents the JSON value @"alipay"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAlipay
  | -- | Represents the JSON value @"au_becs_debit"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAuBecsDebit
  | -- | Represents the JSON value @"bancontact"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumBancontact
  | -- | Represents the JSON value @"card"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumCard
  | -- | Represents the JSON value @"card_present"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumCardPresent
  | -- | Represents the JSON value @"eps"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumEps
  | -- | Represents the JSON value @"giropay"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumGiropay
  | -- | Represents the JSON value @"ideal"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumIdeal
  | -- | Represents the JSON value @"klarna"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumKlarna
  | -- | Represents the JSON value @"multibanco"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumMultibanco
  | -- | Represents the JSON value @"p24"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumP24
  | -- | Represents the JSON value @"sepa_debit"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumSepaDebit
  | -- | Represents the JSON value @"sofort"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumSofort
  | -- | Represents the JSON value @"three_d_secure"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumThreeDSecure
  | -- | Represents the JSON value @"wechat"@
    GetCustomersCustomerResponseBody200Sources'Data'Type'EnumWechat
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Sources'Data'Type' where
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'Other val) = val
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAchCreditTransfer) = "ach_credit_transfer"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAchDebit) = "ach_debit"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAcssDebit) = "acss_debit"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAlipay) = "alipay"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAuBecsDebit) = "au_becs_debit"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumBancontact) = "bancontact"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumCard) = "card"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumCardPresent) = "card_present"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumEps) = "eps"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumGiropay) = "giropay"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumIdeal) = "ideal"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumKlarna) = "klarna"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumMultibanco) = "multibanco"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumP24) = "p24"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumSepaDebit) = "sepa_debit"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumSofort) = "sofort"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumThreeDSecure) = "three_d_secure"
  toJSON (GetCustomersCustomerResponseBody200Sources'Data'Type'EnumWechat) = "wechat"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Sources'Data'Type' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "ach_credit_transfer" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAchCreditTransfer
            | val GHC.Classes.== "ach_debit" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAchDebit
            | val GHC.Classes.== "acss_debit" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAcssDebit
            | val GHC.Classes.== "alipay" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAlipay
            | val GHC.Classes.== "au_becs_debit" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumAuBecsDebit
            | val GHC.Classes.== "bancontact" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumBancontact
            | val GHC.Classes.== "card" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumCard
            | val GHC.Classes.== "card_present" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumCardPresent
            | val GHC.Classes.== "eps" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumEps
            | val GHC.Classes.== "giropay" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumGiropay
            | val GHC.Classes.== "ideal" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumIdeal
            | val GHC.Classes.== "klarna" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumKlarna
            | val GHC.Classes.== "multibanco" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumMultibanco
            | val GHC.Classes.== "p24" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumP24
            | val GHC.Classes.== "sepa_debit" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumSepaDebit
            | val GHC.Classes.== "sofort" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumSofort
            | val GHC.Classes.== "three_d_secure" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumThreeDSecure
            | val GHC.Classes.== "wechat" -> GetCustomersCustomerResponseBody200Sources'Data'Type'EnumWechat
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200Sources'Data'Type'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.subscriptions@ in the specification.
--
-- The customer\'s current subscriptions, if any.
data GetCustomersCustomerResponseBody200Subscriptions' = GetCustomersCustomerResponseBody200Subscriptions'
  { -- | data: Details about each object.
    getCustomersCustomerResponseBody200Subscriptions'Data :: ([Subscription]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getCustomersCustomerResponseBody200Subscriptions'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200Subscriptions'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200Subscriptions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Subscriptions'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Subscriptions'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Subscriptions'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Subscriptions'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Subscriptions'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200Subscriptions'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200Subscriptions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200Subscriptions'" (\obj -> ((GHC.Base.pure GetCustomersCustomerResponseBody200Subscriptions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetCustomersCustomerResponseBody200Subscriptions'' with all required fields.
mkGetCustomersCustomerResponseBody200Subscriptions' ::
  -- | 'getCustomersCustomerResponseBody200Subscriptions'Data'
  [Subscription] ->
  -- | 'getCustomersCustomerResponseBody200Subscriptions'HasMore'
  GHC.Types.Bool ->
  -- | 'getCustomersCustomerResponseBody200Subscriptions'Url'
  Data.Text.Internal.Text ->
  GetCustomersCustomerResponseBody200Subscriptions'
mkGetCustomersCustomerResponseBody200Subscriptions' getCustomersCustomerResponseBody200Subscriptions'Data getCustomersCustomerResponseBody200Subscriptions'HasMore getCustomersCustomerResponseBody200Subscriptions'Url =
  GetCustomersCustomerResponseBody200Subscriptions'
    { getCustomersCustomerResponseBody200Subscriptions'Data = getCustomersCustomerResponseBody200Subscriptions'Data,
      getCustomersCustomerResponseBody200Subscriptions'HasMore = getCustomersCustomerResponseBody200Subscriptions'HasMore,
      getCustomersCustomerResponseBody200Subscriptions'Url = getCustomersCustomerResponseBody200Subscriptions'Url
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.tax_exempt@ in the specification.
--
-- Describes the customer\'s tax exemption status. One of \`none\`, \`exempt\`, or \`reverse\`. When set to \`reverse\`, invoice and receipt PDFs include the text **\"Reverse charge\"**.
data GetCustomersCustomerResponseBody200TaxExempt'NonNullable
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerResponseBody200TaxExempt'NonNullableOther Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerResponseBody200TaxExempt'NonNullableTyped Data.Text.Internal.Text
  | -- | Represents the JSON value @"exempt"@
    GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumExempt
  | -- | Represents the JSON value @"none"@
    GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumNone
  | -- | Represents the JSON value @"reverse"@
    GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumReverse
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200TaxExempt'NonNullable where
  toJSON (GetCustomersCustomerResponseBody200TaxExempt'NonNullableOther val) = val
  toJSON (GetCustomersCustomerResponseBody200TaxExempt'NonNullableTyped val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumExempt) = "exempt"
  toJSON (GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumNone) = "none"
  toJSON (GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumReverse) = "reverse"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200TaxExempt'NonNullable where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "exempt" -> GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumExempt
            | val GHC.Classes.== "none" -> GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumNone
            | val GHC.Classes.== "reverse" -> GetCustomersCustomerResponseBody200TaxExempt'NonNullableEnumReverse
            | GHC.Base.otherwise -> GetCustomersCustomerResponseBody200TaxExempt'NonNullableOther val
      )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.tax_ids@ in the specification.
--
-- The customer\'s tax IDs.
data GetCustomersCustomerResponseBody200TaxIds' = GetCustomersCustomerResponseBody200TaxIds'
  { -- | data: Details about each object.
    getCustomersCustomerResponseBody200TaxIds'Data :: ([TaxId]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getCustomersCustomerResponseBody200TaxIds'HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerResponseBody200TaxIds'Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200TaxIds' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200TaxIds'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200TaxIds'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200TaxIds'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200TaxIds'Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200TaxIds'HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerResponseBody200TaxIds'Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200TaxIds' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerResponseBody200TaxIds'" (\obj -> ((GHC.Base.pure GetCustomersCustomerResponseBody200TaxIds' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetCustomersCustomerResponseBody200TaxIds'' with all required fields.
mkGetCustomersCustomerResponseBody200TaxIds' ::
  -- | 'getCustomersCustomerResponseBody200TaxIds'Data'
  [TaxId] ->
  -- | 'getCustomersCustomerResponseBody200TaxIds'HasMore'
  GHC.Types.Bool ->
  -- | 'getCustomersCustomerResponseBody200TaxIds'Url'
  Data.Text.Internal.Text ->
  GetCustomersCustomerResponseBody200TaxIds'
mkGetCustomersCustomerResponseBody200TaxIds' getCustomersCustomerResponseBody200TaxIds'Data getCustomersCustomerResponseBody200TaxIds'HasMore getCustomersCustomerResponseBody200TaxIds'Url =
  GetCustomersCustomerResponseBody200TaxIds'
    { getCustomersCustomerResponseBody200TaxIds'Data = getCustomersCustomerResponseBody200TaxIds'Data,
      getCustomersCustomerResponseBody200TaxIds'HasMore = getCustomersCustomerResponseBody200TaxIds'HasMore,
      getCustomersCustomerResponseBody200TaxIds'Url = getCustomersCustomerResponseBody200TaxIds'Url
    }

-- | Defines the oneOf schema located at @paths.\/v1\/customers\/{customer}.GET.responses.200.content.application\/json.schema.anyOf.properties.test_clock.anyOf@ in the specification.
--
-- ID of the test clock this customer belongs to.
data GetCustomersCustomerResponseBody200TestClock'NonNullableVariants
  = GetCustomersCustomerResponseBody200TestClock'NonNullableText Data.Text.Internal.Text
  | GetCustomersCustomerResponseBody200TestClock'NonNullableTestHelpers'testClock TestHelpers'testClock
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerResponseBody200TestClock'NonNullableVariants where
  toJSON (GetCustomersCustomerResponseBody200TestClock'NonNullableText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCustomersCustomerResponseBody200TestClock'NonNullableTestHelpers'testClock a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerResponseBody200TestClock'NonNullableVariants where
  parseJSON val = case (GetCustomersCustomerResponseBody200TestClock'NonNullableText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCustomersCustomerResponseBody200TestClock'NonNullableTestHelpers'testClock Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a
