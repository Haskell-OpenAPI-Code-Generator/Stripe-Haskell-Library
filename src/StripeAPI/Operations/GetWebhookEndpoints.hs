{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE DeriveGeneric #-}

-- | Contains the different functions to run the operation getWebhookEndpoints
module StripeAPI.Operations.GetWebhookEndpoints where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Generics
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > GET /v1/webhook_endpoints
-- 
-- \<p>Returns a list of your webhook endpoints.\<\/p>
getWebhookEndpoints :: forall m s . (StripeAPI.Common.MonadHTTP m, StripeAPI.Common.SecurityScheme s) => StripeAPI.Common.Configuration s  -- ^ The configuration to use in the request
  -> GHC.Maybe.Maybe Data.Text.Internal.Text                                                                                         -- ^ ending_before: A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list. | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe Data.Text.Internal.Text                                                                                         -- ^ expand: Specifies which fields in the response should be expanded.
  -> GHC.Maybe.Maybe GHC.Integer.Type.Integer                                                                                        -- ^ limit: A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
  -> GHC.Maybe.Maybe Data.Text.Internal.Text                                                                                         -- ^ starting_after: A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list. | Constraints: Maximum length of 5000
  -> GHC.Maybe.Maybe GetWebhookEndpointsRequestBody                                                                                  -- ^ The request body to send
  -> m (Data.Either.Either Network.HTTP.Client.Types.HttpException (Network.HTTP.Client.Types.Response GetWebhookEndpointsResponse)) -- ^ Monad containing the result of the operation
getWebhookEndpoints config
                    endingBefore
                    expand
                    limit
                    startingAfter
                    body = GHC.Base.fmap (GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either GetWebhookEndpointsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetWebhookEndpointsResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                           GetWebhookEndpointsResponseBody200)
                                                                                                                                                                                        | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetWebhookEndpointsResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                             Error)
                                                                                                                                                                                        | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0)) (StripeAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/v1/webhook_endpoints") ((Data.Text.pack ['e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'n',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'd',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'n',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'g',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             '_',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'b',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'f',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'o',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'r',
                                                                                                                                                                                                                                                                                                                                                                                                                                                             'e'],
                                                                                                                                                                                                                                                                                                                                                                                                                                             StripeAPI.Common.stringifyModel Data.Functor.<$> endingBefore) : ((Data.Text.pack ['e',
x',
p',
a',
n',
d'],
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              StripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['l',
i',
m',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         'i',
t'],
tripeAPI.Common.stringifyModel Data.Functor.<$> limit) : ((Data.Text.pack ['s',
t',
a',
r',
t',
i',
n',
g',

a',
f',
t',
e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   'r'],
tripeAPI.Common.stringifyModel Data.Functor.<$> startingAfter) : [])))) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | > GET /v1/webhook_endpoints
-- 
-- The same as 'getWebhookEndpoints' but returns the raw 'Data.ByteString.Char8.ByteString'
getWebhookEndpointsRaw :: forall m s . (StripeAPI.Common.MonadHTTP m,
                                        StripeAPI.Common.SecurityScheme s) =>
                          StripeAPI.Common.Configuration s ->
                          GHC.Maybe.Maybe Data.Text.Internal.Text ->
                          GHC.Maybe.Maybe Data.Text.Internal.Text ->
                          GHC.Maybe.Maybe GHC.Integer.Type.Integer ->
                          GHC.Maybe.Maybe Data.Text.Internal.Text ->
                          GHC.Maybe.Maybe GetWebhookEndpointsRequestBody ->
                          m (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
getWebhookEndpointsRaw config
                       endingBefore
                       expand
                       limit
                       startingAfter
                       body = GHC.Base.id (StripeAPI.Common.doBodyCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/v1/webhook_endpoints") ((Data.Text.pack ['e',
                                                                                                                                                                                                            'n',
                                                                                                                                                                                                            'd',
                                                                                                                                                                                                            'i',
                                                                                                                                                                                                            'n',
                                                                                                                                                                                                            'g',
                                                                                                                                                                                                            '_',
                                                                                                                                                                                                            'b',
                                                                                                                                                                                                            'e',
                                                                                                                                                                                                            'f',
                                                                                                                                                                                                            'o',
                                                                                                                                                                                                            'r',
                                                                                                                                                                                                            'e'],
                                                                                                                                                                                            StripeAPI.Common.stringifyModel Data.Functor.<$> endingBefore) : ((Data.Text.pack ['e',
                                                                                                                                                                                                                                                                             'x',
                                                                                                                                                                                                                                                                             'p',
                                                                                                                                                                                                                                                                             'a',
                                                                                                                                                                                                                                                                             'n',
                                                                                                                                                                                                                                                                             'd'],
                                                                                                                                                                                                                                                             StripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['l',
                                                                                                                                                                                                                                                                                                                                        'i',
                                                                                                                                                                                                                                                                                                                                        'm',
                                                                                                                                                                                                                                                                                                                                        'i',
                                                                                                                                                                                                                                                                                                                                        't'],
                                                                                                                                                                                                                                                                                                                        StripeAPI.Common.stringifyModel Data.Functor.<$> limit) : ((Data.Text.pack ['s',
                                                                                                                                                                                                                                                                                                                                                                                                  't',
                                                                                                                                                                                                                                                                                                                                                                                                  'a',
                                                                                                                                                                                                                                                                                                                                                                                                  'r',
                                                                                                                                                                                                                                                                                                                                                                                                  't',
                                                                                                                                                                                                                                                                                                                                                                                                  'i',
                                                                                                                                                                                                                                                                                                                                                                                                  'n',
                                                                                                                                                                                                                                                                                                                                                                                                  'g',
                                                                                                                                                                                                                                                                                                                                                                                                  '_',
                                                                                                                                                                                                                                                                                                                                                                                                  'a',
                                                                                                                                                                                                                                                                                                                                                                                                  'f',
                                                                                                                                                                                                                                                                                                                                                                                                  't',
                                                                                                                                                                                                                                                                                                                                                                                                  'e',
                                                                                                                                                                                                                                                                                                                                                                                                  'r'],
                                                                                                                                                                                                                                                                                                                                                                                  StripeAPI.Common.stringifyModel Data.Functor.<$> startingAfter) : [])))) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | > GET /v1/webhook_endpoints
-- 
-- Monadic version of 'getWebhookEndpoints' (use with 'StripeAPI.Common.runWithConfiguration')
getWebhookEndpointsM :: forall m s . (StripeAPI.Common.MonadHTTP m,
                                      StripeAPI.Common.SecurityScheme s) =>
                        GHC.Maybe.Maybe Data.Text.Internal.Text ->
                        GHC.Maybe.Maybe Data.Text.Internal.Text ->
                        GHC.Maybe.Maybe GHC.Integer.Type.Integer ->
                        GHC.Maybe.Maybe Data.Text.Internal.Text ->
                        GHC.Maybe.Maybe GetWebhookEndpointsRequestBody ->
                        Control.Monad.Trans.Reader.ReaderT (StripeAPI.Common.Configuration s)
                                                           m
                                                           (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                               (Network.HTTP.Client.Types.Response GetWebhookEndpointsResponse))
getWebhookEndpointsM endingBefore
                     expand
                     limit
                     startingAfter
                     body = GHC.Base.fmap (GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either GetWebhookEndpointsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> GetWebhookEndpointsResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                            GetWebhookEndpointsResponseBody200)
                                                                                                                                                                                         | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> GetWebhookEndpointsResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                              Error)
                                                                                                                                                                                         | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2)) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/v1/webhook_endpoints") ((Data.Text.pack ['e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'n',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'd',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'n',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'g',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        '_',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'b',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'e',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'f',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'o',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'r',
                                                                                                                                                                                                                                                                                                                                                                                                                                                        'e'],
                                                                                                                                                                                                                                                                                                                                                                                                                                        StripeAPI.Common.stringifyModel Data.Functor.<$> endingBefore) : ((Data.Text.pack ['e',
x',
p',
a',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         'n',
d'],
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         StripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['l',
i',
m',
i',
t'],
tripeAPI.Common.stringifyModel Data.Functor.<$> limit) : ((Data.Text.pack ['s',
t',
a',
r',
t',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              'i',
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              'n',
g',

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              'a',
f',
t',
e',
r'],
tripeAPI.Common.stringifyModel Data.Functor.<$> startingAfter) : [])))) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | > GET /v1/webhook_endpoints
-- 
-- Monadic version of 'getWebhookEndpointsRaw' (use with 'StripeAPI.Common.runWithConfiguration')
getWebhookEndpointsRawM :: forall m s . (StripeAPI.Common.MonadHTTP m,
                                         StripeAPI.Common.SecurityScheme s) =>
                           GHC.Maybe.Maybe Data.Text.Internal.Text ->
                           GHC.Maybe.Maybe Data.Text.Internal.Text ->
                           GHC.Maybe.Maybe GHC.Integer.Type.Integer ->
                           GHC.Maybe.Maybe Data.Text.Internal.Text ->
                           GHC.Maybe.Maybe GetWebhookEndpointsRequestBody ->
                           Control.Monad.Trans.Reader.ReaderT (StripeAPI.Common.Configuration s)
                                                              m
                                                              (Data.Either.Either Network.HTTP.Client.Types.HttpException
                                                                                  (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString))
getWebhookEndpointsRawM endingBefore
                        expand
                        limit
                        startingAfter
                        body = GHC.Base.id (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack "/v1/webhook_endpoints") ((Data.Text.pack ['e',
                                                                                                                                                                                                       'n',
                                                                                                                                                                                                       'd',
                                                                                                                                                                                                       'i',
                                                                                                                                                                                                       'n',
                                                                                                                                                                                                       'g',
                                                                                                                                                                                                       '_',
                                                                                                                                                                                                       'b',
                                                                                                                                                                                                       'e',
                                                                                                                                                                                                       'f',
                                                                                                                                                                                                       'o',
                                                                                                                                                                                                       'r',
                                                                                                                                                                                                       'e'],
                                                                                                                                                                                       StripeAPI.Common.stringifyModel Data.Functor.<$> endingBefore) : ((Data.Text.pack ['e',
                                                                                                                                                                                                                                                                        'x',
                                                                                                                                                                                                                                                                        'p',
                                                                                                                                                                                                                                                                        'a',
                                                                                                                                                                                                                                                                        'n',
                                                                                                                                                                                                                                                                        'd'],
                                                                                                                                                                                                                                                        StripeAPI.Common.stringifyModel Data.Functor.<$> expand) : ((Data.Text.pack ['l',
                                                                                                                                                                                                                                                                                                                                   'i',
                                                                                                                                                                                                                                                                                                                                   'm',
                                                                                                                                                                                                                                                                                                                                   'i',
                                                                                                                                                                                                                                                                                                                                   't'],
                                                                                                                                                                                                                                                                                                                   StripeAPI.Common.stringifyModel Data.Functor.<$> limit) : ((Data.Text.pack ['s',
                                                                                                                                                                                                                                                                                                                                                                                             't',
                                                                                                                                                                                                                                                                                                                                                                                             'a',
                                                                                                                                                                                                                                                                                                                                                                                             'r',
                                                                                                                                                                                                                                                                                                                                                                                             't',
                                                                                                                                                                                                                                                                                                                                                                                             'i',
                                                                                                                                                                                                                                                                                                                                                                                             'n',
                                                                                                                                                                                                                                                                                                                                                                                             'g',
                                                                                                                                                                                                                                                                                                                                                                                             '_',
                                                                                                                                                                                                                                                                                                                                                                                             'a',
                                                                                                                                                                                                                                                                                                                                                                                             'f',
                                                                                                                                                                                                                                                                                                                                                                                             't',
                                                                                                                                                                                                                                                                                                                                                                                             'e',
                                                                                                                                                                                                                                                                                                                                                                                             'r'],
                                                                                                                                                                                                                                                                                                                                                                             StripeAPI.Common.stringifyModel Data.Functor.<$> startingAfter) : [])))) body StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the data type for the schema getWebhookEndpointsRequestBody
-- 
-- 
data GetWebhookEndpointsRequestBody = GetWebhookEndpointsRequestBody {
  
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GetWebhookEndpointsRequestBody
    where toJSON obj = Data.Aeson.object []
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "string" ("string" :: GHC.Base.String))
instance Data.Aeson.Types.FromJSON.FromJSON GetWebhookEndpointsRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetWebhookEndpointsRequestBody" (\obj -> GHC.Base.pure GetWebhookEndpointsRequestBody)
-- | Represents a response of the operation 'getWebhookEndpoints'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetWebhookEndpointsResponseError' is used.
data GetWebhookEndpointsResponse =                                     
   GetWebhookEndpointsResponseError GHC.Base.String                    -- ^ Means either no matching case available or a parse error
  | GetWebhookEndpointsResponse200 GetWebhookEndpointsResponseBody200  -- ^ Successful response.
  | GetWebhookEndpointsResponseDefault Error                           -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the data type for the schema GetWebhookEndpointsResponseBody200
-- 
-- 
data GetWebhookEndpointsResponseBody200 = GetWebhookEndpointsResponseBody200 {
  -- | data
  getWebhookEndpointsResponseBody200Data :: ([] WebhookEndpoint)
  -- | has_more: True if this list has another page of items after this one that can be fetched.
  , getWebhookEndpointsResponseBody200HasMore :: GHC.Types.Bool
  -- | object: String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
  , getWebhookEndpointsResponseBody200Object :: GetWebhookEndpointsResponseBody200Object'
  -- | url: The URL where this list can be accessed.
  -- 
  -- Constraints:
  -- 
  -- * Maximum length of 5000
  -- * Must match pattern \'^\/v1\/webhook_endpoints\'
  , getWebhookEndpointsResponseBody200Url :: Data.Text.Internal.Text
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.ToJSON GetWebhookEndpointsResponseBody200
    where toJSON obj = Data.Aeson.object ((Data.Aeson..=) "data" (getWebhookEndpointsResponseBody200Data obj) : (Data.Aeson..=) "has_more" (getWebhookEndpointsResponseBody200HasMore obj) : (Data.Aeson..=) "object" (getWebhookEndpointsResponseBody200Object obj) : (Data.Aeson..=) "url" (getWebhookEndpointsResponseBody200Url obj) : [])
          toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "data" (getWebhookEndpointsResponseBody200Data obj) GHC.Base.<> ((Data.Aeson..=) "has_more" (getWebhookEndpointsResponseBody200HasMore obj) GHC.Base.<> ((Data.Aeson..=) "object" (getWebhookEndpointsResponseBody200Object obj) GHC.Base.<> (Data.Aeson..=) "url" (getWebhookEndpointsResponseBody200Url obj))))
instance Data.Aeson.Types.FromJSON.FromJSON GetWebhookEndpointsResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "GetWebhookEndpointsResponseBody200" (\obj -> (((GHC.Base.pure GetWebhookEndpointsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))
-- | Defines the enum schema GetWebhookEndpointsResponseBody200Object\'
-- 
-- String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
data GetWebhookEndpointsResponseBody200Object'
    = GetWebhookEndpointsResponseBody200Object'EnumOther Data.Aeson.Types.Internal.Value
    | GetWebhookEndpointsResponseBody200Object'EnumTyped Data.Text.Internal.Text
    | GetWebhookEndpointsResponseBody200Object'EnumStringList
    deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.ToJSON GetWebhookEndpointsResponseBody200Object'
    where toJSON (GetWebhookEndpointsResponseBody200Object'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (GetWebhookEndpointsResponseBody200Object'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
          toJSON (GetWebhookEndpointsResponseBody200Object'EnumStringList) = Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "list"
instance Data.Aeson.FromJSON GetWebhookEndpointsResponseBody200Object'
    where parseJSON val = GHC.Base.pure (if val GHC.Classes.== (Data.Aeson.Types.Internal.String GHC.Base.$ Data.Text.pack "list")
                                          then GetWebhookEndpointsResponseBody200Object'EnumStringList
                                          else GetWebhookEndpointsResponseBody200Object'EnumOther val)
