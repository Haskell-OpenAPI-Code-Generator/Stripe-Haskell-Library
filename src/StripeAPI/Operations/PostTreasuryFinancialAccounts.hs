-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation postTreasuryFinancialAccounts
module StripeAPI.Operations.PostTreasuryFinancialAccounts where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types

-- | > POST /v1/treasury/financial_accounts
-- 
-- \<p>Creates a new FinancialAccount. For now, each connected account can only have one FinancialAccount.\<\/p>
postTreasuryFinancialAccounts :: forall m . StripeAPI.Common.MonadHTTP m => PostTreasuryFinancialAccountsRequestBody -- ^ The request body to send
  -> StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryFinancialAccountsResponse) -- ^ Monadic computation which returns the result of the operation
postTreasuryFinancialAccounts body = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either PostTreasuryFinancialAccountsResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> PostTreasuryFinancialAccountsResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                          Treasury'financialAccount)
                                                                                                                                                                                             | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) -> PostTreasuryFinancialAccountsResponseDefault Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                            Error)
                                                                                                                                                                                             | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/treasury/financial_accounts") GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBody = PostTreasuryFinancialAccountsRequestBody {
  -- | expand: Specifies which fields in the response should be expanded.
  postTreasuryFinancialAccountsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  -- | features: Encodes whether a FinancialAccount has access to a particular feature. Stripe or the platform can control features via the requested field.
  , postTreasuryFinancialAccountsRequestBodyFeatures :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures')
  -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
  , postTreasuryFinancialAccountsRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
  -- | platform_restrictions: The set of functionalities that the platform can restrict on the FinancialAccount.
  , postTreasuryFinancialAccountsRequestBodyPlatformRestrictions :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions')
  -- | supported_currencies: The currencies the FinancialAccount can hold a balance in.
  , postTreasuryFinancialAccountsRequestBodySupportedCurrencies :: ([Data.Text.Internal.Text])
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBody
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("platform_restrictions" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyPlatformRestrictions obj) : ["supported_currencies" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodySupportedCurrencies obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("platform_restrictions" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyPlatformRestrictions obj) : ["supported_currencies" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodySupportedCurrencies obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBody
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBody" (\obj -> ((((GHC.Base.pure PostTreasuryFinancialAccountsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "platform_restrictions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "supported_currencies"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBody' with all required fields.
mkPostTreasuryFinancialAccountsRequestBody :: [Data.Text.Internal.Text] -- ^ 'postTreasuryFinancialAccountsRequestBodySupportedCurrencies'
  -> PostTreasuryFinancialAccountsRequestBody
mkPostTreasuryFinancialAccountsRequestBody postTreasuryFinancialAccountsRequestBodySupportedCurrencies = PostTreasuryFinancialAccountsRequestBody{postTreasuryFinancialAccountsRequestBodyExpand = GHC.Maybe.Nothing,
                                                                                                                                                  postTreasuryFinancialAccountsRequestBodyFeatures = GHC.Maybe.Nothing,
                                                                                                                                                  postTreasuryFinancialAccountsRequestBodyMetadata = GHC.Maybe.Nothing,
                                                                                                                                                  postTreasuryFinancialAccountsRequestBodyPlatformRestrictions = GHC.Maybe.Nothing,
                                                                                                                                                  postTreasuryFinancialAccountsRequestBodySupportedCurrencies = postTreasuryFinancialAccountsRequestBodySupportedCurrencies}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features@ in the specification.
-- 
-- Encodes whether a FinancialAccount has access to a particular feature. Stripe or the platform can control features via the requested field.
data PostTreasuryFinancialAccountsRequestBodyFeatures' = PostTreasuryFinancialAccountsRequestBodyFeatures' {
  -- | card_issuing
  postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing')
  -- | deposit_insurance
  , postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance')
  -- | financial_addresses
  , postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses')
  -- | inbound_transfers
  , postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers')
  -- | intra_stripe_flows
  , postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows')
  -- | outbound_payments
  , postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments')
  -- | outbound_transfers
  , postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deposit_insurance" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_addresses" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("intra_stripe_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_payments" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deposit_insurance" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_addresses" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("intra_stripe_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_payments" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'" (\obj -> ((((((GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "deposit_insurance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_addresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_transfers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "intra_stripe_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_transfers"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures' :: PostTreasuryFinancialAccountsRequestBodyFeatures'
mkPostTreasuryFinancialAccountsRequestBodyFeatures' = PostTreasuryFinancialAccountsRequestBodyFeatures'{postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing = GHC.Maybe.Nothing,
                                                                                                        postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance = GHC.Maybe.Nothing,
                                                                                                        postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses = GHC.Maybe.Nothing,
                                                                                                        postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers = GHC.Maybe.Nothing,
                                                                                                        postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows = GHC.Maybe.Nothing,
                                                                                                        postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments = GHC.Maybe.Nothing,
                                                                                                        postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.card_issuing@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing' = PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing' postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'{postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'CardIssuing'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.deposit_insurance@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance' = PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance' postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'{postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'DepositInsurance'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.financial_addresses@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses' = PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses' {
  -- | aba
  postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("aba" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("aba" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "aba"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses' :: PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses' = PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'{postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.financial_addresses.properties.aba@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba' = PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba' postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'{postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'FinancialAddresses'Aba'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.inbound_transfers@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers' = PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers' {
  -- | ach
  postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers' :: PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers' = PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'{postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.inbound_transfers.properties.ach@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach' = PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach' postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'{postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'InboundTransfers'Ach'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.intra_stripe_flows@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows' = PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows' postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'{postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'IntraStripeFlows'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_payments@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments' {
  -- | ach
  postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach')
  -- | us_domestic_wire
  , postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments' :: PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'{postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach = GHC.Maybe.Nothing,
                                                                                                                                          postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_payments.properties.ach@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach' postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'{postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'Ach'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_payments.properties.us_domestic_wire@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire' postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'{postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_transfers@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers' {
  -- | ach
  postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach')
  -- | us_domestic_wire
  , postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers' :: PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'{postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach = GHC.Maybe.Nothing,
                                                                                                                                            postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_transfers.properties.ach@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach' postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'{postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'Ach'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_transfers.properties.us_domestic_wire@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire' = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire' {
  -- | requested
  postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested :: GHC.Types.Bool
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested obj] : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested obj] : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire' :: GHC.Types.Bool -- ^ 'postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested'
  -> PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'
mkPostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire' postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested = PostTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'{postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested = postTreasuryFinancialAccountsRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested}
-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.platform_restrictions@ in the specification.
-- 
-- The set of functionalities that the platform can restrict on the FinancialAccount.
data PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions' = PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions' {
  -- | inbound_flows
  postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows')
  -- | outbound_flows
  , postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows')
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_flows"))
-- | Create a new 'PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'' with all required fields.
mkPostTreasuryFinancialAccountsRequestBodyPlatformRestrictions' :: PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'
mkPostTreasuryFinancialAccountsRequestBodyPlatformRestrictions' = PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'{postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows = GHC.Maybe.Nothing,
                                                                                                                                postTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.platform_restrictions.properties.inbound_flows@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows' =
   PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'EnumRestricted -- ^ Represents the JSON value @"restricted"@
  | PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'EnumUnrestricted -- ^ Represents the JSON value @"unrestricted"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'
    where toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'Other val) = val
          toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'EnumRestricted) = "restricted"
          toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'EnumUnrestricted) = "unrestricted"
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "restricted" -> PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'EnumRestricted
                                            | val GHC.Classes.== "unrestricted" -> PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'EnumUnrestricted
                                            | GHC.Base.otherwise -> PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'InboundFlows'Other val)
-- | Defines the enum schema located at @paths.\/v1\/treasury\/financial_accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.platform_restrictions.properties.outbound_flows@ in the specification.
-- 
-- 
data PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows' =
   PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'Other Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'Typed Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'EnumRestricted -- ^ Represents the JSON value @"restricted"@
  | PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'EnumUnrestricted -- ^ Represents the JSON value @"unrestricted"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'
    where toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'Other val) = val
          toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'EnumRestricted) = "restricted"
          toJSON (PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'EnumUnrestricted) = "unrestricted"
instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "restricted" -> PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'EnumRestricted
                                            | val GHC.Classes.== "unrestricted" -> PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'EnumUnrestricted
                                            | GHC.Base.otherwise -> PostTreasuryFinancialAccountsRequestBodyPlatformRestrictions'OutboundFlows'Other val)
-- | Represents a response of the operation 'postTreasuryFinancialAccounts'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryFinancialAccountsResponseError' is used.
data PostTreasuryFinancialAccountsResponse =
   PostTreasuryFinancialAccountsResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | PostTreasuryFinancialAccountsResponse200 Treasury'financialAccount -- ^ Successful response.
  | PostTreasuryFinancialAccountsResponseDefault Error -- ^ Error response.
  deriving (GHC.Show.Show, GHC.Classes.Eq)
