{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getCustomersCustomerPaymentMethods
module StripeAPI.Operations.GetCustomersCustomerPaymentMethods where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/customers/{customer}/payment_methods
--
-- \<p>Returns a list of PaymentMethods for a given Customer\<\/p>
getCustomersCustomerPaymentMethods ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetCustomersCustomerPaymentMethodsParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetCustomersCustomerPaymentMethodsResponse)
getCustomersCustomerPaymentMethods parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetCustomersCustomerPaymentMethodsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetCustomersCustomerPaymentMethodsResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetCustomersCustomerPaymentMethodsResponseBody200
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetCustomersCustomerPaymentMethodsResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        ("/v1/customers/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel (getCustomersCustomerPaymentMethodsParametersPathCustomer parameters))) GHC.Base.<> "/payment_methods"))
        [ StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCustomersCustomerPaymentMethodsParametersQueryEndingBefore parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCustomersCustomerPaymentMethodsParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCustomersCustomerPaymentMethodsParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCustomersCustomerPaymentMethodsParametersQueryStartingAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "type") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCustomersCustomerPaymentMethodsParametersQueryType parameters) (Data.Text.Internal.pack "form") GHC.Types.True
        ]
    )

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/payment_methods.GET.parameters@ in the specification.
data GetCustomersCustomerPaymentMethodsParameters = GetCustomersCustomerPaymentMethodsParameters
  { -- | pathCustomer: Represents the parameter named \'customer\'
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerPaymentMethodsParametersPathCustomer :: Data.Text.Internal.Text,
    -- | queryEnding_before: Represents the parameter named \'ending_before\'
    --
    -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
    getCustomersCustomerPaymentMethodsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getCustomersCustomerPaymentMethodsParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    getCustomersCustomerPaymentMethodsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryStarting_after: Represents the parameter named \'starting_after\'
    --
    -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
    getCustomersCustomerPaymentMethodsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryType: Represents the parameter named \'type\'
    --
    -- An optional filter on the list, based on the object \`type\` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.
    getCustomersCustomerPaymentMethodsParametersQueryType :: (GHC.Maybe.Maybe GetCustomersCustomerPaymentMethodsParametersQueryType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerPaymentMethodsParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsParametersPathCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathCustomer" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsParametersPathCustomer obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryType" Data.Aeson.Types.ToJSON..=)) (getCustomersCustomerPaymentMethodsParametersQueryType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerPaymentMethodsParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerPaymentMethodsParameters" (\obj -> (((((GHC.Base.pure GetCustomersCustomerPaymentMethodsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathCustomer")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryType"))

-- | Create a new 'GetCustomersCustomerPaymentMethodsParameters' with all required fields.
mkGetCustomersCustomerPaymentMethodsParameters ::
  -- | 'getCustomersCustomerPaymentMethodsParametersPathCustomer'
  Data.Text.Internal.Text ->
  GetCustomersCustomerPaymentMethodsParameters
mkGetCustomersCustomerPaymentMethodsParameters getCustomersCustomerPaymentMethodsParametersPathCustomer =
  GetCustomersCustomerPaymentMethodsParameters
    { getCustomersCustomerPaymentMethodsParametersPathCustomer = getCustomersCustomerPaymentMethodsParametersPathCustomer,
      getCustomersCustomerPaymentMethodsParametersQueryEndingBefore = GHC.Maybe.Nothing,
      getCustomersCustomerPaymentMethodsParametersQueryExpand = GHC.Maybe.Nothing,
      getCustomersCustomerPaymentMethodsParametersQueryLimit = GHC.Maybe.Nothing,
      getCustomersCustomerPaymentMethodsParametersQueryStartingAfter = GHC.Maybe.Nothing,
      getCustomersCustomerPaymentMethodsParametersQueryType = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/customers\/{customer}\/payment_methods.GET.parameters.properties.queryType@ in the specification.
--
-- Represents the parameter named \'type\'
--
-- An optional filter on the list, based on the object \`type\` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request.
data GetCustomersCustomerPaymentMethodsParametersQueryType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCustomersCustomerPaymentMethodsParametersQueryType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCustomersCustomerPaymentMethodsParametersQueryType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"acss_debit"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAcssDebit
  | -- | Represents the JSON value @"affirm"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAffirm
  | -- | Represents the JSON value @"afterpay_clearpay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAfterpayClearpay
  | -- | Represents the JSON value @"alipay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAlipay
  | -- | Represents the JSON value @"au_becs_debit"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAuBecsDebit
  | -- | Represents the JSON value @"bacs_debit"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBacsDebit
  | -- | Represents the JSON value @"bancontact"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBancontact
  | -- | Represents the JSON value @"blik"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBlik
  | -- | Represents the JSON value @"boleto"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBoleto
  | -- | Represents the JSON value @"card"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCard
  | -- | Represents the JSON value @"cashapp"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCashapp
  | -- | Represents the JSON value @"customer_balance"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCustomerBalance
  | -- | Represents the JSON value @"eps"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumEps
  | -- | Represents the JSON value @"fpx"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumFpx
  | -- | Represents the JSON value @"giropay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumGiropay
  | -- | Represents the JSON value @"grabpay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumGrabpay
  | -- | Represents the JSON value @"ideal"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumIdeal
  | -- | Represents the JSON value @"klarna"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumKlarna
  | -- | Represents the JSON value @"konbini"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumKonbini
  | -- | Represents the JSON value @"link"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumLink
  | -- | Represents the JSON value @"oxxo"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumOxxo
  | -- | Represents the JSON value @"p24"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumP24
  | -- | Represents the JSON value @"paynow"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPaynow
  | -- | Represents the JSON value @"paypal"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPaypal
  | -- | Represents the JSON value @"pix"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPix
  | -- | Represents the JSON value @"promptpay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPromptpay
  | -- | Represents the JSON value @"revolut_pay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumRevolutPay
  | -- | Represents the JSON value @"sepa_debit"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumSepaDebit
  | -- | Represents the JSON value @"sofort"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumSofort
  | -- | Represents the JSON value @"us_bank_account"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumUsBankAccount
  | -- | Represents the JSON value @"wechat_pay"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumWechatPay
  | -- | Represents the JSON value @"zip"@
    GetCustomersCustomerPaymentMethodsParametersQueryType'EnumZip
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerPaymentMethodsParametersQueryType' where
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'Other val) = val
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAcssDebit) = "acss_debit"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAffirm) = "affirm"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAfterpayClearpay) = "afterpay_clearpay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAlipay) = "alipay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAuBecsDebit) = "au_becs_debit"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBacsDebit) = "bacs_debit"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBancontact) = "bancontact"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBlik) = "blik"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBoleto) = "boleto"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCard) = "card"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCashapp) = "cashapp"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCustomerBalance) = "customer_balance"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumEps) = "eps"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumFpx) = "fpx"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumGiropay) = "giropay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumGrabpay) = "grabpay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumIdeal) = "ideal"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumKlarna) = "klarna"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumKonbini) = "konbini"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumLink) = "link"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumOxxo) = "oxxo"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumP24) = "p24"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPaynow) = "paynow"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPaypal) = "paypal"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPix) = "pix"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPromptpay) = "promptpay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumRevolutPay) = "revolut_pay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumSepaDebit) = "sepa_debit"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumSofort) = "sofort"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumUsBankAccount) = "us_bank_account"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumWechatPay) = "wechat_pay"
  toJSON (GetCustomersCustomerPaymentMethodsParametersQueryType'EnumZip) = "zip"

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerPaymentMethodsParametersQueryType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "acss_debit" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAcssDebit
            | val GHC.Classes.== "affirm" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAffirm
            | val GHC.Classes.== "afterpay_clearpay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAfterpayClearpay
            | val GHC.Classes.== "alipay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAlipay
            | val GHC.Classes.== "au_becs_debit" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumAuBecsDebit
            | val GHC.Classes.== "bacs_debit" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBacsDebit
            | val GHC.Classes.== "bancontact" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBancontact
            | val GHC.Classes.== "blik" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBlik
            | val GHC.Classes.== "boleto" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumBoleto
            | val GHC.Classes.== "card" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCard
            | val GHC.Classes.== "cashapp" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCashapp
            | val GHC.Classes.== "customer_balance" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumCustomerBalance
            | val GHC.Classes.== "eps" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumEps
            | val GHC.Classes.== "fpx" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumFpx
            | val GHC.Classes.== "giropay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumGiropay
            | val GHC.Classes.== "grabpay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumGrabpay
            | val GHC.Classes.== "ideal" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumIdeal
            | val GHC.Classes.== "klarna" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumKlarna
            | val GHC.Classes.== "konbini" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumKonbini
            | val GHC.Classes.== "link" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumLink
            | val GHC.Classes.== "oxxo" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumOxxo
            | val GHC.Classes.== "p24" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumP24
            | val GHC.Classes.== "paynow" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPaynow
            | val GHC.Classes.== "paypal" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPaypal
            | val GHC.Classes.== "pix" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPix
            | val GHC.Classes.== "promptpay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumPromptpay
            | val GHC.Classes.== "revolut_pay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumRevolutPay
            | val GHC.Classes.== "sepa_debit" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumSepaDebit
            | val GHC.Classes.== "sofort" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumSofort
            | val GHC.Classes.== "us_bank_account" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumUsBankAccount
            | val GHC.Classes.== "wechat_pay" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumWechatPay
            | val GHC.Classes.== "zip" -> GetCustomersCustomerPaymentMethodsParametersQueryType'EnumZip
            | GHC.Base.otherwise -> GetCustomersCustomerPaymentMethodsParametersQueryType'Other val
      )

-- | Represents a response of the operation 'getCustomersCustomerPaymentMethods'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetCustomersCustomerPaymentMethodsResponseError' is used.
data GetCustomersCustomerPaymentMethodsResponse
  = -- | Means either no matching case available or a parse error
    GetCustomersCustomerPaymentMethodsResponseError GHC.Base.String
  | -- | Successful response.
    GetCustomersCustomerPaymentMethodsResponse200 GetCustomersCustomerPaymentMethodsResponseBody200
  | -- | Error response.
    GetCustomersCustomerPaymentMethodsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/customers\/{customer}\/payment_methods.GET.responses.200.content.application\/json.schema@ in the specification.
data GetCustomersCustomerPaymentMethodsResponseBody200 = GetCustomersCustomerPaymentMethodsResponseBody200
  { -- | data
    getCustomersCustomerPaymentMethodsResponseBody200Data :: ([PaymentMethod]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getCustomersCustomerPaymentMethodsResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCustomersCustomerPaymentMethodsResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCustomersCustomerPaymentMethodsResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCustomersCustomerPaymentMethodsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCustomersCustomerPaymentMethodsResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCustomersCustomerPaymentMethodsResponseBody200" (\obj -> ((GHC.Base.pure GetCustomersCustomerPaymentMethodsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetCustomersCustomerPaymentMethodsResponseBody200' with all required fields.
mkGetCustomersCustomerPaymentMethodsResponseBody200 ::
  -- | 'getCustomersCustomerPaymentMethodsResponseBody200Data'
  [PaymentMethod] ->
  -- | 'getCustomersCustomerPaymentMethodsResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getCustomersCustomerPaymentMethodsResponseBody200Url'
  Data.Text.Internal.Text ->
  GetCustomersCustomerPaymentMethodsResponseBody200
mkGetCustomersCustomerPaymentMethodsResponseBody200 getCustomersCustomerPaymentMethodsResponseBody200Data getCustomersCustomerPaymentMethodsResponseBody200HasMore getCustomersCustomerPaymentMethodsResponseBody200Url =
  GetCustomersCustomerPaymentMethodsResponseBody200
    { getCustomersCustomerPaymentMethodsResponseBody200Data = getCustomersCustomerPaymentMethodsResponseBody200Data,
      getCustomersCustomerPaymentMethodsResponseBody200HasMore = getCustomersCustomerPaymentMethodsResponseBody200HasMore,
      getCustomersCustomerPaymentMethodsResponseBody200Url = getCustomersCustomerPaymentMethodsResponseBody200Url
    }
