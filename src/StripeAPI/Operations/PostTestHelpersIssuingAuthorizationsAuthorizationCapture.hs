{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postTestHelpersIssuingAuthorizationsAuthorizationCapture
module StripeAPI.Operations.PostTestHelpersIssuingAuthorizationsAuthorizationCapture where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/test_helpers/issuing/authorizations/{authorization}/capture
--
-- \<p>Capture a test-mode authorization.\<\/p>
postTestHelpersIssuingAuthorizationsAuthorizationCapture ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | authorization | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponse)
postTestHelpersIssuingAuthorizationsAuthorizationCapture
  authorization
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Issuing'authorization
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/test_helpers/issuing/authorizations/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel authorization)) GHC.Base.<> "/capture")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody
  { -- | capture_amount: The amount to capture from the authorization. If not provided, the full amount of the authorization will be captured. This amount is in the authorization currency and in the [smallest currency unit](https:\/\/stripe.com\/docs\/currencies\#zero-decimal).
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCaptureAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | close_authorization: Whether to close the authorization after capture. Defaults to true. Set to false to enable multi-capture flows.
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCloseAuthorization :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | expand: Specifies which fields in the response should be expanded.
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | purchase_details: Additional purchase information that is optionally provided by the merchant.
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails :: (GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_amount" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCaptureAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("close_authorization" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCloseAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchase_details" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capture_amount" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCaptureAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("close_authorization" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCloseAuthorization obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("purchase_details" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody" (\obj -> (((GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capture_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "close_authorization")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "purchase_details"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBody
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCaptureAmount = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyCloseAuthorization = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyExpand = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details@ in the specification.
--
-- Additional purchase information that is optionally provided by the merchant.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails' = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'
  { -- | flight
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight :: (GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'),
    -- | fuel
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel :: (GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'),
    -- | lodging
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging :: (GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'),
    -- | receipt
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt :: (GHC.Maybe.Maybe ([PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'])),
    -- | reference
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Reference :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lodging" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Reference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fuel" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lodging" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("receipt" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("reference" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Reference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'" (\obj -> ((((GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flight")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fuel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lodging")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "receipt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "reference"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails' :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails' =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Reference = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.flight@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight' = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'
  { -- | departure_at
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'DepartureAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | passenger_name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'PassengerName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | refundable
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Refundable :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | segments
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments :: (GHC.Maybe.Maybe ([PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'])),
    -- | travel_agency
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'TravelAgency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_at" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'DepartureAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passenger_name" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'PassengerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refundable" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Refundable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("segments" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("travel_agency" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'TravelAgency obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_at" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'DepartureAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("passenger_name" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'PassengerName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("refundable" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Refundable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("segments" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("travel_agency" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'TravelAgency obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'" (\obj -> ((((GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "departure_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "passenger_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "refundable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "segments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "travel_agency"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight' :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight' =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'DepartureAt = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'PassengerName = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Refundable = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'TravelAgency = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.flight.properties.segments.items@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments' = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'
  { -- | arrival_airport_code
    --
    -- Constraints:
    --
    -- * Maximum length of 3
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ArrivalAirportCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | carrier
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'Carrier :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | departure_airport_code
    --
    -- Constraints:
    --
    -- * Maximum length of 3
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'DepartureAirportCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | flight_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'FlightNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | service_class
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ServiceClass :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | stopover_allowed
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'StopoverAllowed :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("arrival_airport_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ArrivalAirportCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'Carrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_airport_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'DepartureAirportCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'FlightNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_class" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ServiceClass obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("stopover_allowed" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'StopoverAllowed obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("arrival_airport_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ArrivalAirportCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("carrier" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'Carrier obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("departure_airport_code" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'DepartureAirportCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flight_number" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'FlightNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_class" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ServiceClass obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("stopover_allowed" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'StopoverAllowed obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'" (\obj -> (((((GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "arrival_airport_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "carrier")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "departure_airport_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flight_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_class")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "stopover_allowed"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments' :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments' =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ArrivalAirportCode = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'Carrier = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'DepartureAirportCode = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'FlightNumber = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'ServiceClass = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Flight'Segments'StopoverAllowed = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.fuel@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel' = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'
  { -- | type
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type :: (GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'),
    -- | unit
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit :: (GHC.Maybe.Maybe PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'),
    -- | unit_cost_decimal
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'UnitCostDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | volume_decimal
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'VolumeDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost_decimal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'UnitCostDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("volume_decimal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'VolumeDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost_decimal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'UnitCostDecimal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("volume_decimal" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'VolumeDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'" (\obj -> (((GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_cost_decimal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "volume_decimal"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel' :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel' =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'UnitCostDecimal = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'VolumeDecimal = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.fuel.properties.type@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"diesel"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumDiesel
  | -- | Represents the JSON value @"other"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumOther
  | -- | Represents the JSON value @"unleaded_plus"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedPlus
  | -- | Represents the JSON value @"unleaded_regular"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedRegular
  | -- | Represents the JSON value @"unleaded_super"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedSuper
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type' where
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'Other val) = val
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumDiesel) = "diesel"
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumOther) = "other"
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedPlus) = "unleaded_plus"
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedRegular) = "unleaded_regular"
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedSuper) = "unleaded_super"

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "diesel" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumDiesel
            | val GHC.Classes.== "other" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumOther
            | val GHC.Classes.== "unleaded_plus" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedPlus
            | val GHC.Classes.== "unleaded_regular" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedRegular
            | val GHC.Classes.== "unleaded_super" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'EnumUnleadedSuper
            | GHC.Base.otherwise -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Type'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.fuel.properties.unit@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"liter"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'EnumLiter
  | -- | Represents the JSON value @"us_gallon"@
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'EnumUsGallon
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit' where
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'Other val) = val
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'EnumLiter) = "liter"
  toJSON (PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'EnumUsGallon) = "us_gallon"

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "liter" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'EnumLiter
            | val GHC.Classes.== "us_gallon" -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'EnumUsGallon
            | GHC.Base.otherwise -> PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Fuel'Unit'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.lodging@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging' = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'
  { -- | check_in_at
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'CheckInAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | nights
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'Nights :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_in_at" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'CheckInAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nights" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'Nights obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("check_in_at" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'CheckInAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("nights" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'Nights obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'" (\obj -> (GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "check_in_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "nights"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging' :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging' =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'CheckInAt = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Lodging'Nights = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/test_helpers\/issuing\/authorizations\/{authorization}\/capture.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.purchase_details.properties.receipt.items@ in the specification.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt' = PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'
  { -- | description
    --
    -- Constraints:
    --
    -- * Maximum length of 26
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | quantity
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Quantity :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | total
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Total :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | unit_cost
    postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'UnitCost :: (GHC.Maybe.Maybe GHC.Types.Int)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Total obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'UnitCost obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Total obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_cost" Data.Aeson.Types.ToJSON..=)) (postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'UnitCost obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'" (\obj -> (((GHC.Base.pure PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "total")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_cost"))

-- | Create a new 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'' with all required fields.
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt' :: PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'
mkPostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt' =
  PostTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'
    { postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Description = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Quantity = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'Total = GHC.Maybe.Nothing,
      postTestHelpersIssuingAuthorizationsAuthorizationCaptureRequestBodyPurchaseDetails'Receipt'UnitCost = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postTestHelpersIssuingAuthorizationsAuthorizationCapture'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponseError' is used.
data PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponse
  = -- | Means either no matching case available or a parse error
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponseError GHC.Base.String
  | -- | Successful response.
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponse200 Issuing'authorization
  | -- | Error response.
    PostTestHelpersIssuingAuthorizationsAuthorizationCaptureResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
