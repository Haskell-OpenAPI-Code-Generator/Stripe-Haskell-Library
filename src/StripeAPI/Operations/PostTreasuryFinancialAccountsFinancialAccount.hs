{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postTreasuryFinancialAccountsFinancialAccount
module StripeAPI.Operations.PostTreasuryFinancialAccountsFinancialAccount where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/treasury/financial_accounts/{financial_account}
--
-- \<p>Updates the details of a FinancialAccount.\<\/p>
postTreasuryFinancialAccountsFinancialAccount ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | financial_account | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryFinancialAccountsFinancialAccountResponse)
postTreasuryFinancialAccountsFinancialAccount
  financialAccount
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostTreasuryFinancialAccountsFinancialAccountResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostTreasuryFinancialAccountsFinancialAccountResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Treasury'financialAccount
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostTreasuryFinancialAccountsFinancialAccountResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/treasury/financial_accounts/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel financialAccount)) GHC.Base.<> "")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBody = PostTreasuryFinancialAccountsFinancialAccountRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postTreasuryFinancialAccountsFinancialAccountRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | features: Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated \`status_details\`. Stripe or the platform may control features via the requested field.
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postTreasuryFinancialAccountsFinancialAccountRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | platform_restrictions: The set of functionalities that the platform can restrict on the FinancialAccount.
    postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("platform_restrictions" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("features" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("platform_restrictions" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBody" (\obj -> (((GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "features")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "platform_restrictions"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBody' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBody :: PostTreasuryFinancialAccountsFinancialAccountRequestBody
mkPostTreasuryFinancialAccountsFinancialAccountRequestBody =
  PostTreasuryFinancialAccountsFinancialAccountRequestBody
    { postTreasuryFinancialAccountsFinancialAccountRequestBodyExpand = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyMetadata = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features@ in the specification.
--
-- Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated \`status_details\`. Stripe or the platform may control features via the requested field.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'
  { -- | card_issuing
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'),
    -- | deposit_insurance
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'),
    -- | financial_addresses
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'),
    -- | inbound_transfers
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'),
    -- | intra_stripe_flows
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'),
    -- | outbound_payments
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'),
    -- | outbound_transfers
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deposit_insurance" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_addresses" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("intra_stripe_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_payments" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("deposit_insurance" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("financial_addresses" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("intra_stripe_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_payments" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_transfers" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'" (\obj -> ((((((GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "deposit_insurance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "financial_addresses")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_transfers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "intra_stripe_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_transfers"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures' :: PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures' =
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'
    { postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.card_issuing@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'CardIssuing'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.deposit_insurance@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'DepositInsurance'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.financial_addresses@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'
  { -- | aba
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("aba" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("aba" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "aba"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' :: PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.financial_addresses.properties.aba@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'FinancialAddresses'Aba'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.inbound_transfers@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'
  { -- | ach
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' :: PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.inbound_transfers.properties.ach@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'InboundTransfers'Ach'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.intra_stripe_flows@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'IntraStripeFlows'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_payments@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'
  { -- | ach
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'),
    -- | us_domestic_wire
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments' :: PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments' =
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'
    { postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_payments.properties.ach@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'Ach'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_payments.properties.us_domestic_wire@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundPayments'UsDomesticWire'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_transfers@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'
  { -- | ach
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'),
    -- | us_domestic_wire
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ach" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_domestic_wire" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ach")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_domestic_wire"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers' :: PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers' =
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'
    { postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_transfers.properties.ach@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'Ach'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.features.properties.outbound_transfers.properties.us_domestic_wire@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'
  { -- | requested
    postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested :: GHC.Types.Bool
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["requested" Data.Aeson.Types.ToJSON..= postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'" (\obj -> GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "requested"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' ::
  -- | 'postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested'
  GHC.Types.Bool ->
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested = PostTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire' {postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested = postTreasuryFinancialAccountsFinancialAccountRequestBodyFeatures'OutboundTransfers'UsDomesticWire'Requested}

-- | Defines the object schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.platform_restrictions@ in the specification.
--
-- The set of functionalities that the platform can restrict on the FinancialAccount.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions' = PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'
  { -- | inbound_flows
    postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'),
    -- | outbound_flows
    postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows :: (GHC.Maybe.Maybe PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("inbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outbound_flows" Data.Aeson.Types.ToJSON..=)) (postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'" (\obj -> (GHC.Base.pure PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "inbound_flows")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outbound_flows"))

-- | Create a new 'PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'' with all required fields.
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions' :: PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'
mkPostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions' =
  PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'
    { postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows = GHC.Maybe.Nothing,
      postTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.platform_restrictions.properties.inbound_flows@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"restricted"@
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'EnumRestricted
  | -- | Represents the JSON value @"unrestricted"@
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'EnumUnrestricted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows' where
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'Other val) = val
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'EnumRestricted) = "restricted"
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'EnumUnrestricted) = "unrestricted"

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "restricted" -> PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'EnumRestricted
            | val GHC.Classes.== "unrestricted" -> PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'EnumUnrestricted
            | GHC.Base.otherwise -> PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'InboundFlows'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/treasury\/financial_accounts\/{financial_account}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.platform_restrictions.properties.outbound_flows@ in the specification.
data PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"restricted"@
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'EnumRestricted
  | -- | Represents the JSON value @"unrestricted"@
    PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'EnumUnrestricted
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows' where
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'Other val) = val
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'EnumRestricted) = "restricted"
  toJSON (PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'EnumUnrestricted) = "unrestricted"

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "restricted" -> PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'EnumRestricted
            | val GHC.Classes.== "unrestricted" -> PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'EnumUnrestricted
            | GHC.Base.otherwise -> PostTreasuryFinancialAccountsFinancialAccountRequestBodyPlatformRestrictions'OutboundFlows'Other val
      )

-- | Represents a response of the operation 'postTreasuryFinancialAccountsFinancialAccount'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryFinancialAccountsFinancialAccountResponseError' is used.
data PostTreasuryFinancialAccountsFinancialAccountResponse
  = -- | Means either no matching case available or a parse error
    PostTreasuryFinancialAccountsFinancialAccountResponseError GHC.Base.String
  | -- | Successful response.
    PostTreasuryFinancialAccountsFinancialAccountResponse200 Treasury'financialAccount
  | -- | Error response.
    PostTreasuryFinancialAccountsFinancialAccountResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
