{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postAccounts
module StripeAPI.Operations.PostAccounts where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/accounts
--
-- \<p>With \<a href=\"\/docs\/connect\">Connect\<\/a>, you can create Stripe accounts for your users.
-- To do this, you’ll first need to \<a href=\"https:\/\/dashboard.stripe.com\/account\/applications\/settings\">register your platform\<\/a>.\<\/p>
--
-- \<p>If you’ve already collected information for your connected accounts, you \<a href=\"\/docs\/connect\/best-practices\#onboarding\">can prefill that information\<\/a> when
-- creating the account. Connect Onboarding won’t ask for the prefilled information during account onboarding.
-- You can prefill any information on the account.\<\/p>
postAccounts ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  GHC.Maybe.Maybe PostAccountsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostAccountsResponse)
postAccounts body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostAccountsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountsResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Account
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostAccountsResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/accounts" GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostAccountsRequestBody = PostAccountsRequestBody
  { -- | account_token: An [account token](https:\/\/stripe.com\/docs\/api\#create_account_token), used to securely provide details to the account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyAccountToken :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | bank_account: Either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/js), or a dictionary containing a user\'s bank account details.
    postAccountsRequestBodyBankAccount :: (GHC.Maybe.Maybe PostAccountsRequestBodyBankAccount'Variants),
    -- | business_profile: Business information about the account.
    postAccountsRequestBodyBusinessProfile :: (GHC.Maybe.Maybe PostAccountsRequestBodyBusinessProfile'),
    -- | business_type: The business type.
    postAccountsRequestBodyBusinessType :: (GHC.Maybe.Maybe PostAccountsRequestBodyBusinessType'),
    -- | capabilities: Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
    postAccountsRequestBodyCapabilities :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'),
    -- | company: Information about the company or business. This field is available for any \`business_type\`.
    postAccountsRequestBodyCompany :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'),
    -- | country: The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you\'re creating an account is legally represented in Canada, you would use \`CA\` as the country for the account being created. Available countries include [Stripe\'s global markets](https:\/\/stripe.com\/global) as well as countries where [cross-border payouts](https:\/\/stripe.com\/docs\/connect\/cross-border-payouts) are supported.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCountry :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | default_currency: Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account\'s country](https:\/\/stripe.com\/docs\/payouts).
    postAccountsRequestBodyDefaultCurrency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | documents: Documents that may be submitted to satisfy various informational requests.
    postAccountsRequestBodyDocuments :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'),
    -- | email: The email address of the account holder. This is only to make the account easier to identify to you. Stripe only emails Custom accounts with your consent.
    postAccountsRequestBodyEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expand: Specifies which fields in the response should be expanded.
    postAccountsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | external_account: A card or bank account to attach to the account for receiving [payouts](https:\/\/stripe.com\/docs\/connect\/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/js), or a dictionary, as documented in the \`external_account\` parameter for [bank account](https:\/\/stripe.com\/docs\/api\#account_create_bank_account) creation. \<br>\<br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](https:\/\/stripe.com\/docs\/api\#account_create_bank_account) or [card creation](https:\/\/stripe.com\/docs\/api\#account_create_card) APIs.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyExternalAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | individual: Information about the person represented by the account. This field is null unless \`business_type\` is set to \`individual\`.
    postAccountsRequestBodyIndividual :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postAccountsRequestBodyMetadata :: (GHC.Maybe.Maybe PostAccountsRequestBodyMetadata'Variants),
    -- | settings: Options for customizing how the account functions within Stripe.
    postAccountsRequestBodySettings :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'),
    -- | tos_acceptance: Details on the account\'s acceptance of the [Stripe Services Agreement](https:\/\/stripe.com\/docs\/connect\/updating-accounts\#tos-acceptance).
    postAccountsRequestBodyTosAcceptance :: (GHC.Maybe.Maybe PostAccountsRequestBodyTosAcceptance'),
    -- | type: The type of Stripe account to create. May be one of \`custom\`, \`express\` or \`standard\`.
    postAccountsRequestBodyType :: (GHC.Maybe.Maybe PostAccountsRequestBodyType')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_token" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyAccountToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyExternalAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyType obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_token" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyAccountToken obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_profile" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("business_type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("capabilities" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCountry obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("default_currency" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDefaultCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("external_account" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyExternalAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("individual" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("settings" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyType obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBody" (\obj -> ((((((((((((((((GHC.Base.pure PostAccountsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_token")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_profile")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "business_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "capabilities")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "default_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "external_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "individual")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "settings")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))

-- | Create a new 'PostAccountsRequestBody' with all required fields.
mkPostAccountsRequestBody :: PostAccountsRequestBody
mkPostAccountsRequestBody =
  PostAccountsRequestBody
    { postAccountsRequestBodyAccountToken = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessType = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany = GHC.Maybe.Nothing,
      postAccountsRequestBodyCountry = GHC.Maybe.Nothing,
      postAccountsRequestBodyDefaultCurrency = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments = GHC.Maybe.Nothing,
      postAccountsRequestBodyEmail = GHC.Maybe.Nothing,
      postAccountsRequestBodyExpand = GHC.Maybe.Nothing,
      postAccountsRequestBodyExternalAccount = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual = GHC.Maybe.Nothing,
      postAccountsRequestBodyMetadata = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings = GHC.Maybe.Nothing,
      postAccountsRequestBodyTosAcceptance = GHC.Maybe.Nothing,
      postAccountsRequestBodyType = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf@ in the specification.
data PostAccountsRequestBodyBankAccount'OneOf1 = PostAccountsRequestBodyBankAccount'OneOf1
  { -- | account_holder_name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1AccountHolderName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | account_holder_type
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1AccountHolderType :: (GHC.Maybe.Maybe PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'),
    -- | account_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1AccountNumber :: Data.Text.Internal.Text,
    -- | account_type
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1AccountType :: (GHC.Maybe.Maybe PostAccountsRequestBodyBankAccount'OneOf1AccountType'),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1Country :: Data.Text.Internal.Text,
    -- | currency
    postAccountsRequestBodyBankAccount'OneOf1Currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | documents
    postAccountsRequestBodyBankAccount'OneOf1Documents :: (GHC.Maybe.Maybe PostAccountsRequestBodyBankAccount'OneOf1Documents'),
    -- | object
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1Object :: (GHC.Maybe.Maybe PostAccountsRequestBodyBankAccount'OneOf1Object'),
    -- | routing_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBankAccount'OneOf1RoutingNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1AccountHolderType obj) : ["account_number" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBankAccount'OneOf1AccountNumber obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1AccountType obj) : ["country" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBankAccount'OneOf1Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Documents obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1RoutingNumber obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1AccountHolderName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_holder_type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1AccountHolderType obj) : ["account_number" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBankAccount'OneOf1AccountNumber obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account_type" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1AccountType obj) : ["country" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBankAccount'OneOf1Country obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("documents" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Documents obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("object" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Object obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("routing_number" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1RoutingNumber obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyBankAccount'OneOf1" (\obj -> ((((((((GHC.Base.pure PostAccountsRequestBodyBankAccount'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_holder_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "account_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "documents")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "routing_number"))

-- | Create a new 'PostAccountsRequestBodyBankAccount'OneOf1' with all required fields.
mkPostAccountsRequestBodyBankAccount'OneOf1 ::
  -- | 'postAccountsRequestBodyBankAccount'OneOf1AccountNumber'
  Data.Text.Internal.Text ->
  -- | 'postAccountsRequestBodyBankAccount'OneOf1Country'
  Data.Text.Internal.Text ->
  PostAccountsRequestBodyBankAccount'OneOf1
mkPostAccountsRequestBodyBankAccount'OneOf1 postAccountsRequestBodyBankAccount'OneOf1AccountNumber postAccountsRequestBodyBankAccount'OneOf1Country =
  PostAccountsRequestBodyBankAccount'OneOf1
    { postAccountsRequestBodyBankAccount'OneOf1AccountHolderName = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount'OneOf1AccountHolderType = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount'OneOf1AccountNumber = postAccountsRequestBodyBankAccount'OneOf1AccountNumber,
      postAccountsRequestBodyBankAccount'OneOf1AccountType = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount'OneOf1Country = postAccountsRequestBodyBankAccount'OneOf1Country,
      postAccountsRequestBodyBankAccount'OneOf1Currency = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount'OneOf1Documents = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount'OneOf1Object = GHC.Maybe.Nothing,
      postAccountsRequestBodyBankAccount'OneOf1RoutingNumber = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.account_holder_type@ in the specification.
data PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"company"@
    PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany
  | -- | Represents the JSON value @"individual"@
    PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType' where
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'Other val) = val
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany) = "company"
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual) = "individual"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "company" -> PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'EnumCompany
            | val GHC.Classes.== "individual" -> PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'EnumIndividual
            | GHC.Base.otherwise -> PostAccountsRequestBodyBankAccount'OneOf1AccountHolderType'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.account_type@ in the specification.
data PostAccountsRequestBodyBankAccount'OneOf1AccountType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyBankAccount'OneOf1AccountType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyBankAccount'OneOf1AccountType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"checking"@
    PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumChecking
  | -- | Represents the JSON value @"futsu"@
    PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumFutsu
  | -- | Represents the JSON value @"savings"@
    PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumSavings
  | -- | Represents the JSON value @"toza"@
    PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumToza
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'OneOf1AccountType' where
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountType'Other val) = val
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumChecking) = "checking"
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumFutsu) = "futsu"
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumSavings) = "savings"
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumToza) = "toza"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'OneOf1AccountType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "checking" -> PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumChecking
            | val GHC.Classes.== "futsu" -> PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumFutsu
            | val GHC.Classes.== "savings" -> PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumSavings
            | val GHC.Classes.== "toza" -> PostAccountsRequestBodyBankAccount'OneOf1AccountType'EnumToza
            | GHC.Base.otherwise -> PostAccountsRequestBodyBankAccount'OneOf1AccountType'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.documents@ in the specification.
data PostAccountsRequestBodyBankAccount'OneOf1Documents' = PostAccountsRequestBodyBankAccount'OneOf1Documents'
  { -- | bank_account_ownership_verification
    postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification :: (GHC.Maybe.Maybe PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'OneOf1Documents' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'OneOf1Documents' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyBankAccount'OneOf1Documents'" (\obj -> GHC.Base.pure PostAccountsRequestBodyBankAccount'OneOf1Documents' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_account_ownership_verification"))

-- | Create a new 'PostAccountsRequestBodyBankAccount'OneOf1Documents'' with all required fields.
mkPostAccountsRequestBodyBankAccount'OneOf1Documents' :: PostAccountsRequestBodyBankAccount'OneOf1Documents'
mkPostAccountsRequestBodyBankAccount'OneOf1Documents' = PostAccountsRequestBodyBankAccount'OneOf1Documents' {postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.documents.properties.bank_account_ownership_verification@ in the specification.
data PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' = PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'
  { -- | files
    postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'" (\obj -> GHC.Base.pure PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'' with all required fields.
mkPostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' :: PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'
mkPostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' = PostAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification' {postAccountsRequestBodyBankAccount'OneOf1Documents'BankAccountOwnershipVerification'Files = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf.properties.object@ in the specification.
data PostAccountsRequestBodyBankAccount'OneOf1Object'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyBankAccount'OneOf1Object'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyBankAccount'OneOf1Object'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"bank_account"@
    PostAccountsRequestBodyBankAccount'OneOf1Object'EnumBankAccount
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'OneOf1Object' where
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1Object'Other val) = val
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1Object'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyBankAccount'OneOf1Object'EnumBankAccount) = "bank_account"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'OneOf1Object' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "bank_account" -> PostAccountsRequestBodyBankAccount'OneOf1Object'EnumBankAccount
            | GHC.Base.otherwise -> PostAccountsRequestBodyBankAccount'OneOf1Object'Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bank_account.anyOf@ in the specification.
--
-- Either a token, like the ones returned by [Stripe.js](https:\/\/stripe.com\/docs\/js), or a dictionary containing a user\'s bank account details.
data PostAccountsRequestBodyBankAccount'Variants
  = PostAccountsRequestBodyBankAccount'PostAccountsRequestBodyBankAccount'OneOf1 PostAccountsRequestBodyBankAccount'OneOf1
  | PostAccountsRequestBodyBankAccount'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBankAccount'Variants where
  toJSON (PostAccountsRequestBodyBankAccount'PostAccountsRequestBodyBankAccount'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodyBankAccount'Text a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBankAccount'Variants where
  parseJSON val = case (PostAccountsRequestBodyBankAccount'PostAccountsRequestBodyBankAccount'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((PostAccountsRequestBodyBankAccount'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile@ in the specification.
--
-- Business information about the account.
data PostAccountsRequestBodyBusinessProfile' = PostAccountsRequestBodyBusinessProfile'
  { -- | mcc
    --
    -- Constraints:
    --
    -- * Maximum length of 4
    postAccountsRequestBodyBusinessProfile'Mcc :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | monthly_estimated_revenue
    postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue :: (GHC.Maybe.Maybe PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'),
    -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBusinessProfile'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | product_description
    --
    -- Constraints:
    --
    -- * Maximum length of 40000
    postAccountsRequestBodyBusinessProfile'ProductDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | support_address
    postAccountsRequestBodyBusinessProfile'SupportAddress :: (GHC.Maybe.Maybe PostAccountsRequestBodyBusinessProfile'SupportAddress'),
    -- | support_email
    postAccountsRequestBodyBusinessProfile'SupportEmail :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | support_phone
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBusinessProfile'SupportPhone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | support_url
    postAccountsRequestBodyBusinessProfile'SupportUrl :: (GHC.Maybe.Maybe PostAccountsRequestBodyBusinessProfile'SupportUrl'Variants),
    -- | url
    postAccountsRequestBodyBusinessProfile'Url :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBusinessProfile' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'Mcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_estimated_revenue" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'Url obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("mcc" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'Mcc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_estimated_revenue" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("product_description" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'ProductDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_email" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportEmail obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_phone" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportPhone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("support_url" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportUrl obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("url" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'Url obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBusinessProfile' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyBusinessProfile'" (\obj -> ((((((((GHC.Base.pure PostAccountsRequestBodyBusinessProfile' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "mcc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "monthly_estimated_revenue")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "product_description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "support_url")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "url"))

-- | Create a new 'PostAccountsRequestBodyBusinessProfile'' with all required fields.
mkPostAccountsRequestBodyBusinessProfile' :: PostAccountsRequestBodyBusinessProfile'
mkPostAccountsRequestBodyBusinessProfile' =
  PostAccountsRequestBodyBusinessProfile'
    { postAccountsRequestBodyBusinessProfile'Mcc = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'Name = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'ProductDescription = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportAddress = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportEmail = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportPhone = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportUrl = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'Url = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.monthly_estimated_revenue@ in the specification.
data PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue' = PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'
  { -- | amount
    postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount :: GHC.Types.Int,
    -- | currency
    postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount obj] : ["currency" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount obj] : ["currency" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'" (\obj -> (GHC.Base.pure PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency"))

-- | Create a new 'PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'' with all required fields.
mkPostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue' ::
  -- | 'postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount'
  GHC.Types.Int ->
  -- | 'postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency'
  Data.Text.Internal.Text ->
  PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'
mkPostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue' postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency =
  PostAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'
    { postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount = postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Amount,
      postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency = postAccountsRequestBodyBusinessProfile'MonthlyEstimatedRevenue'Currency
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.support_address@ in the specification.
data PostAccountsRequestBodyBusinessProfile'SupportAddress' = PostAccountsRequestBodyBusinessProfile'SupportAddress'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyBusinessProfile'SupportAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBusinessProfile'SupportAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyBusinessProfile'SupportAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyBusinessProfile'SupportAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBusinessProfile'SupportAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyBusinessProfile'SupportAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBusinessProfile'SupportAddress' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'State obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyBusinessProfile'SupportAddress'State obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBusinessProfile'SupportAddress' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyBusinessProfile'SupportAddress'" (\obj -> (((((GHC.Base.pure PostAccountsRequestBodyBusinessProfile'SupportAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'PostAccountsRequestBodyBusinessProfile'SupportAddress'' with all required fields.
mkPostAccountsRequestBodyBusinessProfile'SupportAddress' :: PostAccountsRequestBodyBusinessProfile'SupportAddress'
mkPostAccountsRequestBodyBusinessProfile'SupportAddress' =
  PostAccountsRequestBodyBusinessProfile'SupportAddress'
    { postAccountsRequestBodyBusinessProfile'SupportAddress'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportAddress'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportAddress'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportAddress'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportAddress'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyBusinessProfile'SupportAddress'State = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_profile.properties.support_url.anyOf@ in the specification.
data PostAccountsRequestBodyBusinessProfile'SupportUrl'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodyBusinessProfile'SupportUrl'EmptyString
  | PostAccountsRequestBodyBusinessProfile'SupportUrl'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBusinessProfile'SupportUrl'Variants where
  toJSON (PostAccountsRequestBodyBusinessProfile'SupportUrl'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodyBusinessProfile'SupportUrl'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBusinessProfile'SupportUrl'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodyBusinessProfile'SupportUrl'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodyBusinessProfile'SupportUrl'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.business_type@ in the specification.
--
-- The business type.
data PostAccountsRequestBodyBusinessType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyBusinessType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyBusinessType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"company"@
    PostAccountsRequestBodyBusinessType'EnumCompany
  | -- | Represents the JSON value @"government_entity"@
    PostAccountsRequestBodyBusinessType'EnumGovernmentEntity
  | -- | Represents the JSON value @"individual"@
    PostAccountsRequestBodyBusinessType'EnumIndividual
  | -- | Represents the JSON value @"non_profit"@
    PostAccountsRequestBodyBusinessType'EnumNonProfit
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyBusinessType' where
  toJSON (PostAccountsRequestBodyBusinessType'Other val) = val
  toJSON (PostAccountsRequestBodyBusinessType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyBusinessType'EnumCompany) = "company"
  toJSON (PostAccountsRequestBodyBusinessType'EnumGovernmentEntity) = "government_entity"
  toJSON (PostAccountsRequestBodyBusinessType'EnumIndividual) = "individual"
  toJSON (PostAccountsRequestBodyBusinessType'EnumNonProfit) = "non_profit"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyBusinessType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "company" -> PostAccountsRequestBodyBusinessType'EnumCompany
            | val GHC.Classes.== "government_entity" -> PostAccountsRequestBodyBusinessType'EnumGovernmentEntity
            | val GHC.Classes.== "individual" -> PostAccountsRequestBodyBusinessType'EnumIndividual
            | val GHC.Classes.== "non_profit" -> PostAccountsRequestBodyBusinessType'EnumNonProfit
            | GHC.Base.otherwise -> PostAccountsRequestBodyBusinessType'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities@ in the specification.
--
-- Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.
data PostAccountsRequestBodyCapabilities' = PostAccountsRequestBodyCapabilities'
  { -- | acss_debit_payments
    postAccountsRequestBodyCapabilities'AcssDebitPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'AcssDebitPayments'),
    -- | affirm_payments
    postAccountsRequestBodyCapabilities'AffirmPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'AffirmPayments'),
    -- | afterpay_clearpay_payments
    postAccountsRequestBodyCapabilities'AfterpayClearpayPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments'),
    -- | au_becs_debit_payments
    postAccountsRequestBodyCapabilities'AuBecsDebitPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'AuBecsDebitPayments'),
    -- | bacs_debit_payments
    postAccountsRequestBodyCapabilities'BacsDebitPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'BacsDebitPayments'),
    -- | bancontact_payments
    postAccountsRequestBodyCapabilities'BancontactPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'BancontactPayments'),
    -- | bank_transfer_payments
    postAccountsRequestBodyCapabilities'BankTransferPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'BankTransferPayments'),
    -- | blik_payments
    postAccountsRequestBodyCapabilities'BlikPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'BlikPayments'),
    -- | boleto_payments
    postAccountsRequestBodyCapabilities'BoletoPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'BoletoPayments'),
    -- | card_issuing
    postAccountsRequestBodyCapabilities'CardIssuing :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'CardIssuing'),
    -- | card_payments
    postAccountsRequestBodyCapabilities'CardPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'CardPayments'),
    -- | cartes_bancaires_payments
    postAccountsRequestBodyCapabilities'CartesBancairesPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'CartesBancairesPayments'),
    -- | cashapp_payments
    postAccountsRequestBodyCapabilities'CashappPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'CashappPayments'),
    -- | eps_payments
    postAccountsRequestBodyCapabilities'EpsPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'EpsPayments'),
    -- | fpx_payments
    postAccountsRequestBodyCapabilities'FpxPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'FpxPayments'),
    -- | giropay_payments
    postAccountsRequestBodyCapabilities'GiropayPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'GiropayPayments'),
    -- | grabpay_payments
    postAccountsRequestBodyCapabilities'GrabpayPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'GrabpayPayments'),
    -- | ideal_payments
    postAccountsRequestBodyCapabilities'IdealPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'IdealPayments'),
    -- | india_international_payments
    postAccountsRequestBodyCapabilities'IndiaInternationalPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'IndiaInternationalPayments'),
    -- | jcb_payments
    postAccountsRequestBodyCapabilities'JcbPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'JcbPayments'),
    -- | klarna_payments
    postAccountsRequestBodyCapabilities'KlarnaPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'KlarnaPayments'),
    -- | konbini_payments
    postAccountsRequestBodyCapabilities'KonbiniPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'KonbiniPayments'),
    -- | legacy_payments
    postAccountsRequestBodyCapabilities'LegacyPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'LegacyPayments'),
    -- | link_payments
    postAccountsRequestBodyCapabilities'LinkPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'LinkPayments'),
    -- | oxxo_payments
    postAccountsRequestBodyCapabilities'OxxoPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'OxxoPayments'),
    -- | p24_payments
    postAccountsRequestBodyCapabilities'P24Payments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'P24Payments'),
    -- | paynow_payments
    postAccountsRequestBodyCapabilities'PaynowPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'PaynowPayments'),
    -- | promptpay_payments
    postAccountsRequestBodyCapabilities'PromptpayPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'PromptpayPayments'),
    -- | revolut_pay_payments
    postAccountsRequestBodyCapabilities'RevolutPayPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'RevolutPayPayments'),
    -- | sepa_debit_payments
    postAccountsRequestBodyCapabilities'SepaDebitPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'SepaDebitPayments'),
    -- | sofort_payments
    postAccountsRequestBodyCapabilities'SofortPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'SofortPayments'),
    -- | tax_reporting_us_1099_k
    postAccountsRequestBodyCapabilities'TaxReportingUs_1099K :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K'),
    -- | tax_reporting_us_1099_misc
    postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'),
    -- | transfers
    postAccountsRequestBodyCapabilities'Transfers :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'Transfers'),
    -- | treasury
    postAccountsRequestBodyCapabilities'Treasury :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'Treasury'),
    -- | us_bank_account_ach_payments
    postAccountsRequestBodyCapabilities'UsBankAccountAchPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments'),
    -- | zip_payments
    postAccountsRequestBodyCapabilities'ZipPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodyCapabilities'ZipPayments')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AcssDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AffirmPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AfterpayClearpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AuBecsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BancontactPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_transfer_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BankTransferPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BlikPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BoletoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CartesBancairesPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CashappPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'EpsPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'FpxPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GiropayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GrabpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IdealPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("india_international_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IndiaInternationalPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'JcbPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KlarnaPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KonbiniPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legacy_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LegacyPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LinkPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'OxxoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'P24Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PaynowPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PromptpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'RevolutPayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SofortPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_k" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099K obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_misc" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfers" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Transfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Treasury obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account_ach_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'UsBankAccountAchPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("zip_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'ZipPayments obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AcssDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AffirmPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AfterpayClearpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AuBecsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BancontactPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_transfer_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BankTransferPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BlikPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BoletoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CartesBancairesPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CashappPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'EpsPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'FpxPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GiropayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GrabpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IdealPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("india_international_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IndiaInternationalPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'JcbPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KlarnaPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KonbiniPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("legacy_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LegacyPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LinkPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'OxxoPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'P24Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PaynowPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PromptpayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'RevolutPayPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SepaDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SofortPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_k" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099K obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_reporting_us_1099_misc" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("transfers" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Transfers obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Treasury obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account_ach_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'UsBankAccountAchPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("zip_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'ZipPayments obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'" (\obj -> ((((((((((((((((((((((((((((((((((((GHC.Base.pure PostAccountsRequestBodyCapabilities' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_transfer_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "blik_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cartes_bancaires_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "india_international_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jcb_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "legacy_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_reporting_us_1099_k")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_reporting_us_1099_misc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "transfers")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "treasury")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account_ach_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "zip_payments"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'' with all required fields.
mkPostAccountsRequestBodyCapabilities' :: PostAccountsRequestBodyCapabilities'
mkPostAccountsRequestBodyCapabilities' =
  PostAccountsRequestBodyCapabilities'
    { postAccountsRequestBodyCapabilities'AcssDebitPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'AffirmPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'AfterpayClearpayPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'AuBecsDebitPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'BacsDebitPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'BancontactPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'BankTransferPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'BlikPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'BoletoPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'CardIssuing = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'CardPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'CartesBancairesPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'CashappPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'EpsPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'FpxPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'GiropayPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'GrabpayPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'IdealPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'IndiaInternationalPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'JcbPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'KlarnaPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'KonbiniPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'LegacyPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'LinkPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'OxxoPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'P24Payments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'PaynowPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'PromptpayPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'RevolutPayPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'SepaDebitPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'SofortPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'TaxReportingUs_1099K = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'Transfers = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'Treasury = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'UsBankAccountAchPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodyCapabilities'ZipPayments = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.acss_debit_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'AcssDebitPayments' = PostAccountsRequestBodyCapabilities'AcssDebitPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'AcssDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'AcssDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AcssDebitPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AcssDebitPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'AcssDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'AcssDebitPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'AcssDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'AcssDebitPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'AcssDebitPayments' :: PostAccountsRequestBodyCapabilities'AcssDebitPayments'
mkPostAccountsRequestBodyCapabilities'AcssDebitPayments' = PostAccountsRequestBodyCapabilities'AcssDebitPayments' {postAccountsRequestBodyCapabilities'AcssDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.affirm_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'AffirmPayments' = PostAccountsRequestBodyCapabilities'AffirmPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'AffirmPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'AffirmPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AffirmPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AffirmPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'AffirmPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'AffirmPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'AffirmPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'AffirmPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'AffirmPayments' :: PostAccountsRequestBodyCapabilities'AffirmPayments'
mkPostAccountsRequestBodyCapabilities'AffirmPayments' = PostAccountsRequestBodyCapabilities'AffirmPayments' {postAccountsRequestBodyCapabilities'AffirmPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.afterpay_clearpay_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' = PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'AfterpayClearpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AfterpayClearpayPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AfterpayClearpayPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' :: PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments'
mkPostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' = PostAccountsRequestBodyCapabilities'AfterpayClearpayPayments' {postAccountsRequestBodyCapabilities'AfterpayClearpayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.au_becs_debit_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'AuBecsDebitPayments' = PostAccountsRequestBodyCapabilities'AuBecsDebitPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'AuBecsDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'AuBecsDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AuBecsDebitPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'AuBecsDebitPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'AuBecsDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'AuBecsDebitPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'AuBecsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'AuBecsDebitPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'AuBecsDebitPayments' :: PostAccountsRequestBodyCapabilities'AuBecsDebitPayments'
mkPostAccountsRequestBodyCapabilities'AuBecsDebitPayments' = PostAccountsRequestBodyCapabilities'AuBecsDebitPayments' {postAccountsRequestBodyCapabilities'AuBecsDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bacs_debit_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'BacsDebitPayments' = PostAccountsRequestBodyCapabilities'BacsDebitPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'BacsDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'BacsDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BacsDebitPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BacsDebitPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'BacsDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'BacsDebitPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'BacsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'BacsDebitPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'BacsDebitPayments' :: PostAccountsRequestBodyCapabilities'BacsDebitPayments'
mkPostAccountsRequestBodyCapabilities'BacsDebitPayments' = PostAccountsRequestBodyCapabilities'BacsDebitPayments' {postAccountsRequestBodyCapabilities'BacsDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bancontact_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'BancontactPayments' = PostAccountsRequestBodyCapabilities'BancontactPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'BancontactPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'BancontactPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BancontactPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BancontactPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'BancontactPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'BancontactPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'BancontactPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'BancontactPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'BancontactPayments' :: PostAccountsRequestBodyCapabilities'BancontactPayments'
mkPostAccountsRequestBodyCapabilities'BancontactPayments' = PostAccountsRequestBodyCapabilities'BancontactPayments' {postAccountsRequestBodyCapabilities'BancontactPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.bank_transfer_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'BankTransferPayments' = PostAccountsRequestBodyCapabilities'BankTransferPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'BankTransferPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'BankTransferPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BankTransferPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BankTransferPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'BankTransferPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'BankTransferPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'BankTransferPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'BankTransferPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'BankTransferPayments' :: PostAccountsRequestBodyCapabilities'BankTransferPayments'
mkPostAccountsRequestBodyCapabilities'BankTransferPayments' = PostAccountsRequestBodyCapabilities'BankTransferPayments' {postAccountsRequestBodyCapabilities'BankTransferPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.blik_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'BlikPayments' = PostAccountsRequestBodyCapabilities'BlikPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'BlikPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'BlikPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BlikPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BlikPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'BlikPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'BlikPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'BlikPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'BlikPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'BlikPayments' :: PostAccountsRequestBodyCapabilities'BlikPayments'
mkPostAccountsRequestBodyCapabilities'BlikPayments' = PostAccountsRequestBodyCapabilities'BlikPayments' {postAccountsRequestBodyCapabilities'BlikPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.boleto_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'BoletoPayments' = PostAccountsRequestBodyCapabilities'BoletoPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'BoletoPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'BoletoPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BoletoPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'BoletoPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'BoletoPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'BoletoPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'BoletoPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'BoletoPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'BoletoPayments' :: PostAccountsRequestBodyCapabilities'BoletoPayments'
mkPostAccountsRequestBodyCapabilities'BoletoPayments' = PostAccountsRequestBodyCapabilities'BoletoPayments' {postAccountsRequestBodyCapabilities'BoletoPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.card_issuing@ in the specification.
data PostAccountsRequestBodyCapabilities'CardIssuing' = PostAccountsRequestBodyCapabilities'CardIssuing'
  { -- | requested
    postAccountsRequestBodyCapabilities'CardIssuing'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'CardIssuing' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardIssuing'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardIssuing'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'CardIssuing' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'CardIssuing'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'CardIssuing'' with all required fields.
mkPostAccountsRequestBodyCapabilities'CardIssuing' :: PostAccountsRequestBodyCapabilities'CardIssuing'
mkPostAccountsRequestBodyCapabilities'CardIssuing' = PostAccountsRequestBodyCapabilities'CardIssuing' {postAccountsRequestBodyCapabilities'CardIssuing'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.card_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'CardPayments' = PostAccountsRequestBodyCapabilities'CardPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'CardPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'CardPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CardPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'CardPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'CardPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'CardPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'CardPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'CardPayments' :: PostAccountsRequestBodyCapabilities'CardPayments'
mkPostAccountsRequestBodyCapabilities'CardPayments' = PostAccountsRequestBodyCapabilities'CardPayments' {postAccountsRequestBodyCapabilities'CardPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.cartes_bancaires_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'CartesBancairesPayments' = PostAccountsRequestBodyCapabilities'CartesBancairesPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'CartesBancairesPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'CartesBancairesPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CartesBancairesPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CartesBancairesPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'CartesBancairesPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'CartesBancairesPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'CartesBancairesPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'CartesBancairesPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'CartesBancairesPayments' :: PostAccountsRequestBodyCapabilities'CartesBancairesPayments'
mkPostAccountsRequestBodyCapabilities'CartesBancairesPayments' = PostAccountsRequestBodyCapabilities'CartesBancairesPayments' {postAccountsRequestBodyCapabilities'CartesBancairesPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.cashapp_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'CashappPayments' = PostAccountsRequestBodyCapabilities'CashappPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'CashappPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'CashappPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CashappPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'CashappPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'CashappPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'CashappPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'CashappPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'CashappPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'CashappPayments' :: PostAccountsRequestBodyCapabilities'CashappPayments'
mkPostAccountsRequestBodyCapabilities'CashappPayments' = PostAccountsRequestBodyCapabilities'CashappPayments' {postAccountsRequestBodyCapabilities'CashappPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.eps_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'EpsPayments' = PostAccountsRequestBodyCapabilities'EpsPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'EpsPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'EpsPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'EpsPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'EpsPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'EpsPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'EpsPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'EpsPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'EpsPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'EpsPayments' :: PostAccountsRequestBodyCapabilities'EpsPayments'
mkPostAccountsRequestBodyCapabilities'EpsPayments' = PostAccountsRequestBodyCapabilities'EpsPayments' {postAccountsRequestBodyCapabilities'EpsPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.fpx_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'FpxPayments' = PostAccountsRequestBodyCapabilities'FpxPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'FpxPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'FpxPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'FpxPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'FpxPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'FpxPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'FpxPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'FpxPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'FpxPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'FpxPayments' :: PostAccountsRequestBodyCapabilities'FpxPayments'
mkPostAccountsRequestBodyCapabilities'FpxPayments' = PostAccountsRequestBodyCapabilities'FpxPayments' {postAccountsRequestBodyCapabilities'FpxPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.giropay_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'GiropayPayments' = PostAccountsRequestBodyCapabilities'GiropayPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'GiropayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'GiropayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GiropayPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GiropayPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'GiropayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'GiropayPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'GiropayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'GiropayPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'GiropayPayments' :: PostAccountsRequestBodyCapabilities'GiropayPayments'
mkPostAccountsRequestBodyCapabilities'GiropayPayments' = PostAccountsRequestBodyCapabilities'GiropayPayments' {postAccountsRequestBodyCapabilities'GiropayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.grabpay_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'GrabpayPayments' = PostAccountsRequestBodyCapabilities'GrabpayPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'GrabpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'GrabpayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GrabpayPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'GrabpayPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'GrabpayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'GrabpayPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'GrabpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'GrabpayPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'GrabpayPayments' :: PostAccountsRequestBodyCapabilities'GrabpayPayments'
mkPostAccountsRequestBodyCapabilities'GrabpayPayments' = PostAccountsRequestBodyCapabilities'GrabpayPayments' {postAccountsRequestBodyCapabilities'GrabpayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.ideal_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'IdealPayments' = PostAccountsRequestBodyCapabilities'IdealPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'IdealPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'IdealPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IdealPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IdealPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'IdealPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'IdealPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'IdealPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'IdealPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'IdealPayments' :: PostAccountsRequestBodyCapabilities'IdealPayments'
mkPostAccountsRequestBodyCapabilities'IdealPayments' = PostAccountsRequestBodyCapabilities'IdealPayments' {postAccountsRequestBodyCapabilities'IdealPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.india_international_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'IndiaInternationalPayments' = PostAccountsRequestBodyCapabilities'IndiaInternationalPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'IndiaInternationalPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'IndiaInternationalPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IndiaInternationalPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'IndiaInternationalPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'IndiaInternationalPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'IndiaInternationalPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'IndiaInternationalPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'IndiaInternationalPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'IndiaInternationalPayments' :: PostAccountsRequestBodyCapabilities'IndiaInternationalPayments'
mkPostAccountsRequestBodyCapabilities'IndiaInternationalPayments' = PostAccountsRequestBodyCapabilities'IndiaInternationalPayments' {postAccountsRequestBodyCapabilities'IndiaInternationalPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.jcb_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'JcbPayments' = PostAccountsRequestBodyCapabilities'JcbPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'JcbPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'JcbPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'JcbPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'JcbPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'JcbPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'JcbPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'JcbPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'JcbPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'JcbPayments' :: PostAccountsRequestBodyCapabilities'JcbPayments'
mkPostAccountsRequestBodyCapabilities'JcbPayments' = PostAccountsRequestBodyCapabilities'JcbPayments' {postAccountsRequestBodyCapabilities'JcbPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.klarna_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'KlarnaPayments' = PostAccountsRequestBodyCapabilities'KlarnaPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'KlarnaPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'KlarnaPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KlarnaPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KlarnaPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'KlarnaPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'KlarnaPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'KlarnaPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'KlarnaPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'KlarnaPayments' :: PostAccountsRequestBodyCapabilities'KlarnaPayments'
mkPostAccountsRequestBodyCapabilities'KlarnaPayments' = PostAccountsRequestBodyCapabilities'KlarnaPayments' {postAccountsRequestBodyCapabilities'KlarnaPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.konbini_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'KonbiniPayments' = PostAccountsRequestBodyCapabilities'KonbiniPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'KonbiniPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'KonbiniPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KonbiniPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'KonbiniPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'KonbiniPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'KonbiniPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'KonbiniPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'KonbiniPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'KonbiniPayments' :: PostAccountsRequestBodyCapabilities'KonbiniPayments'
mkPostAccountsRequestBodyCapabilities'KonbiniPayments' = PostAccountsRequestBodyCapabilities'KonbiniPayments' {postAccountsRequestBodyCapabilities'KonbiniPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.legacy_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'LegacyPayments' = PostAccountsRequestBodyCapabilities'LegacyPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'LegacyPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'LegacyPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LegacyPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LegacyPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'LegacyPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'LegacyPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'LegacyPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'LegacyPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'LegacyPayments' :: PostAccountsRequestBodyCapabilities'LegacyPayments'
mkPostAccountsRequestBodyCapabilities'LegacyPayments' = PostAccountsRequestBodyCapabilities'LegacyPayments' {postAccountsRequestBodyCapabilities'LegacyPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.link_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'LinkPayments' = PostAccountsRequestBodyCapabilities'LinkPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'LinkPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'LinkPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LinkPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'LinkPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'LinkPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'LinkPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'LinkPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'LinkPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'LinkPayments' :: PostAccountsRequestBodyCapabilities'LinkPayments'
mkPostAccountsRequestBodyCapabilities'LinkPayments' = PostAccountsRequestBodyCapabilities'LinkPayments' {postAccountsRequestBodyCapabilities'LinkPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.oxxo_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'OxxoPayments' = PostAccountsRequestBodyCapabilities'OxxoPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'OxxoPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'OxxoPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'OxxoPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'OxxoPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'OxxoPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'OxxoPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'OxxoPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'OxxoPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'OxxoPayments' :: PostAccountsRequestBodyCapabilities'OxxoPayments'
mkPostAccountsRequestBodyCapabilities'OxxoPayments' = PostAccountsRequestBodyCapabilities'OxxoPayments' {postAccountsRequestBodyCapabilities'OxxoPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.p24_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'P24Payments' = PostAccountsRequestBodyCapabilities'P24Payments'
  { -- | requested
    postAccountsRequestBodyCapabilities'P24Payments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'P24Payments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'P24Payments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'P24Payments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'P24Payments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'P24Payments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'P24Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'P24Payments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'P24Payments' :: PostAccountsRequestBodyCapabilities'P24Payments'
mkPostAccountsRequestBodyCapabilities'P24Payments' = PostAccountsRequestBodyCapabilities'P24Payments' {postAccountsRequestBodyCapabilities'P24Payments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.paynow_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'PaynowPayments' = PostAccountsRequestBodyCapabilities'PaynowPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'PaynowPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'PaynowPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PaynowPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PaynowPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'PaynowPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'PaynowPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'PaynowPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'PaynowPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'PaynowPayments' :: PostAccountsRequestBodyCapabilities'PaynowPayments'
mkPostAccountsRequestBodyCapabilities'PaynowPayments' = PostAccountsRequestBodyCapabilities'PaynowPayments' {postAccountsRequestBodyCapabilities'PaynowPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.promptpay_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'PromptpayPayments' = PostAccountsRequestBodyCapabilities'PromptpayPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'PromptpayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'PromptpayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PromptpayPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'PromptpayPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'PromptpayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'PromptpayPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'PromptpayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'PromptpayPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'PromptpayPayments' :: PostAccountsRequestBodyCapabilities'PromptpayPayments'
mkPostAccountsRequestBodyCapabilities'PromptpayPayments' = PostAccountsRequestBodyCapabilities'PromptpayPayments' {postAccountsRequestBodyCapabilities'PromptpayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.revolut_pay_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'RevolutPayPayments' = PostAccountsRequestBodyCapabilities'RevolutPayPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'RevolutPayPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'RevolutPayPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'RevolutPayPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'RevolutPayPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'RevolutPayPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'RevolutPayPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'RevolutPayPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'RevolutPayPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'RevolutPayPayments' :: PostAccountsRequestBodyCapabilities'RevolutPayPayments'
mkPostAccountsRequestBodyCapabilities'RevolutPayPayments' = PostAccountsRequestBodyCapabilities'RevolutPayPayments' {postAccountsRequestBodyCapabilities'RevolutPayPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.sepa_debit_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'SepaDebitPayments' = PostAccountsRequestBodyCapabilities'SepaDebitPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'SepaDebitPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'SepaDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SepaDebitPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SepaDebitPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'SepaDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'SepaDebitPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'SepaDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'SepaDebitPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'SepaDebitPayments' :: PostAccountsRequestBodyCapabilities'SepaDebitPayments'
mkPostAccountsRequestBodyCapabilities'SepaDebitPayments' = PostAccountsRequestBodyCapabilities'SepaDebitPayments' {postAccountsRequestBodyCapabilities'SepaDebitPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.sofort_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'SofortPayments' = PostAccountsRequestBodyCapabilities'SofortPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'SofortPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'SofortPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SofortPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'SofortPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'SofortPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'SofortPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'SofortPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'SofortPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'SofortPayments' :: PostAccountsRequestBodyCapabilities'SofortPayments'
mkPostAccountsRequestBodyCapabilities'SofortPayments' = PostAccountsRequestBodyCapabilities'SofortPayments' {postAccountsRequestBodyCapabilities'SofortPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.tax_reporting_us_1099_k@ in the specification.
data PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' = PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K'
  { -- | requested
    postAccountsRequestBodyCapabilities'TaxReportingUs_1099K'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099K'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099K'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K'' with all required fields.
mkPostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' :: PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K'
mkPostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' = PostAccountsRequestBodyCapabilities'TaxReportingUs_1099K' {postAccountsRequestBodyCapabilities'TaxReportingUs_1099K'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.tax_reporting_us_1099_misc@ in the specification.
data PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' = PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'
  { -- | requested
    postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'' with all required fields.
mkPostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' :: PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'
mkPostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' = PostAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc' {postAccountsRequestBodyCapabilities'TaxReportingUs_1099Misc'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.transfers@ in the specification.
data PostAccountsRequestBodyCapabilities'Transfers' = PostAccountsRequestBodyCapabilities'Transfers'
  { -- | requested
    postAccountsRequestBodyCapabilities'Transfers'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'Transfers' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Transfers'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Transfers'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'Transfers' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'Transfers'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'Transfers' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'Transfers'' with all required fields.
mkPostAccountsRequestBodyCapabilities'Transfers' :: PostAccountsRequestBodyCapabilities'Transfers'
mkPostAccountsRequestBodyCapabilities'Transfers' = PostAccountsRequestBodyCapabilities'Transfers' {postAccountsRequestBodyCapabilities'Transfers'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.treasury@ in the specification.
data PostAccountsRequestBodyCapabilities'Treasury' = PostAccountsRequestBodyCapabilities'Treasury'
  { -- | requested
    postAccountsRequestBodyCapabilities'Treasury'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'Treasury' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Treasury'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'Treasury'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'Treasury' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'Treasury'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'Treasury' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'Treasury'' with all required fields.
mkPostAccountsRequestBodyCapabilities'Treasury' :: PostAccountsRequestBodyCapabilities'Treasury'
mkPostAccountsRequestBodyCapabilities'Treasury' = PostAccountsRequestBodyCapabilities'Treasury' {postAccountsRequestBodyCapabilities'Treasury'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.us_bank_account_ach_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' = PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'UsBankAccountAchPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'UsBankAccountAchPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'UsBankAccountAchPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' :: PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments'
mkPostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' = PostAccountsRequestBodyCapabilities'UsBankAccountAchPayments' {postAccountsRequestBodyCapabilities'UsBankAccountAchPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.capabilities.properties.zip_payments@ in the specification.
data PostAccountsRequestBodyCapabilities'ZipPayments' = PostAccountsRequestBodyCapabilities'ZipPayments'
  { -- | requested
    postAccountsRequestBodyCapabilities'ZipPayments'Requested :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCapabilities'ZipPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'ZipPayments'Requested obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("requested" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCapabilities'ZipPayments'Requested obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCapabilities'ZipPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCapabilities'ZipPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCapabilities'ZipPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "requested"))

-- | Create a new 'PostAccountsRequestBodyCapabilities'ZipPayments'' with all required fields.
mkPostAccountsRequestBodyCapabilities'ZipPayments' :: PostAccountsRequestBodyCapabilities'ZipPayments'
mkPostAccountsRequestBodyCapabilities'ZipPayments' = PostAccountsRequestBodyCapabilities'ZipPayments' {postAccountsRequestBodyCapabilities'ZipPayments'Requested = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company@ in the specification.
--
-- Information about the company or business. This field is available for any \`business_type\`.
data PostAccountsRequestBodyCompany' = PostAccountsRequestBodyCompany'
  { -- | address
    postAccountsRequestBodyCompany'Address :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'Address'),
    -- | address_kana
    postAccountsRequestBodyCompany'AddressKana :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'AddressKana'),
    -- | address_kanji
    postAccountsRequestBodyCompany'AddressKanji :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'AddressKanji'),
    -- | directors_provided
    postAccountsRequestBodyCompany'DirectorsProvided :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | executives_provided
    postAccountsRequestBodyCompany'ExecutivesProvided :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | export_license_id
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'ExportLicenseId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | export_purpose_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'ExportPurposeCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyCompany'Name :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyCompany'NameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | name_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyCompany'NameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | owners_provided
    postAccountsRequestBodyCompany'OwnersProvided :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | ownership_declaration
    postAccountsRequestBodyCompany'OwnershipDeclaration :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'OwnershipDeclaration'),
    -- | phone
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | registration_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'RegistrationNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | structure
    postAccountsRequestBodyCompany'Structure :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'Structure'),
    -- | tax_id
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'TaxId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | tax_id_registrar
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'TaxIdRegistrar :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | vat_id
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'VatId :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | verification
    postAccountsRequestBodyCompany'Verification :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'Verification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("directors_provided" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'DirectorsProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executives_provided" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'ExecutivesProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("export_license_id" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'ExportLicenseId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("export_purpose_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'ExportPurposeCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'NameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'NameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owners_provided" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnersProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ownership_declaration" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registration_number" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'RegistrationNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("structure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Structure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'TaxId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id_registrar" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'TaxIdRegistrar obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_id" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'VatId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("directors_provided" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'DirectorsProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("executives_provided" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'ExecutivesProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("export_license_id" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'ExportLicenseId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("export_purpose_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'ExportPurposeCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'NameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'NameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("owners_provided" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnersProvided obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ownership_declaration" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registration_number" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'RegistrationNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("structure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Structure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'TaxId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_id_registrar" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'TaxIdRegistrar obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("vat_id" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'VatId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'" (\obj -> ((((((((((((((((((GHC.Base.pure PostAccountsRequestBodyCompany' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "directors_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "executives_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "export_license_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "export_purpose_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "owners_provided")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ownership_declaration")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registration_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "structure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_id_registrar")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "vat_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))

-- | Create a new 'PostAccountsRequestBodyCompany'' with all required fields.
mkPostAccountsRequestBodyCompany' :: PostAccountsRequestBodyCompany'
mkPostAccountsRequestBodyCompany' =
  PostAccountsRequestBodyCompany'
    { postAccountsRequestBodyCompany'Address = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'DirectorsProvided = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'ExecutivesProvided = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'ExportLicenseId = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'ExportPurposeCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Name = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'NameKana = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'NameKanji = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'OwnersProvided = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'OwnershipDeclaration = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Phone = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'RegistrationNumber = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Structure = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'TaxId = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'TaxIdRegistrar = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'VatId = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Verification = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address@ in the specification.
data PostAccountsRequestBodyCompany'Address' = PostAccountsRequestBodyCompany'Address'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyCompany'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyCompany'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyCompany'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'Address' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'State obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Address'State obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'Address' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'Address'" (\obj -> (((((GHC.Base.pure PostAccountsRequestBodyCompany'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'PostAccountsRequestBodyCompany'Address'' with all required fields.
mkPostAccountsRequestBodyCompany'Address' :: PostAccountsRequestBodyCompany'Address'
mkPostAccountsRequestBodyCompany'Address' =
  PostAccountsRequestBodyCompany'Address'
    { postAccountsRequestBodyCompany'Address'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Address'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Address'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Address'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Address'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Address'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address_kana@ in the specification.
data PostAccountsRequestBodyCompany'AddressKana' = PostAccountsRequestBodyCompany'AddressKana'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'AddressKana' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Town obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKana'Town obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'AddressKana' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'AddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsRequestBodyCompany'AddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))

-- | Create a new 'PostAccountsRequestBodyCompany'AddressKana'' with all required fields.
mkPostAccountsRequestBodyCompany'AddressKana' :: PostAccountsRequestBodyCompany'AddressKana'
mkPostAccountsRequestBodyCompany'AddressKana' =
  PostAccountsRequestBodyCompany'AddressKana'
    { postAccountsRequestBodyCompany'AddressKana'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana'State = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKana'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.address_kanji@ in the specification.
data PostAccountsRequestBodyCompany'AddressKanji' = PostAccountsRequestBodyCompany'AddressKanji'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'AddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'AddressKanji' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Town obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'AddressKanji'Town obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'AddressKanji' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'AddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsRequestBodyCompany'AddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))

-- | Create a new 'PostAccountsRequestBodyCompany'AddressKanji'' with all required fields.
mkPostAccountsRequestBodyCompany'AddressKanji' :: PostAccountsRequestBodyCompany'AddressKanji'
mkPostAccountsRequestBodyCompany'AddressKanji' =
  PostAccountsRequestBodyCompany'AddressKanji'
    { postAccountsRequestBodyCompany'AddressKanji'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji'State = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'AddressKanji'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.ownership_declaration@ in the specification.
data PostAccountsRequestBodyCompany'OwnershipDeclaration' = PostAccountsRequestBodyCompany'OwnershipDeclaration'
  { -- | date
    postAccountsRequestBodyCompany'OwnershipDeclaration'Date :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | ip
    postAccountsRequestBodyCompany'OwnershipDeclaration'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_agent
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyCompany'OwnershipDeclaration'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'OwnershipDeclaration' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration'UserAgent obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'OwnershipDeclaration'UserAgent obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'OwnershipDeclaration' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'OwnershipDeclaration'" (\obj -> ((GHC.Base.pure PostAccountsRequestBodyCompany'OwnershipDeclaration' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))

-- | Create a new 'PostAccountsRequestBodyCompany'OwnershipDeclaration'' with all required fields.
mkPostAccountsRequestBodyCompany'OwnershipDeclaration' :: PostAccountsRequestBodyCompany'OwnershipDeclaration'
mkPostAccountsRequestBodyCompany'OwnershipDeclaration' =
  PostAccountsRequestBodyCompany'OwnershipDeclaration'
    { postAccountsRequestBodyCompany'OwnershipDeclaration'Date = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'OwnershipDeclaration'Ip = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'OwnershipDeclaration'UserAgent = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.structure@ in the specification.
data PostAccountsRequestBodyCompany'Structure'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyCompany'Structure'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyCompany'Structure'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    PostAccountsRequestBodyCompany'Structure'EnumEmptyString
  | -- | Represents the JSON value @"free_zone_establishment"@
    PostAccountsRequestBodyCompany'Structure'EnumFreeZoneEstablishment
  | -- | Represents the JSON value @"free_zone_llc"@
    PostAccountsRequestBodyCompany'Structure'EnumFreeZoneLlc
  | -- | Represents the JSON value @"government_instrumentality"@
    PostAccountsRequestBodyCompany'Structure'EnumGovernmentInstrumentality
  | -- | Represents the JSON value @"governmental_unit"@
    PostAccountsRequestBodyCompany'Structure'EnumGovernmentalUnit
  | -- | Represents the JSON value @"incorporated_non_profit"@
    PostAccountsRequestBodyCompany'Structure'EnumIncorporatedNonProfit
  | -- | Represents the JSON value @"incorporated_partnership"@
    PostAccountsRequestBodyCompany'Structure'EnumIncorporatedPartnership
  | -- | Represents the JSON value @"limited_liability_partnership"@
    PostAccountsRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership
  | -- | Represents the JSON value @"llc"@
    PostAccountsRequestBodyCompany'Structure'EnumLlc
  | -- | Represents the JSON value @"multi_member_llc"@
    PostAccountsRequestBodyCompany'Structure'EnumMultiMemberLlc
  | -- | Represents the JSON value @"private_company"@
    PostAccountsRequestBodyCompany'Structure'EnumPrivateCompany
  | -- | Represents the JSON value @"private_corporation"@
    PostAccountsRequestBodyCompany'Structure'EnumPrivateCorporation
  | -- | Represents the JSON value @"private_partnership"@
    PostAccountsRequestBodyCompany'Structure'EnumPrivatePartnership
  | -- | Represents the JSON value @"public_company"@
    PostAccountsRequestBodyCompany'Structure'EnumPublicCompany
  | -- | Represents the JSON value @"public_corporation"@
    PostAccountsRequestBodyCompany'Structure'EnumPublicCorporation
  | -- | Represents the JSON value @"public_partnership"@
    PostAccountsRequestBodyCompany'Structure'EnumPublicPartnership
  | -- | Represents the JSON value @"single_member_llc"@
    PostAccountsRequestBodyCompany'Structure'EnumSingleMemberLlc
  | -- | Represents the JSON value @"sole_establishment"@
    PostAccountsRequestBodyCompany'Structure'EnumSoleEstablishment
  | -- | Represents the JSON value @"sole_proprietorship"@
    PostAccountsRequestBodyCompany'Structure'EnumSoleProprietorship
  | -- | Represents the JSON value @"tax_exempt_government_instrumentality"@
    PostAccountsRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality
  | -- | Represents the JSON value @"unincorporated_association"@
    PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedAssociation
  | -- | Represents the JSON value @"unincorporated_non_profit"@
    PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedNonProfit
  | -- | Represents the JSON value @"unincorporated_partnership"@
    PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedPartnership
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'Structure' where
  toJSON (PostAccountsRequestBodyCompany'Structure'Other val) = val
  toJSON (PostAccountsRequestBodyCompany'Structure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumEmptyString) = ""
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumFreeZoneEstablishment) = "free_zone_establishment"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumFreeZoneLlc) = "free_zone_llc"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumGovernmentInstrumentality) = "government_instrumentality"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumGovernmentalUnit) = "governmental_unit"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumIncorporatedNonProfit) = "incorporated_non_profit"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumIncorporatedPartnership) = "incorporated_partnership"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership) = "limited_liability_partnership"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumLlc) = "llc"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumMultiMemberLlc) = "multi_member_llc"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumPrivateCompany) = "private_company"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumPrivateCorporation) = "private_corporation"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumPrivatePartnership) = "private_partnership"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumPublicCompany) = "public_company"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumPublicCorporation) = "public_corporation"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumPublicPartnership) = "public_partnership"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumSingleMemberLlc) = "single_member_llc"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumSoleEstablishment) = "sole_establishment"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumSoleProprietorship) = "sole_proprietorship"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality) = "tax_exempt_government_instrumentality"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedAssociation) = "unincorporated_association"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedNonProfit) = "unincorporated_non_profit"
  toJSON (PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedPartnership) = "unincorporated_partnership"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'Structure' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> PostAccountsRequestBodyCompany'Structure'EnumEmptyString
            | val GHC.Classes.== "free_zone_establishment" -> PostAccountsRequestBodyCompany'Structure'EnumFreeZoneEstablishment
            | val GHC.Classes.== "free_zone_llc" -> PostAccountsRequestBodyCompany'Structure'EnumFreeZoneLlc
            | val GHC.Classes.== "government_instrumentality" -> PostAccountsRequestBodyCompany'Structure'EnumGovernmentInstrumentality
            | val GHC.Classes.== "governmental_unit" -> PostAccountsRequestBodyCompany'Structure'EnumGovernmentalUnit
            | val GHC.Classes.== "incorporated_non_profit" -> PostAccountsRequestBodyCompany'Structure'EnumIncorporatedNonProfit
            | val GHC.Classes.== "incorporated_partnership" -> PostAccountsRequestBodyCompany'Structure'EnumIncorporatedPartnership
            | val GHC.Classes.== "limited_liability_partnership" -> PostAccountsRequestBodyCompany'Structure'EnumLimitedLiabilityPartnership
            | val GHC.Classes.== "llc" -> PostAccountsRequestBodyCompany'Structure'EnumLlc
            | val GHC.Classes.== "multi_member_llc" -> PostAccountsRequestBodyCompany'Structure'EnumMultiMemberLlc
            | val GHC.Classes.== "private_company" -> PostAccountsRequestBodyCompany'Structure'EnumPrivateCompany
            | val GHC.Classes.== "private_corporation" -> PostAccountsRequestBodyCompany'Structure'EnumPrivateCorporation
            | val GHC.Classes.== "private_partnership" -> PostAccountsRequestBodyCompany'Structure'EnumPrivatePartnership
            | val GHC.Classes.== "public_company" -> PostAccountsRequestBodyCompany'Structure'EnumPublicCompany
            | val GHC.Classes.== "public_corporation" -> PostAccountsRequestBodyCompany'Structure'EnumPublicCorporation
            | val GHC.Classes.== "public_partnership" -> PostAccountsRequestBodyCompany'Structure'EnumPublicPartnership
            | val GHC.Classes.== "single_member_llc" -> PostAccountsRequestBodyCompany'Structure'EnumSingleMemberLlc
            | val GHC.Classes.== "sole_establishment" -> PostAccountsRequestBodyCompany'Structure'EnumSoleEstablishment
            | val GHC.Classes.== "sole_proprietorship" -> PostAccountsRequestBodyCompany'Structure'EnumSoleProprietorship
            | val GHC.Classes.== "tax_exempt_government_instrumentality" -> PostAccountsRequestBodyCompany'Structure'EnumTaxExemptGovernmentInstrumentality
            | val GHC.Classes.== "unincorporated_association" -> PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedAssociation
            | val GHC.Classes.== "unincorporated_non_profit" -> PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedNonProfit
            | val GHC.Classes.== "unincorporated_partnership" -> PostAccountsRequestBodyCompany'Structure'EnumUnincorporatedPartnership
            | GHC.Base.otherwise -> PostAccountsRequestBodyCompany'Structure'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.verification@ in the specification.
data PostAccountsRequestBodyCompany'Verification' = PostAccountsRequestBodyCompany'Verification'
  { -- | document
    postAccountsRequestBodyCompany'Verification'Document :: (GHC.Maybe.Maybe PostAccountsRequestBodyCompany'Verification'Document')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'Verification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification'Document obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification'Document obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'Verification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'Verification'" (\obj -> GHC.Base.pure PostAccountsRequestBodyCompany'Verification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))

-- | Create a new 'PostAccountsRequestBodyCompany'Verification'' with all required fields.
mkPostAccountsRequestBodyCompany'Verification' :: PostAccountsRequestBodyCompany'Verification'
mkPostAccountsRequestBodyCompany'Verification' = PostAccountsRequestBodyCompany'Verification' {postAccountsRequestBodyCompany'Verification'Document = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.company.properties.verification.properties.document@ in the specification.
data PostAccountsRequestBodyCompany'Verification'Document' = PostAccountsRequestBodyCompany'Verification'Document'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsRequestBodyCompany'Verification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsRequestBodyCompany'Verification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyCompany'Verification'Document' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification'Document'Front obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyCompany'Verification'Document'Front obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyCompany'Verification'Document' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyCompany'Verification'Document'" (\obj -> (GHC.Base.pure PostAccountsRequestBodyCompany'Verification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))

-- | Create a new 'PostAccountsRequestBodyCompany'Verification'Document'' with all required fields.
mkPostAccountsRequestBodyCompany'Verification'Document' :: PostAccountsRequestBodyCompany'Verification'Document'
mkPostAccountsRequestBodyCompany'Verification'Document' =
  PostAccountsRequestBodyCompany'Verification'Document'
    { postAccountsRequestBodyCompany'Verification'Document'Back = GHC.Maybe.Nothing,
      postAccountsRequestBodyCompany'Verification'Document'Front = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents@ in the specification.
--
-- Documents that may be submitted to satisfy various informational requests.
data PostAccountsRequestBodyDocuments' = PostAccountsRequestBodyDocuments'
  { -- | bank_account_ownership_verification
    postAccountsRequestBodyDocuments'BankAccountOwnershipVerification :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification'),
    -- | company_license
    postAccountsRequestBodyDocuments'CompanyLicense :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'CompanyLicense'),
    -- | company_memorandum_of_association
    postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'),
    -- | company_ministerial_decree
    postAccountsRequestBodyDocuments'CompanyMinisterialDecree :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'CompanyMinisterialDecree'),
    -- | company_registration_verification
    postAccountsRequestBodyDocuments'CompanyRegistrationVerification :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'CompanyRegistrationVerification'),
    -- | company_tax_id_verification
    postAccountsRequestBodyDocuments'CompanyTaxIdVerification :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'CompanyTaxIdVerification'),
    -- | proof_of_registration
    postAccountsRequestBodyDocuments'ProofOfRegistration :: (GHC.Maybe.Maybe PostAccountsRequestBodyDocuments'ProofOfRegistration')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'BankAccountOwnershipVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_license" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyLicense obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_memorandum_of_association" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_ministerial_decree" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMinisterialDecree obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_registration_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyRegistrationVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_tax_id_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyTaxIdVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proof_of_registration" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'ProofOfRegistration obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bank_account_ownership_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'BankAccountOwnershipVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_license" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyLicense obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_memorandum_of_association" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_ministerial_decree" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMinisterialDecree obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_registration_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyRegistrationVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("company_tax_id_verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyTaxIdVerification obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("proof_of_registration" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'ProofOfRegistration obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'" (\obj -> ((((((GHC.Base.pure PostAccountsRequestBodyDocuments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bank_account_ownership_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_license")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_memorandum_of_association")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_ministerial_decree")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_registration_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "company_tax_id_verification")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "proof_of_registration"))

-- | Create a new 'PostAccountsRequestBodyDocuments'' with all required fields.
mkPostAccountsRequestBodyDocuments' :: PostAccountsRequestBodyDocuments'
mkPostAccountsRequestBodyDocuments' =
  PostAccountsRequestBodyDocuments'
    { postAccountsRequestBodyDocuments'BankAccountOwnershipVerification = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments'CompanyLicense = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments'CompanyMinisterialDecree = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments'CompanyRegistrationVerification = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments'CompanyTaxIdVerification = GHC.Maybe.Nothing,
      postAccountsRequestBodyDocuments'ProofOfRegistration = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.bank_account_ownership_verification@ in the specification.
data PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' = PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification'
  { -- | files
    postAccountsRequestBodyDocuments'BankAccountOwnershipVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'BankAccountOwnershipVerification'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'BankAccountOwnershipVerification'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification'' with all required fields.
mkPostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' :: PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification'
mkPostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' = PostAccountsRequestBodyDocuments'BankAccountOwnershipVerification' {postAccountsRequestBodyDocuments'BankAccountOwnershipVerification'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_license@ in the specification.
data PostAccountsRequestBodyDocuments'CompanyLicense' = PostAccountsRequestBodyDocuments'CompanyLicense'
  { -- | files
    postAccountsRequestBodyDocuments'CompanyLicense'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'CompanyLicense' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyLicense'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyLicense'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'CompanyLicense' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'CompanyLicense'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'CompanyLicense' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'CompanyLicense'' with all required fields.
mkPostAccountsRequestBodyDocuments'CompanyLicense' :: PostAccountsRequestBodyDocuments'CompanyLicense'
mkPostAccountsRequestBodyDocuments'CompanyLicense' = PostAccountsRequestBodyDocuments'CompanyLicense' {postAccountsRequestBodyDocuments'CompanyLicense'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_memorandum_of_association@ in the specification.
data PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' = PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'
  { -- | files
    postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'' with all required fields.
mkPostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' :: PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'
mkPostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' = PostAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation' {postAccountsRequestBodyDocuments'CompanyMemorandumOfAssociation'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_ministerial_decree@ in the specification.
data PostAccountsRequestBodyDocuments'CompanyMinisterialDecree' = PostAccountsRequestBodyDocuments'CompanyMinisterialDecree'
  { -- | files
    postAccountsRequestBodyDocuments'CompanyMinisterialDecree'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'CompanyMinisterialDecree' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMinisterialDecree'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyMinisterialDecree'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'CompanyMinisterialDecree' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'CompanyMinisterialDecree'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'CompanyMinisterialDecree' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'CompanyMinisterialDecree'' with all required fields.
mkPostAccountsRequestBodyDocuments'CompanyMinisterialDecree' :: PostAccountsRequestBodyDocuments'CompanyMinisterialDecree'
mkPostAccountsRequestBodyDocuments'CompanyMinisterialDecree' = PostAccountsRequestBodyDocuments'CompanyMinisterialDecree' {postAccountsRequestBodyDocuments'CompanyMinisterialDecree'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_registration_verification@ in the specification.
data PostAccountsRequestBodyDocuments'CompanyRegistrationVerification' = PostAccountsRequestBodyDocuments'CompanyRegistrationVerification'
  { -- | files
    postAccountsRequestBodyDocuments'CompanyRegistrationVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'CompanyRegistrationVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyRegistrationVerification'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyRegistrationVerification'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'CompanyRegistrationVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'CompanyRegistrationVerification'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'CompanyRegistrationVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'CompanyRegistrationVerification'' with all required fields.
mkPostAccountsRequestBodyDocuments'CompanyRegistrationVerification' :: PostAccountsRequestBodyDocuments'CompanyRegistrationVerification'
mkPostAccountsRequestBodyDocuments'CompanyRegistrationVerification' = PostAccountsRequestBodyDocuments'CompanyRegistrationVerification' {postAccountsRequestBodyDocuments'CompanyRegistrationVerification'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.company_tax_id_verification@ in the specification.
data PostAccountsRequestBodyDocuments'CompanyTaxIdVerification' = PostAccountsRequestBodyDocuments'CompanyTaxIdVerification'
  { -- | files
    postAccountsRequestBodyDocuments'CompanyTaxIdVerification'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'CompanyTaxIdVerification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyTaxIdVerification'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'CompanyTaxIdVerification'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'CompanyTaxIdVerification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'CompanyTaxIdVerification'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'CompanyTaxIdVerification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'CompanyTaxIdVerification'' with all required fields.
mkPostAccountsRequestBodyDocuments'CompanyTaxIdVerification' :: PostAccountsRequestBodyDocuments'CompanyTaxIdVerification'
mkPostAccountsRequestBodyDocuments'CompanyTaxIdVerification' = PostAccountsRequestBodyDocuments'CompanyTaxIdVerification' {postAccountsRequestBodyDocuments'CompanyTaxIdVerification'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.documents.properties.proof_of_registration@ in the specification.
data PostAccountsRequestBodyDocuments'ProofOfRegistration' = PostAccountsRequestBodyDocuments'ProofOfRegistration'
  { -- | files
    postAccountsRequestBodyDocuments'ProofOfRegistration'Files :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyDocuments'ProofOfRegistration' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'ProofOfRegistration'Files obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("files" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyDocuments'ProofOfRegistration'Files obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyDocuments'ProofOfRegistration' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyDocuments'ProofOfRegistration'" (\obj -> GHC.Base.pure PostAccountsRequestBodyDocuments'ProofOfRegistration' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "files"))

-- | Create a new 'PostAccountsRequestBodyDocuments'ProofOfRegistration'' with all required fields.
mkPostAccountsRequestBodyDocuments'ProofOfRegistration' :: PostAccountsRequestBodyDocuments'ProofOfRegistration'
mkPostAccountsRequestBodyDocuments'ProofOfRegistration' = PostAccountsRequestBodyDocuments'ProofOfRegistration' {postAccountsRequestBodyDocuments'ProofOfRegistration'Files = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual@ in the specification.
--
-- Information about the person represented by the account. This field is null unless \`business_type\` is set to \`individual\`.
data PostAccountsRequestBodyIndividual' = PostAccountsRequestBodyIndividual'
  { -- | address
    postAccountsRequestBodyIndividual'Address :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'Address'),
    -- | address_kana
    postAccountsRequestBodyIndividual'AddressKana :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'AddressKana'),
    -- | address_kanji
    postAccountsRequestBodyIndividual'AddressKanji :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'AddressKanji'),
    -- | dob
    postAccountsRequestBodyIndividual'Dob :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'Dob'Variants),
    -- | email
    postAccountsRequestBodyIndividual'Email :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyIndividual'FirstName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'FirstNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | first_name_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'FirstNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | full_name_aliases
    postAccountsRequestBodyIndividual'FullNameAliases :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'FullNameAliases'Variants),
    -- | gender
    postAccountsRequestBodyIndividual'Gender :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | id_number
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'IdNumber :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | id_number_secondary
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'IdNumberSecondary :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyIndividual'LastName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'LastNameKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | last_name_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'LastNameKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | maiden_name
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'MaidenName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | metadata
    postAccountsRequestBodyIndividual'Metadata :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'Metadata'Variants),
    -- | phone
    postAccountsRequestBodyIndividual'Phone :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | political_exposure
    postAccountsRequestBodyIndividual'PoliticalExposure :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'PoliticalExposure'),
    -- | registered_address
    postAccountsRequestBodyIndividual'RegisteredAddress :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'RegisteredAddress'),
    -- | ssn_last_4
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'SsnLast_4 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | verification
    postAccountsRequestBodyIndividual'Verification :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'Verification')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Dob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Gender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'IdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'IdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'LastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'LastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'LastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'MaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'PoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'SsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("address_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("dob" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Dob obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("email" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FirstName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FirstNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("first_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FirstNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("full_name_aliases" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'FullNameAliases obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("gender" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Gender obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'IdNumber obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id_number_secondary" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'IdNumberSecondary obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'LastName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'LastNameKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("last_name_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'LastNameKanji obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("maiden_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'MaidenName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("phone" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Phone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("political_exposure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'PoliticalExposure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("registered_address" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ssn_last_4" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'SsnLast_4 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("verification" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'" (\obj -> (((((((((((((((((((((GHC.Base.pure PostAccountsRequestBodyIndividual' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "address_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "dob")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "first_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "full_name_aliases")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "gender")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id_number_secondary")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "last_name_kanji")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "maiden_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "phone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "political_exposure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "registered_address")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ssn_last_4")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "verification"))

-- | Create a new 'PostAccountsRequestBodyIndividual'' with all required fields.
mkPostAccountsRequestBodyIndividual' :: PostAccountsRequestBodyIndividual'
mkPostAccountsRequestBodyIndividual' =
  PostAccountsRequestBodyIndividual'
    { postAccountsRequestBodyIndividual'Address = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Dob = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Email = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'FirstName = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'FirstNameKana = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'FirstNameKanji = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'FullNameAliases = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Gender = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'IdNumber = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'IdNumberSecondary = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'LastName = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'LastNameKana = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'LastNameKanji = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'MaidenName = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Metadata = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Phone = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'PoliticalExposure = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'RegisteredAddress = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'SsnLast_4 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Verification = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address@ in the specification.
data PostAccountsRequestBodyIndividual'Address' = PostAccountsRequestBodyIndividual'Address'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyIndividual'Address'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'Address'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyIndividual'Address'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyIndividual'Address'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'Address'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'Address'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Address' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'State obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Address'State obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Address' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'Address'" (\obj -> (((((GHC.Base.pure PostAccountsRequestBodyIndividual'Address' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'PostAccountsRequestBodyIndividual'Address'' with all required fields.
mkPostAccountsRequestBodyIndividual'Address' :: PostAccountsRequestBodyIndividual'Address'
mkPostAccountsRequestBodyIndividual'Address' =
  PostAccountsRequestBodyIndividual'Address'
    { postAccountsRequestBodyIndividual'Address'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Address'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Address'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Address'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Address'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Address'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address_kana@ in the specification.
data PostAccountsRequestBodyIndividual'AddressKana' = PostAccountsRequestBodyIndividual'AddressKana'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKana'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'AddressKana' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Town obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKana'Town obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'AddressKana' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'AddressKana'" (\obj -> ((((((GHC.Base.pure PostAccountsRequestBodyIndividual'AddressKana' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))

-- | Create a new 'PostAccountsRequestBodyIndividual'AddressKana'' with all required fields.
mkPostAccountsRequestBodyIndividual'AddressKana' :: PostAccountsRequestBodyIndividual'AddressKana'
mkPostAccountsRequestBodyIndividual'AddressKana' =
  PostAccountsRequestBodyIndividual'AddressKana'
    { postAccountsRequestBodyIndividual'AddressKana'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana'State = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKana'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.address_kanji@ in the specification.
data PostAccountsRequestBodyIndividual'AddressKanji' = PostAccountsRequestBodyIndividual'AddressKanji'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | town
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'AddressKanji'Town :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'AddressKanji' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Town obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'State obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("town" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'AddressKanji'Town obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'AddressKanji' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'AddressKanji'" (\obj -> ((((((GHC.Base.pure PostAccountsRequestBodyIndividual'AddressKanji' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "town"))

-- | Create a new 'PostAccountsRequestBodyIndividual'AddressKanji'' with all required fields.
mkPostAccountsRequestBodyIndividual'AddressKanji' :: PostAccountsRequestBodyIndividual'AddressKanji'
mkPostAccountsRequestBodyIndividual'AddressKanji' =
  PostAccountsRequestBodyIndividual'AddressKanji'
    { postAccountsRequestBodyIndividual'AddressKanji'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji'State = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'AddressKanji'Town = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.dob.anyOf@ in the specification.
data PostAccountsRequestBodyIndividual'Dob'OneOf1 = PostAccountsRequestBodyIndividual'Dob'OneOf1
  { -- | day
    postAccountsRequestBodyIndividual'Dob'OneOf1Day :: GHC.Types.Int,
    -- | month
    postAccountsRequestBodyIndividual'Dob'OneOf1Month :: GHC.Types.Int,
    -- | year
    postAccountsRequestBodyIndividual'Dob'OneOf1Year :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Dob'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyIndividual'Dob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyIndividual'Dob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyIndividual'Dob'OneOf1Year obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["day" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyIndividual'Dob'OneOf1Day obj] : ["month" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyIndividual'Dob'OneOf1Month obj] : ["year" Data.Aeson.Types.ToJSON..= postAccountsRequestBodyIndividual'Dob'OneOf1Year obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Dob'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'Dob'OneOf1" (\obj -> ((GHC.Base.pure PostAccountsRequestBodyIndividual'Dob'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "day")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "month")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "year"))

-- | Create a new 'PostAccountsRequestBodyIndividual'Dob'OneOf1' with all required fields.
mkPostAccountsRequestBodyIndividual'Dob'OneOf1 ::
  -- | 'postAccountsRequestBodyIndividual'Dob'OneOf1Day'
  GHC.Types.Int ->
  -- | 'postAccountsRequestBodyIndividual'Dob'OneOf1Month'
  GHC.Types.Int ->
  -- | 'postAccountsRequestBodyIndividual'Dob'OneOf1Year'
  GHC.Types.Int ->
  PostAccountsRequestBodyIndividual'Dob'OneOf1
mkPostAccountsRequestBodyIndividual'Dob'OneOf1 postAccountsRequestBodyIndividual'Dob'OneOf1Day postAccountsRequestBodyIndividual'Dob'OneOf1Month postAccountsRequestBodyIndividual'Dob'OneOf1Year =
  PostAccountsRequestBodyIndividual'Dob'OneOf1
    { postAccountsRequestBodyIndividual'Dob'OneOf1Day = postAccountsRequestBodyIndividual'Dob'OneOf1Day,
      postAccountsRequestBodyIndividual'Dob'OneOf1Month = postAccountsRequestBodyIndividual'Dob'OneOf1Month,
      postAccountsRequestBodyIndividual'Dob'OneOf1Year = postAccountsRequestBodyIndividual'Dob'OneOf1Year
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.dob.anyOf@ in the specification.
data PostAccountsRequestBodyIndividual'Dob'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodyIndividual'Dob'EmptyString
  | PostAccountsRequestBodyIndividual'Dob'PostAccountsRequestBodyIndividual'Dob'OneOf1 PostAccountsRequestBodyIndividual'Dob'OneOf1
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Dob'Variants where
  toJSON (PostAccountsRequestBodyIndividual'Dob'PostAccountsRequestBodyIndividual'Dob'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodyIndividual'Dob'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Dob'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodyIndividual'Dob'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodyIndividual'Dob'PostAccountsRequestBodyIndividual'Dob'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.full_name_aliases.anyOf@ in the specification.
data PostAccountsRequestBodyIndividual'FullNameAliases'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodyIndividual'FullNameAliases'EmptyString
  | PostAccountsRequestBodyIndividual'FullNameAliases'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'FullNameAliases'Variants where
  toJSON (PostAccountsRequestBodyIndividual'FullNameAliases'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodyIndividual'FullNameAliases'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'FullNameAliases'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodyIndividual'FullNameAliases'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodyIndividual'FullNameAliases'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.metadata.anyOf@ in the specification.
data PostAccountsRequestBodyIndividual'Metadata'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodyIndividual'Metadata'EmptyString
  | PostAccountsRequestBodyIndividual'Metadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Metadata'Variants where
  toJSON (PostAccountsRequestBodyIndividual'Metadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodyIndividual'Metadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Metadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodyIndividual'Metadata'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodyIndividual'Metadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.political_exposure@ in the specification.
data PostAccountsRequestBodyIndividual'PoliticalExposure'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyIndividual'PoliticalExposure'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyIndividual'PoliticalExposure'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"existing"@
    PostAccountsRequestBodyIndividual'PoliticalExposure'EnumExisting
  | -- | Represents the JSON value @"none"@
    PostAccountsRequestBodyIndividual'PoliticalExposure'EnumNone
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'PoliticalExposure' where
  toJSON (PostAccountsRequestBodyIndividual'PoliticalExposure'Other val) = val
  toJSON (PostAccountsRequestBodyIndividual'PoliticalExposure'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyIndividual'PoliticalExposure'EnumExisting) = "existing"
  toJSON (PostAccountsRequestBodyIndividual'PoliticalExposure'EnumNone) = "none"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'PoliticalExposure' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "existing" -> PostAccountsRequestBodyIndividual'PoliticalExposure'EnumExisting
            | val GHC.Classes.== "none" -> PostAccountsRequestBodyIndividual'PoliticalExposure'EnumNone
            | GHC.Base.otherwise -> PostAccountsRequestBodyIndividual'PoliticalExposure'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.registered_address@ in the specification.
data PostAccountsRequestBodyIndividual'RegisteredAddress' = PostAccountsRequestBodyIndividual'RegisteredAddress'
  { -- | city
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postAccountsRequestBodyIndividual'RegisteredAddress'City :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | country
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'RegisteredAddress'Country :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line1
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyIndividual'RegisteredAddress'Line1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | line2
    --
    -- Constraints:
    --
    -- * Maximum length of 200
    postAccountsRequestBodyIndividual'RegisteredAddress'Line2 :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | postal_code
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'RegisteredAddress'PostalCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | state
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyIndividual'RegisteredAddress'State :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'RegisteredAddress' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'State obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("city" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'City obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("country" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'Country obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line1" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'Line1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line2" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'Line2 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("postal_code" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'PostalCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("state" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'RegisteredAddress'State obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'RegisteredAddress' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'RegisteredAddress'" (\obj -> (((((GHC.Base.pure PostAccountsRequestBodyIndividual'RegisteredAddress' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "city")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "country")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line2")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "postal_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "state"))

-- | Create a new 'PostAccountsRequestBodyIndividual'RegisteredAddress'' with all required fields.
mkPostAccountsRequestBodyIndividual'RegisteredAddress' :: PostAccountsRequestBodyIndividual'RegisteredAddress'
mkPostAccountsRequestBodyIndividual'RegisteredAddress' =
  PostAccountsRequestBodyIndividual'RegisteredAddress'
    { postAccountsRequestBodyIndividual'RegisteredAddress'City = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'RegisteredAddress'Country = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'RegisteredAddress'Line1 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'RegisteredAddress'Line2 = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'RegisteredAddress'PostalCode = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'RegisteredAddress'State = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification@ in the specification.
data PostAccountsRequestBodyIndividual'Verification' = PostAccountsRequestBodyIndividual'Verification'
  { -- | additional_document
    postAccountsRequestBodyIndividual'Verification'AdditionalDocument :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'Verification'AdditionalDocument'),
    -- | document
    postAccountsRequestBodyIndividual'Verification'Document :: (GHC.Maybe.Maybe PostAccountsRequestBodyIndividual'Verification'Document')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Verification' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'Document obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("additional_document" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'AdditionalDocument obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("document" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'Document obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Verification' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'Verification'" (\obj -> (GHC.Base.pure PostAccountsRequestBodyIndividual'Verification' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "additional_document")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "document"))

-- | Create a new 'PostAccountsRequestBodyIndividual'Verification'' with all required fields.
mkPostAccountsRequestBodyIndividual'Verification' :: PostAccountsRequestBodyIndividual'Verification'
mkPostAccountsRequestBodyIndividual'Verification' =
  PostAccountsRequestBodyIndividual'Verification'
    { postAccountsRequestBodyIndividual'Verification'AdditionalDocument = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Verification'Document = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification.properties.additional_document@ in the specification.
data PostAccountsRequestBodyIndividual'Verification'AdditionalDocument' = PostAccountsRequestBodyIndividual'Verification'AdditionalDocument'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Verification'AdditionalDocument' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Front obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Front obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Verification'AdditionalDocument' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'Verification'AdditionalDocument'" (\obj -> (GHC.Base.pure PostAccountsRequestBodyIndividual'Verification'AdditionalDocument' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))

-- | Create a new 'PostAccountsRequestBodyIndividual'Verification'AdditionalDocument'' with all required fields.
mkPostAccountsRequestBodyIndividual'Verification'AdditionalDocument' :: PostAccountsRequestBodyIndividual'Verification'AdditionalDocument'
mkPostAccountsRequestBodyIndividual'Verification'AdditionalDocument' =
  PostAccountsRequestBodyIndividual'Verification'AdditionalDocument'
    { postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Back = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Verification'AdditionalDocument'Front = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.individual.properties.verification.properties.document@ in the specification.
data PostAccountsRequestBodyIndividual'Verification'Document' = PostAccountsRequestBodyIndividual'Verification'Document'
  { -- | back
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsRequestBodyIndividual'Verification'Document'Back :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | front
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postAccountsRequestBodyIndividual'Verification'Document'Front :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyIndividual'Verification'Document' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'Document'Front obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("back" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'Document'Back obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("front" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyIndividual'Verification'Document'Front obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyIndividual'Verification'Document' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyIndividual'Verification'Document'" (\obj -> (GHC.Base.pure PostAccountsRequestBodyIndividual'Verification'Document' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "back")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "front"))

-- | Create a new 'PostAccountsRequestBodyIndividual'Verification'Document'' with all required fields.
mkPostAccountsRequestBodyIndividual'Verification'Document' :: PostAccountsRequestBodyIndividual'Verification'Document'
mkPostAccountsRequestBodyIndividual'Verification'Document' =
  PostAccountsRequestBodyIndividual'Verification'Document'
    { postAccountsRequestBodyIndividual'Verification'Document'Back = GHC.Maybe.Nothing,
      postAccountsRequestBodyIndividual'Verification'Document'Front = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.metadata.anyOf@ in the specification.
--
-- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
data PostAccountsRequestBodyMetadata'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodyMetadata'EmptyString
  | PostAccountsRequestBodyMetadata'Object Data.Aeson.Types.Internal.Object
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyMetadata'Variants where
  toJSON (PostAccountsRequestBodyMetadata'Object a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodyMetadata'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyMetadata'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodyMetadata'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodyMetadata'Object Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings@ in the specification.
--
-- Options for customizing how the account functions within Stripe.
data PostAccountsRequestBodySettings' = PostAccountsRequestBodySettings'
  { -- | bacs_debit_payments
    postAccountsRequestBodySettings'BacsDebitPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'BacsDebitPayments'),
    -- | branding
    postAccountsRequestBodySettings'Branding :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Branding'),
    -- | card_issuing
    postAccountsRequestBodySettings'CardIssuing :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardIssuing'),
    -- | card_payments
    postAccountsRequestBodySettings'CardPayments :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardPayments'),
    -- | payments
    postAccountsRequestBodySettings'Payments :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Payments'),
    -- | payouts
    postAccountsRequestBodySettings'Payouts :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Payouts'),
    -- | treasury
    postAccountsRequestBodySettings'Treasury :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Treasury')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'BacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'BacsDebitPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("branding" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_issuing" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card_payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payments" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("payouts" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("treasury" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'" (\obj -> ((((((GHC.Base.pure PostAccountsRequestBodySettings' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "branding")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_issuing")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card_payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payments")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "payouts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "treasury"))

-- | Create a new 'PostAccountsRequestBodySettings'' with all required fields.
mkPostAccountsRequestBodySettings' :: PostAccountsRequestBodySettings'
mkPostAccountsRequestBodySettings' =
  PostAccountsRequestBodySettings'
    { postAccountsRequestBodySettings'BacsDebitPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Branding = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardIssuing = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardPayments = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payments = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payouts = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Treasury = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.bacs_debit_payments@ in the specification.
data PostAccountsRequestBodySettings'BacsDebitPayments' = PostAccountsRequestBodySettings'BacsDebitPayments'
  { -- | display_name
    postAccountsRequestBodySettings'BacsDebitPayments'DisplayName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'BacsDebitPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'BacsDebitPayments'DisplayName obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_name" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'BacsDebitPayments'DisplayName obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'BacsDebitPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'BacsDebitPayments'" (\obj -> GHC.Base.pure PostAccountsRequestBodySettings'BacsDebitPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_name"))

-- | Create a new 'PostAccountsRequestBodySettings'BacsDebitPayments'' with all required fields.
mkPostAccountsRequestBodySettings'BacsDebitPayments' :: PostAccountsRequestBodySettings'BacsDebitPayments'
mkPostAccountsRequestBodySettings'BacsDebitPayments' = PostAccountsRequestBodySettings'BacsDebitPayments' {postAccountsRequestBodySettings'BacsDebitPayments'DisplayName = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.branding@ in the specification.
data PostAccountsRequestBodySettings'Branding' = PostAccountsRequestBodySettings'Branding'
  { -- | icon
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodySettings'Branding'Icon :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | logo
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodySettings'Branding'Logo :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | primary_color
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodySettings'Branding'PrimaryColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | secondary_color
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodySettings'Branding'SecondaryColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Branding' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("icon" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'Icon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("logo" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'Logo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("primary_color" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'PrimaryColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("secondary_color" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'SecondaryColor obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("icon" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'Icon obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("logo" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'Logo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("primary_color" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'PrimaryColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("secondary_color" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Branding'SecondaryColor obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Branding' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'Branding'" (\obj -> (((GHC.Base.pure PostAccountsRequestBodySettings'Branding' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "icon")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "logo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "primary_color")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "secondary_color"))

-- | Create a new 'PostAccountsRequestBodySettings'Branding'' with all required fields.
mkPostAccountsRequestBodySettings'Branding' :: PostAccountsRequestBodySettings'Branding'
mkPostAccountsRequestBodySettings'Branding' =
  PostAccountsRequestBodySettings'Branding'
    { postAccountsRequestBodySettings'Branding'Icon = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Branding'Logo = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Branding'PrimaryColor = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Branding'SecondaryColor = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing@ in the specification.
data PostAccountsRequestBodySettings'CardIssuing' = PostAccountsRequestBodySettings'CardIssuing'
  { -- | tos_acceptance
    postAccountsRequestBodySettings'CardIssuing'TosAcceptance :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardIssuing'TosAcceptance')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardIssuing' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardIssuing' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'CardIssuing'" (\obj -> GHC.Base.pure PostAccountsRequestBodySettings'CardIssuing' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance"))

-- | Create a new 'PostAccountsRequestBodySettings'CardIssuing'' with all required fields.
mkPostAccountsRequestBodySettings'CardIssuing' :: PostAccountsRequestBodySettings'CardIssuing'
mkPostAccountsRequestBodySettings'CardIssuing' = PostAccountsRequestBodySettings'CardIssuing' {postAccountsRequestBodySettings'CardIssuing'TosAcceptance = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing.properties.tos_acceptance@ in the specification.
data PostAccountsRequestBodySettings'CardIssuing'TosAcceptance' = PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'
  { -- | date
    postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | ip
    postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_agent
    postAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardIssuing'TosAcceptance' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardIssuing'TosAcceptance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'" (\obj -> ((GHC.Base.pure PostAccountsRequestBodySettings'CardIssuing'TosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))

-- | Create a new 'PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'' with all required fields.
mkPostAccountsRequestBodySettings'CardIssuing'TosAcceptance' :: PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'
mkPostAccountsRequestBodySettings'CardIssuing'TosAcceptance' =
  PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'
    { postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Date = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardIssuing'TosAcceptance'Ip = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_issuing.properties.tos_acceptance.properties.user_agent.anyOf@ in the specification.
data PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'EmptyString
  | PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Variants where
  toJSON (PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodySettings'CardIssuing'TosAcceptance'UserAgent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments@ in the specification.
data PostAccountsRequestBodySettings'CardPayments' = PostAccountsRequestBodySettings'CardPayments'
  { -- | decline_on
    postAccountsRequestBodySettings'CardPayments'DeclineOn :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardPayments'DeclineOn'),
    -- | statement_descriptor_prefix
    --
    -- Constraints:
    --
    -- * Maximum length of 10
    postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefix :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | statement_descriptor_prefix_kana
    postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants),
    -- | statement_descriptor_prefix_kanji
    postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardPayments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_on" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'DeclineOn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("decline_on" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'DeclineOn obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefix obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_prefix_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardPayments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'CardPayments'" (\obj -> (((GHC.Base.pure PostAccountsRequestBodySettings'CardPayments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "decline_on")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_prefix")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_prefix_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_prefix_kanji"))

-- | Create a new 'PostAccountsRequestBodySettings'CardPayments'' with all required fields.
mkPostAccountsRequestBodySettings'CardPayments' :: PostAccountsRequestBodySettings'CardPayments'
mkPostAccountsRequestBodySettings'CardPayments' =
  PostAccountsRequestBodySettings'CardPayments'
    { postAccountsRequestBodySettings'CardPayments'DeclineOn = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefix = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.decline_on@ in the specification.
data PostAccountsRequestBodySettings'CardPayments'DeclineOn' = PostAccountsRequestBodySettings'CardPayments'DeclineOn'
  { -- | avs_failure
    postAccountsRequestBodySettings'CardPayments'DeclineOn'AvsFailure :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | cvc_failure
    postAccountsRequestBodySettings'CardPayments'DeclineOn'CvcFailure :: (GHC.Maybe.Maybe GHC.Types.Bool)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardPayments'DeclineOn' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avs_failure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'DeclineOn'AvsFailure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_failure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'DeclineOn'CvcFailure obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("avs_failure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'DeclineOn'AvsFailure obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cvc_failure" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'CardPayments'DeclineOn'CvcFailure obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardPayments'DeclineOn' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'CardPayments'DeclineOn'" (\obj -> (GHC.Base.pure PostAccountsRequestBodySettings'CardPayments'DeclineOn' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "avs_failure")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cvc_failure"))

-- | Create a new 'PostAccountsRequestBodySettings'CardPayments'DeclineOn'' with all required fields.
mkPostAccountsRequestBodySettings'CardPayments'DeclineOn' :: PostAccountsRequestBodySettings'CardPayments'DeclineOn'
mkPostAccountsRequestBodySettings'CardPayments'DeclineOn' =
  PostAccountsRequestBodySettings'CardPayments'DeclineOn'
    { postAccountsRequestBodySettings'CardPayments'DeclineOn'AvsFailure = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'CardPayments'DeclineOn'CvcFailure = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.statement_descriptor_prefix_kana.anyOf@ in the specification.
data PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'EmptyString
  | PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants where
  toJSON (PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKana'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.card_payments.properties.statement_descriptor_prefix_kanji.anyOf@ in the specification.
data PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'EmptyString
  | PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants where
  toJSON (PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodySettings'CardPayments'StatementDescriptorPrefixKanji'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payments@ in the specification.
data PostAccountsRequestBodySettings'Payments' = PostAccountsRequestBodySettings'Payments'
  { -- | statement_descriptor
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsRequestBodySettings'Payments'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | statement_descriptor_kana
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsRequestBodySettings'Payments'StatementDescriptorKana :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | statement_descriptor_kanji
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsRequestBodySettings'Payments'StatementDescriptorKanji :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Payments' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments'StatementDescriptorKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments'StatementDescriptorKanji obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments'StatementDescriptor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kana" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments'StatementDescriptorKana obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor_kanji" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payments'StatementDescriptorKanji obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Payments' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'Payments'" (\obj -> ((GHC.Base.pure PostAccountsRequestBodySettings'Payments' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_kana")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor_kanji"))

-- | Create a new 'PostAccountsRequestBodySettings'Payments'' with all required fields.
mkPostAccountsRequestBodySettings'Payments' :: PostAccountsRequestBodySettings'Payments'
mkPostAccountsRequestBodySettings'Payments' =
  PostAccountsRequestBodySettings'Payments'
    { postAccountsRequestBodySettings'Payments'StatementDescriptor = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payments'StatementDescriptorKana = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payments'StatementDescriptorKanji = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts@ in the specification.
data PostAccountsRequestBodySettings'Payouts' = PostAccountsRequestBodySettings'Payouts'
  { -- | debit_negative_balances
    postAccountsRequestBodySettings'Payouts'DebitNegativeBalances :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | schedule
    postAccountsRequestBodySettings'Payouts'Schedule :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Payouts'Schedule'),
    -- | statement_descriptor
    --
    -- Constraints:
    --
    -- * Maximum length of 22
    postAccountsRequestBodySettings'Payouts'StatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Payouts' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit_negative_balances" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'DebitNegativeBalances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("schedule" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'StatementDescriptor obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("debit_negative_balances" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'DebitNegativeBalances obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("schedule" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'StatementDescriptor obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Payouts' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'Payouts'" (\obj -> ((GHC.Base.pure PostAccountsRequestBodySettings'Payouts' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "debit_negative_balances")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "schedule")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor"))

-- | Create a new 'PostAccountsRequestBodySettings'Payouts'' with all required fields.
mkPostAccountsRequestBodySettings'Payouts' :: PostAccountsRequestBodySettings'Payouts'
mkPostAccountsRequestBodySettings'Payouts' =
  PostAccountsRequestBodySettings'Payouts'
    { postAccountsRequestBodySettings'Payouts'DebitNegativeBalances = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payouts'Schedule = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payouts'StatementDescriptor = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule@ in the specification.
data PostAccountsRequestBodySettings'Payouts'Schedule' = PostAccountsRequestBodySettings'Payouts'Schedule'
  { -- | delay_days
    postAccountsRequestBodySettings'Payouts'Schedule'DelayDays :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Variants),
    -- | interval
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodySettings'Payouts'Schedule'Interval :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Payouts'Schedule'Interval'),
    -- | monthly_anchor
    postAccountsRequestBodySettings'Payouts'Schedule'MonthlyAnchor :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | weekly_anchor
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Payouts'Schedule' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delay_days" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'DelayDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'Interval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'MonthlyAnchor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("weekly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("delay_days" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'DelayDays obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("interval" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'Interval obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("monthly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'MonthlyAnchor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("weekly_anchor" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Payouts'Schedule' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'Payouts'Schedule'" (\obj -> (((GHC.Base.pure PostAccountsRequestBodySettings'Payouts'Schedule' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "delay_days")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "interval")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "monthly_anchor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "weekly_anchor"))

-- | Create a new 'PostAccountsRequestBodySettings'Payouts'Schedule'' with all required fields.
mkPostAccountsRequestBodySettings'Payouts'Schedule' :: PostAccountsRequestBodySettings'Payouts'Schedule'
mkPostAccountsRequestBodySettings'Payouts'Schedule' =
  PostAccountsRequestBodySettings'Payouts'Schedule'
    { postAccountsRequestBodySettings'Payouts'Schedule'DelayDays = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payouts'Schedule'Interval = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payouts'Schedule'MonthlyAnchor = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.delay_days.anyOf@ in the specification.
data PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Variants
  = -- | Represents the JSON value @"minimum"@
    PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Minimum
  | PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Int GHC.Types.Int
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Variants where
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Minimum) = "minimum"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "minimum" -> GHC.Base.pure PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Minimum
        | GHC.Base.otherwise -> case (PostAccountsRequestBodySettings'Payouts'Schedule'DelayDays'Int Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.interval@ in the specification.
data PostAccountsRequestBodySettings'Payouts'Schedule'Interval'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodySettings'Payouts'Schedule'Interval'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodySettings'Payouts'Schedule'Interval'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"daily"@
    PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumDaily
  | -- | Represents the JSON value @"manual"@
    PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumManual
  | -- | Represents the JSON value @"monthly"@
    PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly
  | -- | Represents the JSON value @"weekly"@
    PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Payouts'Schedule'Interval' where
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'Interval'Other val) = val
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'Interval'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumDaily) = "daily"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumManual) = "manual"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly) = "monthly"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly) = "weekly"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Payouts'Schedule'Interval' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "daily" -> PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumDaily
            | val GHC.Classes.== "manual" -> PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumManual
            | val GHC.Classes.== "monthly" -> PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumMonthly
            | val GHC.Classes.== "weekly" -> PostAccountsRequestBodySettings'Payouts'Schedule'Interval'EnumWeekly
            | GHC.Base.otherwise -> PostAccountsRequestBodySettings'Payouts'Schedule'Interval'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.payouts.properties.schedule.properties.weekly_anchor@ in the specification.
data PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"friday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday
  | -- | Represents the JSON value @"monday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday
  | -- | Represents the JSON value @"saturday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday
  | -- | Represents the JSON value @"sunday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday
  | -- | Represents the JSON value @"thursday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday
  | -- | Represents the JSON value @"tuesday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday
  | -- | Represents the JSON value @"wednesday"@
    PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor' where
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other val) = val
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday) = "friday"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday) = "monday"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday) = "saturday"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday) = "sunday"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday) = "thursday"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday) = "tuesday"
  toJSON (PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday) = "wednesday"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "friday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumFriday
            | val GHC.Classes.== "monday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumMonday
            | val GHC.Classes.== "saturday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSaturday
            | val GHC.Classes.== "sunday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumSunday
            | val GHC.Classes.== "thursday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumThursday
            | val GHC.Classes.== "tuesday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumTuesday
            | val GHC.Classes.== "wednesday" -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'EnumWednesday
            | GHC.Base.otherwise -> PostAccountsRequestBodySettings'Payouts'Schedule'WeeklyAnchor'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.treasury@ in the specification.
data PostAccountsRequestBodySettings'Treasury' = PostAccountsRequestBodySettings'Treasury'
  { -- | tos_acceptance
    postAccountsRequestBodySettings'Treasury'TosAcceptance :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Treasury'TosAcceptance')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Treasury' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tos_acceptance" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Treasury' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'Treasury'" (\obj -> GHC.Base.pure PostAccountsRequestBodySettings'Treasury' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tos_acceptance"))

-- | Create a new 'PostAccountsRequestBodySettings'Treasury'' with all required fields.
mkPostAccountsRequestBodySettings'Treasury' :: PostAccountsRequestBodySettings'Treasury'
mkPostAccountsRequestBodySettings'Treasury' = PostAccountsRequestBodySettings'Treasury' {postAccountsRequestBodySettings'Treasury'TosAcceptance = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.treasury.properties.tos_acceptance@ in the specification.
data PostAccountsRequestBodySettings'Treasury'TosAcceptance' = PostAccountsRequestBodySettings'Treasury'TosAcceptance'
  { -- | date
    postAccountsRequestBodySettings'Treasury'TosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | ip
    postAccountsRequestBodySettings'Treasury'TosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_agent
    postAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent :: (GHC.Maybe.Maybe PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Variants)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Treasury'TosAcceptance' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Treasury'TosAcceptance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodySettings'Treasury'TosAcceptance'" (\obj -> ((GHC.Base.pure PostAccountsRequestBodySettings'Treasury'TosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))

-- | Create a new 'PostAccountsRequestBodySettings'Treasury'TosAcceptance'' with all required fields.
mkPostAccountsRequestBodySettings'Treasury'TosAcceptance' :: PostAccountsRequestBodySettings'Treasury'TosAcceptance'
mkPostAccountsRequestBodySettings'Treasury'TosAcceptance' =
  PostAccountsRequestBodySettings'Treasury'TosAcceptance'
    { postAccountsRequestBodySettings'Treasury'TosAcceptance'Date = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Treasury'TosAcceptance'Ip = GHC.Maybe.Nothing,
      postAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent = GHC.Maybe.Nothing
    }

-- | Defines the oneOf schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.settings.properties.treasury.properties.tos_acceptance.properties.user_agent.anyOf@ in the specification.
data PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Variants
  = -- | Represents the JSON value @""@
    PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'EmptyString
  | PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Text Data.Text.Internal.Text
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Variants where
  toJSON (PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Text a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'EmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Variants where
  parseJSON val =
    if
        | val GHC.Classes.== "" -> GHC.Base.pure PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'EmptyString
        | GHC.Base.otherwise -> case (PostAccountsRequestBodySettings'Treasury'TosAcceptance'UserAgent'Text Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched" of
            Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
            Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the object schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.tos_acceptance@ in the specification.
--
-- Details on the account\'s acceptance of the [Stripe Services Agreement](https:\/\/stripe.com\/docs\/connect\/updating-accounts\#tos-acceptance).
data PostAccountsRequestBodyTosAcceptance' = PostAccountsRequestBodyTosAcceptance'
  { -- | date
    postAccountsRequestBodyTosAcceptance'Date :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | ip
    postAccountsRequestBodyTosAcceptance'Ip :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | service_agreement
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyTosAcceptance'ServiceAgreement :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | user_agent
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postAccountsRequestBodyTosAcceptance'UserAgent :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyTosAcceptance' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_agreement" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'ServiceAgreement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'UserAgent obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("date" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'Date obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ip" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'Ip obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("service_agreement" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'ServiceAgreement obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("user_agent" Data.Aeson.Types.ToJSON..=)) (postAccountsRequestBodyTosAcceptance'UserAgent obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyTosAcceptance' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostAccountsRequestBodyTosAcceptance'" (\obj -> (((GHC.Base.pure PostAccountsRequestBodyTosAcceptance' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "date")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ip")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "service_agreement")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "user_agent"))

-- | Create a new 'PostAccountsRequestBodyTosAcceptance'' with all required fields.
mkPostAccountsRequestBodyTosAcceptance' :: PostAccountsRequestBodyTosAcceptance'
mkPostAccountsRequestBodyTosAcceptance' =
  PostAccountsRequestBodyTosAcceptance'
    { postAccountsRequestBodyTosAcceptance'Date = GHC.Maybe.Nothing,
      postAccountsRequestBodyTosAcceptance'Ip = GHC.Maybe.Nothing,
      postAccountsRequestBodyTosAcceptance'ServiceAgreement = GHC.Maybe.Nothing,
      postAccountsRequestBodyTosAcceptance'UserAgent = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/accounts.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.type@ in the specification.
--
-- The type of Stripe account to create. May be one of \`custom\`, \`express\` or \`standard\`.
data PostAccountsRequestBodyType'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostAccountsRequestBodyType'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostAccountsRequestBodyType'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"custom"@
    PostAccountsRequestBodyType'EnumCustom
  | -- | Represents the JSON value @"express"@
    PostAccountsRequestBodyType'EnumExpress
  | -- | Represents the JSON value @"standard"@
    PostAccountsRequestBodyType'EnumStandard
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostAccountsRequestBodyType' where
  toJSON (PostAccountsRequestBodyType'Other val) = val
  toJSON (PostAccountsRequestBodyType'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostAccountsRequestBodyType'EnumCustom) = "custom"
  toJSON (PostAccountsRequestBodyType'EnumExpress) = "express"
  toJSON (PostAccountsRequestBodyType'EnumStandard) = "standard"

instance Data.Aeson.Types.FromJSON.FromJSON PostAccountsRequestBodyType' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "custom" -> PostAccountsRequestBodyType'EnumCustom
            | val GHC.Classes.== "express" -> PostAccountsRequestBodyType'EnumExpress
            | val GHC.Classes.== "standard" -> PostAccountsRequestBodyType'EnumStandard
            | GHC.Base.otherwise -> PostAccountsRequestBodyType'Other val
      )

-- | Represents a response of the operation 'postAccounts'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostAccountsResponseError' is used.
data PostAccountsResponse
  = -- | Means either no matching case available or a parse error
    PostAccountsResponseError GHC.Base.String
  | -- | Successful response.
    PostAccountsResponse200 Account
  | -- | Error response.
    PostAccountsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
