{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getCreditNotesPreviewLines
module StripeAPI.Operations.GetCreditNotesPreviewLines where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/credit_notes/preview/lines
--
-- \<p>When retrieving a credit note preview, youâ€™ll get a \<strong>lines\<\/strong> property containing the first handful of those items. This URL you can retrieve the full (paginated) list of line items.\<\/p>
getCreditNotesPreviewLines ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetCreditNotesPreviewLinesParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetCreditNotesPreviewLinesResponse)
getCreditNotesPreviewLines parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetCreditNotesPreviewLinesResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetCreditNotesPreviewLinesResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              GetCreditNotesPreviewLinesResponseBody200
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     GetCreditNotesPreviewLinesResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "GET")
        "/v1/credit_notes/preview/lines"
        [ StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryAmount parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "credit_amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryCreditAmount parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "effective_at") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryEffectiveAt parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryEndingBefore parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryExpand parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "invoice") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getCreditNotesPreviewLinesParametersQueryInvoice parameters)) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryLimit parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "lines") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryLines parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "memo") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryMemo parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "metadata") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryMetadata parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "out_of_band_amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryOutOfBandAmount parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "reason") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryReason parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "refund") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryRefund parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "refund_amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryRefundAmount parameters) (Data.Text.Internal.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "shipping_cost") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryShippingCost parameters) (Data.Text.Internal.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.Internal.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewLinesParametersQueryStartingAfter parameters) (Data.Text.Internal.pack "form") GHC.Types.True
        ]
    )

-- | Defines the object schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters@ in the specification.
data GetCreditNotesPreviewLinesParameters = GetCreditNotesPreviewLinesParameters
  { -- | queryAmount: Represents the parameter named \'amount\'
    --
    -- The integer amount in cents (or local equivalent) representing the total amount of the credit note.
    getCreditNotesPreviewLinesParametersQueryAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryCredit_amount: Represents the parameter named \'credit_amount\'
    --
    -- The integer amount in cents (or local equivalent) representing the amount to credit the customer\'s balance, which will be automatically applied to their next invoice.
    getCreditNotesPreviewLinesParametersQueryCreditAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryEffective_at: Represents the parameter named \'effective_at\'
    --
    -- The date when this credit note is in effect. Same as \`created\` unless overwritten. When defined, this value replaces the system-generated \'Date of issue\' printed on the credit note PDF.
    getCreditNotesPreviewLinesParametersQueryEffectiveAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryEnding_before: Represents the parameter named \'ending_before\'
    --
    -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getCreditNotesPreviewLinesParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | queryInvoice: Represents the parameter named \'invoice\'
    --
    -- ID of the invoice.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryInvoice :: Data.Text.Internal.Text,
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    getCreditNotesPreviewLinesParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryLines: Represents the parameter named \'lines\'
    --
    -- Line items that make up the credit note.
    getCreditNotesPreviewLinesParametersQueryLines :: (GHC.Maybe.Maybe ([GetCreditNotesPreviewLinesParametersQueryLines'])),
    -- | queryMemo: Represents the parameter named \'memo\'
    --
    -- The credit note\'s memo appears on the credit note PDF.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryMemo :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryMetadata: Represents the parameter named \'metadata\'
    --
    -- Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    getCreditNotesPreviewLinesParametersQueryMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | queryOut_of_band_amount: Represents the parameter named \'out_of_band_amount\'
    --
    -- The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe.
    getCreditNotesPreviewLinesParametersQueryOutOfBandAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryReason: Represents the parameter named \'reason\'
    --
    -- Reason for issuing this credit note, one of \`duplicate\`, \`fraudulent\`, \`order_change\`, or \`product_unsatisfactory\`
    getCreditNotesPreviewLinesParametersQueryReason :: (GHC.Maybe.Maybe GetCreditNotesPreviewLinesParametersQueryReason'),
    -- | queryRefund: Represents the parameter named \'refund\'
    --
    -- ID of an existing refund to link this credit note to.
    getCreditNotesPreviewLinesParametersQueryRefund :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryRefund_amount: Represents the parameter named \'refund_amount\'
    --
    -- The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    getCreditNotesPreviewLinesParametersQueryRefundAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryShipping_cost: Represents the parameter named \'shipping_cost\'
    --
    -- When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
    getCreditNotesPreviewLinesParametersQueryShippingCost :: (GHC.Maybe.Maybe GetCreditNotesPreviewLinesParametersQueryShippingCost'),
    -- | queryStarting_after: Represents the parameter named \'starting_after\'
    --
    -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAmount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCredit_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryCreditAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEffective_at" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryEffectiveAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryExpand obj) : ["queryInvoice" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryInvoice obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLines" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMemo" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryMemo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMetadata" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOut_of_band_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryOutOfBandAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryReason" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRefund" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryRefund obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRefund_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryRefundAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShipping_cost" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryStartingAfter obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryAmount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryCredit_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryCreditAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEffective_at" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryEffectiveAt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryExpand obj) : ["queryInvoice" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryInvoice obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLines" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMemo" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryMemo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryMetadata" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryMetadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryOut_of_band_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryOutOfBandAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryReason" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryReason obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRefund" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryRefund obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryRefund_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryRefundAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryShipping_cost" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryShippingCost obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryStartingAfter obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewLinesParameters" (\obj -> (((((((((((((((GHC.Base.pure GetCreditNotesPreviewLinesParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryCredit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEffective_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryInvoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLines")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMemo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryMetadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryOut_of_band_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryReason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRefund")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryRefund_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryShipping_cost")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after"))

-- | Create a new 'GetCreditNotesPreviewLinesParameters' with all required fields.
mkGetCreditNotesPreviewLinesParameters ::
  -- | 'getCreditNotesPreviewLinesParametersQueryInvoice'
  Data.Text.Internal.Text ->
  GetCreditNotesPreviewLinesParameters
mkGetCreditNotesPreviewLinesParameters getCreditNotesPreviewLinesParametersQueryInvoice =
  GetCreditNotesPreviewLinesParameters
    { getCreditNotesPreviewLinesParametersQueryAmount = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryCreditAmount = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryEffectiveAt = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryEndingBefore = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryExpand = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryInvoice = getCreditNotesPreviewLinesParametersQueryInvoice,
      getCreditNotesPreviewLinesParametersQueryLimit = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryMemo = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryMetadata = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryOutOfBandAmount = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryReason = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryRefund = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryRefundAmount = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryShippingCost = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryStartingAfter = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines' = GetCreditNotesPreviewLinesParametersQueryLines'
  { -- | amount
    getCreditNotesPreviewLinesParametersQueryLines'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | description
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryLines'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | invoice_line_item
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryLines'InvoiceLineItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | quantity
    getCreditNotesPreviewLinesParametersQueryLines'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | tax_amounts
    getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts :: (GHC.Maybe.Maybe GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'Variants),
    -- | tax_rates
    getCreditNotesPreviewLinesParametersQueryLines'TaxRates :: (GHC.Maybe.Maybe GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'Variants),
    -- | type
    getCreditNotesPreviewLinesParametersQueryLines'Type :: GetCreditNotesPreviewLinesParametersQueryLines'Type',
    -- | unit_amount
    getCreditNotesPreviewLinesParametersQueryLines'UnitAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | unit_amount_decimal
    getCreditNotesPreviewLinesParametersQueryLines'UnitAmountDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'InvoiceLineItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_amounts" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'TaxRates obj) : ["type" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'UnitAmountDecimal obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'Amount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'Description obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("invoice_line_item" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'InvoiceLineItem obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'Quantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_amounts" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tax_rates" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'TaxRates obj) : ["type" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'Type obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'UnitAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("unit_amount_decimal" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryLines'UnitAmountDecimal obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewLinesParametersQueryLines'" (\obj -> ((((((((GHC.Base.pure GetCreditNotesPreviewLinesParametersQueryLines' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "invoice_line_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tax_rates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "unit_amount_decimal"))

-- | Create a new 'GetCreditNotesPreviewLinesParametersQueryLines'' with all required fields.
mkGetCreditNotesPreviewLinesParametersQueryLines' ::
  -- | 'getCreditNotesPreviewLinesParametersQueryLines'Type'
  GetCreditNotesPreviewLinesParametersQueryLines'Type' ->
  GetCreditNotesPreviewLinesParametersQueryLines'
mkGetCreditNotesPreviewLinesParametersQueryLines' getCreditNotesPreviewLinesParametersQueryLines'Type =
  GetCreditNotesPreviewLinesParametersQueryLines'
    { getCreditNotesPreviewLinesParametersQueryLines'Amount = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'Description = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'InvoiceLineItem = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'Quantity = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'TaxRates = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'Type = getCreditNotesPreviewLinesParametersQueryLines'Type,
      getCreditNotesPreviewLinesParametersQueryLines'UnitAmount = GHC.Maybe.Nothing,
      getCreditNotesPreviewLinesParametersQueryLines'UnitAmountDecimal = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items.properties.tax_amounts.anyOf.items@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 = GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1
  { -- | amount
    getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount :: GHC.Types.Int,
    -- | tax_rate
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate :: Data.Text.Internal.Text,
    -- | taxable_amount
    getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount obj] : ["tax_rate" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate obj] : ["taxable_amount" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount obj] : ["tax_rate" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate obj] : ["taxable_amount" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1" (\obj -> ((GHC.Base.pure GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "tax_rate")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "taxable_amount"))

-- | Create a new 'GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1' with all required fields.
mkGetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 ::
  -- | 'getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount'
  GHC.Types.Int ->
  -- | 'getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate'
  Data.Text.Internal.Text ->
  -- | 'getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount'
  GHC.Types.Int ->
  GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1
mkGetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount =
  GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1
    { getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount = getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1Amount,
      getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate = getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxRate,
      getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount = getCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1TaxableAmount
    }

-- | Defines the enum schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items.properties.tax_amounts.anyOf@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2EnumEmptyString
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2 where
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2Other val) = val
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2EnumEmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2 where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2EnumEmptyString
            | GHC.Base.otherwise -> GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items.properties.tax_amounts.anyOf@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'Variants
  = GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'ListTGetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 ([GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1])
  | GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2 GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'Variants where
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'ListTGetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'Variants where
  parseJSON val = case (GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'ListTGetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf1 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'GetCreditNotesPreviewLinesParametersQueryLines'TaxAmounts'OneOf2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items.properties.tax_rates.anyOf@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @""@
    GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2EnumEmptyString
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2 where
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2Other val) = val
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2EnumEmptyString) = ""

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2 where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "" -> GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2EnumEmptyString
            | GHC.Base.otherwise -> GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2Other val
      )

-- | Defines the oneOf schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items.properties.tax_rates.anyOf@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'Variants
  = GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'ListTText ([Data.Text.Internal.Text])
  | GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2 GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'Variants where
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'Variants where
  parseJSON val = case (GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'ListTText Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> ((GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'GetCreditNotesPreviewLinesParametersQueryLines'TaxRates'OneOf2 Data.Functor.<$> Data.Aeson.Types.FromJSON.fromJSON val) GHC.Base.<|> Data.Aeson.Types.Internal.Error "No variant matched") of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure a
    Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryLines.items.properties.type@ in the specification.
data GetCreditNotesPreviewLinesParametersQueryLines'Type'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCreditNotesPreviewLinesParametersQueryLines'Type'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCreditNotesPreviewLinesParametersQueryLines'Type'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"custom_line_item"@
    GetCreditNotesPreviewLinesParametersQueryLines'Type'EnumCustomLineItem
  | -- | Represents the JSON value @"invoice_line_item"@
    GetCreditNotesPreviewLinesParametersQueryLines'Type'EnumInvoiceLineItem
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryLines'Type' where
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'Type'Other val) = val
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'Type'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'Type'EnumCustomLineItem) = "custom_line_item"
  toJSON (GetCreditNotesPreviewLinesParametersQueryLines'Type'EnumInvoiceLineItem) = "invoice_line_item"

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryLines'Type' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "custom_line_item" -> GetCreditNotesPreviewLinesParametersQueryLines'Type'EnumCustomLineItem
            | val GHC.Classes.== "invoice_line_item" -> GetCreditNotesPreviewLinesParametersQueryLines'Type'EnumInvoiceLineItem
            | GHC.Base.otherwise -> GetCreditNotesPreviewLinesParametersQueryLines'Type'Other val
      )

-- | Defines the enum schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryReason@ in the specification.
--
-- Represents the parameter named \'reason\'
--
-- Reason for issuing this credit note, one of \`duplicate\`, \`fraudulent\`, \`order_change\`, or \`product_unsatisfactory\`
data GetCreditNotesPreviewLinesParametersQueryReason'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetCreditNotesPreviewLinesParametersQueryReason'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetCreditNotesPreviewLinesParametersQueryReason'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"duplicate"@
    GetCreditNotesPreviewLinesParametersQueryReason'EnumDuplicate
  | -- | Represents the JSON value @"fraudulent"@
    GetCreditNotesPreviewLinesParametersQueryReason'EnumFraudulent
  | -- | Represents the JSON value @"order_change"@
    GetCreditNotesPreviewLinesParametersQueryReason'EnumOrderChange
  | -- | Represents the JSON value @"product_unsatisfactory"@
    GetCreditNotesPreviewLinesParametersQueryReason'EnumProductUnsatisfactory
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryReason' where
  toJSON (GetCreditNotesPreviewLinesParametersQueryReason'Other val) = val
  toJSON (GetCreditNotesPreviewLinesParametersQueryReason'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetCreditNotesPreviewLinesParametersQueryReason'EnumDuplicate) = "duplicate"
  toJSON (GetCreditNotesPreviewLinesParametersQueryReason'EnumFraudulent) = "fraudulent"
  toJSON (GetCreditNotesPreviewLinesParametersQueryReason'EnumOrderChange) = "order_change"
  toJSON (GetCreditNotesPreviewLinesParametersQueryReason'EnumProductUnsatisfactory) = "product_unsatisfactory"

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryReason' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "duplicate" -> GetCreditNotesPreviewLinesParametersQueryReason'EnumDuplicate
            | val GHC.Classes.== "fraudulent" -> GetCreditNotesPreviewLinesParametersQueryReason'EnumFraudulent
            | val GHC.Classes.== "order_change" -> GetCreditNotesPreviewLinesParametersQueryReason'EnumOrderChange
            | val GHC.Classes.== "product_unsatisfactory" -> GetCreditNotesPreviewLinesParametersQueryReason'EnumProductUnsatisfactory
            | GHC.Base.otherwise -> GetCreditNotesPreviewLinesParametersQueryReason'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.parameters.properties.queryShipping_cost@ in the specification.
--
-- Represents the parameter named \'shipping_cost\'
--
-- When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.
data GetCreditNotesPreviewLinesParametersQueryShippingCost' = GetCreditNotesPreviewLinesParametersQueryShippingCost'
  { -- | shipping_rate
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesParametersQueryShippingCost'ShippingRate :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesParametersQueryShippingCost' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryShippingCost'ShippingRate obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_rate" Data.Aeson.Types.ToJSON..=)) (getCreditNotesPreviewLinesParametersQueryShippingCost'ShippingRate obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesParametersQueryShippingCost' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewLinesParametersQueryShippingCost'" (\obj -> GHC.Base.pure GetCreditNotesPreviewLinesParametersQueryShippingCost' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_rate"))

-- | Create a new 'GetCreditNotesPreviewLinesParametersQueryShippingCost'' with all required fields.
mkGetCreditNotesPreviewLinesParametersQueryShippingCost' :: GetCreditNotesPreviewLinesParametersQueryShippingCost'
mkGetCreditNotesPreviewLinesParametersQueryShippingCost' = GetCreditNotesPreviewLinesParametersQueryShippingCost' {getCreditNotesPreviewLinesParametersQueryShippingCost'ShippingRate = GHC.Maybe.Nothing}

-- | Represents a response of the operation 'getCreditNotesPreviewLines'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetCreditNotesPreviewLinesResponseError' is used.
data GetCreditNotesPreviewLinesResponse
  = -- | Means either no matching case available or a parse error
    GetCreditNotesPreviewLinesResponseError GHC.Base.String
  | -- | Successful response.
    GetCreditNotesPreviewLinesResponse200 GetCreditNotesPreviewLinesResponseBody200
  | -- | Error response.
    GetCreditNotesPreviewLinesResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/credit_notes\/preview\/lines.GET.responses.200.content.application\/json.schema@ in the specification.
data GetCreditNotesPreviewLinesResponseBody200 = GetCreditNotesPreviewLinesResponseBody200
  { -- | data: Details about each object.
    getCreditNotesPreviewLinesResponseBody200Data :: ([CreditNoteLineItem]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getCreditNotesPreviewLinesResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getCreditNotesPreviewLinesResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewLinesResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getCreditNotesPreviewLinesResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewLinesResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewLinesResponseBody200" (\obj -> ((GHC.Base.pure GetCreditNotesPreviewLinesResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetCreditNotesPreviewLinesResponseBody200' with all required fields.
mkGetCreditNotesPreviewLinesResponseBody200 ::
  -- | 'getCreditNotesPreviewLinesResponseBody200Data'
  [CreditNoteLineItem] ->
  -- | 'getCreditNotesPreviewLinesResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getCreditNotesPreviewLinesResponseBody200Url'
  Data.Text.Internal.Text ->
  GetCreditNotesPreviewLinesResponseBody200
mkGetCreditNotesPreviewLinesResponseBody200 getCreditNotesPreviewLinesResponseBody200Data getCreditNotesPreviewLinesResponseBody200HasMore getCreditNotesPreviewLinesResponseBody200Url =
  GetCreditNotesPreviewLinesResponseBody200
    { getCreditNotesPreviewLinesResponseBody200Data = getCreditNotesPreviewLinesResponseBody200Data,
      getCreditNotesPreviewLinesResponseBody200HasMore = getCreditNotesPreviewLinesResponseBody200HasMore,
      getCreditNotesPreviewLinesResponseBody200Url = getCreditNotesPreviewLinesResponseBody200Url
    }
