{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation postSubscriptionSchedulesScheduleRelease
module StripeAPI.Operations.PostSubscriptionSchedulesScheduleRelease where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/subscription_schedules/{schedule}/release
--
-- \<p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is \<code>not_started\<\/code> or \<code>active\<\/code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its \<code>subscription\<\/code> property and set the subscriptionâ€™s ID to the \<code>released_subscription\<\/code> property.\<\/p>
postSubscriptionSchedulesScheduleRelease ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | schedule | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostSubscriptionSchedulesScheduleReleaseRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostSubscriptionSchedulesScheduleReleaseResponse)
postSubscriptionSchedulesScheduleRelease
  schedule
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostSubscriptionSchedulesScheduleReleaseResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSubscriptionSchedulesScheduleReleaseResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either GHC.Base.String
                                                              SubscriptionSchedule
                                                        )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostSubscriptionSchedulesScheduleReleaseResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either GHC.Base.String
                                                              Error
                                                        )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack ("/v1/subscription_schedules/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ StripeAPI.Common.stringifyModel schedule)) GHC.Base.++ "/release"))) [] body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/subscription_schedules\/{schedule}\/release.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostSubscriptionSchedulesScheduleReleaseRequestBody
  = PostSubscriptionSchedulesScheduleReleaseRequestBody
      { -- | expand: Specifies which fields in the response should be expanded.
        postSubscriptionSchedulesScheduleReleaseRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | preserve_cancel_date: Keep any cancellation on the subscription that the schedule has set
        postSubscriptionSchedulesScheduleReleaseRequestBodyPreserveCancelDate :: (GHC.Maybe.Maybe GHC.Types.Bool)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSubscriptionSchedulesScheduleReleaseRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("expand" Data.Aeson.Types.ToJSON..= postSubscriptionSchedulesScheduleReleaseRequestBodyExpand obj : "preserve_cancel_date" Data.Aeson.Types.ToJSON..= postSubscriptionSchedulesScheduleReleaseRequestBodyPreserveCancelDate obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("expand" Data.Aeson.Types.ToJSON..= postSubscriptionSchedulesScheduleReleaseRequestBodyExpand obj) GHC.Base.<> ("preserve_cancel_date" Data.Aeson.Types.ToJSON..= postSubscriptionSchedulesScheduleReleaseRequestBodyPreserveCancelDate obj))

instance Data.Aeson.Types.FromJSON.FromJSON PostSubscriptionSchedulesScheduleReleaseRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSubscriptionSchedulesScheduleReleaseRequestBody" (\obj -> (GHC.Base.pure PostSubscriptionSchedulesScheduleReleaseRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "preserve_cancel_date"))

-- | Create a new 'PostSubscriptionSchedulesScheduleReleaseRequestBody' with all required fields.
mkPostSubscriptionSchedulesScheduleReleaseRequestBody :: PostSubscriptionSchedulesScheduleReleaseRequestBody
mkPostSubscriptionSchedulesScheduleReleaseRequestBody =
  PostSubscriptionSchedulesScheduleReleaseRequestBody
    { postSubscriptionSchedulesScheduleReleaseRequestBodyExpand = GHC.Maybe.Nothing,
      postSubscriptionSchedulesScheduleReleaseRequestBodyPreserveCancelDate = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postSubscriptionSchedulesScheduleRelease'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSubscriptionSchedulesScheduleReleaseResponseError' is used.
data PostSubscriptionSchedulesScheduleReleaseResponse
  = -- | Means either no matching case available or a parse error
    PostSubscriptionSchedulesScheduleReleaseResponseError GHC.Base.String
  | -- | Successful response.
    PostSubscriptionSchedulesScheduleReleaseResponse200 SubscriptionSchedule
  | -- | Error response.
    PostSubscriptionSchedulesScheduleReleaseResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
