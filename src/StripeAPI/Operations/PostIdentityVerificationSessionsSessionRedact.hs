{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postIdentityVerificationSessionsSessionRedact
module StripeAPI.Operations.PostIdentityVerificationSessionsSessionRedact where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/identity/verification_sessions/{session}/redact
--
-- \<p>Redact a VerificationSession to remove all collected information from Stripe. This will redact
-- the VerificationSession and all objects related to it, including VerificationReports, Events,
-- request logs, etc.\<\/p>
--
-- \<p>A VerificationSession object can be redacted when it is in \<code>requires_input\<\/code> or \<code>verified\<\/code>
-- \<a href=\"\/docs\/identity\/how-sessions-work\">status\<\/a>. Redacting a VerificationSession in \<code>requires_action\<\/code>
-- state will automatically cancel it.\<\/p>
--
-- \<p>The redaction process may take up to four days. When the redaction process is in progress, the
-- VerificationSessionâ€™s \<code>redaction.status\<\/code> field will be set to \<code>processing\<\/code>; when the process is
-- finished, it will change to \<code>redacted\<\/code> and an \<code>identity.verification_session.redacted\<\/code> event
-- will be emitted.\<\/p>
--
-- \<p>Redaction is irreversible. Redacted objects are still accessible in the Stripe API, but all the
-- fields that contain personal data will be replaced by the string \<code>[redacted]\<\/code> or a similar
-- placeholder. The \<code>metadata\<\/code> field will also be erased. Redacted objects cannot be updated or
-- used for any purpose.\<\/p>
--
-- \<p>\<a href=\"\/docs\/identity\/verification-sessions\#redact\">Learn more\<\/a>.\<\/p>
postIdentityVerificationSessionsSessionRedact ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | session | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostIdentityVerificationSessionsSessionRedactRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostIdentityVerificationSessionsSessionRedactResponse)
postIdentityVerificationSessionsSessionRedact
  session
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostIdentityVerificationSessionsSessionRedactResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostIdentityVerificationSessionsSessionRedactResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Identity'verificationSession
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostIdentityVerificationSessionsSessionRedactResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/identity/verification_sessions/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel session)) GHC.Base.<> "/redact")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/identity\/verification_sessions\/{session}\/redact.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostIdentityVerificationSessionsSessionRedactRequestBody = PostIdentityVerificationSessionsSessionRedactRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postIdentityVerificationSessionsSessionRedactRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostIdentityVerificationSessionsSessionRedactRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIdentityVerificationSessionsSessionRedactRequestBodyExpand obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postIdentityVerificationSessionsSessionRedactRequestBodyExpand obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostIdentityVerificationSessionsSessionRedactRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostIdentityVerificationSessionsSessionRedactRequestBody" (\obj -> GHC.Base.pure PostIdentityVerificationSessionsSessionRedactRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))

-- | Create a new 'PostIdentityVerificationSessionsSessionRedactRequestBody' with all required fields.
mkPostIdentityVerificationSessionsSessionRedactRequestBody :: PostIdentityVerificationSessionsSessionRedactRequestBody
mkPostIdentityVerificationSessionsSessionRedactRequestBody = PostIdentityVerificationSessionsSessionRedactRequestBody {postIdentityVerificationSessionsSessionRedactRequestBodyExpand = GHC.Maybe.Nothing}

-- | Represents a response of the operation 'postIdentityVerificationSessionsSessionRedact'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostIdentityVerificationSessionsSessionRedactResponseError' is used.
data PostIdentityVerificationSessionsSessionRedactResponse
  = -- | Means either no matching case available or a parse error
    PostIdentityVerificationSessionsSessionRedactResponseError GHC.Base.String
  | -- | Successful response.
    PostIdentityVerificationSessionsSessionRedactResponse200 Identity'verificationSession
  | -- | Error response.
    PostIdentityVerificationSessionsSessionRedactResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
