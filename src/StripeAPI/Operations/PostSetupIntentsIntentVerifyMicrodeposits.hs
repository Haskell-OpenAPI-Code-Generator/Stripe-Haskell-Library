{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postSetupIntentsIntentVerifyMicrodeposits
module StripeAPI.Operations.PostSetupIntentsIntentVerifyMicrodeposits where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/setup_intents/{intent}/verify_microdeposits
--
-- \<p>Verifies microdeposits on a SetupIntent object.\<\/p>
postSetupIntentsIntentVerifyMicrodeposits ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | intent | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostSetupIntentsIntentVerifyMicrodepositsRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostSetupIntentsIntentVerifyMicrodepositsResponse)
postSetupIntentsIntentVerifyMicrodeposits
  intent
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostSetupIntentsIntentVerifyMicrodepositsResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostSetupIntentsIntentVerifyMicrodepositsResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                SetupIntent
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostSetupIntentsIntentVerifyMicrodepositsResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/setup_intents/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel intent)) GHC.Base.<> "/verify_microdeposits")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/setup_intents\/{intent}\/verify_microdeposits.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostSetupIntentsIntentVerifyMicrodepositsRequestBody = PostSetupIntentsIntentVerifyMicrodepositsRequestBody
  { -- | amounts: Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account.
    postSetupIntentsIntentVerifyMicrodepositsRequestBodyAmounts :: (GHC.Maybe.Maybe ([GHC.Types.Int])),
    -- | client_secret: The client secret of the SetupIntent.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postSetupIntentsIntentVerifyMicrodepositsRequestBodyClientSecret :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | descriptor_code: A six-character code starting with SM present in the microdeposit sent to the bank account.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postSetupIntentsIntentVerifyMicrodepositsRequestBodyDescriptorCode :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expand: Specifies which fields in the response should be expanded.
    postSetupIntentsIntentVerifyMicrodepositsRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text]))
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostSetupIntentsIntentVerifyMicrodepositsRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amounts" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("descriptor_code" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyDescriptorCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyExpand obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("amounts" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyAmounts obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("client_secret" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyClientSecret obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("descriptor_code" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyDescriptorCode obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postSetupIntentsIntentVerifyMicrodepositsRequestBodyExpand obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostSetupIntentsIntentVerifyMicrodepositsRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostSetupIntentsIntentVerifyMicrodepositsRequestBody" (\obj -> (((GHC.Base.pure PostSetupIntentsIntentVerifyMicrodepositsRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "amounts")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "client_secret")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "descriptor_code")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand"))

-- | Create a new 'PostSetupIntentsIntentVerifyMicrodepositsRequestBody' with all required fields.
mkPostSetupIntentsIntentVerifyMicrodepositsRequestBody :: PostSetupIntentsIntentVerifyMicrodepositsRequestBody
mkPostSetupIntentsIntentVerifyMicrodepositsRequestBody =
  PostSetupIntentsIntentVerifyMicrodepositsRequestBody
    { postSetupIntentsIntentVerifyMicrodepositsRequestBodyAmounts = GHC.Maybe.Nothing,
      postSetupIntentsIntentVerifyMicrodepositsRequestBodyClientSecret = GHC.Maybe.Nothing,
      postSetupIntentsIntentVerifyMicrodepositsRequestBodyDescriptorCode = GHC.Maybe.Nothing,
      postSetupIntentsIntentVerifyMicrodepositsRequestBodyExpand = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postSetupIntentsIntentVerifyMicrodeposits'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostSetupIntentsIntentVerifyMicrodepositsResponseError' is used.
data PostSetupIntentsIntentVerifyMicrodepositsResponse
  = -- | Means either no matching case available or a parse error
    PostSetupIntentsIntentVerifyMicrodepositsResponseError GHC.Base.String
  | -- | Successful response.
    PostSetupIntentsIntentVerifyMicrodepositsResponse200 SetupIntent
  | -- | Error response.
    PostSetupIntentsIntentVerifyMicrodepositsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
