{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation getOrderReturns
module StripeAPI.Operations.GetOrderReturns where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/order_returns
--
-- \<p>Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.\<\/p>
getOrderReturns ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetOrderReturnsParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response GetOrderReturnsResponse)
getOrderReturns parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetOrderReturnsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetOrderReturnsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            GetOrderReturnsResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetOrderReturnsResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/order_returns")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "created") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getOrderReturnsParametersQueryCreated parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getOrderReturnsParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getOrderReturnsParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getOrderReturnsParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "order") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getOrderReturnsParametersQueryOrder parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getOrderReturnsParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the data type for the schema getOrderReturnsParameters
data GetOrderReturnsParameters
  = GetOrderReturnsParameters
      { -- | queryCreated: Represents the parameter named \'created\'
        --
        -- Date this return was created.
        getOrderReturnsParametersQueryCreated :: (GHC.Maybe.Maybe GetOrderReturnsParametersQueryCreated'Variants),
        -- | queryEnding_before: Represents the parameter named \'ending_before\'
        --
        -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getOrderReturnsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryExpand: Represents the parameter named \'expand\'
        --
        -- Specifies which fields in the response should be expanded.
        getOrderReturnsParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | queryLimit: Represents the parameter named \'limit\'
        --
        -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
        getOrderReturnsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | queryOrder: Represents the parameter named \'order\'
        --
        -- The order to retrieve returns for.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getOrderReturnsParametersQueryOrder :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryStarting_after: Represents the parameter named \'starting_after\'
        --
        -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getOrderReturnsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetOrderReturnsParameters where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "queryCreated" (getOrderReturnsParametersQueryCreated obj) : (Data.Aeson..=) "queryEnding_before" (getOrderReturnsParametersQueryEndingBefore obj) : (Data.Aeson..=) "queryExpand" (getOrderReturnsParametersQueryExpand obj) : (Data.Aeson..=) "queryLimit" (getOrderReturnsParametersQueryLimit obj) : (Data.Aeson..=) "queryOrder" (getOrderReturnsParametersQueryOrder obj) : (Data.Aeson..=) "queryStarting_after" (getOrderReturnsParametersQueryStartingAfter obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "queryCreated" (getOrderReturnsParametersQueryCreated obj) GHC.Base.<> ((Data.Aeson..=) "queryEnding_before" (getOrderReturnsParametersQueryEndingBefore obj) GHC.Base.<> ((Data.Aeson..=) "queryExpand" (getOrderReturnsParametersQueryExpand obj) GHC.Base.<> ((Data.Aeson..=) "queryLimit" (getOrderReturnsParametersQueryLimit obj) GHC.Base.<> ((Data.Aeson..=) "queryOrder" (getOrderReturnsParametersQueryOrder obj) GHC.Base.<> (Data.Aeson..=) "queryStarting_after" (getOrderReturnsParametersQueryStartingAfter obj))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetOrderReturnsParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetOrderReturnsParameters" (\obj -> (((((GHC.Base.pure GetOrderReturnsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCreated")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryOrder")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryStarting_after"))

-- | Defines the data type for the schema getOrderReturnsParametersQueryCreated\'OneOf2
data GetOrderReturnsParametersQueryCreated'OneOf2
  = GetOrderReturnsParametersQueryCreated'OneOf2
      { -- | gt
        getOrderReturnsParametersQueryCreated'OneOf2Gt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | gte
        getOrderReturnsParametersQueryCreated'OneOf2Gte :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lt
        getOrderReturnsParametersQueryCreated'OneOf2Lt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | lte
        getOrderReturnsParametersQueryCreated'OneOf2Lte :: (GHC.Maybe.Maybe GHC.Types.Int)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetOrderReturnsParametersQueryCreated'OneOf2 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "gt" (getOrderReturnsParametersQueryCreated'OneOf2Gt obj) : (Data.Aeson..=) "gte" (getOrderReturnsParametersQueryCreated'OneOf2Gte obj) : (Data.Aeson..=) "lt" (getOrderReturnsParametersQueryCreated'OneOf2Lt obj) : (Data.Aeson..=) "lte" (getOrderReturnsParametersQueryCreated'OneOf2Lte obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "gt" (getOrderReturnsParametersQueryCreated'OneOf2Gt obj) GHC.Base.<> ((Data.Aeson..=) "gte" (getOrderReturnsParametersQueryCreated'OneOf2Gte obj) GHC.Base.<> ((Data.Aeson..=) "lt" (getOrderReturnsParametersQueryCreated'OneOf2Lt obj) GHC.Base.<> (Data.Aeson..=) "lte" (getOrderReturnsParametersQueryCreated'OneOf2Lte obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetOrderReturnsParametersQueryCreated'OneOf2 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetOrderReturnsParametersQueryCreated'OneOf2" (\obj -> (((GHC.Base.pure GetOrderReturnsParametersQueryCreated'OneOf2 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "gte")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "lte"))

-- | Define the one-of schema getOrderReturnsParametersQueryCreated\'
--
-- Represents the parameter named \'created\'
--
-- Date this return was created.
data GetOrderReturnsParametersQueryCreated'Variants
  = GetOrderReturnsParametersQueryCreated'Int GHC.Types.Int
  | GetOrderReturnsParametersQueryCreated'GetOrderReturnsParametersQueryCreated'OneOf2 GetOrderReturnsParametersQueryCreated'OneOf2
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetOrderReturnsParametersQueryCreated'Variants where
  toJSON (GetOrderReturnsParametersQueryCreated'Int a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetOrderReturnsParametersQueryCreated'GetOrderReturnsParametersQueryCreated'OneOf2 a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetOrderReturnsParametersQueryCreated'Variants where
  parseJSON val = case Data.Aeson.Types.FromJSON.fromJSON val of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetOrderReturnsParametersQueryCreated'Int a
    Data.Aeson.Types.Internal.Error _ -> case Data.Aeson.Types.FromJSON.fromJSON val of
      Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetOrderReturnsParametersQueryCreated'GetOrderReturnsParametersQueryCreated'OneOf2 a
      Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Represents a response of the operation 'getOrderReturns'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetOrderReturnsResponseError' is used.
data GetOrderReturnsResponse
  = -- | Means either no matching case available or a parse error
    GetOrderReturnsResponseError GHC.Base.String
  | -- | Successful response.
    GetOrderReturnsResponse200 GetOrderReturnsResponseBody200
  | -- | Error response.
    GetOrderReturnsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the data type for the schema GetOrderReturnsResponseBody200
data GetOrderReturnsResponseBody200
  = GetOrderReturnsResponseBody200
      { -- | data
        getOrderReturnsResponseBody200Data :: ([OrderReturn]),
        -- | has_more: True if this list has another page of items after this one that can be fetched.
        getOrderReturnsResponseBody200HasMore :: GHC.Types.Bool,
        -- | object: String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
        getOrderReturnsResponseBody200Object :: GetOrderReturnsResponseBody200Object',
        -- | url: The URL where this list can be accessed.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        -- * Must match pattern \'^\/v1\/order_returns\'
        getOrderReturnsResponseBody200Url :: Data.Text.Internal.Text
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetOrderReturnsResponseBody200 where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "data" (getOrderReturnsResponseBody200Data obj) : (Data.Aeson..=) "has_more" (getOrderReturnsResponseBody200HasMore obj) : (Data.Aeson..=) "object" (getOrderReturnsResponseBody200Object obj) : (Data.Aeson..=) "url" (getOrderReturnsResponseBody200Url obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "data" (getOrderReturnsResponseBody200Data obj) GHC.Base.<> ((Data.Aeson..=) "has_more" (getOrderReturnsResponseBody200HasMore obj) GHC.Base.<> ((Data.Aeson..=) "object" (getOrderReturnsResponseBody200Object obj) GHC.Base.<> (Data.Aeson..=) "url" (getOrderReturnsResponseBody200Url obj))))

instance Data.Aeson.Types.FromJSON.FromJSON GetOrderReturnsResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetOrderReturnsResponseBody200" (\obj -> (((GHC.Base.pure GetOrderReturnsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "object")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Defines the enum schema GetOrderReturnsResponseBody200Object\'
--
-- String representing the object\'s type. Objects of the same type share the same value. Always has the value \`list\`.
data GetOrderReturnsResponseBody200Object'
  = GetOrderReturnsResponseBody200Object'EnumOther Data.Aeson.Types.Internal.Value
  | GetOrderReturnsResponseBody200Object'EnumTyped Data.Text.Internal.Text
  | GetOrderReturnsResponseBody200Object'EnumStringList
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetOrderReturnsResponseBody200Object' where
  toJSON (GetOrderReturnsResponseBody200Object'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetOrderReturnsResponseBody200Object'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetOrderReturnsResponseBody200Object'EnumStringList) = "list"

instance Data.Aeson.Types.FromJSON.FromJSON GetOrderReturnsResponseBody200Object' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "list" -> GetOrderReturnsResponseBody200Object'EnumStringList
            | GHC.Base.otherwise -> GetOrderReturnsResponseBody200Object'EnumOther val
      )
