{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postPaymentMethodConfigurationsConfiguration
module StripeAPI.Operations.PostPaymentMethodConfigurationsConfiguration where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/payment_method_configurations/{configuration}
--
-- \<p>Update payment method configuration\<\/p>
postPaymentMethodConfigurationsConfiguration ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | configuration | Constraints: Maximum length of 5000
  Data.Text.Internal.Text ->
  -- | The request body to send
  GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostPaymentMethodConfigurationsConfigurationResponse)
postPaymentMethodConfigurationsConfiguration
  configuration
  body =
    GHC.Base.fmap
      ( \response_0 ->
          GHC.Base.fmap
            ( Data.Either.either PostPaymentMethodConfigurationsConfigurationResponseError GHC.Base.id
                GHC.Base.. ( \response body ->
                               if
                                   | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostPaymentMethodConfigurationsConfigurationResponse200
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                PaymentMethodConfiguration
                                                          )
                                   | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                       PostPaymentMethodConfigurationsConfigurationResponseDefault
                                         Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                              Data.Either.Either
                                                                GHC.Base.String
                                                                Error
                                                          )
                                   | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                           )
                  response_0
            )
            response_0
      )
      (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") ("/v1/payment_method_configurations/" GHC.Base.<> (StripeAPI.Common.byteToText (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (StripeAPI.Common.textToByte GHC.Base.$ StripeAPI.Common.stringifyModel configuration)) GHC.Base.<> "")) GHC.Base.mempty body StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBody = PostPaymentMethodConfigurationsConfigurationRequestBody
  { -- | acss_debit: Canadian pre-authorized debit payments, check this [page](https:\/\/stripe.com\/docs\/payments\/acss-debit) for more details like country availability.
    postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'),
    -- | active: Whether the configuration can be used for new payments.
    postPaymentMethodConfigurationsConfigurationRequestBodyActive :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | affirm: [Affirm](https:\/\/www.affirm.com\/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https:\/\/stripe.com\/docs\/payments\/affirm) for more details like country availability.
    postPaymentMethodConfigurationsConfigurationRequestBodyAffirm :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'),
    -- | afterpay_clearpay: Afterpay gives your customers a way to pay for purchases in installments, check this [page](https:\/\/stripe.com\/docs\/payments\/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.
    postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'),
    -- | alipay: Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer\'s login credentials. Check this [page](https:\/\/stripe.com\/docs\/payments\/alipay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyAlipay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'),
    -- | apple_pay: Stripe users can accept [Apple Pay](\/payments\/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](\/pricing) is the same as other card transactions. Check this [page](https:\/\/stripe.com\/docs\/apple-pay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyApplePay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'),
    -- | apple_pay_later: Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.
    postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'),
    -- | au_becs_debit: Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https:\/\/stripe.com\/docs\/payments\/au-becs-debit) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'),
    -- | bacs_debit: Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https:\/\/stripe.com\/docs\/payments\/payment-methods\/bacs-debit) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'),
    -- | bancontact: Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https:\/\/stripe.com\/docs\/api\/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https:\/\/stripe.com\/docs\/payments\/bancontact) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyBancontact :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'),
    -- | blik: BLIK is a [single use](https:\/\/stripe.com\/docs\/payments\/payment-methods\#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https:\/\/stripe.com\/docs\/payments\/blik) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyBlik :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'),
    -- | boleto: Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https:\/\/stripe.com\/docs\/payments\/boleto) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyBoleto :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'),
    -- | card: Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.
    postPaymentMethodConfigurationsConfigurationRequestBodyCard :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCard'),
    -- | cartes_bancaires: Cartes Bancaires is France\'s local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https:\/\/stripe.com\/docs\/payments\/cartes-bancaires) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'),
    -- | cashapp: Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https:\/\/stripe.com\/docs\/payments\/cash-app-pay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyCashapp :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'),
    -- | eps: EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https:\/\/stripe.com\/docs\/payments\/eps) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyEps :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyEps'),
    -- | expand: Specifies which fields in the response should be expanded.
    postPaymentMethodConfigurationsConfigurationRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | fpx: Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https:\/\/stripe.com\/docs\/payments\/fpx) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyFpx :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'),
    -- | giropay: giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https:\/\/stripe.com\/docs\/payments\/giropay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyGiropay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'),
    -- | google_pay: Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer\'s Google account. Check this [page](https:\/\/stripe.com\/docs\/google-pay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'),
    -- | grabpay: GrabPay is a payment method developed by [Grab](https:\/\/www.grab.com\/sg\/consumer\/finance\/pay\/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https:\/\/stripe.com\/docs\/payments\/grabpay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'),
    -- | ideal: iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https:\/\/stripe.com\/docs\/payments\/ideal) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyIdeal :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'),
    -- | jcb: JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https:\/\/support.stripe.com\/questions\/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyJcb :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'),
    -- | klarna: Klarna gives customers a range of [payment options](https:\/\/stripe.com\/docs\/payments\/klarna\#payment-options) during checkout. Available payment options vary depending on the customer\'s billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https:\/\/stripe.com\/docs\/payments\/klarna) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyKlarna :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'),
    -- | konbini: Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/konbini) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyKonbini :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'),
    -- | link: [Link](https:\/\/stripe.com\/docs\/payments\/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.
    postPaymentMethodConfigurationsConfigurationRequestBodyLink :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyLink'),
    -- | name: Configuration name.
    --
    -- Constraints:
    --
    -- * Maximum length of 100
    postPaymentMethodConfigurationsConfigurationRequestBodyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | oxxo: OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/oxxo) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyOxxo :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'),
    -- | p24: Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/p24) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyP24 :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyP24'),
    -- | paynow: PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https:\/\/stripe.com\/docs\/payments\/paynow) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyPaynow :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'),
    -- | paypal: PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https:\/\/stripe.com\/docs\/payments\/paypal) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyPaypal :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'),
    -- | promptpay: PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/promptpay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'),
    -- | revolut_pay: Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.
    postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'),
    -- | sepa_debit: The [Single Euro Payments Area (SEPA)](https:\/\/en.wikipedia.org\/wiki\/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https:\/\/stripe.com\/docs\/payments\/sepa-debit) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'),
    -- | sofort: Stripe users in Europe and the United States can use the [Payment Intents API](https:\/\/stripe.com\/docs\/payments\/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https:\/\/www.sofort.com\/) payments from customers. Check this [page](https:\/\/stripe.com\/docs\/payments\/sofort) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodySofort :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodySofort'),
    -- | us_bank_account: Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https:\/\/stripe.com\/docs\/payments\/ach-debit) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'),
    -- | wechat_pay: WeChat, owned by Tencent, is China\'s leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses\' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food\/nutrition. Check this [page](https:\/\/stripe.com\/docs\/payments\/wechat-pay) for more details.
    postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay_later" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("google_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyJcb obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acss_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("active" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyActive obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("affirm" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAffirm obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("afterpay_clearpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alipay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAlipay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("apple_pay_later" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("au_becs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bacs_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bancontact" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBancontact obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("blik" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBlik obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("boleto" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBoleto obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("card" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCard obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cartes_bancaires" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashapp" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCashapp obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("eps" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyEps obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fpx" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyFpx obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("giropay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGiropay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("google_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("grabpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ideal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyIdeal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("jcb" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyJcb obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("klarna" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKlarna obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("konbini" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKonbini obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("link" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyLink obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("name" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("oxxo" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyOxxo obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("p24" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyP24 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paynow" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaynow obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("paypal" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaypal obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("promptpay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("revolut_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sepa_debit" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sofort" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySofort obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("us_bank_account" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("wechat_pay" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBody" (\obj -> ((((((((((((((((((((((((((((((((((((GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acss_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "affirm")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "afterpay_clearpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alipay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "apple_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "apple_pay_later")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "au_becs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bacs_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bancontact")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "blik")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "boleto")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "card")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cartes_bancaires")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashapp")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "eps")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fpx")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "giropay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "google_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "grabpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ideal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "jcb")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "klarna")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "konbini")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "link")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "oxxo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "p24")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paynow")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "paypal")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "promptpay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "revolut_pay")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sepa_debit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sofort")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "us_bank_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "wechat_pay"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBody' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBody :: PostPaymentMethodConfigurationsConfigurationRequestBody
mkPostPaymentMethodConfigurationsConfigurationRequestBody =
  PostPaymentMethodConfigurationsConfigurationRequestBody
    { postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyActive = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyAffirm = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyAlipay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyApplePay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyBancontact = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyBlik = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyBoleto = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyCard = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyCashapp = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyEps = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyExpand = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyFpx = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyGiropay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyIdeal = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyJcb = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyKlarna = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyKonbini = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyLink = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyName = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyOxxo = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyP24 = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyPaynow = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyPaypal = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodySofort = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount = GHC.Maybe.Nothing,
      postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.acss_debit@ in the specification.
--
-- Canadian pre-authorized debit payments, check this [page](https:\/\/stripe.com\/docs\/payments\/acss-debit) for more details like country availability.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit' {postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.acss_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.acss_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyAcssDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.affirm@ in the specification.
--
-- [Affirm](https:\/\/www.affirm.com\/) gives your customers a way to split purchases over a series of payments. Depending on the purchase, they can pay with four interest-free payments (Split Pay) or pay over a longer term (Installments), which might include interest. Check this [page](https:\/\/stripe.com\/docs\/payments\/affirm) for more details like country availability.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' = PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' = PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm' {postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.affirm.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.affirm.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyAffirm'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.afterpay_clearpay@ in the specification.
--
-- Afterpay gives your customers a way to pay for purchases in installments, check this [page](https:\/\/stripe.com\/docs\/payments\/afterpay-clearpay) for more details like country availability. Afterpay is particularly popular among businesses selling fashion, beauty, and sports products.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' = PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' = PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay' {postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.afterpay_clearpay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.afterpay_clearpay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyAfterpayClearpay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.alipay@ in the specification.
--
-- Alipay is a digital wallet in China that has more than a billion active users worldwide. Alipay users can pay on the web or on a mobile device using login credentials or their Alipay app. Alipay has a low dispute rate and reduces fraud by authenticating payments using the customer\'s login credentials. Check this [page](https:\/\/stripe.com\/docs\/payments\/alipay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' = PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' = PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay' {postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.alipay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.alipay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyAlipay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay@ in the specification.
--
-- Stripe users can accept [Apple Pay](\/payments\/apple-pay) in iOS applications in iOS 9 and later, and on the web in Safari starting with iOS 10 or macOS Sierra. There are no additional fees to process Apple Pay payments, and the [pricing](\/pricing) is the same as other card transactions. Check this [page](https:\/\/stripe.com\/docs\/apple-pay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay' {postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay_later@ in the specification.
--
-- Apple Pay Later, a payment method for customers to buy now and pay later, gives your customers a way to split purchases into four installments across six weeks.
data PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' :: PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater' {postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay_later.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.apple_pay_later.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyApplePayLater'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.au_becs_debit@ in the specification.
--
-- Stripe users in Australia can accept Bulk Electronic Clearing System (BECS) direct debit payments from customers with an Australian bank account. Check this [page](https:\/\/stripe.com\/docs\/payments\/au-becs-debit) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit' {postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.au_becs_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.au_becs_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyAuBecsDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bacs_debit@ in the specification.
--
-- Stripe users in the UK can accept Bacs Direct Debit payments from customers with a UK bank account, check this [page](https:\/\/stripe.com\/docs\/payments\/payment-methods\/bacs-debit) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit' {postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bacs_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bacs_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyBacsDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bancontact@ in the specification.
--
-- Bancontact is the most popular online payment method in Belgium, with over 15 million cards in circulation. [Customers](https:\/\/stripe.com\/docs\/api\/customers) use a Bancontact card or mobile app linked to a Belgian bank account to make online payments that are secure, guaranteed, and confirmed immediately. Check this [page](https:\/\/stripe.com\/docs\/payments\/bancontact) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' = PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' = PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact' {postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bancontact.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.bancontact.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyBancontact'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.blik@ in the specification.
--
-- BLIK is a [single use](https:\/\/stripe.com\/docs\/payments\/payment-methods\#usage) payment method that requires customers to authenticate their payments. When customers want to pay online using BLIK, they request a six-digit code from their banking application and enter it into the payment collection form. Check this [page](https:\/\/stripe.com\/docs\/payments\/blik) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBlik' = PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBlik' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBlik' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBlik' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBlik' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBlik' = PostPaymentMethodConfigurationsConfigurationRequestBodyBlik' {postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.blik.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.blik.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyBlik'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.boleto@ in the specification.
--
-- Boleto is an official (regulated by the Central Bank of Brazil) payment method in Brazil. Check this [page](https:\/\/stripe.com\/docs\/payments\/boleto) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' = PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' = PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto' {postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.boleto.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.boleto.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyBoleto'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card@ in the specification.
--
-- Cards are a popular way for consumers and businesses to pay online or in person. Stripe supports global and local card networks.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCard' = PostPaymentMethodConfigurationsConfigurationRequestBodyCard'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCard' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCard' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyCard'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyCard' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyCard'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCard' :: PostPaymentMethodConfigurationsConfigurationRequestBodyCard'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCard' = PostPaymentMethodConfigurationsConfigurationRequestBodyCard' {postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.card.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyCard'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cartes_bancaires@ in the specification.
--
-- Cartes Bancaires is France\'s local card network. More than 95% of these cards are co-branded with either Visa or Mastercard, meaning you can process these cards over either Cartes Bancaires or the Visa or Mastercard networks. Check this [page](https:\/\/stripe.com\/docs\/payments\/cartes-bancaires) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' = PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' :: PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' = PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires' {postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cartes_bancaires.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cartes_bancaires.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyCartesBancaires'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cashapp@ in the specification.
--
-- Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. Check this [page](https:\/\/stripe.com\/docs\/payments\/cash-app-pay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' = PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' :: PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' = PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp' {postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cashapp.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.cashapp.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyCashapp'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.eps@ in the specification.
--
-- EPS is an Austria-based payment method that allows customers to complete transactions online using their bank credentials. EPS is supported by all Austrian banks and is accepted by over 80% of Austrian online retailers. Check this [page](https:\/\/stripe.com\/docs\/payments\/eps) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyEps' = PostPaymentMethodConfigurationsConfigurationRequestBodyEps'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyEps' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyEps' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyEps'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyEps' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyEps'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyEps' :: PostPaymentMethodConfigurationsConfigurationRequestBodyEps'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyEps' = PostPaymentMethodConfigurationsConfigurationRequestBodyEps' {postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.eps.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.eps.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyEps'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.fpx@ in the specification.
--
-- Financial Process Exchange (FPX) is a Malaysia-based payment method that allows customers to complete transactions online using their bank credentials. Bank Negara Malaysia (BNM), the Central Bank of Malaysia, and eleven other major Malaysian financial institutions are members of the PayNet Group, which owns and operates FPX. It is one of the most popular online payment methods in Malaysia, with nearly 90 million transactions in 2018 according to BNM. Check this [page](https:\/\/stripe.com\/docs\/payments\/fpx) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyFpx' = PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyFpx' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyFpx' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyFpx' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyFpx' :: PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyFpx' = PostPaymentMethodConfigurationsConfigurationRequestBodyFpx' {postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.fpx.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.fpx.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyFpx'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.giropay@ in the specification.
--
-- giropay is a German payment method based on online banking, introduced in 2006. It allows customers to complete transactions online using their online banking environment, with funds debited from their bank account. Depending on their bank, customers confirm payments on giropay using a second factor of authentication or a PIN. giropay accounts for 10% of online checkouts in Germany. Check this [page](https:\/\/stripe.com\/docs\/payments\/giropay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' = PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' = PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay' {postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.giropay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.giropay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyGiropay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.google_pay@ in the specification.
--
-- Google Pay allows customers to make payments in your app or website using any credit or debit card saved to their Google Account, including those from Google Play, YouTube, Chrome, or an Android device. Use the Google Pay API to request any credit or debit card stored in your customer\'s Google account. Check this [page](https:\/\/stripe.com\/docs\/google-pay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' = PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' = PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay' {postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.google_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.google_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyGooglePay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.grabpay@ in the specification.
--
-- GrabPay is a payment method developed by [Grab](https:\/\/www.grab.com\/sg\/consumer\/finance\/pay\/). GrabPay is a digital wallet - customers maintain a balance in their wallets that they pay out with. Check this [page](https:\/\/stripe.com\/docs\/payments\/grabpay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' = PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' = PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay' {postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.grabpay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.grabpay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyGrabpay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ideal@ in the specification.
--
-- iDEAL is a Netherlands-based payment method that allows customers to complete transactions online using their bank credentials. All major Dutch banks are members of Currence, the scheme that operates iDEAL, making it the most popular online payment method in the Netherlands with a share of online transactions close to 55%. Check this [page](https:\/\/stripe.com\/docs\/payments\/ideal) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' = PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' :: PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' = PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal' {postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ideal.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.ideal.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyIdeal'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.jcb@ in the specification.
--
-- JCB is a credit card company based in Japan. JCB is currently available in Japan to businesses approved by JCB, and available to all businesses in Australia, Canada, Hong Kong, Japan, New Zealand, Singapore, Switzerland, United Kingdom, United States, and all countries in the European Economic Area except Iceland. Check this [page](https:\/\/support.stripe.com\/questions\/accepting-japan-credit-bureau-%28jcb%29-payments) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyJcb' = PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyJcb' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyJcb' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyJcb' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyJcb' :: PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyJcb' = PostPaymentMethodConfigurationsConfigurationRequestBodyJcb' {postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.jcb.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.jcb.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyJcb'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.klarna@ in the specification.
--
-- Klarna gives customers a range of [payment options](https:\/\/stripe.com\/docs\/payments\/klarna\#payment-options) during checkout. Available payment options vary depending on the customer\'s billing address and the transaction amount. These payment options make it convenient for customers to purchase items in all price ranges. Check this [page](https:\/\/stripe.com\/docs\/payments\/klarna) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' = PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' :: PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' = PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna' {postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.klarna.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.klarna.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyKlarna'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.konbini@ in the specification.
--
-- Konbini allows customers in Japan to pay for bills and online purchases at convenience stores with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/konbini) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' = PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' :: PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' = PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini' {postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.konbini.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.konbini.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyKonbini'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.link@ in the specification.
--
-- [Link](https:\/\/stripe.com\/docs\/payments\/link) is a payment method network. With Link, users save their payment details once, then reuse that information to pay with one click for any business on the network.
data PostPaymentMethodConfigurationsConfigurationRequestBodyLink' = PostPaymentMethodConfigurationsConfigurationRequestBodyLink'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyLink' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyLink' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyLink'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyLink' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyLink'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyLink' :: PostPaymentMethodConfigurationsConfigurationRequestBodyLink'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyLink' = PostPaymentMethodConfigurationsConfigurationRequestBodyLink' {postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.link.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.link.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyLink'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.oxxo@ in the specification.
--
-- OXXO is a Mexican chain of convenience stores with thousands of locations across Latin America and represents nearly 20% of online transactions in Mexico. OXXO allows customers to pay bills and online purchases in-store with cash. Check this [page](https:\/\/stripe.com\/docs\/payments\/oxxo) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' = PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' :: PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' = PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo' {postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.oxxo.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.oxxo.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyOxxo'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.p24@ in the specification.
--
-- Przelewy24 is a Poland-based payment method aggregator that allows customers to complete transactions online using bank transfers and other methods. Bank transfers account for 30% of online payments in Poland and Przelewy24 provides a way for customers to pay with over 165 banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/p24) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyP24' = PostPaymentMethodConfigurationsConfigurationRequestBodyP24'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyP24' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyP24' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyP24'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyP24' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyP24'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyP24' :: PostPaymentMethodConfigurationsConfigurationRequestBodyP24'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyP24' = PostPaymentMethodConfigurationsConfigurationRequestBodyP24' {postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.p24.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.p24.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyP24'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paynow@ in the specification.
--
-- PayNow is a Singapore-based payment method that allows customers to make a payment using their preferred app from participating banks and participating non-bank financial institutions. Check this [page](https:\/\/stripe.com\/docs\/payments\/paynow) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' :: PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow' {postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paynow.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paynow.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaynow'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paypal@ in the specification.
--
-- PayPal, a digital wallet popular with customers in Europe, allows your customers worldwide to pay using their PayPal account. Check this [page](https:\/\/stripe.com\/docs\/payments\/paypal) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' :: PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal' {postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paypal.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.paypal.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyPaypal'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.promptpay@ in the specification.
--
-- PromptPay is a Thailand-based payment method that allows customers to make a payment using their preferred app from participating banks. Check this [page](https:\/\/stripe.com\/docs\/payments\/promptpay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' = PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' = PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay' {postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.promptpay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.promptpay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyPromptpay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.revolut_pay@ in the specification.
--
-- Revolut Pay, developed by Revolut, a global finance app, is a digital wallet payment method. Revolut Pay uses the customer’s stored balance or cards to fund the payment, and offers the option for non-Revolut customers to save their details after their first purchase.
data PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' = PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' = PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay' {postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.revolut_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.revolut_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyRevolutPay'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sepa_debit@ in the specification.
--
-- The [Single Euro Payments Area (SEPA)](https:\/\/en.wikipedia.org\/wiki\/Single_Euro_Payments_Area) is an initiative of the European Union to simplify payments within and across member countries. SEPA established and enforced banking standards to allow for the direct debiting of every EUR-denominated bank account within the SEPA region, check this [page](https:\/\/stripe.com\/docs\/payments\/sepa-debit) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' :: PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'
mkPostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' = PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit' {postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sepa_debit.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sepa_debit.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodySepaDebit'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sofort@ in the specification.
--
-- Stripe users in Europe and the United States can use the [Payment Intents API](https:\/\/stripe.com\/docs\/payments\/payment-intents)—a single integration path for creating payments using any supported method—to accept [Sofort](https:\/\/www.sofort.com\/) payments from customers. Check this [page](https:\/\/stripe.com\/docs\/payments\/sofort) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodySofort' = PostPaymentMethodConfigurationsConfigurationRequestBodySofort'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodySofort' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodySofort' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodySofort'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodySofort' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodySofort'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodySofort' :: PostPaymentMethodConfigurationsConfigurationRequestBodySofort'
mkPostPaymentMethodConfigurationsConfigurationRequestBodySofort' = PostPaymentMethodConfigurationsConfigurationRequestBodySofort' {postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sofort.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.sofort.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodySofort'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_bank_account@ in the specification.
--
-- Stripe users in the United States can accept ACH direct debit payments from customers with a US bank account using the Automated Clearing House (ACH) payments system operated by Nacha. Check this [page](https:\/\/stripe.com\/docs\/payments\/ach-debit) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' = PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' :: PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' = PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount' {postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_bank_account.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.us_bank_account.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyUsBankAccount'DisplayPreference'Preference'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.wechat_pay@ in the specification.
--
-- WeChat, owned by Tencent, is China\'s leading mobile app with over 1 billion monthly active users. Chinese consumers can use WeChat Pay to pay for goods and services inside of businesses\' apps and websites. WeChat Pay users buy most frequently in gaming, e-commerce, travel, online education, and food\/nutrition. Check this [page](https:\/\/stripe.com\/docs\/payments\/wechat-pay) for more details.
data PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' = PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'
  { -- | display_preference
    postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("display_preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "display_preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' :: PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' = PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay' {postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference = GHC.Maybe.Nothing}

-- | Defines the object schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.wechat_pay.properties.display_preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'
  { -- | preference
    postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference :: (GHC.Maybe.Maybe PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("preference" Data.Aeson.Types.ToJSON..=)) (postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'" (\obj -> GHC.Base.pure PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "preference"))

-- | Create a new 'PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'' with all required fields.
mkPostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' :: PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'
mkPostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' = PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference' {postPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @paths.\/v1\/payment_method_configurations\/{configuration}.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.wechat_pay.properties.display_preference.properties.preference@ in the specification.
data PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"none"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumNone
  | -- | Represents the JSON value @"off"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumOff
  | -- | Represents the JSON value @"on"@
    PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumOn
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference' where
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'Other val) = val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumNone) = "none"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumOff) = "off"
  toJSON (PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumOn) = "on"

instance Data.Aeson.Types.FromJSON.FromJSON PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "none" -> PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumNone
            | val GHC.Classes.== "off" -> PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumOff
            | val GHC.Classes.== "on" -> PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'EnumOn
            | GHC.Base.otherwise -> PostPaymentMethodConfigurationsConfigurationRequestBodyWechatPay'DisplayPreference'Preference'Other val
      )

-- | Represents a response of the operation 'postPaymentMethodConfigurationsConfiguration'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostPaymentMethodConfigurationsConfigurationResponseError' is used.
data PostPaymentMethodConfigurationsConfigurationResponse
  = -- | Means either no matching case available or a parse error
    PostPaymentMethodConfigurationsConfigurationResponseError GHC.Base.String
  | -- | Successful response.
    PostPaymentMethodConfigurationsConfigurationResponse200 PaymentMethodConfiguration
  | -- | Error response.
    PostPaymentMethodConfigurationsConfigurationResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
