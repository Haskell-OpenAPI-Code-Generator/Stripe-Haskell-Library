{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postTaxTransactionsCreateReversal
module StripeAPI.Operations.PostTaxTransactionsCreateReversal where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/tax/transactions/create_reversal
--
-- \<p>Partially or fully reverses a previously created \<code>Transaction\<\/code>.\<\/p>
postTaxTransactionsCreateReversal ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostTaxTransactionsCreateReversalRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTaxTransactionsCreateReversalResponse)
postTaxTransactionsCreateReversal body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostTaxTransactionsCreateReversalResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostTaxTransactionsCreateReversalResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Tax'transaction
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostTaxTransactionsCreateReversalResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/tax/transactions/create_reversal" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/tax\/transactions\/create_reversal.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostTaxTransactionsCreateReversalRequestBody = PostTaxTransactionsCreateReversalRequestBody
  { -- | expand: Specifies which fields in the response should be expanded.
    postTaxTransactionsCreateReversalRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | flat_amount: A flat amount to reverse across the entire transaction, in negative integer cents. This value represents the total amount to refund from the transaction, including taxes.
    postTaxTransactionsCreateReversalRequestBodyFlatAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | line_items: The line item amounts to reverse.
    postTaxTransactionsCreateReversalRequestBodyLineItems :: (GHC.Maybe.Maybe ([PostTaxTransactionsCreateReversalRequestBodyLineItems'])),
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postTaxTransactionsCreateReversalRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | mode: If \`partial\`, the provided line item or shipping cost amounts are reversed. If \`full\`, the original transaction is fully reversed.
    postTaxTransactionsCreateReversalRequestBodyMode :: PostTaxTransactionsCreateReversalRequestBodyMode',
    -- | original_transaction: The ID of the Transaction to partially or fully reverse.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTaxTransactionsCreateReversalRequestBodyOriginalTransaction :: Data.Text.Internal.Text,
    -- | reference: A custom identifier for this reversal, such as \`myOrder_123-refund_1\`, which must be unique across all transactions. The reference helps identify this reversal transaction in exported [tax reports](https:\/\/stripe.com\/docs\/tax\/reports).
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postTaxTransactionsCreateReversalRequestBodyReference :: Data.Text.Internal.Text,
    -- | shipping_cost: The shipping cost to reverse.
    postTaxTransactionsCreateReversalRequestBodyShippingCost :: (GHC.Maybe.Maybe PostTaxTransactionsCreateReversalRequestBodyShippingCost')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTaxTransactionsCreateReversalRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flat_amount" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyFlatAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyLineItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyMetadata obj) : ["mode" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyMode obj] : ["original_transaction" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyOriginalTransaction obj] : ["reference" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyReference obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyShippingCost obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyExpand obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("flat_amount" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyFlatAmount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("line_items" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyLineItems obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyMetadata obj) : ["mode" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyMode obj] : ["original_transaction" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyOriginalTransaction obj] : ["reference" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyReference obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("shipping_cost" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyShippingCost obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTaxTransactionsCreateReversalRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxTransactionsCreateReversalRequestBody" (\obj -> (((((((GHC.Base.pure PostTaxTransactionsCreateReversalRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "flat_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "line_items")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "mode")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "original_transaction")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reference")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "shipping_cost"))

-- | Create a new 'PostTaxTransactionsCreateReversalRequestBody' with all required fields.
mkPostTaxTransactionsCreateReversalRequestBody ::
  -- | 'postTaxTransactionsCreateReversalRequestBodyMode'
  PostTaxTransactionsCreateReversalRequestBodyMode' ->
  -- | 'postTaxTransactionsCreateReversalRequestBodyOriginalTransaction'
  Data.Text.Internal.Text ->
  -- | 'postTaxTransactionsCreateReversalRequestBodyReference'
  Data.Text.Internal.Text ->
  PostTaxTransactionsCreateReversalRequestBody
mkPostTaxTransactionsCreateReversalRequestBody postTaxTransactionsCreateReversalRequestBodyMode postTaxTransactionsCreateReversalRequestBodyOriginalTransaction postTaxTransactionsCreateReversalRequestBodyReference =
  PostTaxTransactionsCreateReversalRequestBody
    { postTaxTransactionsCreateReversalRequestBodyExpand = GHC.Maybe.Nothing,
      postTaxTransactionsCreateReversalRequestBodyFlatAmount = GHC.Maybe.Nothing,
      postTaxTransactionsCreateReversalRequestBodyLineItems = GHC.Maybe.Nothing,
      postTaxTransactionsCreateReversalRequestBodyMetadata = GHC.Maybe.Nothing,
      postTaxTransactionsCreateReversalRequestBodyMode = postTaxTransactionsCreateReversalRequestBodyMode,
      postTaxTransactionsCreateReversalRequestBodyOriginalTransaction = postTaxTransactionsCreateReversalRequestBodyOriginalTransaction,
      postTaxTransactionsCreateReversalRequestBodyReference = postTaxTransactionsCreateReversalRequestBodyReference,
      postTaxTransactionsCreateReversalRequestBodyShippingCost = GHC.Maybe.Nothing
    }

-- | Defines the object schema located at @paths.\/v1\/tax\/transactions\/create_reversal.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.line_items.items@ in the specification.
data PostTaxTransactionsCreateReversalRequestBodyLineItems' = PostTaxTransactionsCreateReversalRequestBodyLineItems'
  { -- | amount
    postTaxTransactionsCreateReversalRequestBodyLineItems'Amount :: GHC.Types.Int,
    -- | amount_tax
    postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax :: GHC.Types.Int,
    -- | metadata
    postTaxTransactionsCreateReversalRequestBodyLineItems'Metadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | original_line_item
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem :: Data.Text.Internal.Text,
    -- | quantity
    postTaxTransactionsCreateReversalRequestBodyLineItems'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | reference
    --
    -- Constraints:
    --
    -- * Maximum length of 500
    postTaxTransactionsCreateReversalRequestBodyLineItems'Reference :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTaxTransactionsCreateReversalRequestBodyLineItems' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'Amount obj] : ["amount_tax" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyLineItems'Metadata obj) : ["original_line_item" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyLineItems'Quantity obj) : ["reference" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'Reference obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'Amount obj] : ["amount_tax" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyLineItems'Metadata obj) : ["original_line_item" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("quantity" Data.Aeson.Types.ToJSON..=)) (postTaxTransactionsCreateReversalRequestBodyLineItems'Quantity obj) : ["reference" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyLineItems'Reference obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTaxTransactionsCreateReversalRequestBodyLineItems' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxTransactionsCreateReversalRequestBodyLineItems'" (\obj -> (((((GHC.Base.pure PostTaxTransactionsCreateReversalRequestBodyLineItems' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_tax")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "original_line_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "reference"))

-- | Create a new 'PostTaxTransactionsCreateReversalRequestBodyLineItems'' with all required fields.
mkPostTaxTransactionsCreateReversalRequestBodyLineItems' ::
  -- | 'postTaxTransactionsCreateReversalRequestBodyLineItems'Amount'
  GHC.Types.Int ->
  -- | 'postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax'
  GHC.Types.Int ->
  -- | 'postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem'
  Data.Text.Internal.Text ->
  -- | 'postTaxTransactionsCreateReversalRequestBodyLineItems'Reference'
  Data.Text.Internal.Text ->
  PostTaxTransactionsCreateReversalRequestBodyLineItems'
mkPostTaxTransactionsCreateReversalRequestBodyLineItems' postTaxTransactionsCreateReversalRequestBodyLineItems'Amount postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem postTaxTransactionsCreateReversalRequestBodyLineItems'Reference =
  PostTaxTransactionsCreateReversalRequestBodyLineItems'
    { postTaxTransactionsCreateReversalRequestBodyLineItems'Amount = postTaxTransactionsCreateReversalRequestBodyLineItems'Amount,
      postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax = postTaxTransactionsCreateReversalRequestBodyLineItems'AmountTax,
      postTaxTransactionsCreateReversalRequestBodyLineItems'Metadata = GHC.Maybe.Nothing,
      postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem = postTaxTransactionsCreateReversalRequestBodyLineItems'OriginalLineItem,
      postTaxTransactionsCreateReversalRequestBodyLineItems'Quantity = GHC.Maybe.Nothing,
      postTaxTransactionsCreateReversalRequestBodyLineItems'Reference = postTaxTransactionsCreateReversalRequestBodyLineItems'Reference
    }

-- | Defines the enum schema located at @paths.\/v1\/tax\/transactions\/create_reversal.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.mode@ in the specification.
--
-- If \`partial\`, the provided line item or shipping cost amounts are reversed. If \`full\`, the original transaction is fully reversed.
data PostTaxTransactionsCreateReversalRequestBodyMode'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PostTaxTransactionsCreateReversalRequestBodyMode'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PostTaxTransactionsCreateReversalRequestBodyMode'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"full"@
    PostTaxTransactionsCreateReversalRequestBodyMode'EnumFull
  | -- | Represents the JSON value @"partial"@
    PostTaxTransactionsCreateReversalRequestBodyMode'EnumPartial
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PostTaxTransactionsCreateReversalRequestBodyMode' where
  toJSON (PostTaxTransactionsCreateReversalRequestBodyMode'Other val) = val
  toJSON (PostTaxTransactionsCreateReversalRequestBodyMode'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PostTaxTransactionsCreateReversalRequestBodyMode'EnumFull) = "full"
  toJSON (PostTaxTransactionsCreateReversalRequestBodyMode'EnumPartial) = "partial"

instance Data.Aeson.Types.FromJSON.FromJSON PostTaxTransactionsCreateReversalRequestBodyMode' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "full" -> PostTaxTransactionsCreateReversalRequestBodyMode'EnumFull
            | val GHC.Classes.== "partial" -> PostTaxTransactionsCreateReversalRequestBodyMode'EnumPartial
            | GHC.Base.otherwise -> PostTaxTransactionsCreateReversalRequestBodyMode'Other val
      )

-- | Defines the object schema located at @paths.\/v1\/tax\/transactions\/create_reversal.POST.requestBody.content.application\/x-www-form-urlencoded.schema.properties.shipping_cost@ in the specification.
--
-- The shipping cost to reverse.
data PostTaxTransactionsCreateReversalRequestBodyShippingCost' = PostTaxTransactionsCreateReversalRequestBodyShippingCost'
  { -- | amount
    postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount :: GHC.Types.Int,
    -- | amount_tax
    postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax :: GHC.Types.Int
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTaxTransactionsCreateReversalRequestBodyShippingCost' where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount obj] : ["amount_tax" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax obj] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount obj] : ["amount_tax" Data.Aeson.Types.ToJSON..= postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax obj] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTaxTransactionsCreateReversalRequestBodyShippingCost' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTaxTransactionsCreateReversalRequestBodyShippingCost'" (\obj -> (GHC.Base.pure PostTaxTransactionsCreateReversalRequestBodyShippingCost' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount_tax"))

-- | Create a new 'PostTaxTransactionsCreateReversalRequestBodyShippingCost'' with all required fields.
mkPostTaxTransactionsCreateReversalRequestBodyShippingCost' ::
  -- | 'postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount'
  GHC.Types.Int ->
  -- | 'postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax'
  GHC.Types.Int ->
  PostTaxTransactionsCreateReversalRequestBodyShippingCost'
mkPostTaxTransactionsCreateReversalRequestBodyShippingCost' postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax =
  PostTaxTransactionsCreateReversalRequestBodyShippingCost'
    { postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount = postTaxTransactionsCreateReversalRequestBodyShippingCost'Amount,
      postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax = postTaxTransactionsCreateReversalRequestBodyShippingCost'AmountTax
    }

-- | Represents a response of the operation 'postTaxTransactionsCreateReversal'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTaxTransactionsCreateReversalResponseError' is used.
data PostTaxTransactionsCreateReversalResponse
  = -- | Means either no matching case available or a parse error
    PostTaxTransactionsCreateReversalResponseError GHC.Base.String
  | -- | Successful response.
    PostTaxTransactionsCreateReversalResponse200 Tax'transaction
  | -- | Error response.
    PostTaxTransactionsCreateReversalResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
