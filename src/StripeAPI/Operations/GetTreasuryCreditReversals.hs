{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation getTreasuryCreditReversals
module StripeAPI.Operations.GetTreasuryCreditReversals where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/treasury/credit_reversals
--
-- \<p>Returns a list of CreditReversals.\<\/p>
getTreasuryCreditReversals ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetTreasuryCreditReversalsParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response GetTreasuryCreditReversalsResponse)
getTreasuryCreditReversals parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetTreasuryCreditReversalsResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetTreasuryCreditReversalsResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            GetTreasuryCreditReversalsResponseBody200
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetTreasuryCreditReversalsResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either
                                                            GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/treasury/credit_reversals")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "ending_before") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryCreditReversalsParametersQueryEndingBefore parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryCreditReversalsParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "financial_account") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getTreasuryCreditReversalsParametersQueryFinancialAccount parameters)) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "limit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryCreditReversalsParametersQueryLimit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "received_credit") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryCreditReversalsParametersQueryReceivedCredit parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "starting_after") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryCreditReversalsParametersQueryStartingAfter parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "status") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getTreasuryCreditReversalsParametersQueryStatus parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the object schema located at @paths.\/v1\/treasury\/credit_reversals.GET.parameters@ in the specification.
data GetTreasuryCreditReversalsParameters = GetTreasuryCreditReversalsParameters
  { -- | queryEnding_before: Represents the parameter named \'ending_before\'
    --
    -- A cursor for use in pagination. \`ending_before\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with \`obj_bar\`, your subsequent call can include \`ending_before=obj_bar\` in order to fetch the previous page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getTreasuryCreditReversalsParametersQueryEndingBefore :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryExpand: Represents the parameter named \'expand\'
    --
    -- Specifies which fields in the response should be expanded.
    getTreasuryCreditReversalsParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | queryFinancial_account: Represents the parameter named \'financial_account\'
    --
    -- Returns objects associated with this FinancialAccount.
    getTreasuryCreditReversalsParametersQueryFinancialAccount :: Data.Text.Internal.Text,
    -- | queryLimit: Represents the parameter named \'limit\'
    --
    -- A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    getTreasuryCreditReversalsParametersQueryLimit :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | queryReceived_credit: Represents the parameter named \'received_credit\'
    --
    -- Only return CreditReversals for the ReceivedCredit ID.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getTreasuryCreditReversalsParametersQueryReceivedCredit :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStarting_after: Represents the parameter named \'starting_after\'
    --
    -- A cursor for use in pagination. \`starting_after\` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with \`obj_foo\`, your subsequent call can include \`starting_after=obj_foo\` in order to fetch the next page of the list.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getTreasuryCreditReversalsParametersQueryStartingAfter :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | queryStatus: Represents the parameter named \'status\'
    --
    -- Only return CreditReversals for a given status.
    getTreasuryCreditReversalsParametersQueryStatus :: (GHC.Maybe.Maybe GetTreasuryCreditReversalsParametersQueryStatus')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryCreditReversalsParameters where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryExpand obj) : ["queryFinancial_account" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsParametersQueryFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryReceived_credit" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryReceivedCredit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryStatus obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryEnding_before" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryEndingBefore obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryExpand" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryExpand obj) : ["queryFinancial_account" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsParametersQueryFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryLimit" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryLimit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryReceived_credit" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryReceivedCredit obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStarting_after" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryStartingAfter obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryStatus" Data.Aeson.Types.ToJSON..=)) (getTreasuryCreditReversalsParametersQueryStatus obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryCreditReversalsParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryCreditReversalsParameters" (\obj -> ((((((GHC.Base.pure GetTreasuryCreditReversalsParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryEnding_before")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryFinancial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryLimit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryReceived_credit")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStarting_after")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryStatus"))

-- | Create a new 'GetTreasuryCreditReversalsParameters' with all required fields.
mkGetTreasuryCreditReversalsParameters ::
  -- | 'getTreasuryCreditReversalsParametersQueryFinancialAccount'
  Data.Text.Internal.Text ->
  GetTreasuryCreditReversalsParameters
mkGetTreasuryCreditReversalsParameters getTreasuryCreditReversalsParametersQueryFinancialAccount =
  GetTreasuryCreditReversalsParameters
    { getTreasuryCreditReversalsParametersQueryEndingBefore = GHC.Maybe.Nothing,
      getTreasuryCreditReversalsParametersQueryExpand = GHC.Maybe.Nothing,
      getTreasuryCreditReversalsParametersQueryFinancialAccount = getTreasuryCreditReversalsParametersQueryFinancialAccount,
      getTreasuryCreditReversalsParametersQueryLimit = GHC.Maybe.Nothing,
      getTreasuryCreditReversalsParametersQueryReceivedCredit = GHC.Maybe.Nothing,
      getTreasuryCreditReversalsParametersQueryStartingAfter = GHC.Maybe.Nothing,
      getTreasuryCreditReversalsParametersQueryStatus = GHC.Maybe.Nothing
    }

-- | Defines the enum schema located at @paths.\/v1\/treasury\/credit_reversals.GET.parameters.properties.queryStatus@ in the specification.
--
-- Represents the parameter named \'status\'
--
-- Only return CreditReversals for a given status.
data GetTreasuryCreditReversalsParametersQueryStatus'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    GetTreasuryCreditReversalsParametersQueryStatus'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    GetTreasuryCreditReversalsParametersQueryStatus'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"canceled"@
    GetTreasuryCreditReversalsParametersQueryStatus'EnumCanceled
  | -- | Represents the JSON value @"posted"@
    GetTreasuryCreditReversalsParametersQueryStatus'EnumPosted
  | -- | Represents the JSON value @"processing"@
    GetTreasuryCreditReversalsParametersQueryStatus'EnumProcessing
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryCreditReversalsParametersQueryStatus' where
  toJSON (GetTreasuryCreditReversalsParametersQueryStatus'Other val) = val
  toJSON (GetTreasuryCreditReversalsParametersQueryStatus'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (GetTreasuryCreditReversalsParametersQueryStatus'EnumCanceled) = "canceled"
  toJSON (GetTreasuryCreditReversalsParametersQueryStatus'EnumPosted) = "posted"
  toJSON (GetTreasuryCreditReversalsParametersQueryStatus'EnumProcessing) = "processing"

instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryCreditReversalsParametersQueryStatus' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "canceled" -> GetTreasuryCreditReversalsParametersQueryStatus'EnumCanceled
            | val GHC.Classes.== "posted" -> GetTreasuryCreditReversalsParametersQueryStatus'EnumPosted
            | val GHC.Classes.== "processing" -> GetTreasuryCreditReversalsParametersQueryStatus'EnumProcessing
            | GHC.Base.otherwise -> GetTreasuryCreditReversalsParametersQueryStatus'Other val
      )

-- | Represents a response of the operation 'getTreasuryCreditReversals'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetTreasuryCreditReversalsResponseError' is used.
data GetTreasuryCreditReversalsResponse
  = -- | Means either no matching case available or a parse error
    GetTreasuryCreditReversalsResponseError GHC.Base.String
  | -- | Successful response.
    GetTreasuryCreditReversalsResponse200 GetTreasuryCreditReversalsResponseBody200
  | -- | Error response.
    GetTreasuryCreditReversalsResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)

-- | Defines the object schema located at @paths.\/v1\/treasury\/credit_reversals.GET.responses.200.content.application\/json.schema@ in the specification.
data GetTreasuryCreditReversalsResponseBody200 = GetTreasuryCreditReversalsResponseBody200
  { -- | data: Details about each object.
    getTreasuryCreditReversalsResponseBody200Data :: ([Treasury'creditReversal]),
    -- | has_more: True if this list has another page of items after this one that can be fetched.
    getTreasuryCreditReversalsResponseBody200HasMore :: GHC.Types.Bool,
    -- | url: The URL where this list can be accessed.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    getTreasuryCreditReversalsResponseBody200Url :: Data.Text.Internal.Text
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetTreasuryCreditReversalsResponseBody200 where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["data" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsResponseBody200Data obj] : ["has_more" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsResponseBody200HasMore obj] : ["url" Data.Aeson.Types.ToJSON..= getTreasuryCreditReversalsResponseBody200Url obj] : ["object" Data.Aeson.Types.ToJSON..= Data.Aeson.Types.Internal.String "list"] : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON GetTreasuryCreditReversalsResponseBody200 where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetTreasuryCreditReversalsResponseBody200" (\obj -> ((GHC.Base.pure GetTreasuryCreditReversalsResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "data")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "has_more")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "url"))

-- | Create a new 'GetTreasuryCreditReversalsResponseBody200' with all required fields.
mkGetTreasuryCreditReversalsResponseBody200 ::
  -- | 'getTreasuryCreditReversalsResponseBody200Data'
  [Treasury'creditReversal] ->
  -- | 'getTreasuryCreditReversalsResponseBody200HasMore'
  GHC.Types.Bool ->
  -- | 'getTreasuryCreditReversalsResponseBody200Url'
  Data.Text.Internal.Text ->
  GetTreasuryCreditReversalsResponseBody200
mkGetTreasuryCreditReversalsResponseBody200 getTreasuryCreditReversalsResponseBody200Data getTreasuryCreditReversalsResponseBody200HasMore getTreasuryCreditReversalsResponseBody200Url =
  GetTreasuryCreditReversalsResponseBody200
    { getTreasuryCreditReversalsResponseBody200Data = getTreasuryCreditReversalsResponseBody200Data,
      getTreasuryCreditReversalsResponseBody200HasMore = getTreasuryCreditReversalsResponseBody200HasMore,
      getTreasuryCreditReversalsResponseBody200Url = getTreasuryCreditReversalsResponseBody200Url
    }
