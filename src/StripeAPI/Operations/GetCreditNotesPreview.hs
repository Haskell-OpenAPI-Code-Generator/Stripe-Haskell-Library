{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation getCreditNotesPreview
module StripeAPI.Operations.GetCreditNotesPreview where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > GET /v1/credit_notes/preview
--
-- \<p>Get a preview of a credit note without creating it.\<\/p>
getCreditNotesPreview ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | Contains all available parameters of this operation (query and path parameters)
  GetCreditNotesPreviewParameters ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response GetCreditNotesPreviewResponse)
getCreditNotesPreview parameters =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either GetCreditNotesPreviewResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetCreditNotesPreviewResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            CreditNote
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   GetCreditNotesPreviewResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    ( StripeAPI.Common.doCallWithConfigurationM
        (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET")
        (Data.Text.pack "/v1/credit_notes/preview")
        [ StripeAPI.Common.QueryParameter (Data.Text.pack "amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryAmount parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "credit_amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryCreditAmount parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "expand") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryExpand parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "invoice") (GHC.Maybe.Just GHC.Base.$ Data.Aeson.Types.ToJSON.toJSON (getCreditNotesPreviewParametersQueryInvoice parameters)) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "lines") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryLines parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "memo") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryMemo parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "metadata") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryMetadata parameters) (Data.Text.pack "deepObject") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "out_of_band_amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryOutOfBandAmount parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "reason") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryReason parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "refund") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryRefund parameters) (Data.Text.pack "form") GHC.Types.True,
          StripeAPI.Common.QueryParameter (Data.Text.pack "refund_amount") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> getCreditNotesPreviewParametersQueryRefundAmount parameters) (Data.Text.pack "form") GHC.Types.True
        ]
    )

-- | Defines the data type for the schema getCreditNotesPreviewParameters
data GetCreditNotesPreviewParameters
  = GetCreditNotesPreviewParameters
      { -- | queryAmount: Represents the parameter named \'amount\'
        --
        -- The integer amount in **%s** representing the total amount of the credit note.
        getCreditNotesPreviewParametersQueryAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | queryCredit_amount: Represents the parameter named \'credit_amount\'
        --
        -- The integer amount in **%s** representing the amount to credit the customer\'s balance, which will be automatically applied to their next invoice.
        getCreditNotesPreviewParametersQueryCreditAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | queryExpand: Represents the parameter named \'expand\'
        --
        -- Specifies which fields in the response should be expanded.
        getCreditNotesPreviewParametersQueryExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | queryInvoice: Represents the parameter named \'invoice\'
        --
        -- ID of the invoice.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getCreditNotesPreviewParametersQueryInvoice :: Data.Text.Internal.Text,
        -- | queryLines: Represents the parameter named \'lines\'
        --
        -- Line items that make up the credit note.
        getCreditNotesPreviewParametersQueryLines :: (GHC.Maybe.Maybe ([GetCreditNotesPreviewParametersQueryLines'])),
        -- | queryMemo: Represents the parameter named \'memo\'
        --
        -- The credit note\'s memo appears on the credit note PDF.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getCreditNotesPreviewParametersQueryMemo :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryMetadata: Represents the parameter named \'metadata\'
        --
        -- Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
        getCreditNotesPreviewParametersQueryMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
        -- | queryOut_of_band_amount: Represents the parameter named \'out_of_band_amount\'
        --
        -- The integer amount in **%s** representing the amount that is credited outside of Stripe.
        getCreditNotesPreviewParametersQueryOutOfBandAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | queryReason: Represents the parameter named \'reason\'
        --
        -- Reason for issuing this credit note, one of \`duplicate\`, \`fraudulent\`, \`order_change\`, or \`product_unsatisfactory\`
        getCreditNotesPreviewParametersQueryReason :: (GHC.Maybe.Maybe GetCreditNotesPreviewParametersQueryReason'),
        -- | queryRefund: Represents the parameter named \'refund\'
        --
        -- ID of an existing refund to link this credit note to.
        getCreditNotesPreviewParametersQueryRefund :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | queryRefund_amount: Represents the parameter named \'refund_amount\'
        --
        -- The integer amount in **%s** representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
        getCreditNotesPreviewParametersQueryRefundAmount :: (GHC.Maybe.Maybe GHC.Types.Int)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewParameters where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "queryAmount" (getCreditNotesPreviewParametersQueryAmount obj) : (Data.Aeson..=) "queryCredit_amount" (getCreditNotesPreviewParametersQueryCreditAmount obj) : (Data.Aeson..=) "queryExpand" (getCreditNotesPreviewParametersQueryExpand obj) : (Data.Aeson..=) "queryInvoice" (getCreditNotesPreviewParametersQueryInvoice obj) : (Data.Aeson..=) "queryLines" (getCreditNotesPreviewParametersQueryLines obj) : (Data.Aeson..=) "queryMemo" (getCreditNotesPreviewParametersQueryMemo obj) : (Data.Aeson..=) "queryMetadata" (getCreditNotesPreviewParametersQueryMetadata obj) : (Data.Aeson..=) "queryOut_of_band_amount" (getCreditNotesPreviewParametersQueryOutOfBandAmount obj) : (Data.Aeson..=) "queryReason" (getCreditNotesPreviewParametersQueryReason obj) : (Data.Aeson..=) "queryRefund" (getCreditNotesPreviewParametersQueryRefund obj) : (Data.Aeson..=) "queryRefund_amount" (getCreditNotesPreviewParametersQueryRefundAmount obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "queryAmount" (getCreditNotesPreviewParametersQueryAmount obj) GHC.Base.<> ((Data.Aeson..=) "queryCredit_amount" (getCreditNotesPreviewParametersQueryCreditAmount obj) GHC.Base.<> ((Data.Aeson..=) "queryExpand" (getCreditNotesPreviewParametersQueryExpand obj) GHC.Base.<> ((Data.Aeson..=) "queryInvoice" (getCreditNotesPreviewParametersQueryInvoice obj) GHC.Base.<> ((Data.Aeson..=) "queryLines" (getCreditNotesPreviewParametersQueryLines obj) GHC.Base.<> ((Data.Aeson..=) "queryMemo" (getCreditNotesPreviewParametersQueryMemo obj) GHC.Base.<> ((Data.Aeson..=) "queryMetadata" (getCreditNotesPreviewParametersQueryMetadata obj) GHC.Base.<> ((Data.Aeson..=) "queryOut_of_band_amount" (getCreditNotesPreviewParametersQueryOutOfBandAmount obj) GHC.Base.<> ((Data.Aeson..=) "queryReason" (getCreditNotesPreviewParametersQueryReason obj) GHC.Base.<> ((Data.Aeson..=) "queryRefund" (getCreditNotesPreviewParametersQueryRefund obj) GHC.Base.<> (Data.Aeson..=) "queryRefund_amount" (getCreditNotesPreviewParametersQueryRefundAmount obj)))))))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewParameters where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewParameters" (\obj -> ((((((((((GHC.Base.pure GetCreditNotesPreviewParameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryAmount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryCredit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryExpand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "queryInvoice")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryLines")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryMemo")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryMetadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryOut_of_band_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryReason")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryRefund")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "queryRefund_amount"))

-- | Defines the data type for the schema getCreditNotesPreviewParametersQueryLines\'
data GetCreditNotesPreviewParametersQueryLines'
  = GetCreditNotesPreviewParametersQueryLines'
      { -- | amount
        getCreditNotesPreviewParametersQueryLines'Amount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | description
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getCreditNotesPreviewParametersQueryLines'Description :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | invoice_line_item
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        getCreditNotesPreviewParametersQueryLines'InvoiceLineItem :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
        -- | quantity
        getCreditNotesPreviewParametersQueryLines'Quantity :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | tax_rates
        getCreditNotesPreviewParametersQueryLines'TaxRates :: (GHC.Maybe.Maybe GetCreditNotesPreviewParametersQueryLines'TaxRates'Variants),
        -- | type
        getCreditNotesPreviewParametersQueryLines'Type :: GetCreditNotesPreviewParametersQueryLines'Type',
        -- | unit_amount
        getCreditNotesPreviewParametersQueryLines'UnitAmount :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | unit_amount_decimal
        getCreditNotesPreviewParametersQueryLines'UnitAmountDecimal :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewParametersQueryLines' where
  toJSON obj = Data.Aeson.object ((Data.Aeson..=) "amount" (getCreditNotesPreviewParametersQueryLines'Amount obj) : (Data.Aeson..=) "description" (getCreditNotesPreviewParametersQueryLines'Description obj) : (Data.Aeson..=) "invoice_line_item" (getCreditNotesPreviewParametersQueryLines'InvoiceLineItem obj) : (Data.Aeson..=) "quantity" (getCreditNotesPreviewParametersQueryLines'Quantity obj) : (Data.Aeson..=) "tax_rates" (getCreditNotesPreviewParametersQueryLines'TaxRates obj) : (Data.Aeson..=) "type" (getCreditNotesPreviewParametersQueryLines'Type obj) : (Data.Aeson..=) "unit_amount" (getCreditNotesPreviewParametersQueryLines'UnitAmount obj) : (Data.Aeson..=) "unit_amount_decimal" (getCreditNotesPreviewParametersQueryLines'UnitAmountDecimal obj) : [])
  toEncoding obj = Data.Aeson.pairs ((Data.Aeson..=) "amount" (getCreditNotesPreviewParametersQueryLines'Amount obj) GHC.Base.<> ((Data.Aeson..=) "description" (getCreditNotesPreviewParametersQueryLines'Description obj) GHC.Base.<> ((Data.Aeson..=) "invoice_line_item" (getCreditNotesPreviewParametersQueryLines'InvoiceLineItem obj) GHC.Base.<> ((Data.Aeson..=) "quantity" (getCreditNotesPreviewParametersQueryLines'Quantity obj) GHC.Base.<> ((Data.Aeson..=) "tax_rates" (getCreditNotesPreviewParametersQueryLines'TaxRates obj) GHC.Base.<> ((Data.Aeson..=) "type" (getCreditNotesPreviewParametersQueryLines'Type obj) GHC.Base.<> ((Data.Aeson..=) "unit_amount" (getCreditNotesPreviewParametersQueryLines'UnitAmount obj) GHC.Base.<> (Data.Aeson..=) "unit_amount_decimal" (getCreditNotesPreviewParametersQueryLines'UnitAmountDecimal obj))))))))

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewParametersQueryLines' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "GetCreditNotesPreviewParametersQueryLines'" (\obj -> (((((((GHC.Base.pure GetCreditNotesPreviewParametersQueryLines' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "invoice_line_item")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "quantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "tax_rates")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "unit_amount_decimal"))

-- | Defines the enum schema getCreditNotesPreviewParametersQueryLines\'Tax_rates\'OneOf1
data GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1
  = GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumOther Data.Aeson.Types.Internal.Value
  | GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumTyped Data.Text.Internal.Text
  | GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumString_
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1 where
  toJSON (GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumString_) = ""

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1 where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "" -> GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumString_
            | GHC.Base.otherwise -> GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1EnumOther val
      )

-- | Define the one-of schema getCreditNotesPreviewParametersQueryLines\'Tax_rates\'
data GetCreditNotesPreviewParametersQueryLines'TaxRates'Variants
  = GetCreditNotesPreviewParametersQueryLines'TaxRates'GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1 GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1
  | GetCreditNotesPreviewParametersQueryLines'TaxRates'ListTText ([Data.Text.Internal.Text])
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewParametersQueryLines'TaxRates'Variants where
  toJSON (GetCreditNotesPreviewParametersQueryLines'TaxRates'GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1 a) = Data.Aeson.Types.ToJSON.toJSON a
  toJSON (GetCreditNotesPreviewParametersQueryLines'TaxRates'ListTText a) = Data.Aeson.Types.ToJSON.toJSON a

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewParametersQueryLines'TaxRates'Variants where
  parseJSON val = case Data.Aeson.Types.FromJSON.fromJSON val of
    Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetCreditNotesPreviewParametersQueryLines'TaxRates'GetCreditNotesPreviewParametersQueryLines'TaxRates'OneOf1 a
    Data.Aeson.Types.Internal.Error _ -> case Data.Aeson.Types.FromJSON.fromJSON val of
      Data.Aeson.Types.Internal.Success a -> GHC.Base.pure GHC.Base.$ GetCreditNotesPreviewParametersQueryLines'TaxRates'ListTText a
      Data.Aeson.Types.Internal.Error a -> Control.Monad.Fail.fail a

-- | Defines the enum schema getCreditNotesPreviewParametersQueryLines\'Type\'
data GetCreditNotesPreviewParametersQueryLines'Type'
  = GetCreditNotesPreviewParametersQueryLines'Type'EnumOther Data.Aeson.Types.Internal.Value
  | GetCreditNotesPreviewParametersQueryLines'Type'EnumTyped Data.Text.Internal.Text
  | GetCreditNotesPreviewParametersQueryLines'Type'EnumStringCustomLineItem
  | GetCreditNotesPreviewParametersQueryLines'Type'EnumStringInvoiceLineItem
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewParametersQueryLines'Type' where
  toJSON (GetCreditNotesPreviewParametersQueryLines'Type'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetCreditNotesPreviewParametersQueryLines'Type'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetCreditNotesPreviewParametersQueryLines'Type'EnumStringCustomLineItem) = "custom_line_item"
  toJSON (GetCreditNotesPreviewParametersQueryLines'Type'EnumStringInvoiceLineItem) = "invoice_line_item"

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewParametersQueryLines'Type' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "custom_line_item" -> GetCreditNotesPreviewParametersQueryLines'Type'EnumStringCustomLineItem
            | val GHC.Classes.== "invoice_line_item" -> GetCreditNotesPreviewParametersQueryLines'Type'EnumStringInvoiceLineItem
            | GHC.Base.otherwise -> GetCreditNotesPreviewParametersQueryLines'Type'EnumOther val
      )

-- | Defines the enum schema getCreditNotesPreviewParametersQueryReason\'
--
-- Represents the parameter named \'reason\'
--
-- Reason for issuing this credit note, one of \`duplicate\`, \`fraudulent\`, \`order_change\`, or \`product_unsatisfactory\`
data GetCreditNotesPreviewParametersQueryReason'
  = GetCreditNotesPreviewParametersQueryReason'EnumOther Data.Aeson.Types.Internal.Value
  | GetCreditNotesPreviewParametersQueryReason'EnumTyped Data.Text.Internal.Text
  | GetCreditNotesPreviewParametersQueryReason'EnumStringDuplicate
  | GetCreditNotesPreviewParametersQueryReason'EnumStringFraudulent
  | GetCreditNotesPreviewParametersQueryReason'EnumStringOrderChange
  | GetCreditNotesPreviewParametersQueryReason'EnumStringProductUnsatisfactory
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON GetCreditNotesPreviewParametersQueryReason' where
  toJSON (GetCreditNotesPreviewParametersQueryReason'EnumOther patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetCreditNotesPreviewParametersQueryReason'EnumTyped patternName) = Data.Aeson.Types.ToJSON.toJSON patternName
  toJSON (GetCreditNotesPreviewParametersQueryReason'EnumStringDuplicate) = "duplicate"
  toJSON (GetCreditNotesPreviewParametersQueryReason'EnumStringFraudulent) = "fraudulent"
  toJSON (GetCreditNotesPreviewParametersQueryReason'EnumStringOrderChange) = "order_change"
  toJSON (GetCreditNotesPreviewParametersQueryReason'EnumStringProductUnsatisfactory) = "product_unsatisfactory"

instance Data.Aeson.Types.FromJSON.FromJSON GetCreditNotesPreviewParametersQueryReason' where
  parseJSON val =
    GHC.Base.pure
      ( if  | val GHC.Classes.== "duplicate" -> GetCreditNotesPreviewParametersQueryReason'EnumStringDuplicate
            | val GHC.Classes.== "fraudulent" -> GetCreditNotesPreviewParametersQueryReason'EnumStringFraudulent
            | val GHC.Classes.== "order_change" -> GetCreditNotesPreviewParametersQueryReason'EnumStringOrderChange
            | val GHC.Classes.== "product_unsatisfactory" -> GetCreditNotesPreviewParametersQueryReason'EnumStringProductUnsatisfactory
            | GHC.Base.otherwise -> GetCreditNotesPreviewParametersQueryReason'EnumOther val
      )

-- | Represents a response of the operation 'getCreditNotesPreview'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'GetCreditNotesPreviewResponseError' is used.
data GetCreditNotesPreviewResponse
  = -- | Means either no matching case available or a parse error
    GetCreditNotesPreviewResponseError GHC.Base.String
  | -- | Successful response.
    GetCreditNotesPreviewResponse200 CreditNote
  | -- | Error response.
    GetCreditNotesPreviewResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
