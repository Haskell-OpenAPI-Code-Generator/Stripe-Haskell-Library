{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
{-# LANGUAGE OverloadedStrings #-}

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

-- | Contains the different functions to run the operation postFileLinks
module StripeAPI.Operations.PostFileLinks where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/file_links
--
-- \<p>Creates a new file link object.\<\/p>
postFileLinks ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostFileLinksRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.StripeT m (Network.HTTP.Client.Types.Response PostFileLinksResponse)
postFileLinks body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostFileLinksResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if  | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostFileLinksResponse200
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            FileLink
                                                      )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                   PostFileLinksResponseDefault
                                     Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                          Data.Either.Either GHC.Base.String
                                                            Error
                                                      )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/v1/file_links") [] (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/file_links.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostFileLinksRequestBody
  = PostFileLinksRequestBody
      { -- | expand: Specifies which fields in the response should be expanded.
        postFileLinksRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
        -- | expires_at: A future timestamp after which the link will no longer be usable.
        postFileLinksRequestBodyExpiresAt :: (GHC.Maybe.Maybe GHC.Types.Int),
        -- | file: The ID of the file. The file\'s \`purpose\` must be one of the following: \`business_icon\`, \`business_logo\`, \`customer_signature\`, \`dispute_evidence\`, \`finance_report_run\`, \`pci_document\`, \`sigma_scheduled_query\`, or \`tax_document_user_upload\`.
        --
        -- Constraints:
        --
        -- * Maximum length of 5000
        postFileLinksRequestBodyFile :: Data.Text.Internal.Text,
        -- | metadata: Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
        postFileLinksRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object)
      }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostFileLinksRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object ("expand" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyExpand obj : "expires_at" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyExpiresAt obj : "file" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyFile obj : "metadata" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyMetadata obj : [])
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("expand" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyExpand obj) GHC.Base.<> (("expires_at" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyExpiresAt obj) GHC.Base.<> (("file" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyFile obj) GHC.Base.<> ("metadata" Data.Aeson.Types.ToJSON..= postFileLinksRequestBodyMetadata obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PostFileLinksRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostFileLinksRequestBody" (\obj -> (((GHC.Base.pure PostFileLinksRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "file")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "metadata"))

-- | Create a new 'PostFileLinksRequestBody' with all required fields.
mkPostFileLinksRequestBody ::
  -- | 'postFileLinksRequestBodyFile'
  Data.Text.Internal.Text ->
  PostFileLinksRequestBody
mkPostFileLinksRequestBody postFileLinksRequestBodyFile =
  PostFileLinksRequestBody
    { postFileLinksRequestBodyExpand = GHC.Maybe.Nothing,
      postFileLinksRequestBodyExpiresAt = GHC.Maybe.Nothing,
      postFileLinksRequestBodyFile = postFileLinksRequestBodyFile,
      postFileLinksRequestBodyMetadata = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postFileLinks'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostFileLinksResponseError' is used.
data PostFileLinksResponse
  = -- | Means either no matching case available or a parse error
    PostFileLinksResponseError GHC.Base.String
  | -- | Successful response.
    PostFileLinksResponse200 FileLink
  | -- | Error response.
    PostFileLinksResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
