{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the different functions to run the operation postTreasuryInboundTransfers
module StripeAPI.Operations.PostTreasuryInboundTransfers where

import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString
import qualified Data.ByteString as Data.ByteString.Internal
import qualified Data.ByteString as Data.ByteString.Internal.Type
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text as Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified StripeAPI.Common
import StripeAPI.Types
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | > POST /v1/treasury/inbound_transfers
--
-- \<p>Creates an InboundTransfer.\<\/p>
postTreasuryInboundTransfers ::
  forall m.
  StripeAPI.Common.MonadHTTP m =>
  -- | The request body to send
  PostTreasuryInboundTransfersRequestBody ->
  -- | Monadic computation which returns the result of the operation
  StripeAPI.Common.ClientT m (Network.HTTP.Client.Types.Response PostTreasuryInboundTransfersResponse)
postTreasuryInboundTransfers body =
  GHC.Base.fmap
    ( \response_0 ->
        GHC.Base.fmap
          ( Data.Either.either PostTreasuryInboundTransfersResponseError GHC.Base.id
              GHC.Base.. ( \response body ->
                             if
                                 | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostTreasuryInboundTransfersResponse200
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Treasury'inboundTransfer
                                                        )
                                 | GHC.Base.const GHC.Types.True (Network.HTTP.Client.Types.responseStatus response) ->
                                     PostTreasuryInboundTransfersResponseDefault
                                       Data.Functor.<$> ( Data.Aeson.eitherDecodeStrict body ::
                                                            Data.Either.Either
                                                              GHC.Base.String
                                                              Error
                                                        )
                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type"
                         )
                response_0
          )
          response_0
    )
    (StripeAPI.Common.doBodyCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.Internal.pack "POST") "/v1/treasury/inbound_transfers" GHC.Base.mempty (GHC.Maybe.Just body) StripeAPI.Common.RequestBodyEncodingFormData)

-- | Defines the object schema located at @paths.\/v1\/treasury\/inbound_transfers.POST.requestBody.content.application\/x-www-form-urlencoded.schema@ in the specification.
data PostTreasuryInboundTransfersRequestBody = PostTreasuryInboundTransfersRequestBody
  { -- | amount: Amount (in cents) to be transferred.
    postTreasuryInboundTransfersRequestBodyAmount :: GHC.Types.Int,
    -- | currency: Three-letter [ISO currency code](https:\/\/www.iso.org\/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https:\/\/stripe.com\/docs\/currencies).
    postTreasuryInboundTransfersRequestBodyCurrency :: Data.Text.Internal.Text,
    -- | description: An arbitrary string attached to the object. Often useful for displaying to users.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTreasuryInboundTransfersRequestBodyDescription :: (GHC.Maybe.Maybe Data.Text.Internal.Text),
    -- | expand: Specifies which fields in the response should be expanded.
    postTreasuryInboundTransfersRequestBodyExpand :: (GHC.Maybe.Maybe ([Data.Text.Internal.Text])),
    -- | financial_account: The FinancialAccount to send funds to.
    postTreasuryInboundTransfersRequestBodyFinancialAccount :: Data.Text.Internal.Text,
    -- | metadata: Set of [key-value pairs](https:\/\/stripe.com\/docs\/api\/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to \`metadata\`.
    postTreasuryInboundTransfersRequestBodyMetadata :: (GHC.Maybe.Maybe Data.Aeson.Types.Internal.Object),
    -- | origin_payment_method: The origin payment method to be debited for the InboundTransfer.
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    postTreasuryInboundTransfersRequestBodyOriginPaymentMethod :: Data.Text.Internal.Text,
    -- | statement_descriptor: The complete description that appears on your customers\' statements. Maximum 10 characters.
    --
    -- Constraints:
    --
    -- * Maximum length of 10
    postTreasuryInboundTransfersRequestBodyStatementDescriptor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PostTreasuryInboundTransfersRequestBody where
  toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyExpand obj) : ["financial_account" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyMetadata obj) : ["origin_payment_method" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyOriginPaymentMethod obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyStatementDescriptor obj) : GHC.Base.mempty))
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["amount" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyAmount obj] : ["currency" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyCurrency obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyDescription obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expand" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyExpand obj) : ["financial_account" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyFinancialAccount obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyMetadata obj) : ["origin_payment_method" Data.Aeson.Types.ToJSON..= postTreasuryInboundTransfersRequestBodyOriginPaymentMethod obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("statement_descriptor" Data.Aeson.Types.ToJSON..=)) (postTreasuryInboundTransfersRequestBodyStatementDescriptor obj) : GHC.Base.mempty)))

instance Data.Aeson.Types.FromJSON.FromJSON PostTreasuryInboundTransfersRequestBody where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PostTreasuryInboundTransfersRequestBody" (\obj -> (((((((GHC.Base.pure PostTreasuryInboundTransfersRequestBody GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "amount")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expand")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "financial_account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "origin_payment_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "statement_descriptor"))

-- | Create a new 'PostTreasuryInboundTransfersRequestBody' with all required fields.
mkPostTreasuryInboundTransfersRequestBody ::
  -- | 'postTreasuryInboundTransfersRequestBodyAmount'
  GHC.Types.Int ->
  -- | 'postTreasuryInboundTransfersRequestBodyCurrency'
  Data.Text.Internal.Text ->
  -- | 'postTreasuryInboundTransfersRequestBodyFinancialAccount'
  Data.Text.Internal.Text ->
  -- | 'postTreasuryInboundTransfersRequestBodyOriginPaymentMethod'
  Data.Text.Internal.Text ->
  PostTreasuryInboundTransfersRequestBody
mkPostTreasuryInboundTransfersRequestBody postTreasuryInboundTransfersRequestBodyAmount postTreasuryInboundTransfersRequestBodyCurrency postTreasuryInboundTransfersRequestBodyFinancialAccount postTreasuryInboundTransfersRequestBodyOriginPaymentMethod =
  PostTreasuryInboundTransfersRequestBody
    { postTreasuryInboundTransfersRequestBodyAmount = postTreasuryInboundTransfersRequestBodyAmount,
      postTreasuryInboundTransfersRequestBodyCurrency = postTreasuryInboundTransfersRequestBodyCurrency,
      postTreasuryInboundTransfersRequestBodyDescription = GHC.Maybe.Nothing,
      postTreasuryInboundTransfersRequestBodyExpand = GHC.Maybe.Nothing,
      postTreasuryInboundTransfersRequestBodyFinancialAccount = postTreasuryInboundTransfersRequestBodyFinancialAccount,
      postTreasuryInboundTransfersRequestBodyMetadata = GHC.Maybe.Nothing,
      postTreasuryInboundTransfersRequestBodyOriginPaymentMethod = postTreasuryInboundTransfersRequestBodyOriginPaymentMethod,
      postTreasuryInboundTransfersRequestBodyStatementDescriptor = GHC.Maybe.Nothing
    }

-- | Represents a response of the operation 'postTreasuryInboundTransfers'.
--
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'PostTreasuryInboundTransfersResponseError' is used.
data PostTreasuryInboundTransfersResponse
  = -- | Means either no matching case available or a parse error
    PostTreasuryInboundTransfersResponseError GHC.Base.String
  | -- | Successful response.
    PostTreasuryInboundTransfersResponse200 Treasury'inboundTransfer
  | -- | Error response.
    PostTreasuryInboundTransfersResponseDefault Error
  deriving (GHC.Show.Show, GHC.Classes.Eq)
